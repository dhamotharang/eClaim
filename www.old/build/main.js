webpackJsonp([0],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DREAMFACTORY_API_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return DREAMFACTORY_INSTANCE_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AD_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return DREAMFACTORY_IMAGE_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return DREAMFACTORY_TABLE_URL; });
var DREAMFACTORY_API_KEY = 'cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881';
var DREAMFACTORY_INSTANCE_URL = 'http://api.zen.com.my';
var AD_URL = "http://auth.zen.com.my:3010";
var DREAMFACTORY_IMAGE_URL = DREAMFACTORY_INSTANCE_URL + "/api/v2/azurefs/eclaim/";
var DREAMFACTORY_TABLE_URL = DREAMFACTORY_INSTANCE_URL + "/api/v2/zcs/_table";
// export const AD_URL: string = "http://localhost:8100/";
//# sourceMappingURL=constants.js.map

/***/ }),
/* 5 */,
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseHttpService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var BaseHttpService = /** @class */ (function () {
    function BaseHttpService(http) {
        this.http = http;
    }
    BaseHttpService.token = '';
    BaseHttpService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], BaseHttpService);
    return BaseHttpService;
}());

//# sourceMappingURL=base-http.js.map

/***/ }),
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_crypto_js__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__setupguide_setupguide__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_storage__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__services_base_http__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







// import { SignupPage } from '../signup/signup';







var LoginPage = /** @class */ (function () {
    function LoginPage(navCtrl, userData, http, storage, fb, userservice) {
        this.navCtrl = navCtrl;
        this.userData = userData;
        this.http = http;
        this.storage = storage;
        this.userservice = userservice;
        this.login = {};
        this.submitted = false;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/main_bank' + '?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_10__models_user_main_model__["a" /* UserMain_Model */]();
        this.emailUrl = 'http://api.zen.com.my/api/v2/zenmail?api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.stringToSplit = "";
        this.tempUserSplit1 = "";
        this.tempUserSplit2 = "";
        this.KeyNameValue = [];
        localStorage.clear(); //debugger;
        this.ForgotPasswordForm = fb.group({
            Email_ID: [null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required])],
        });
    }
    LoginPage.prototype.onLogin = function (form) {
        var _this = this;
        // this.navCtrl.push(DashboardPage);
        this.submitted = true;
        if (form.valid) {
            //-----------Check if the login as super vendor-----------------------
            if (this.login.username.trim() == "sva" && this.login.password.trim() == "sva") {
                localStorage.setItem("g_USER_GUID", "sva");
                localStorage.setItem("g_FULLNAME", "Super Admin");
                localStorage.setItem("g_IMAGE_URL", "assets/img/profile_no_preview.png");
                //navigate to app.component page
                this.userData.login(this.login.username);
                //this.navCtrl.push(AdminsetupPage);
                //        this.navCtrl.push(SetupGuidePage); //original
                this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__["a" /* DashboardPage */]);
            }
            else {
                var url = void 0;
                //CryptoJS.SHA256(this.login.password.trim()).toString(CryptoJS.enc.Hex)
                //Changed code by Bijay on 25/09/2018
                url = this.baseResource_Url + "vw_login?filter=(LOGIN_ID=" + this.login.username + ')and(PASSWORD=' + __WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.SHA256(this.login.password.trim()).toString(__WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.enc.Hex) + ')and(ACTIVATION_FLAG=1)&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                //url = this.baseResource_Url + "vw_login?filter=(LOGIN_ID=" + this.login.username + ')and(PASSWORD=' + this.login.password + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
                this.http
                    .get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"]; //console.log(data["resource"]);
                    if (res.length > 0) {
                        localStorage.setItem("g_USER_GUID", res[0]["USER_GUID"]);
                        localStorage.setItem("g_TENANT_GUID", res[0]["TENANT_GUID"]);
                        localStorage.setItem("g_EMAIL", res[0]["EMAIL"]);
                        localStorage.setItem("g_FULLNAME", res[0]["FULLNAME"]);
                        localStorage.setItem("g_TENANT_COMPANY_GUID", res[0]["TENANT_COMPANY_GUID"]);
                        localStorage.setItem("g_TENANT_COMPANY_SITE_GUID", res[0]["TENANT_COMPANY_SITE_GUID"]);
                        localStorage.setItem("g_ISHQ", res[0]["ISHQ"]);
                        localStorage.setItem("g_IS_TENANT_ADMIN", res[0]["IS_TENANT_ADMIN"]);
                        // debugger;
                        if (res[0]["IMAGE_URL"] == null || res[0]["IMAGE_URL"] == '') {
                            localStorage.setItem("g_IMAGE_URL", "assets/img/profile_no_preview.png");
                        }
                        else {
                            localStorage.setItem("g_IMAGE_URL", __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + res[0]["IMAGE_URL"] + "?api_key=" + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                        }
                        //Setup Guide for only Hq Users
                        if (res[0]["ISHQ"] == "1" && res[0]["IS_TENANT_ADMIN"] == "1") {
                            //this.navCtrl.push(SetupguidePage);
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__["a" /* DashboardPage */]);
                        }
                        else {
                            //this.navCtrl.push(SetupPage);
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__["a" /* DashboardPage */]);
                        }
                        //Get the role of that particular user----------------------------------------------
                        var role_url = "";
                        role_url = _this.baseResource_Url + "view_role_display?filter=(USER_GUID=" + res[0]["USER_GUID"] + ')and(ROLE_PRIORITY_LEVEL=1)&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                        _this.http
                            .get(role_url)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var role_result = data["resource"];
                            if (role_result.length > 0) {
                                localStorage.setItem("g_KEY_ADD", "0");
                                localStorage.setItem("g_KEY_EDIT", "0");
                                localStorage.setItem("g_KEY_DELETE", "0");
                                localStorage.setItem("g_KEY_VIEW", "0");
                                for (var item in role_result) {
                                    if (role_result[item]["ROLE_FLAG"] == "MAIN") {
                                        localStorage.setItem("g_ROLE_NAME", role_result[0]["ROLE_NAME"]);
                                    }
                                    if (role_result[item]["KEY_ADD"] == "1") {
                                        localStorage.setItem("g_KEY_ADD", role_result[item]["KEY_ADD"]);
                                    }
                                    if (role_result[item]["KEY_EDIT"] == "1") {
                                        localStorage.setItem("g_KEY_EDIT", role_result[item]["KEY_EDIT"]);
                                    }
                                    if (role_result[item]["KEY_DELETE"] == "1") {
                                        localStorage.setItem("g_KEY_DELETE", role_result[item]["KEY_DELETE"]);
                                    }
                                    if (role_result[item]["KEY_VIEW"] == "1") {
                                        localStorage.setItem("g_KEY_VIEW", role_result[item]["KEY_VIEW"]);
                                    }
                                }
                                // localStorage.setItem("g_ROLE_NAME", role_result[0]["ROLE_NAME"]);
                                // localStorage.setItem("g_KEY_ADD", role_result[0]["KEY_ADD"]);
                                // localStorage.setItem("g_KEY_EDIT", role_result[0]["KEY_EDIT"]);
                                // localStorage.setItem("g_KEY_DELETE", role_result[0]["KEY_DELETE"]);
                                // localStorage.setItem("g_KEY_VIEW", role_result[0]["KEY_VIEW"]);
                            }
                            else {
                                localStorage.setItem("g_KEY_VIEW", "1");
                                localStorage.removeItem("g_ROLE_NAME");
                            }
                        });
                        //Get company settings details----------------------------------------------------------------------------------
                        _this.GetCompanySettings(localStorage.getItem("g_TENANT_GUID"));
                        //--------------------------------------------------------------------------------------------------------------
                        //navigate to app.component page
                        _this.userData.login(_this.login.username);
                    }
                    else {
                        localStorage.removeItem("g_USER_GUID");
                        localStorage.removeItem("g_TENANT_GUID");
                        localStorage.removeItem("g_EMAIL");
                        localStorage.removeItem("g_FULLNAME");
                        localStorage.removeItem("g_TENANT_COMPANY_GUID");
                        localStorage.removeItem("g_TENANT_COMPANY_SITE_GUID");
                        localStorage.removeItem("g_ISHQ");
                        localStorage.removeItem("g_IS_TENANT_ADMIN");
                        localStorage.removeItem("Ad_Authenticaton");
                        localStorage.removeItem("g_IMAGE_URL");
                        alert("Please enter valid login details.");
                        _this.login.username = "";
                        _this.login.password = "";
                    }
                });
            }
        }
    };
    LoginPage.prototype.ForgotPasswordClick = function () {
        this.ForgotPasswordClicked = true;
    };
    LoginPage.prototype.CloseForgotPasswordClick = function () {
        if (this.ForgotPasswordClicked == true) {
            this.ForgotPasswordClicked = false;
        }
    };
    LoginPage.prototype.SaveForgotPassword = function () {
        var _this = this;
        // through Email, check exist, temporary password generate and update to database, send mail notification to user.
        var url = this.baseResource_Url + "view_user_main_info?filter=(EMAIL=" + this.email_ngModel + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var res = data["resource"];
            if (res.length > 0) {
                //Generate Password Encrypt-----------------
                var strPassword_1 = _this.Random().toString();
                var strPasswordHex = __WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.SHA256(strPassword_1).toString(__WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.enc.Hex);
                //Update to database------------------------          
                _this.usermain_entry.TENANT_GUID = res[0]["TENANT_GUID"];
                _this.usermain_entry.USER_GUID = res[0]["USER_GUID"];
                _this.usermain_entry.STAFF_ID = res[0]["STAFF_ID"];
                _this.usermain_entry.LOGIN_ID = _this.email_ngModel;
                _this.usermain_entry.PASSWORD = strPasswordHex;
                _this.usermain_entry.EMAIL = _this.email_ngModel;
                _this.usermain_entry.ACTIVATION_FLAG = res[0]["ACTIVATION_FLAG"];
                _this.usermain_entry.CREATION_TS = res[0]["CREATION_TS"];
                _this.usermain_entry.CREATION_USER_GUID = res[0]["CREATION_USER_GUID"];
                _this.usermain_entry.UPDATE_TS = new Date().toISOString();
                _this.usermain_entry.UPDATE_USER_GUID = res[0]["UPDATE_USER_GUID"];
                _this.usermain_entry.IS_TENANT_ADMIN = res[0]["IS_TENANT_ADMIN"];
                _this.userservice.update_user_main(_this.usermain_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        //Send Mail---------------------------
                        // debugger;
                        _this.sendEmail(res[0]["FULLNAME"], _this.email_ngModel, strPassword_1);
                    }
                });
            }
            else {
                alert('Invalid Email Id.');
            }
        });
    };
    LoginPage.prototype.Random = function () {
        var rand = Math.random().toString(10).substring(2, 8);
        return rand;
    };
    LoginPage.prototype.sendEmail = function (strName, strEmail, strPassword) {
        var ImgageSrc = __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + localStorage.getItem("cs_email_logo") + "?api_key=" + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var name;
        var email;
        name = strName;
        email = strEmail;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var body = {
            "template": "",
            "template_id": 0,
            "to": [
                {
                    "name": name,
                    "email": email
                }
            ],
            "subject": "Forgot Password.",
            "body_text": "",
            "body_html": '<HTML>' +
                '<HEAD>' +
                '<META name=GENERATOR content="MSHTML 10.00.9200.17606">' +
                '</HEAD>' +
                '<BODY>' +
                '<DIV style="FONT-FAMILY: Century Gothic">' +
                '<DIV style="MIN-WIDTH: 500px">' +
                '<BR>' +
                '<DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px">' +
                // '<IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png">' +
                '<IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '>' +
                '</DIV>' +
                '<DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c">' +
                '<DIV style="TEXT-ALIGN: center; FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">' +
                '<B>' +
                '<I>Forgot Password</I>' +
                '</B>' +
                '</DIV>' +
                '</DIV>' +
                '<BR>' +
                '<DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Dear <h4>' + name + '</h4>' +
                '<BR>Your temporary password is ' + strPassword + '. From now on you will use your new password.' +
                '</DIV>' +
                '<BR>' +
                '<DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Thank you.</DIV>' +
                '</DIV>' +
                '</DIV>' +
                '</BODY>' +
                '</HTML>',
            "from_name": "eClaim",
            "from_email": "balasingh73@gmail.com",
            "reply_to_name": "",
            "reply_to_email": ""
        };
        this.http.post(this.emailUrl, body, options)
            .map(function (res) { return res.json(); })
            .subscribe(function () {
            alert('Password has sent to your eMail Id.');
            //          this.navCtrl.push(LoginPage);
        });
    };
    LoginPage.prototype.AuthenticateUserFromAdServer = function (form) {
        var _this = this;
        if (this.login.username != undefined) {
            localStorage.removeItem("Ad_Authenticaton");
            this.stringToSplit = this.login.username;
            this.tempUserSplit1 = this.stringToSplit.split("@")[0];
            this.tempUserSplit2 = this.stringToSplit.split("@")[1];
            if (this.login.username.trim() == "sva" && this.login.password.trim() == "sva") {
                this.GetUserFromAdServer(form, this.tempUserSplit1.trim());
            }
            else {
                // user of username@zen.com.my ---> redirect auth to AD
                if (this.tempUserSplit2 != undefined && this.tempUserSplit2 != undefined) {
                    if (this.tempUserSplit2.trim() == "zen.com.my") {
                        var Adurl = __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["a" /* AD_URL */] + '/user/' + this.tempUserSplit1.trim() + '/authenticate';
                        var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
                        headers.append("Accept", 'application/json');
                        headers.append('Content-Type', 'application/json');
                        var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
                        var postParams = {
                            password: this.login.password
                        };
                        this.http.post(Adurl, postParams, options)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            if (data.data == true) {
                                // alert('Authenticate');
                                localStorage.setItem("Ad_Authenticaton", "true");
                                _this.GetUserFromAdServer(form, _this.tempUserSplit1.trim());
                            }
                            else {
                                localStorage.removeItem("g_USER_GUID");
                                localStorage.removeItem("g_TENANT_GUID");
                                localStorage.removeItem("g_EMAIL");
                                localStorage.removeItem("g_FULLNAME");
                                localStorage.removeItem("g_TENANT_COMPANY_GUID");
                                localStorage.removeItem("g_TENANT_COMPANY_SITE_GUID");
                                localStorage.removeItem("g_ISHQ");
                                localStorage.removeItem("g_IS_TENANT_ADMIN");
                                localStorage.removeItem("Ad_Authenticaton");
                                localStorage.removeItem("g_IMAGE_URL");
                                alert("please enter valid login details.");
                                _this.login.username = "";
                                _this.login.password = "";
                                // this.loading.dismissAll();
                            }
                        }, function (error) {
                            console.log(error); // Error getting the data
                        });
                    }
                    // user of username@xyz.com.my ---> redirect auth to Current DB
                    else {
                        this.onLogin(form);
                    }
                }
                // // user of username@xyz.com.my ---> redirect auth to Current DB
                // else {
                //   this.onLogin(form);
                // }
            }
        }
    };
    LoginPage.prototype.GetUserFromAdServer = function (form, username) {
        var _this = this;
        if (this.login.username.trim() == "sva" && this.login.password.trim() == "sva") {
            localStorage.setItem("g_USER_GUID", "sva");
            localStorage.setItem("g_FULLNAME", "Super Admin");
            localStorage.setItem("g_IMAGE_URL", "assets/img/profile_no_preview.png");
            //navigate to app.component page
            this.userData.login(this.login.username);
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__setupguide_setupguide__["a" /* SetupguidePage */]);
            // this.loading.dismissAll();
        }
        else {
            var Adurl = __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["a" /* AD_URL */] + '/user/' + username;
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]({ 'Content-Type': 'application/x-www-form-urlencoded' });
            queryHeaders.append('Access-Control-Allow-Origin', '*');
            queryHeaders.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PUT');
            queryHeaders.append('Accept', 'application/json');
            queryHeaders.append('Content-Type', 'application/json');
            this.http
                .get(Adurl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.submitted = true;
                if (form.valid) {
                    //-----------Check if the login as super vendor-----------------------
                    if (_this.login.username.trim() == "sva" && _this.login.password.trim() == "sva") {
                        localStorage.setItem("g_USER_GUID", "sva");
                        localStorage.setItem("g_FULLNAME", "Super Admin");
                        localStorage.setItem("g_IMAGE_URL", "assets/img/profile_no_preview.png");
                        //navigate to app.component page
                        _this.userData.login(_this.login.username);
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__setupguide_setupguide__["a" /* SetupguidePage */]);
                        // this.loading.dismissAll();
                    }
                    else {
                        _this.userData.login(_this.login.username);
                        // console.log(data.userPrincipalName);
                        var url = void 0;
                        url = _this.baseResource_Url + "vw_login?filter=(EMAIL=" + data.userPrincipalName + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                        _this.http
                            .get(url)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var res = data["resource"];
                            if (res.length > 0) {
                                localStorage.setItem("g_USER_GUID", res[0]["USER_GUID"]);
                                localStorage.setItem("g_TENANT_GUID", res[0]["TENANT_GUID"]);
                                localStorage.setItem("g_EMAIL", res[0]["EMAIL"]);
                                localStorage.setItem("g_FULLNAME", res[0]["FULLNAME"]);
                                localStorage.setItem("g_TENANT_COMPANY_GUID", res[0]["TENANT_COMPANY_GUID"]);
                                localStorage.setItem("g_TENANT_COMPANY_SITE_GUID", res[0]["TENANT_COMPANY_SITE_GUID"]);
                                localStorage.setItem("g_ISHQ", res[0]["ISHQ"]);
                                localStorage.setItem("g_IS_TENANT_ADMIN", res[0]["IS_TENANT_ADMIN"]);
                                if (res[0]["IMAGE_URL"] == null || res[0]["IMAGE_URL"] == '') {
                                    localStorage.setItem("g_IMAGE_URL", "assets/img/profile_no_preview.png");
                                }
                                else {
                                    localStorage.setItem("g_IMAGE_URL", __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + res[0]["IMAGE_URL"] + "?api_key=" + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                                }
                                //Setup Guide for only Hq Users
                                if (res[0]["ISHQ"] == "1" && res[0]["IS_TENANT_ADMIN"] == "1") {
                                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__["a" /* DashboardPage */]);
                                }
                                else {
                                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__dashboard_dashboard__["a" /* DashboardPage */]);
                                }
                                // this.loading.dismissAll();
                                //Get the role of that particular user---------------------------------------------------------------------------
                                var role_url = "";
                                role_url = _this.baseResource_Url + "view_role_display?filter=(USER_GUID=" + res[0]["USER_GUID"] + ')and(ROLE_PRIORITY_LEVEL=1)&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                                _this.http
                                    .get(role_url)
                                    .map(function (res) { return res.json(); })
                                    .subscribe(function (data) {
                                    var role_result = data["resource"];
                                    if (role_result.length > 0) {
                                        localStorage.setItem("g_KEY_ADD", "0");
                                        localStorage.setItem("g_KEY_EDIT", "0");
                                        localStorage.setItem("g_KEY_DELETE", "0");
                                        localStorage.setItem("g_KEY_VIEW", "0");
                                        for (var item in role_result) {
                                            if (role_result[item]["ROLE_NAME"] == "MAIN") {
                                                localStorage.setItem("g_ROLE_NAME", role_result[0]["ROLE_NAME"]);
                                            }
                                            else {
                                                localStorage.setItem("g_ROLE_NAME", "");
                                            }
                                            if (role_result[0]["KEY_ADD"] == "1") {
                                                localStorage.setItem("g_KEY_ADD", role_result[0]["KEY_ADD"]);
                                            }
                                            if (role_result[0]["KEY_EDIT"] == "1") {
                                                localStorage.setItem("g_KEY_EDIT", role_result[0]["KEY_EDIT"]);
                                            }
                                            if (role_result[0]["KEY_DELETE"] == "1") {
                                                localStorage.setItem("g_KEY_DELETE", role_result[0]["KEY_DELETE"]);
                                            }
                                            if (role_result[0]["KEY_VIEW"] == "1") {
                                                localStorage.setItem("g_KEY_VIEW", role_result[0]["KEY_VIEW"]);
                                            }
                                        }
                                        // localStorage.setItem("g_ROLE_NAME", role_result[0]["ROLE_NAME"]);
                                        // localStorage.setItem("g_KEY_ADD", role_result[0]["KEY_ADD"]);
                                        // localStorage.setItem("g_KEY_EDIT", role_result[0]["KEY_EDIT"]);
                                        // localStorage.setItem("g_KEY_DELETE", role_result[0]["KEY_DELETE"]);
                                        // localStorage.setItem("g_KEY_VIEW", role_result[0]["KEY_VIEW"]);
                                    }
                                    else {
                                        localStorage.setItem("g_KEY_VIEW", "1");
                                        localStorage.removeItem("g_ROLE_NAME");
                                    }
                                });
                                //Get company settings details----------------------------------------------------------------------------------
                                _this.GetCompanySettings(localStorage.getItem("g_TENANT_GUID"));
                                //--------------------------------------------------------------------------------------------------------------
                                //navigate to app.component page
                                _this.userData.login(_this.login.username);
                                // this.loading.dismissAll();
                            }
                            else {
                                localStorage.removeItem("g_USER_GUID");
                                localStorage.removeItem("g_TENANT_GUID");
                                localStorage.removeItem("g_EMAIL");
                                localStorage.removeItem("g_FULLNAME");
                                localStorage.removeItem("g_TENANT_COMPANY_GUID");
                                localStorage.removeItem("g_TENANT_COMPANY_SITE_GUID");
                                localStorage.removeItem("g_ISHQ");
                                localStorage.removeItem("g_IS_TENANT_ADMIN");
                                localStorage.removeItem("g_IMAGE_URL");
                                alert("please enter valid login details.");
                                _this.login.username = "";
                                _this.login.password = "";
                            }
                        });
                    }
                }
            });
            // this.loading.dismissAll();
        }
    };
    LoginPage.prototype.GetCompanySettings = function (STR_TENANT_GUID) {
        var _this = this;
        localStorage.removeItem("cs_date_format");
        localStorage.removeItem("cs_default_currency");
        localStorage.removeItem("cs_email_logo");
        localStorage.removeItem("cs_default_country");
        localStorage.removeItem("cs_max_claim_amt");
        localStorage.removeItem("cs_min_claim_amt");
        localStorage.removeItem("cs_claim_cutoff_date");
        localStorage.removeItem("cs_year_start_month");
        localStorage.removeItem("cs_year_end_month");
        localStorage.removeItem("cs_approval_cutoff_date");
        localStorage.removeItem("cs_default_payment_type");
        localStorage.removeItem("cs_default_language");
        localStorage.removeItem("cs_email_schedule");
        localStorage.removeItem("cs_email_time");
        localStorage.removeItem("draft_notification");
        localStorage.removeItem("profile_guid");
        localStorage.removeItem("cs_profile_guid");
        localStorage.removeItem("zone_wise_current_timestamp");
        this.KeyNameValue = [];
        var url = "";
        url = __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys' + '?filter=(TENANT_GUID=' + STR_TENANT_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_7__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.KeyNameValueList = data.resource;
            for (var item in _this.KeyNameValueList) {
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "date_format") {
                    localStorage.setItem("cs_date_format", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "default_currency") {
                    localStorage.setItem("cs_default_currency", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "email_logo") {
                    localStorage.setItem("cs_email_logo", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                // if (this.KeyNameValueList[item]["KEY_NAME"] == "default_country") { localStorage.setItem("cs_default_country", this.KeyNameValueList[item]["KEY_VALUE"]); }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "default_country") {
                    var StartIndex = _this.KeyNameValueList[item]["KEY_VALUE"].indexOf(",");
                    var EndIndex = _this.KeyNameValueList[item]["KEY_VALUE"].length - (StartIndex + 1);
                    var KeyValue = _this.KeyNameValueList[item]["KEY_VALUE"].substr(StartIndex + 1, EndIndex);
                    localStorage.setItem("cs_default_country", KeyValue);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "max_claim_amt") {
                    localStorage.setItem("cs_max_claim_amt", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "min_claim_amt") {
                    localStorage.setItem("cs_min_claim_amt", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "claim_cutoff_date") {
                    localStorage.setItem("cs_claim_cutoff_date", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "month_start") {
                    localStorage.setItem("cs_year_start_month", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "month_end") {
                    localStorage.setItem("cs_year_end_month", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "approval_cutoff_date") {
                    localStorage.setItem("cs_approval_cutoff_date", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                // if (this.KeyNameValueList[item]["KEY_NAME"] == "default_payment_type") { localStorage.setItem("cs_default_payment_type", this.KeyNameValueList[item]["KEY_VALUE"]); }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "default_payment_type") {
                    var StartIndex_1 = _this.KeyNameValueList[item]["KEY_VALUE"].indexOf(",");
                    var EndIndex_1 = _this.KeyNameValueList[item]["KEY_VALUE"].length - (StartIndex_1 + 1);
                    var KeyValue_1 = _this.KeyNameValueList[item]["KEY_VALUE"].substr(StartIndex_1 + 1, EndIndex_1);
                    localStorage.setItem("cs_default_payment_type", KeyValue_1);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "default_language") {
                    localStorage.setItem("cs_default_language", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "email_schedule") {
                    localStorage.setItem("cs_email_schedule", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "email_time") {
                    localStorage.setItem("cs_email_time", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "draft_notification") {
                    localStorage.setItem("draft_notification", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "profile_guid") {
                    localStorage.setItem("cs_profile_guid", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
                if (_this.KeyNameValueList[item]["KEY_NAME"] == "default_time_zone") {
                    localStorage.setItem("cs_timestamp", _this.KeyNameValueList[item]["KEY_VALUE"]);
                }
            }
        });
    };
    LoginPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-user',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/login/login.html"*/'﻿<ion-header>\n\n</ion-header>\n\n<ion-content>\n	<ion-card class="nofu">\n\n		<ion-card-content>\n		\n			<h1 style="margin-left:10pt;">Sign In to eClaim</h1>\n			<br/>\n\n			<p style="margin-left:10pt;">\n				<b>Please enter your login credentials</b>\n			</p>\n			<br/>\n			<form #loginForm="ngForm" novalidate>\n				<ion-list>\n					<ion-item>\n\n						<ion-label floating color="primary">User Name (Full email address)</ion-label>\n						<ion-input [(ngModel)]="login.username" name="username" type="text" #username="ngModel" spellcheck="false" autocapitalize="off"\n						 required>\n						</ion-input>\n						<!-- <ion-icon name="person" item-end></ion-icon> -->\n					</ion-item>\n					<p ion-text [hidden]="username.valid || submitted == false" color="danger" padding-left>\n						Username is required\n					</p>\n\n					<ion-item>\n						<ion-label floating color="primary">Enter Your Password</ion-label>\n						<ion-input [(ngModel)]="login.password" name="password" type="password" #password="ngModel" required>\n							<!-- <ion-icon item-end name="key"></ion-icon> -->\n						</ion-input>\n\n					</ion-item>\n					<p ion-text [hidden]="password.valid || submitted == false" color="danger" padding-left>\n						Password is required\n					</p>\n				</ion-list>\n\n				<div class="btn">\n					<!-- <button color="primary500" ion-button block (click)="onLogin(loginForm)" type="submit">Login</button> -->\n					<button color="primary500" ion-button block (click)="AuthenticateUserFromAdServer(loginForm)" type="submit">{{ "LOGIN" | translate }}</button>\n				</div>\n				<!-- <div>\n\n					<p>\n\n						<a color="primary500" (click)="ForgotPasswordClick()">Forgot Your Password?</a>\n\n\n						<a color="primary500" style="float:right;" (click)="onSignup()">Create account</a>\n\n					</p>\n\n				</div> -->\n\n\n			</form>\n		</ion-card-content>\n	</ion-card>\n\n\n	<div class="blackcontainer" *ngIf="ForgotPasswordClicked">\n	</div>\n	<div class="popup0" padding *ngIf="ForgotPasswordClicked">\n		<ion-card>\n			<ion-card-header class="icTitle headerColor-white ">\n				<div class="icHeaderText">Forgot Password</div>\n				<button class="btnR" (click)="CloseForgotPasswordClick()">\n					<ion-icon name="md-close"></ion-icon>\n				</button>\n			</ion-card-header>\n\n			<ion-list>\n				<form [formGroup]="ForgotPasswordForm">\n					<ion-item>\n						<ion-label stacked>Email</ion-label>\n						<ion-input type="email" formControlName="Email_ID" [(ngModel)]="email_ngModel" required placeholder="{{\'Please fill in the email\'}}"></ion-input>\n					</ion-item>\n\n					<div class="btn">\n						<button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!ForgotPasswordForm.valid" (click)="SaveForgotPassword()">Submit</button>\n					</div>\n				</form>\n			</ion-list>\n\n		</ion-card>\n	</div>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/login/login.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_11__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_13__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_6__providers_user_data__["a" /* UserData */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_12__ionic_storage__["b" /* Storage */], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_11__services_usersetup_service__["a" /* UserSetup_Service */]])
    ], LoginPage);
    return LoginPage;
}());

//# sourceMappingURL=login.js.map

/***/ }),
/* 20 */,
/* 21 */,
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ApiManagerProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_main_claim_request_model__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ApiManagerProvider = /** @class */ (function () {
    function ApiManagerProvider(numberPipe, http, toastCtrl, datepipe) {
        this.numberPipe = numberPipe;
        this.http = http;
        this.toastCtrl = toastCtrl;
        this.datepipe = datepipe;
        this.emailUrl = 'http://api.zen.com.my/api/v2/zenmail?api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.stringToSplit = "";
        this.tempSplit = "";
    }
    ApiManagerProvider.prototype.CreateTimestamp = function () {
        return __WEBPACK_IMPORTED_MODULE_6_moment___default.a.utc(new Date()).zone(localStorage.getItem("cs_timestamp")).format('YYYY-MM-DDTHH:mm');
    };
    ApiManagerProvider.prototype.LoadMainClaim = function (claimReqGUID) {
        var _this = this;
        var totalAmount;
        return new Promise(function (resolve) {
            _this.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + claimReqGUID).subscribe(function (res) {
                _this.claimDetailsData = res['resource'];
                _this.claimDetailsData.forEach(function (element) {
                    totalAmount += element.AMOUNT;
                    //['resource']
                });
                resolve(totalAmount);
            });
        });
    };
    ApiManagerProvider.prototype.getApiModel = function (endPoint, args) {
        var url = this.getModelUrl(endPoint, args);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.http.get(url, { headers: queryHeaders }).map(function (res) { return res.json(); });
    };
    ApiManagerProvider.prototype.sendEmail = function (ClaimType_GUID, startDate, endDate, CreatedDate, TravelDate, CLAIM_REQUEST_GUID) {
        // console.log(moment(startDate).format('YYYY-MM-DDTHH:mm'));
        // console.log(this.datepipe.transform(startDate, 'dd/MM/yyyy HH:mm'));
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_email_details?filter=USER_GUID=' + localStorage.getItem("g_USER_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var email_details = data["resource"];
            if (email_details.length > 0) {
                var name_1;
                var email_1;
                name_1 = email_details[0]["APPLIER_NAME"];
                email_1 = email_details[0]["APPLIER_EMAIL"];
                var Approver1_name_1;
                var Approver1_email_1;
                Approver1_name_1 = email_details[0]["APPROVER1_NAME"];
                Approver1_email_1 = email_details[0]["APPROVER1_EMAIL"];
                var ename_1 = email_details[0]["APPLIER_NAME"];
                var assignedTo_1 = email_details[0]["APPROVER1_NAME"];
                //Get the Total Claim Amount and Status----------------------
                var ClaimAmt_1 = "0.00";
                var Status_1 = "";
                var url_Amt_Status = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_claim_request?filter=(CLAIM_REQUEST_GUID=' + CLAIM_REQUEST_GUID + ')AND(CLAIM_TYPE_GUID = ' + ClaimType_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                _this.http
                    .get(url_Amt_Status)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var Amt_Status_details = data["resource"];
                    if (Amt_Status_details.length > 0) {
                        ClaimAmt_1 = _this.numberPipe.transform(Amt_Status_details[0]["CLAIM_AMOUNT"], '1.2-2');
                        Status_1 = Amt_Status_details[0]["STATUS"];
                        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
                        queryHeaders.append('Content-Type', 'application/json');
                        queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
                        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                        var options_1 = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                        var claimType_1 = "";
                        var strSubjectApplier_1 = "";
                        var strSubjectApprover_1;
                        var strBody_html_1;
                        //For Cliam Type-------------------------------------------------
                        var url_claim_type = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "/main_claim_type?filter=(CLAIM_TYPE_GUID=" + ClaimType_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                        _this.http
                            .get(url_claim_type)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var claimType_details = data["resource"];
                            if (claimType_details.length > 0) {
                                claimType_1 = claimType_details[0]["NAME"];
                                if (claimType_1 == "Travel Claim" || claimType_1 == "Overtime Claim") {
                                    strSubjectApplier_1 = "Your " + claimType_1 + " application (" + startDate.substring(0, 16) + " - " + endDate.substring(0, 16) + ") has been forwarded for your superior approval.";
                                    strBody_html_1 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_1 + '<BR><BR>Your ' + claimType_1 + ' application has been forwarded to your superior for approval.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + ename_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + startDate.substring(0, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + endDate.substring(0, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_1 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                }
                                else {
                                    strSubjectApplier_1 = "Your " + claimType_1 + " application has been forwarded for your superior approval.";
                                    strBody_html_1 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_1 + '<BR><BR>Your ' + claimType_1 + ' application has been forwarded to your superior for approval.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + ename_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_1 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                }
                                //Body Contents For Applier------------------------
                                var body = {
                                    "template": "",
                                    "template_id": 0,
                                    "to": [
                                        {
                                            "name": name_1,
                                            "email": email_1
                                        }
                                    ],
                                    "subject": strSubjectApplier_1,
                                    "body_text": "",
                                    // "body_html": '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name + '<BR><BR>Your ' + claimType + ' application has been forwarded to your superior for approval.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + this.datepipe.transform(startDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + this.datepipe.transform(endDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD colSpan=2> ' + this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Department</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + dept + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>',
                                    "body_html": strBody_html_1,
                                    "from_name": "eClaim",
                                    "from_email": "balasingh73@gmail.com",
                                    "reply_to_name": "",
                                    "reply_to_email": ""
                                };
                                //Body Contents For Approver-----------------------
                                if (claimType_1 == "Travel Claim" || claimType_1 == "Overtime Claim") {
                                    strSubjectApprover_1 = "Pending Your Approval - " + claimType_1 + " application by " + name_1 + " (" + startDate.substring(0, 16) + " - " + endDate.substring(0, 16) + ")";
                                    strBody_html_1 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver1_name_1 + '<BR><BR>Your action is required for the below ' + claimType_1 + ' application.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + ename_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + startDate.substring(0, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + endDate.substring(0, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_1 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                }
                                else {
                                    strSubjectApprover_1 = "Pending Your Approval - " + claimType_1 + " application by " + name_1;
                                    strBody_html_1 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver1_name_1 + '<BR><BR>Your action is required for the below ' + claimType_1 + ' application.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + ename_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_1 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                }
                                var body1 = {
                                    "template": "",
                                    "template_id": 0,
                                    "to": [
                                        {
                                            "name": Approver1_name_1,
                                            "email": Approver1_email_1
                                        }
                                    ],
                                    "subject": strSubjectApprover_1,
                                    "body_text": "",
                                    "body_html": strBody_html_1,
                                    "from_name": "eClaim",
                                    "from_email": "balasingh73@gmail.com",
                                    "reply_to_name": "",
                                    "reply_to_email": ""
                                };
                                //Send Email For Applier---------------------------------------------- 
                                _this.http.post(_this.emailUrl, body, options_1)
                                    .map(function (res) { return res.json(); })
                                    .subscribe(function () {
                                });
                                //Send Email For Approver 1-------------------------------------------
                                _this.http.post(_this.emailUrl, body1, options_1)
                                    .map(function (res) { return res.json(); })
                                    .subscribe(function () {
                                });
                                //---------------------------------------------------------
                            }
                        });
                    }
                });
                //-----------------------------------------------------------
            }
        });
        //---------------------------------------------------------------
    };
    ApiManagerProvider.prototype.sendEmail_New = function (ClaimType_GUID, startDate, endDate, CreatedDate, ClaimDate, CLAIM_REQUEST_GUID, OriginPlace, Destination, Description, Soc_GUID, Customer_GUID) {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_email_details?filter=USER_GUID=' + localStorage.getItem("g_USER_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var email_details = data["resource"];
            if (email_details.length > 0) {
                var name_2;
                var email = void 0;
                name_2 = email_details[0]["APPLIER_NAME"];
                email = email_details[0]["APPLIER_EMAIL"];
                var Approver1_name_2;
                var Approver1_email_2;
                Approver1_name_2 = email_details[0]["APPROVER1_NAME"];
                Approver1_email_2 = email_details[0]["APPROVER1_EMAIL"];
                var ename_2 = email_details[0]["APPLIER_NAME"];
                var assignedTo = email_details[0]["APPROVER1_NAME"];
                //Get the Soc No, Project Name And Customer Name------------------------
                var Project_OR_Customer_Name_1 = "";
                var Soc_No_1 = "";
                var Proj_Cust_url = "";
                if (Soc_GUID != null) {
                    Proj_Cust_url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_soc_project?filter=SOC_GUID=' + Soc_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                }
                if (Customer_GUID != null) {
                    Proj_Cust_url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_customer?filter=CUSTOMER_GUID=' + Customer_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                }
                _this.http
                    .get(Proj_Cust_url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var project_customer_details = data["resource"];
                    if (project_customer_details.length > 0) {
                        if (Soc_GUID != null) {
                            Project_OR_Customer_Name_1 = project_customer_details[0]["NAME"] + ' / ' + project_customer_details[0]["SOC_NO"];
                            Soc_No_1 = project_customer_details[0]["SOC_NO"];
                        }
                        if (Customer_GUID != null) {
                            Project_OR_Customer_Name_1 = project_customer_details[0]["NAME"];
                        }
                        //Get the Total Claim Amount and Status----------------------
                        var ClaimAmt_2 = "0.00";
                        var Status_2 = "";
                        var url_Amt_Status = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_claim_request?filter=(CLAIM_REQUEST_GUID=' + CLAIM_REQUEST_GUID + ')AND(CLAIM_TYPE_GUID = ' + ClaimType_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                        _this.http
                            .get(url_Amt_Status)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var Amt_Status_details = data["resource"];
                            if (Amt_Status_details.length > 0) {
                                ClaimAmt_2 = _this.numberPipe.transform(Amt_Status_details[0]["CLAIM_AMOUNT"], '1.2-2');
                                Status_2 = Amt_Status_details[0]["STATUS"];
                                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
                                queryHeaders.append('Content-Type', 'application/json');
                                queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
                                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                                var options_2 = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                                var claimType_2 = "";
                                var strSubjectApplier = "";
                                var strSubjectApprover_2;
                                var strBody_html_2;
                                //For Cliam Type-------------------------------------------------
                                var url_claim_type = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "/main_claim_type?filter=(CLAIM_TYPE_GUID=" + ClaimType_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                                _this.http
                                    .get(url_claim_type)
                                    .map(function (res) { return res.json(); })
                                    .subscribe(function (data) {
                                    var claimType_details = data["resource"];
                                    if (claimType_details.length > 0) {
                                        claimType_2 = claimType_details[0]["NAME"];
                                        strSubjectApprover_2 = "New Claim Application";
                                        var ImgageSrc = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + localStorage.getItem("cs_email_logo") + "?api_key=" + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                                        if (claimType_2 == "Entertainment Claim" || claimType_2 == "Printing Cliam" || claimType_2 == "Gift Claim" || claimType_2 == "Miscellaneous Claim") {
                                            strBody_html_2 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>New Claim Application</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">There is a new claim application waiting for your approval. <hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(ClaimDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name_1 + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + '</TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/ClaimapprovertasklistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                        }
                                        else if (claimType_2 == "Travel Claim") {
                                            strBody_html_2 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>New Claim Application</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">There is a new claim application waiting for your approval.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR /><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(startDate, 'dd/MM/yyyy') + ' ' + startDate.substring(12, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Description + ' </TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/ClaimapprovertasklistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                        }
                                        else {
                                            strBody_html_2 = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>New Claim Application</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">There is a new claim application waiting for your approval. <hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Start Date Time</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(startDate, 'dd/MM/yyyy') + ' ' + startDate.substring(12, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">End Date Time </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2>&nbsp;' + _this.datepipe.transform(endDate, 'dd/MM/yyyy') + ' ' + endDate.substring(12, 16) + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/ClaimapprovertasklistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                                        }
                                        var body1 = {
                                            "template": "",
                                            "template_id": 0,
                                            "to": [
                                                {
                                                    "name": Approver1_name_2,
                                                    "email": Approver1_email_2
                                                }
                                            ],
                                            "subject": strSubjectApprover_2,
                                            "body_text": "",
                                            "body_html": strBody_html_2,
                                            "from_name": "eClaim",
                                            "from_email": "balasingh73@gmail.com",
                                            "reply_to_name": "",
                                            "reply_to_email": ""
                                        };
                                        //Send Email For Approver 1-------------------------------------------
                                        _this.http.post(_this.emailUrl, body1, options_2)
                                            .map(function (res) { return res.json(); })
                                            .subscribe(function () {
                                        });
                                        //---------------------------------------------------------
                                    }
                                });
                            }
                        });
                        //-----------------------------------------------------------
                    }
                });
                //----------------------------------------------------------------------
            }
        });
        //---------------------------------------------------------------
    };
    ApiManagerProvider.prototype.EmailNextApprover = function (CLAIM_REQUEST_GUID, ASSIGNED_TO, claimStatus, Level) {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_email_approver?filter=CLAIM_REQUEST_GUID=' + CLAIM_REQUEST_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var email_details = data["resource"];
            if (email_details.length > 0) {
                var name_3 = '';
                var email_2 = '';
                var assignedTo_2 = '';
                var Direct_Manager_1 = '';
                name_3 = email_details[0]["APPLIER_NAME"];
                email_2 = email_details[0]["APPLIER_EMAIL"];
                var Approver_name_1;
                var Approver_email_1;
                //Approver_name = email_details[0]["APPROVER_NAME"]; //Approver_email = email_details[0]["APPROVER_EMAIL"];
                Direct_Manager_1 = email_details[0]["DIRECT_MANAGER"];
                var ename_3 = email_details[0]["APPLIER_NAME"];
                var ClaimAmt_3 = _this.numberPipe.transform(email_details[0]["CLAIM_AMOUNT"], '1.2-2');
                var Status_3 = email_details[0]["STATUS"];
                if (claimStatus === 'Rejected') {
                    Status_3 = claimStatus;
                }
                var Role_Name_1 = email_details[0]["ROLE_NAME"];
                //Here get the approver name and emailid----------------------------------
                var url_approver = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_user_email?filter=USER_GUID=' + ASSIGNED_TO + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                ;
                _this.http
                    .get(url_approver)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var approver_details = data["resource"];
                    if (approver_details.length > 0) {
                        Approver_name_1 = approver_details[0]["FULLNAME"];
                        assignedTo_2 = approver_details[0]["FULLNAME"];
                        Approver_email_1 = approver_details[0]["EMAIL"];
                        var startDate = "";
                        var endDate = "";
                        var CreatedDate = "";
                        var TravelDate = "";
                        startDate = email_details[0]["START_DATE"];
                        endDate = email_details[0]["END_DATE"];
                        CreatedDate = email_details[0]["APPLIED_DATE"];
                        TravelDate = email_details[0]["TRAVEL_DATE"];
                        // console.log(moment(startDate).format('YYYY-MM-DDTHH:mm'));
                        // console.log(this.datepipe.transform(startDate, 'dd/MM/yyyy HH:mm'));
                        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
                        queryHeaders.append('Content-Type', 'application/json');
                        queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
                        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                        var claimType = "";
                        claimType = email_details[0]["CLAIM_TYPE"];
                        var strSubjectApplier = "";
                        var strSubjectApprover = void 0;
                        var strBody_html = void 0;
                        if (Level == -1) {
                            if (claimType == "Travel Claim" || claimType == "Overtime Claim") {
                                strSubjectApplier = "Your " + claimType + " application (" + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY HH:mm') + " - " + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('DD/MM/YYYY HH:mm') + ") has approved by " + localStorage.getItem("g_ROLE_NAME") + ".";
                                strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_3 + '<BR><BR>Your ' + claimType + ' application has approved by ' + Role_Name_1 + '.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('DD/MM/YYYY HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            }
                            else {
                                strSubjectApplier = "Your " + claimType + " application has approved by " + Role_Name_1 + ".";
                                strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_3 + '<BR><BR>Your ' + claimType + ' application has approved by ' + Role_Name_1 + '.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            }
                        }
                        else {
                            if (claimType == "Travel Claim" || claimType == "Overtime Claim") {
                                strSubjectApplier = "Your " + claimType + " application (" + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY HH:mm') + " - " + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('DD/MM/YYYY HH:mm') + ") has been forwarded for " + localStorage.getItem("g_ROLE_NAME") + " approval.";
                                strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_3 + '<BR><BR>Your ' + claimType + ' application has been forwarded to ' + Role_Name_1 + ' for approval.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('DD/MM/YYYY HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            }
                            else {
                                strSubjectApplier = "Your " + claimType + " application has been forwarded for " + Role_Name_1 + " approval.";
                                strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + name_3 + '<BR><BR>Your ' + claimType + ' application has been forwarded to ' + Role_Name_1 + ' for approval.<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo_2 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            }
                        }
                        //Body Contents For Applier------------------------
                        var body = {
                            "template": "",
                            "template_id": 0,
                            "to": [
                                {
                                    "name": name_3,
                                    "email": email_2
                                }
                            ],
                            "subject": strSubjectApplier,
                            "body_text": "",
                            "body_html": strBody_html,
                            "from_name": "eClaim",
                            "from_email": "balasingh73@gmail.com",
                            "reply_to_name": "",
                            "reply_to_email": ""
                        };
                        var mailInitial = void 0;
                        if (claimStatus === 'Rejected') {
                            mailInitial = 'You have Rejected the below ' + claimType + ' application.';
                        }
                        else {
                            mailInitial = 'Your action is required for the below ' + claimType + ' application.';
                        }
                        //Body Contents For Approver-----------------------                
                        if (claimType == "Travel Claim" || claimType == "Overtime Claim") {
                            strSubjectApprover = "Pending Your Approval - " + claimType + " application by " + name_3 + " (" + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('YYYY-MM-DD HH:mm') + " - " + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('YYYY-MM-DD HH:mm') + ")";
                            // strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver_name + '<BR><BR>'+mailInitial+'<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + moment(startDate).format('YYYY-MM-DDTHH:mm')  + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + moment(endDate).format('YYYY-MM-DDTHH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> RM ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver_name_1 + '<BR><BR>' + mailInitial + '<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">START DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('YYYY-MM-DD HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">END DATE </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(endDate).format('YYYY-MM-DD HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Direct_Manager_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                        }
                        else {
                            strSubjectApprover = "Pending Your Approval - " + claimType + " application by " + name_3;
                            // strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver_name + '<BR><BR>'+mailInitial+'<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + assignedTo + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> RM ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                            strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV><DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"><DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear ' + Approver_name_1 + '<BR><BR>' + mailInitial + '<H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Claim Details :</B><BR></H1><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">EMPLOYEE</TD><TD>:</TD><TD colSpan=2> ' + ename_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">APPLIED DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(CreatedDate, 'dd/MM/yyyy HH:mm') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">CLAIM DATE</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + _this.datepipe.transform(TravelDate, 'dd/MM/yyyy HH:mm') + '</TD><TR><TD style="TEXT-ALIGN: left">Superior Name</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Direct_Manager_1 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt_3 + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Status</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Status_3 + '</TD></TR></TBODY></TABLE><BR><DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                        }
                        var body1 = {
                            "template": "",
                            "template_id": 0,
                            "to": [
                                {
                                    "name": Approver_name_1,
                                    "email": Approver_email_1
                                }
                            ],
                            "subject": strSubjectApprover,
                            "body_text": "",
                            "body_html": strBody_html,
                            "from_name": "eClaim",
                            "from_email": "balasingh73@gmail.com",
                            "reply_to_name": "",
                            "reply_to_email": ""
                        };
                        //Send Email For Applier---------------------------------------------- 
                        _this.http.post(_this.emailUrl, body, options)
                            .map(function (res) { return res.json(); })
                            .subscribe(function () {
                        });
                        //Send Email For Approver 1-------------------------------------------
                        if (Level != -1) {
                            _this.http.post(_this.emailUrl, body1, options)
                                .map(function (res) { return res.json(); })
                                .subscribe(function () {
                            });
                        }
                        //---------------------------------------------------------------------
                    }
                });
            }
        });
    };
    ApiManagerProvider.prototype.EmailNextApprover_New = function (CLAIM_REQUEST_GUID, Remarks, ApproverStatus) {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_email_details_new?filter=CLAIM_REQUEST_GUID=' + CLAIM_REQUEST_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var email_details = data["resource"];
            if (email_details.length > 0) {
                var name_4 = "";
                var email = "";
                var Project_OR_Customer_Name = "";
                var ClaimAmt = "0.00";
                var Status = "";
                var claimType = "";
                var startDate = "";
                var endDate = "";
                var travelDate = "";
                var Description = "";
                var OriginPlace = "";
                var Destination = "";
                var AppliedDate = "";
                name_4 = email_details[0]["APPLIER_NAME"];
                email = email_details[0]["APPLIER_EMAIL"];
                var ename = email_details[0]["APPLIER_NAME"];
                if (email_details[0]["SOC_NO"] != null) {
                    Project_OR_Customer_Name = email_details[0]["PROJECT_NAME"] + ' / ' + email_details[0]["SOC_NO"];
                }
                if (email_details[0]["CUSTOMER_NAME"] != null) {
                    Project_OR_Customer_Name = email_details[0]["CUSTOMER_NAME"];
                }
                AppliedDate = email_details[0]["APPLIED_DATE"];
                startDate = email_details[0]["START_DATE"];
                endDate = email_details[0]["END_DATE"];
                travelDate = email_details[0]["TRAVEL_DATE"];
                OriginPlace = email_details[0]["ORIGIN"];
                Destination = email_details[0]["DESTINATION"];
                ClaimAmt = _this.numberPipe.transform(email_details[0]["CLAIM_AMOUNT"], '1.2-2');
                Status = email_details[0]["STATUS"];
                claimType = email_details[0]["CLAIM_TYPE"];
                Description = email_details[0]["DESCRIPTION"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                var strSubjectApplier = "";
                var strBody_html = void 0;
                if (ApproverStatus == "Rejected") {
                    strSubjectApplier = "Your Claim is Rejected";
                    // Description = Remarks;
                }
                else {
                    strSubjectApplier = "Your Claim is Approved";
                }
                var ImgageSrc = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + localStorage.getItem("cs_email_logo") + "?api_key=" + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                if (claimType == "Entertainment Claim" || claimType == "Printing Claim" || claimType == "Gift Claim" || claimType == "Miscellaneous Claim") {
                    if (ApproverStatus == "Rejected") {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(travelDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><tr><td style="TEXT-ALIGN: left">Remarks</td><td>: </td><td style="TEXT-ALIGN: left" colspan="2">' + Remarks + ' </td></tr><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                    else {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(travelDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                }
                else if (claimType == "Travel Claim") {
                    if (ApproverStatus == "Rejected") {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><tr><td style="TEXT-ALIGN: left">Remarks</td><td>: </td><td style="TEXT-ALIGN: left" colspan="2">' + Remarks + ' </td></tr><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                    else {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                }
                else {
                    if (ApproverStatus == "Rejected") {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><tr><td style="TEXT-ALIGN: left">Remarks</td><td>: </td><td style="TEXT-ALIGN: left" colspan="2">' + Remarks + ' </td></tr><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                    else {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">' + strSubjectApplier + ' by your superior.<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                }
                var body1 = {
                    "template": "",
                    "template_id": 0,
                    "to": [
                        {
                            "name": strSubjectApplier,
                            "email": email
                        }
                    ],
                    "subject": strSubjectApplier,
                    "body_text": "",
                    "body_html": strBody_html,
                    "from_name": "eClaim",
                    "from_email": "balasingh73@gmail.com",
                    "reply_to_name": "",
                    "reply_to_email": ""
                };
                //Send Email For Applier 1-------------------------------------------
                _this.http.post(_this.emailUrl, body1, options)
                    .map(function (res) { return res.json(); })
                    .subscribe(function () {
                });
                //-------------------------------------------------------------------
            }
        });
        //-------------------------------------------------------------------------
    };
    ApiManagerProvider.prototype.EmailReject = function (CLAIM_REQUEST_GUID, Remarks, ApproverStatus, RejectedByStatus, Level) {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_email_details_new?filter=CLAIM_REQUEST_GUID=' + CLAIM_REQUEST_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var email_details = data["resource"];
            if (email_details.length > 0) {
                var name_5 = "";
                var email = "";
                var Project_OR_Customer_Name = "";
                var ClaimAmt = "0.00";
                var Status = "";
                var claimType = "";
                var startDate = "";
                var endDate = "";
                var travelDate = "";
                var Description = "";
                var OriginPlace = "";
                var Destination = "";
                var AppliedDate = "";
                name_5 = email_details[0]["APPLIER_NAME"];
                email = email_details[0]["APPLIER_EMAIL"];
                var ename = email_details[0]["APPLIER_NAME"];
                var superior_email = email_details[0]["SUPERIOR_EMAIL"];
                if (email_details[0]["SOC_NO"] != null) {
                    Project_OR_Customer_Name = email_details[0]["PROJECT_NAME"] + ' / ' + email_details[0]["SOC_NO"];
                }
                if (email_details[0]["CUSTOMER_NAME"] != null) {
                    Project_OR_Customer_Name = email_details[0]["CUSTOMER_NAME"];
                }
                AppliedDate = email_details[0]["APPLIED_DATE"];
                startDate = email_details[0]["START_DATE"];
                endDate = email_details[0]["END_DATE"];
                travelDate = email_details[0]["TRAVEL_DATE"];
                OriginPlace = email_details[0]["ORIGIN"];
                Destination = email_details[0]["DESTINATION"];
                ClaimAmt = _this.numberPipe.transform(email_details[0]["CLAIM_AMOUNT"], '1.2-2');
                Status = email_details[0]["STATUS"];
                claimType = email_details[0]["CLAIM_TYPE"];
                Description = email_details[0]["DESCRIPTION"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                var strSubjectApplier = "";
                var strBody_html = void 0;
                if (ApproverStatus == "Rejected") {
                    strSubjectApplier = RejectedByStatus;
                }
                var body1 = void 0;
                var ImgageSrc = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + localStorage.getItem("cs_email_logo") + "?api_key=" + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                if (claimType == "Entertainment Claim" || claimType == "Printing Claim" || claimType == "Gift Claim" || claimType == "Miscellaneous Claim") {
                    if (ApproverStatus == "Rejected") {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">&nbsp;<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(travelDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><tr><td style="TEXT-ALIGN: left">Remarks</td><td>: </td><td style="TEXT-ALIGN: left" colspan="2">' + Remarks + ' </td></tr><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                }
                else if (claimType == "Travel Claim") {
                    if (ApproverStatus == "Rejected") {
                        strBody_html = '<HTML><HEAD><META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD><BODY><DIV style="FONT-FAMILY: Century Gothic"><DIV style="MIN-WIDTH: 500px"><BR><DIV style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src=' + ImgageSrc + '></DIV><DIV style="MARGIN: 0 30px;"><DIV style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><B>' + strSubjectApplier + '</B></DIV></DIV><DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding:11px 30px">&nbsp;<hr><div style="FONT-SIZE: 16px; TEXT-ALIGN: left; "><B>Claim Details :</B></div><BR/><TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;"><TBODY><TR><TD style="TEXT-ALIGN: left">Employee</TD><TD>:</TD><TD colSpan=2> ' + ename + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Applied Date</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(AppliedDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Date </TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + __WEBPACK_IMPORTED_MODULE_6_moment___default()(startDate).format('DD/MM/YYYY') + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Type</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + claimType + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Project / Customer / SOC</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Project_OR_Customer_Name + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Origin</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + OriginPlace + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Destination</TD><TD>:</TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + Destination + ' </TD></TR><TR><TD style="TEXT-ALIGN: left">Claim Amount</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2> ' + localStorage.getItem("cs_default_currency") + ' ' + ClaimAmt + '</TD></TR><TR><TD style="TEXT-ALIGN: left">Description</TD><TD>: </TD><TD style="TEXT-ALIGN: left" colSpan=2>' + Description + ' </TD></TR><tr><td style="TEXT-ALIGN: left">Remarks</td><td>: </td><td style="TEXT-ALIGN: left" colspan="2">' + Remarks + ' </td></tr><TR><TD style="TEXT-ALIGN: left"></TD><TD></TD><TD style="TEXT-ALIGN: left" colSpan=2><a href="http://autobuild.zeontech.com.my/eclaim/#/UserclaimslistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display:inline-block;">Open eClaim</a></TD></TR></TBODY></TABLE><HR><DIV style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>';
                    }
                }
                body1 = {
                    "template": "",
                    "template_id": 0,
                    "to": [
                        {
                            "name": strSubjectApplier,
                            "email": email
                        }
                    ],
                    "subject": strSubjectApplier,
                    "body_text": "",
                    "body_html": strBody_html,
                    "from_name": "eClaim",
                    "from_email": "balasingh73@gmail.com",
                    "reply_to_name": "",
                    "reply_to_email": ""
                };
                //Added by bijay on 18/10/2018--------------
                if (Level == '3' || Level == '-1') {
                    body1 = {
                        "template": "",
                        "template_id": 0,
                        "to": [
                            {
                                "name": strSubjectApplier,
                                "email": email,
                            }
                        ],
                        "cc": [
                            {
                                "name": strSubjectApplier,
                                "email": superior_email,
                            }
                        ],
                        "subject": strSubjectApplier,
                        "body_text": "",
                        "body_html": strBody_html,
                        "from_name": "eClaim",
                        "from_email": "balasingh73@gmail.com",
                        "reply_to_name": "",
                        "reply_to_email": ""
                    };
                }
                //Send Email For Applier 1-------------------------------------------
                _this.http.post(_this.emailUrl, body1, options)
                    .map(function (res) { return res.json(); })
                    .subscribe(function () {
                });
                //-------------------------------------------------------------------
            }
        });
        //-------------------------------------------------------------------------
    };
    ApiManagerProvider.prototype.getImageUrl = function (imageName) {
        return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + imageName + '?api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
    };
    ApiManagerProvider.prototype.getUrl = function (table, args) {
        if (args != null) {
            return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '?' + args + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '?api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
    };
    ApiManagerProvider.prototype.getModelUrl = function (table, args) {
        if (args != null) {
            return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '?' + args;
        }
        return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table;
    };
    ApiManagerProvider.prototype.postUrl = function (table) {
        return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table;
    };
    ApiManagerProvider.prototype.deleteUrl = function (table, id) {
        return __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '/' + id;
    };
    ApiManagerProvider.prototype.postData = function (endpoint, body) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.http.post(this.postUrl(endpoint), body, options)
            .map(function (response) {
            return response;
        });
    };
    ApiManagerProvider.prototype.updateClaimRequest = function (claim_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.http.patch(this.getUrl('main_claim_request'), claim_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    // updateApiModel(endPoint: string, modelJSON: any) {
    //   var queryHeaders = new Headers();
    //   queryHeaders.append('Content-Type', 'application/json');
    //   queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //   let options = new RequestOptions({ headers: queryHeaders });
    //   return this.http.patch(this.postUrl(endPoint), modelJSON, options)
    //     .map((response) => {
    //       return response;
    //     });
    // }
    ApiManagerProvider.prototype.updateApiModel = function (endPoint, modelJSONData, isClaim) {
        var modelJSON = modelJSONData["resource"][0];
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.http.patch(this.postUrl(endPoint), modelJSONData, options)
            .map(function (response) {
            // if (isClaim && modelJSON.STATUS != 'Draft')
            // this.sendEmail(modelJSON.CLAIM_TYPE_GUID, modelJSON.START_TS, modelJSON.END_TS, modelJSON.CREATION_TS, modelJSON.TRAVEL_DATE, modelJSON.CLAIM_REQUEST_GUID);
            return response;
        });
    };
    ApiManagerProvider.prototype.deleteApiModel = function (endPoint, args) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        console.log(this.deleteUrl(endPoint, args));
        return this.http.delete(this.deleteUrl(endPoint, args), options)
            .map(function (response) {
            return response;
        });
    };
    ApiManagerProvider.prototype.getClaimRequestByClaimReqGUID = function (claimReqGUID) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.http
            .get(this.getUrl('main_claim_request', 'filter=	CLAIM_REQUEST_GUID=' + claimReqGUID))
            .map(function (response) {
            var result = response.json();
            var claimData = [];
            var temp = result.resource;
            temp.forEach(function (bank) {
                claimData.push(__WEBPACK_IMPORTED_MODULE_4__models_main_claim_request_model__["a" /* MainClaimRequestModel */].fromJson(bank));
            });
            return claimData;
        });
    };
    ApiManagerProvider.prototype.getApiData = function (endPoint, args) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.http
                .get(_this.getUrl(endPoint, args))
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                //this.claimRequestData = data["resource"];
                resolve(data['resource']);
            });
        });
    };
    ApiManagerProvider.prototype.GetGoogleDistance = function (url) {
        var DistKm;
        // var origin = this.Travel_From_ngModel;
        // var destination;
        // var url = 'http://api.zen.com.my/api/v2/google/distancematrix/json?destinations=place_id:' + this.DestinationPlaceID + '&origins=place_id:' + this.OriginPlaceID + '&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.http.get(url).map(function (res) { return res.json(); }).subscribe(function (data) {
            var temp = data["rows"][0]["elements"][0];
            // console.table(data)
            if (temp["distance"] != null) {
                DistKm = data["rows"][0]["elements"][0]["distance"]["text"];
                // console.log(DistKm)
                DistKm = DistKm.replace(',', '');
                return DistKm;
                // this.Travel_Distance_ngModel = destination = DistKm.substring(0, DistKm.length - 2)
                // this.Travel_Mode_ngModel = this.vehicleCategory;
                // this.travelAmount = destination * this.VehicleRate, -2;
                // this.Travel_Amount_ngModel
            }
            else {
                return DistKm;
            }
            // alert('Please select Valid Origin & Destination Places');
        });
        return DistKm;
    };
    ApiManagerProvider.prototype.SearchLocation = function (key) {
        var val = key.target.value;
        var items;
        val = val.replace(/ /g, '');
        if (!val || !val.trim()) {
            // this.currentItems = [];
            items = [];
            return;
        }
        var url = 'http://api.zen.com.my/api/v2/google/place/autocomplete/json?json?radius=50000&input=' + val + '&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(url).map(function (res) { return res.json(); }).subscribe(function (data) {
            items = data["predictions"];
            return items;
        });
        return items;
    };
    ApiManagerProvider.prototype.isFileImage = function (val) {
        if (val !== null) {
            this.stringToSplit = val;
            this.tempSplit = this.stringToSplit.split(".")[2];
            if (this.tempSplit == "jpeg" || this.tempSplit == "jpg" || this.tempSplit == "png")
                return true;
            else {
                return false;
            }
        }
    };
    // isClaimExpired(formValues: any) {
    //   let myDate = new Date(formValues.travel_date);
    //   let travelMonth:number = myDate.getMonth();
    //   let currentMonth:number = new Date().getMonth();
    //   let travelDate:number = myDate.getDate();
    //  let longBack = (travelMonth + 1) < currentMonth;
    //  let previous = (((travelMonth ) === currentMonth) && travelDate > 7);
    //        if ( longBack || previous)  {
    //     alert('Claim has expired.')
    //     return true;
    //   }
    //   return false;
    // }
    // isClaimExpired(formValues: any) {
    //   let myDate = new Date(formValues.travel_date);
    //   let travelMonth: number = myDate.getMonth();
    //   let currentMonth: number = new Date().getMonth();
    //   let currentDate: number = new Date().getDate();
    //   let longBack = (travelMonth + 1) < currentMonth;
    //   let previous = travelMonth === (currentMonth - 1) && currentDate > 7
    //   let current = (travelMonth === currentMonth);
    //   if (current)
    //     return false;
    //   if (longBack || previous) {
    //     alert('Claim has expired.')
    //     return true;
    //   }
    //   return false;
    // }
    ApiManagerProvider.prototype.isClaimExpired = function (travelDate, isApprover) {
        this.userClaimCutoffDate = parseInt(localStorage.getItem("cs_claim_cutoff_date"));
        this.approverCutoffDate = parseInt(localStorage.getItem("cs_approval_cutoff_date"));
        var claimExpiry;
        if (isApprover) {
            claimExpiry = this.approverCutoffDate;
        }
        else {
            claimExpiry = this.userClaimCutoffDate;
        }
        var myDate = new Date(travelDate);
        var travelMonth = myDate.getMonth();
        var currentMonth = new Date().getMonth();
        var currentDate = new Date().getDate();
        var longBack = (travelMonth + 1) < currentMonth;
        var previous = travelMonth === (currentMonth - 1) && currentDate > claimExpiry;
        var current = (travelMonth === currentMonth);
        if (current)
            return false;
        if (longBack || previous) {
            if (isApprover)
                alert('The date to approve the claim has expired.');
            else
                alert('The date to apply the claim has expired.');
            return true;
        }
        return false;
    };
    ApiManagerProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_5__angular_common__["d" /* DatePipe */]])
    ], ApiManagerProvider);
    return ApiManagerProvider;
}());

//# sourceMappingURL=api-manager.provider.js.map

/***/ }),
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return UserRoleConstants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return StatusConstants; });
/* unused harmony export StageConstants */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ClaimTypeGuidConstants; });
/* unused harmony export ClaimMethodGuidConstants */
/* unused harmony export ClaimMethodNameConstants */
/* unused harmony export ClaimPayTypeGuidConstants */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ProfileLevels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimAmountConstants; });
var UserRoleConstants = {
    DESK_ADMIN: "Desk Admin",
    DIVISION_HEAD: "Division Head",
    FINANCE_ADMIN: "Finance Admin",
    FINANCE_EXECUTIVE: "Finance Executive",
    FINANCE_MANAGER: "Finance Manager",
    GENERAL_MANAGER: "General Manager",
    HR: "H R",
    HOD: "HOD",
    MANAGE_CUSTOMER: "Manage Customer",
    MANAGEMENT: "Management",
    TEAM_LEAD: "Team Lead",
    TEAM_MEMBER: "Team Member"
};
var StatusConstants = {
    APPROVED: "Approved",
    PAID: "Paid",
    REJECTED: "Rejected",
    PENDING: "Pending",
    VALIDATED: "Validated",
    DRAFT: "Draft",
    PENDINGSUPERIOR: "Pending Superior",
    PENDINGFINANCEVALIDATION: "Pending Finance Validation",
    PENDINGPAYMENT: "Pending Payment",
    SUPERIORREJECTED: "Superior Rejected",
    FINANCEREJECTED: "Finance Rejected",
    PAYMENTREJECTED: "Payment Rejected"
};
var StageConstants = {
    SUPERIOR: "Superior",
    FINANCE_EXECUTIVE: "Finance Executive",
    FINANCE_ADMIN: "Finance & Admin"
};
var ClaimTypeGuidConstants = {
    GIFT_CLAIM: '2d8d7c80-c9ae-9736-b256-4d592e7b7887',
    OVERTIME_CLAIM: '37067b3d-1bf4-33a3-2b60-3ca40baf589a',
    MISCELLANIOUS_CLAIM: '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86',
    TRAVEL_CLAIM: '58c59b56-289e-31a2-f708-138e81a9c823',
    PRINT_CLAIM: 'd9567482-033a-6d92-3246-f33043155746',
    ENTERTAINMENT_CLAIM: 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1'
};
var ClaimMethodGuidConstants = {
    TOLL: '03048acb-037a-11e8-a50c-00155de7e742',
    PARKING: '0ebb7e5f-037a-11e8-a50c-00155de7e742',
    ACCOMMODATION: '0ebb7e5f-037a-11e8-a50c-ssh55de7e742',
    MEAL_ALLOWANCE: '0ebb7e5f-ssha-11e8-a50c-ssh55de7e742'
};
var ClaimMethodNameConstants = {
    TOLL: 'Toll',
    PARKING: 'Parking',
    ACCOMMODATION: 'Accommodation',
    MEAL_ALLOWANCE: 'Meal Allowance'
};
var ClaimPayTypeGuidConstants = {
    CASH: 'f74c3366-0437-51ec-91cc-d3fad23b061c',
    TOUCH_GO: 'cda1dcfb-170a-1f93-a6c6-6ba96879452f'
};
var ProfileLevels = {
    ONE: '1',
    TWO: '2',
    THREE: '3',
    ZERO: '0',
    MINUSONE: '-1'
};
var ClaimAmountConstants = {
    MIN_CLAIM_AMOUNT: 0,
    MAX_CLAIM_AMOUNT: 9999
};
//# sourceMappingURL=companySettings.js.map

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfileManagerProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_claim_work_flow_history_model__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_main_claim_request_model__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__models_main_claim_ref_model__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_dashboard_dashboard__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var ProfileManagerProvider = /** @class */ (function () {
    function ProfileManagerProvider(http, api, app) {
        this.http = http;
        this.api = api;
        this.selectedProfile = localStorage.getItem("cs_profile_guid");
        this.isRequester = false;
        this.navCtrl = app.getActiveNav();
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.userGUID = localStorage.getItem('g_USER_GUID');
    }
    ProfileManagerProvider.prototype.UpdateProfileInfo = function (mainClaimReq) {
        var _this = this;
        //debugger;
        this.api.updateClaimRequest(mainClaimReq).subscribe(function () {
            _this.checkCount++;
            //  if(this.checkMultipleLength===1)
            //  {
            if (mainClaimReq.STATUS === 'Rejected')
                alert('Claim has been ' + mainClaimReq.STATUS + '.');
            else
                alert('Claim has been Approved.');
            // alert('Claim has been '+mainClaimReq.STATUS+'.');
            _this.navCtrl.pop();
        });
    };
    ProfileManagerProvider.prototype.UpdateProfileInfoForMultiple = function (mainClaimReq) {
        //debugger;
        this.api.updateClaimRequest(mainClaimReq).subscribe(function () { });
    };
    ProfileManagerProvider.prototype.getMainClaimReqInfo = function (claimRef, level, claimRequestGUID, isRemarksAccepted) {
        var _this = this;
        this.level = level;
        this.claimRequestGUID = claimRequestGUID;
        this.isRemarksAccepted = isRemarksAccepted;
        //this.userGUID = localStorage.getItem('g_USER_GUID');
        this.api.getClaimRequestByClaimReqGUID(this.claimRequestGUID).subscribe(function (data) {
            claimRef.ASSIGNED_TO = _this.previousAssignedTo = data[0].ASSIGNED_TO;
            claimRef.PROFILE_LEVEL = _this.previousLevel = data[0].PROFILE_LEVEL;
            _this.previousStage = data[0].STAGE;
            // data[0].STAGE = this.stage;
            // data[0].ASSIGNED_TO = this.assignedTo;
            // data[0].PROFILE_LEVEL = this.level;
            // if (this.level === '-1')
            //   data[0].STATUS = 'Approved';
            // else if (this.level === '0' || this.isRemarksAccepted === false)
            //   data[0].STATUS = 'Rejected';
            _this.mainClaimReq = data[0];
            //Added by Bijay on 12/10/2018 for audit_trial--------------------------------------------------------------
            if (isRemarksAccepted == true) {
                //Approved
                if (data[0].AUDIT_TRAIL != null && data[0].AUDIT_TRAIL != "") {
                    data[0].AUDIT_TRAIL = data[0].AUDIT_TRAIL + " \n Approved by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                }
                else {
                    data[0].AUDIT_TRAIL = "Approved by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                }
            }
            else {
                //Rejected
                if (data[0].AUDIT_TRAIL != null && data[0].AUDIT_TRAIL != "") {
                    data[0].AUDIT_TRAIL = data[0].AUDIT_TRAIL + " \n Rejected by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                }
                else {
                    data[0].AUDIT_TRAIL = "Rejected by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                }
            }
            //------------------------------------------------------------------------------------------------------------
            _this.SaveWorkFlow(claimRef, data[0].PROFILE_JSON, level);
            //this.processProfileJSON(data[0].PROFILE_JSON)
        });
    };
    ProfileManagerProvider.prototype.GetDirectManagerByManagerGUID = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.api.getApiModel('user_info', 'filter=USER_GUID=' + _this.assignedTo).subscribe(function (res) {
                _this.managerInfo = res["resource"];
                _this.managerInfo.forEach(function (userElm) {
                    _this.stage = userElm.DEPT_GUID;
                    localStorage.setItem('edit_superior', _this.assignedTo);
                    localStorage.setItem('edit_stage', _this.stage);
                    if (_this.isRequester) {
                        _this.proceedNext();
                    }
                });
            });
            resolve(true);
        });
    };
    ProfileManagerProvider.prototype.GetDirectManager = function () {
        var _this = this;
        this.userGUID = localStorage.getItem('g_USER_GUID');
        return new Promise(function (resolve) {
            _this.api.getApiModel('view_manager_details', 'filter=USER_GUID=' + _this.userGUID).subscribe(function (res) {
                _this.managerInfo = res["resource"];
                _this.managerInfo.forEach(function (userElm) {
                    _this.assignedTo = userElm.MANAGER_GUID;
                    _this.stage = userElm.MANAGER_DEPT_GUID;
                    localStorage.setItem('edit_superior', _this.assignedTo);
                    localStorage.setItem('edit_stage', _this.stage);
                    if (_this.isRequester) {
                        _this.proceedNext();
                    }
                });
            });
            resolve(true);
        });
    };
    ProfileManagerProvider.prototype.proceedNext = function () {
        var _this = this;
        this.isRequester = false;
        var month = new Date(this.formValues.travel_date).getMonth() + 1;
        var year = new Date(this.formValues.travel_date).getFullYear();
        this.api.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
            .subscribe(function (claimRefdata) {
            if (claimRefdata["resource"][0] == null) {
                _this.saveClaimRef(month, year);
            }
            else {
                var claimRefGUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                _this.SaveClaim(claimRefGUID);
            }
        });
    };
    ProfileManagerProvider.prototype.SaveWorkFlow = function (claimRef, profile_Json, level) {
        this.api.postData('claim_work_flow_history', claimRef.toJson(true)).subscribe(function (response) {
            //this.api.sendEmail();
        });
        this.processProfileJSON(profile_Json, level);
        this.mainClaimReq.STAGE = this.stage;
        this.mainClaimReq.ASSIGNED_TO = this.assignedTo;
        this.mainClaimReq.PROFILE_LEVEL = this.level;
        this.mainClaimReq.UPDATE_TS = this.api.CreateTimestamp();
        // if (this.level === '-1')
        //   this.mainClaimReq.STATUS = 'Paid';
        if (this.level === '-1') {
            this.mainClaimReq.STATUS = 'Paid';
            this.mainClaimReq.ASSIGNED_TO = this.previousAssignedTo;
            this.mainClaimReq.STAGE = this.previousStage;
        }
        // else  if (this.level === '3')
        //   this.mainClaimReq.STATUS = 'Approved';
        // else if (this.level === '0' || this.isRemarksAccepted === false) {
        //   this.mainClaimReq.STATUS = 'Rejected';
        //   this.mainClaimReq.PROFILE_LEVEL = 0;
        //   this.mainClaimReq.STAGE = null;
        //   this.mainClaimReq.ASSIGNED_TO = null;
        // }
        if (this.level === '3')
            this.mainClaimReq.STATUS = 'Approved';
        if (this.level === '0' || this.isRemarksAccepted === false) {
            this.mainClaimReq.STATUS = 'Rejected';
            this.mainClaimReq.ASSIGNED_TO = this.previousAssignedTo;
            this.mainClaimReq.PREVIOUS_LEVEL = level;
            this.mainClaimReq.PROFILE_LEVEL = 0;
        }
        if (this.checkMultipleLength === 1)
            this.UpdateProfileInfo(this.mainClaimReq);
        else
            this.UpdateProfileInfoForMultiple(this.mainClaimReq);
        //alert('Claim action submitted successfully.')
        // This is for Approval Send email to User and next approver
        // this.api.EmailNextApprover(this.mainClaimReq.CLAIM_REQUEST_GUID, this.mainClaimReq.ASSIGNED_TO, claimRef.STATUS, this.level);
        // if(this.mainClaimReq.STATUS == 'Rejected'){
        //   this.api.EmailNextApprover_New(this.mainClaimReq.CLAIM_REQUEST_GUID);
        // }
        //If approver approve or reject applier will get the mail notification--------------
        //Commented By bijay on 24/09/2018 as per scheduler implemented
        // this.api.EmailNextApprover_New(this.mainClaimReq.CLAIM_REQUEST_GUID, claimRef.REMARKS, this.mainClaimReq.STATUS);
        //If approver reject applier will get the mail notification Added By bijay on 09/10/2018--------------
        if (this.level === '0' || this.isRemarksAccepted === false) {
            var RejectedByStatus = "";
            if (this.level == '2') {
                RejectedByStatus = "[eClaim] Sorry your claim has been rejected by Superior.";
            }
            if (this.level == '3') {
                RejectedByStatus = "[eClaim] Sorry your claim has been rejected by Finance.";
            }
            // if (this.level == '-1') { RejectedByStatus = "[eClaim] Sorry your claim has been rejected by Payment."; }
            if (this.level == '-1') {
                RejectedByStatus = "[eClaim] Sorry your claim payment has been rejected by Finance.";
            }
            this.api.EmailReject(this.mainClaimReq.CLAIM_REQUEST_GUID, claimRef.REMARKS, this.mainClaimReq.STATUS, RejectedByStatus, this.level);
        }
    };
    // SaveWorkFlow(claimRef: ClaimWorkFlowHistoryModel, profile_Json: any, level: any) {
    //   this.api.postData('claim_work_flow_history', claimRef.toJson(true)).subscribe((response) => {
    //     //this.api.sendEmail();
    //   })
    //   this.processProfileJSON(profile_Json, level)
    //   this.mainClaimReq.STAGE = this.stage;
    //   this.mainClaimReq.ASSIGNED_TO = this.assignedTo;
    //   this.mainClaimReq.PROFILE_LEVEL = this.level;
    //   this.mainClaimReq.UPDATE_TS = this.api.CreateTimestamp();
    //   if (this.level === 2)
    //     this.mainClaimReq.STAGE = 'Finance';
    //   if (this.level === '-1') {
    //     this.mainClaimReq.STATUS = 'Paid';
    //     this.mainClaimReq.ASSIGNED_TO = this.previousAssignedTo;
    //     this.mainClaimReq.STAGE = this.previousStage;
    //   }
    //   if (this.level === '3') {
    //     this.mainClaimReq.STATUS = 'Approved';
    //     this.mainClaimReq.STAGE = 'Finance';
    //   }
    //   if (this.level === '0' || this.isRemarksAccepted === false) {
    //     this.mainClaimReq.STATUS = 'Rejected';
    //     this.mainClaimReq.ASSIGNED_TO = this.previousAssignedTo;
    //     //  this.mainClaimReq.STAGE = this.previousStage;
    //     this.mainClaimReq.PROFILE_LEVEL = 0;
    //   }   
    //   if (this.checkMultipleLength === 1)
    //     this.UpdateProfileInfo(this.mainClaimReq);
    //   else
    //     this.UpdateProfileInfoForMultiple(this.mainClaimReq);
    //   //alert('Claim action submitted successfully.')
    //   // This is for Approval Send email to User and next approver
    //   // this.api.EmailNextApprover(this.mainClaimReq.CLAIM_REQUEST_GUID, this.mainClaimReq.ASSIGNED_TO, claimRef.STATUS, this.level);
    //   if(this.mainClaimReq.STATUS == 'Rejected'){
    //     this.api.EmailNextApprover_New(this.mainClaimReq.CLAIM_REQUEST_GUID);
    //   }
    // }
    ProfileManagerProvider.prototype.ProcessProfileMng = function (remarks, approverGUID, level, claimRequestGUID, isRemarksAccepted, checkBoxLength) {
        //debugger
        this.checkMultipleLength = checkBoxLength;
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.userGUID = localStorage.getItem('g_USER_GUID');
        var claimHistoryRef = new __WEBPACK_IMPORTED_MODULE_3__models_claim_work_flow_history_model__["a" /* ClaimWorkFlowHistoryModel */]();
        claimHistoryRef.CLAIM_WFH_GUID = __WEBPACK_IMPORTED_MODULE_6_angular2_uuid__["UUID"].UUID();
        claimHistoryRef.CLAIM_REQUEST_GUID = claimRequestGUID;
        claimHistoryRef.REMARKS = remarks;
        claimHistoryRef.STATUS = isRemarksAccepted ? 'Approved' : 'Rejected';
        claimHistoryRef.USER_GUID = approverGUID;
        claimHistoryRef.CREATION_TS = this.api.CreateTimestamp();
        claimHistoryRef.UPDATE_TS = this.api.CreateTimestamp();
        this.getMainClaimReqInfo(claimHistoryRef, level, claimRequestGUID, isRemarksAccepted);
        // this.readProfile(level, claimRequestGUID, isRemarksAccepted) ;
        // claimHistoryRef.ASSIGNED_TO = this.previousAssignedTo;
        // claimHistoryRef.PROFILE_LEVEL = this.previousLevel;
        // this.api.postData('claim_work_flow_history', claimHistoryRef.toJson(true)).subscribe((response) => {
        //   var postClaimMain = response.json();
        //   this.api.sendEmail();
        //   this.UpdateProfileInfo(this.mainClaimReq);
        //   alert('Claim action submitted successfully.')
        // })
    };
    ProfileManagerProvider.prototype.processProfileJSON = function (stringProfileJSON, level) {
        var profileJSON = JSON.parse(stringProfileJSON);
        this.levels = profileJSON.profile.levels.level;
        var nextLevel;
        this.levels.forEach(function (element) {
            if (element['-id'] == level) {
                var temp = element['conditions']['condition'];
                temp.forEach(function (condElement) {
                    if (condElement['nextlevel']['-final'] === 'true')
                        nextLevel = '-1';
                    else if (condElement['-status'] === 'approved') {
                        nextLevel = condElement['nextlevel']['#text'];
                    }
                    else if (condElement['-status'] === 'rejected') {
                        nextLevel = '0';
                    }
                });
            }
        });
        this.level = nextLevel;
        if (this.level === '-1' || this.level === '0') {
            this.assignedTo = '';
            this.stage = '';
        }
        else {
            this.getInfoLevels(this.levels, this.level);
            // levels.forEach(element => {
            //   if (element['-id'] == this.level) {
            //     this.profileLevel = this.level;
            //     if (element['approver']['-directManager'] === '1') {
            //       this.GetDirectManager();
            //     }
            //     if (element['approver']['-keytype'] === 'userGUID') {
            //       this.assignedTo = element['approver']['#text'];
            //       this.GetDirectManagerByManagerGUID();
            //     }
            //   }
            // });
        }
    };
    ProfileManagerProvider.prototype.getInfoLevels = function (levels, level) {
        var _this = this;
        levels.forEach(function (element) {
            if (element['-id'] == level) {
                _this.profileLevel = level;
                if (element['approver']['-directManager'] === '1') {
                    var temp = _this.GetDirectManager();
                    temp.then();
                }
                if (element['approver']['-keytype'] === 'userGUID') {
                    _this.assignedTo = element['approver']['#text'];
                    var temp = _this.GetDirectManagerByManagerGUID();
                    temp.then();
                }
            }
        });
    };
    //   getInfoLevels(levels: any[], level: any) {
    //     levels.forEach(element => {
    //       if (element['-id'] == level) {
    //         this.profileLevel = level;
    //         if (element['approver']['-directManager'] === '1') {
    //           let temp = this.GetDirectManager(); temp.then();
    //   // else  if (this.level === '3')
    //   //   this.mainClaimReq.STATUS = 'Approved';
    //   // else if (this.level === '0' || this.isRemarksAccepted === false) {
    //   //   this.mainClaimReq.STATUS = 'Rejected';
    //   //   this.mainClaimReq.PROFILE_LEVEL = 0;
    //   //   this.mainClaimReq.STAGE = null;
    //   //   this.mainClaimReq.ASSIGNED_TO = null;
    //   // }
    //   if (this.level === '3')
    //     this.mainClaimReq.STATUS = 'Approved';
    //   if (this.level === '0' || this.isRemarksAccepted === false) {
    //     this.mainClaimReq.STATUS = 'Rejected';
    //     this.mainClaimReq.ASSIGNED_TO = this.previousAssignedTo;
    //     this.mainClaimReq.STAGE = this.previousStage;
    //     this.mainClaimReq.PROFILE_LEVEL = 0;
    //   }
    //   if (this.checkMultipleLength === 1)
    //     this.UpdateProfileInfo(this.mainClaimReq);
    //   else
    //     this.UpdateProfileInfoForMultiple(this.mainClaimReq);
    //   //alert('Claim action submitted successfully.')
    //   // This is for Approval Send email to User and next approver
    //   this.api.EmailNextApprover(this.mainClaimReq.CLAIM_REQUEST_GUID,this.mainClaimReq.ASSIGNED_TO,claimRef.STATUS);
    // }         
    ProfileManagerProvider.prototype.getProfileForUser = function () {
        var _this = this;
        this.api.getClaimRequestByClaimReqGUID('63a9730e-5421-28c1-0c60-e36c1384fac6').subscribe(function (data) {
            var stringProfileJSON = data[0].PROFILE_JSON;
            var profileJSON = JSON.parse(stringProfileJSON);
            var levels = profileJSON.profile.levels.level;
            _this.getInfoLevels(levels, '1');
        });
    };
    ProfileManagerProvider.prototype.SaveClaim = function (claimRefGUID) {
        var _this = this;
        //, amount, isCustomer, value
        var claimReqMainRef = new __WEBPACK_IMPORTED_MODULE_4__models_main_claim_request_model__["a" /* MainClaimRequestModel */]();
        // if (this.claimRequestGUID != undefined)
        //   claimReqMainRef.CLAIM_REQUEST_GUID = this.claimRequestGUID
        // else
        claimReqMainRef.CLAIM_REQUEST_GUID = this.formValues.uuid === undefined ? __WEBPACK_IMPORTED_MODULE_6_angular2_uuid__["UUID"].UUID() : this.formValues.uuid;
        // claimReqMainRef.CLAIM_REQUEST_GUID = UUID.UUID();
        claimReqMainRef.TENANT_GUID = this.TenantGUID;
        claimReqMainRef.CLAIM_REF_GUID = claimRefGUID;
        claimReqMainRef.MILEAGE_GUID = this.formValues.vehicleType;
        claimReqMainRef.ALLOWANCE_GUID = this.formValues.meal_allowance;
        claimReqMainRef.CLAIM_TYPE_GUID = this.formValues.claimTypeGUID;
        claimReqMainRef.TRAVEL_DATE = this.formValues.travel_date;
        claimReqMainRef.START_TS = this.formValues.start_DT;
        claimReqMainRef.END_TS = this.formValues.end_DT;
        claimReqMainRef.MILEAGE_AMOUNT = this.claimAmount;
        claimReqMainRef.CLAIM_AMOUNT = this.claimAmount;
        claimReqMainRef.CREATION_TS = this.api.CreateTimestamp();
        claimReqMainRef.UPDATE_TS = this.api.CreateTimestamp();
        // claimReqMainRef.UPDATE_TS = new Date().toISOString();
        claimReqMainRef.ROUND_TRIP = this.formValues.Roundtrip;
        claimReqMainRef.FROM = this.formValues.origin;
        claimReqMainRef.DESTINATION = this.formValues.destination;
        claimReqMainRef.DISTANCE_KM = this.formValues.distance;
        claimReqMainRef.DESCRIPTION = this.formValues.description;
        claimReqMainRef.ASSIGNED_TO = this.assignedTo;
        claimReqMainRef.PROFILE_LEVEL = parseInt(this.profileLevel);
        claimReqMainRef.PROFILE_JSON = this.profileJSON;
        if (this.profileLevel === 3)
            claimReqMainRef.STATUS = 'Approved';
        else
            claimReqMainRef.STATUS = this.formValues.uuid === undefined ? 'Pending' : 'Draft';
        // claimReqMainRef.STATUS = 'Pending';       
        // claimReqMainRef.STATUS = this.formValues.uuid === undefined ? 'Draft' : 'Pending';
        // if (claimReqMainRef.PROFILE_LEVEL === 1) {
        //   claimReqMainRef.STAGE = 'Superior';
        // }
        // else if (claimReqMainRef.PROFILE_LEVEL === 2 || claimReqMainRef.PROFILE_LEVEL === 3) {
        //   claimReqMainRef.STAGE = 'Finance'
        // }
        claimReqMainRef.STAGE = this.stage;
        claimReqMainRef.ATTACHMENT_ID = this.formValues.attachment_GUID;
        claimReqMainRef.TRAVEL_TYPE = this.formValues.travelType === 'Outstation' ? '1' : '0';
        claimReqMainRef.claim_method_guid = this.formValues.PayType === undefined ? 'f74c3366-0437-51ec-91cc-d3fad23b061c' : this.formValues.PayType;
        claimReqMainRef.from_place_id = this.formValues.from_id;
        claimReqMainRef.to_place_id = this.formValues.to_id;
        //Added by bijay on 11/10/2018
        claimReqMainRef.AUDIT_TRAIL = "Created by " + localStorage.getItem("g_FULLNAME") + " at " + this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
        if (this.isCustomer) {
            claimReqMainRef.CUSTOMER_GUID = this.formValues.soc_no;
            claimReqMainRef.SOC_GUID = null;
        }
        else {
            claimReqMainRef.SOC_GUID = this.formValues.soc_no;
            claimReqMainRef.CUSTOMER_GUID = null;
        }
        this.api.postData('main_claim_request', claimReqMainRef.toJson(true)).subscribe(function (response) {
            var postClaimMain = response.json();
            if (claimReqMainRef.STATUS != 'Draft')
                // this.api.sendEmail(this.formValues.claimTypeGUID, this.formValues.start_DT, this.formValues.end_DT, new Date().toISOString(), this.formValues.travel_date, claimReqMainRef.CLAIM_REQUEST_GUID);        
                //Superior will get mail notification--------------------
                //Commented By bijay on 24/09/2018 as per scheduler implemented
                // this.api.sendEmail_New(this.formValues.claimTypeGUID, this.formValues.start_DT, this.formValues.end_DT, new Date().toISOString(), this.formValues.travel_date, claimReqMainRef.CLAIM_REQUEST_GUID, this.formValues.origin, this.formValues.destination, this.formValues.description, claimReqMainRef.SOC_GUID, claimReqMainRef.CUSTOMER_GUID);
                localStorage.setItem("g_CR_GUID", postClaimMain["resource"][0].CLAIM_REQUEST_GUID);
            // this.ClaimRequestMain = postClaimMain["resource"][0].CLAIM_REQUEST_GUID;
            //this.MainClaimSaved = true;
            if (_this.formValues.uuid === undefined) {
                //this.api.presentToast('Claim has submitted successfully.')
                alert('Claim has submitted successfully.');
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__pages_dashboard_dashboard__["a" /* DashboardPage */]);
            }
            else
                alert('Please click (+) icon to include additional details and submit your claim.');
        });
    };
    ProfileManagerProvider.prototype.saveClaimRef = function (month, year) {
        var _this = this;
        var claimReqRef = new __WEBPACK_IMPORTED_MODULE_5__models_main_claim_ref_model__["a" /* MainClaimReferanceModel */]();
        claimReqRef.CLAIM_REF_GUID = __WEBPACK_IMPORTED_MODULE_6_angular2_uuid__["UUID"].UUID();
        claimReqRef.USER_GUID = this.userGUID;
        claimReqRef.TENANT_GUID = this.TenantGUID;
        claimReqRef.REF_NO = this.userGUID + '/' + month + '/' + year;
        claimReqRef.MONTH = month;
        claimReqRef.YEAR = year;
        claimReqRef.STATUS = 'Pending';
        claimReqRef.CREATION_TS = this.api.CreateTimestamp();
        claimReqRef.UPDATE_TS = this.api.CreateTimestamp();
        this.api.postData('main_claim_ref', claimReqRef.toJson(true)).subscribe(function (response) {
            var postClaimRef = response.json();
            var claimRefGUID = postClaimRef["resource"][0].CLAIM_REF_GUID;
            _this.SaveClaim(claimRefGUID);
        });
    };
    ProfileManagerProvider.prototype.save = function (formValues, amount, isCustomer) {
        this.isRequester = true;
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.formValues = formValues;
        this.claimAmount = amount;
        this.isCustomer = isCustomer;
        this.initiateLevels('1');
        // let month = new Date(formValues.travel_date).getMonth() + 1;
        // let year = new Date(formValues.travel_date).getFullYear();
        // this.api.getClaimRequestByClaimReqGUID('3d1a5bd4-7263-1203-dfd1-efbbf1621372').subscribe(data => {
    };
    ProfileManagerProvider.prototype.initiateLevels = function (levelNo) {
        var _this = this;
        this.api.getApiModel('main_profile', 'filter=MAIN_PROFILE_GUID=' + this.selectedProfile).subscribe(function (res) {
            _this.profileJSON = res["resource"][0].PROFILE_JSON;
            var profileJSON = JSON.parse(_this.profileJSON);
            var levels = profileJSON.profile.levels.level;
            _this.getInfoLevels(levels, levelNo);
        });
    };
    ProfileManagerProvider.prototype.CheckSessionOut = function () {
        if (localStorage.getItem("g_USER_GUID") === null) {
            alert('Your session is timedout. Please login now.');
            this.navCtrl.setRoot('LoginPage');
        }
    };
    ProfileManagerProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_8_ionic_angular__["c" /* App */]])
    ], ProfileManagerProvider);
    return ProfileManagerProvider;
}());

//# sourceMappingURL=profile-manager.provider.js.map

/***/ }),
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Services; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var Services = /** @class */ (function () {
    function Services(http) {
        this.http = http;
    }
    Services.getUrl = function (table, args) {
        if (args != null) {
            return __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '?' + args + '&api_key=' + __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        return __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table + '?api_key=' + __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
    };
    Services.prototype.postUrl = function (table) {
        return __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/' + table;
    };
    Services.prototype.postData = function (endpoint, body) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_0__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.http.post(this.postUrl(endpoint), body, options)
            .map(function (response) {
            return response;
        });
    };
    Services = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], Services);
    return Services;
}());

//# sourceMappingURL=Services.js.map

/***/ }),
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExcelService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_file_saver__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_file_saver__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_xlsx__ = __webpack_require__(288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_xlsx__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var EXCEL_EXTENSION = '.xlsx';
var ExcelService = /** @class */ (function () {
    function ExcelService() {
    }
    ExcelService.prototype.exportAsExcelFile = function (json, excelFileName) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_2_xlsx__["write"](workbook, { bookType: 'xlsx', type: 'array' });
        this.saveAsExcelFile(excelBuffer, excelFileName);
        // this.saveFile(excelBuffer, excelFileName);
    };
    ExcelService.prototype.saveAsExcelFile = function (buffer, fileName) {
        var data = new Blob([buffer], {
            type: EXCEL_TYPE
        });
        __WEBPACK_IMPORTED_MODULE_1_file_saver__["saveAs"](data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);
    };
    ExcelService.prototype.saveFile = function (buffer, fileName) {
        var data = new Blob([buffer], {
        //type: EXCEL_TYPE
        });
        __WEBPACK_IMPORTED_MODULE_1_file_saver__["saveAs"](data, fileName);
    };
    ExcelService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], ExcelService);
    return ExcelService;
}());

//# sourceMappingURL=excel.service.js.map

/***/ }),
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserclaimslistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__travel_claim_view_travel_claim_view_component__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__entertainment_claim_view_entertainment_claim_view__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__overtime_claim_view_overtime_claim_view__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__print_claim_view_print_claim_view__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__gift_claim_view_gift_claim_view__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__miscellaneous_claim_view_miscellaneous_claim_view__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__entertainmentclaim_entertainmentclaim__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__travel_claim_travel_claim_component__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__printclaim_printclaim__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__giftclaim_giftclaim__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__overtimeclaim_overtimeclaim__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__miscellaneous_claim_miscellaneous_claim__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__providers_excel_service__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





















/**
 * Generated class for the UserclaimslistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var UserclaimslistPage = /** @class */ (function () {
    function UserclaimslistPage(excelService, api, alertCtrl, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.prevYear = new Date().getFullYear();
        this.page = 1;
        this.btnSearch = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.ExcelData = [];
        this.ExportExcelClicked = false;
        this.ExcelColumns = [];
        this.checked = [];
        //  this.claimrefguid=navParams.get("claimRefGuid");
        //  this.userguid=navParams.get("userGuid");
        //  this.month=navParams.get("Month");
        //alert(this.userguid);
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(USER_GUID=' + localStorage.getItem("g_USER_GUID") + ')AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_getuserdetails?filter=(USER_GUID=' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log(this.baseResourceUrl);
        // this.onSearchInput();
        this.BindYears();
        this.BindClaimTypes();
        // this.Rejected = navParams.get("Rejected");
        var Rejected_data = navParams.get("Rejected_data");
        if (Rejected_data != undefined) {
            this.Rejected = Rejected_data[0]["Rejected"];
            this.month = Rejected_data[0]["month"];
            this.month = this.month.substring(0, 3);
            // console.log(Rejected_data)    
            // console.log(this.month)
        }
        // this.Pending = navParams.get("PENDINGSUPERIOR");
        var pending_data = navParams.get("Pending_data");
        if (pending_data != undefined) {
            this.Pending = pending_data[0]["PENDINGSUPERIOR"];
            this.month = pending_data[0]["month"];
            this.month = this.month.substring(0, 3);
            // console.log(pending_data)
        }
        // this.Approved = navParams.get("PENDINGFINANCEVALIDATION");
        var Approved_data = navParams.get("Validation_data");
        if (Approved_data != undefined) {
            this.Approved = Approved_data[0]["PENDINGFINANCEVALIDATION"];
            this.month = Approved_data[0]["month"];
            this.month = this.month.substring(0, 3);
            // console.log(Approved_data)
        }
        // this.Validated = navParams.get("PENDINGPAYMENT");
        var Validated_data = navParams.get("Approved_data");
        if (Validated_data != undefined) {
            this.Validated = Validated_data[0]["PENDINGPAYMENT"];
            this.month = Validated_data[0]["month"];
            this.month = this.month.substring(0, 3);
            // console.log(Validated_data)
        }
        // this.Paid = navParams.get("Paid");
        var Paid_data = navParams.get("Paid_data");
        if (Paid_data != undefined) {
            this.Paid = Paid_data[0]["Paid"];
            this.month = Paid_data[0]["month"];
            this.month = this.month.substring(0, 3);
            // console.log(Paid_data)
        }
        this.searchboxValue = this.Rejected || this.Pending || this.Approved || this.Paid || this.Validated;
        if (this.searchboxValue != undefined) {
            this.onSearchInput();
        }
        else {
            this.BindData('All', 'All', 'All');
        }
        this.getuserDetails();
        this.excelService = excelService;
    }
    UserclaimslistPage.prototype.BindData = function (ddlmonth, ddlClaimTypes, ddlStatus) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.userClaimhistorydetails1 = data["resource"];
            var key;
            _this.userClaimhistorydetails1.forEach(function (element) {
                element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                // For Status changing
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                // if (element.STATUS === 'Rejected') {
                // if (element.STATUS === Settings.StatusConstants.REJECTED) {
                //   element.STAGE_GUID = null;
                // }
                // else {
                //   key = element.PROFILE_LEVEL;
                // }
                // switch (key) {
                //   // case 1: element.STAGE_GUID = 'Superior'; break;
                //   case 1: element.STAGE_GUID = Settings.StageConstants.SUPERIOR; break;
                //   // case 2: element.STAGE_GUID = 'Finance Executive'; break;
                //   case 2: element.STAGE_GUID = Settings.StageConstants.FINANCE_EXECUTIVE; break;
                //   case 3:
                //   // case -1: element.STAGE_GUID = 'Finance & Admin'; break;
                //   case -1: element.STAGE_GUID = Settings.StageConstants.FINANCE_ADMIN; break;
                // }
            });
            _this.userClaimhistorydetails = _this.userClaimhistorydetails1;
            if (_this.userClaimhistorydetails.length != 0) {
                if (ddlmonth.toString() !== "All") {
                    _this.userClaimhistorydetails = _this.userClaimhistorydetails.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
                if (ddlStatus.toString() !== "All") {
                    _this.userClaimhistorydetails = _this.userClaimhistorydetails.filter(function (s) { return s.STATUS.toString() === ddlStatus.toString().replace("_", " "); });
                }
                if (ddlClaimTypes.toString() !== "All") {
                    _this.userClaimhistorydetails = _this.userClaimhistorydetails.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === ddlClaimTypes.toString(); });
                }
            }
            // for (var item in data["resource"]) {
            //   this.ExcelData.push({ ClaimType: data["resource"][item]["CLAIMTYPE"], Date: data["resource"][item]["TRAVEL_DATE"], Status: data["resource"][item]["STATUS"], Stage: data["resource"][item]["STAGE"], Amount: data["resource"][item]["CLAIM_AMOUNT"] });
            // }
            _this.btnSearch = true;
        });
    };
    UserclaimslistPage.prototype.onSearchInput = function () {
        // alert('hi')    
        // this.searchboxValue='hi';
        var _this = this;
        // debugger;
        var val = this.searchboxValue;
        // alert(this.searchboxValue)
        if (val && val.trim() != '') {
            // Lakshman June-13,2018
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.userClaimhistorydetails1 = data["resource"];
                //this.userClaimhistorydetails1 = this.userClaimhistorydetails;
                _this.userClaimhistorydetails1.forEach(function (element) {
                    if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                    // switch (element.PROFILE_LEVEL) {
                    //   // case 1: element.STAGE_GUID = 'Superior'; break;
                    //   case 1: element.STAGE_GUID = Settings.StageConstants.SUPERIOR; break;
                    //   // case 2: element.STAGE_GUID = 'Finance Executive'; break;
                    //   case 2: element.STAGE_GUID = Settings.StageConstants.FINANCE_EXECUTIVE; break;
                    //   case 3:
                    //   // case -1: element.STAGE_GUID = 'Finance & Admin'; break;
                    //   case -1: element.STAGE_GUID = Settings.StageConstants.FINANCE_ADMIN; break;
                    //   // case 4: element.STAGE_GUID = 'Finance Manager'; break;
                    //   // case 5: element.STAGE_GUID = 'Finance & Admin'; break;
                    // }
                });
                _this.userClaimhistorydetails = _this.userClaimhistorydetails1.filter(function (item) {
                    var claimtype;
                    var status;
                    var stage;
                    var amount;
                    var date;
                    // console.log(item);
                    if (item.CLAIMTYPE != null) {
                        claimtype = item.CLAIMTYPE.toLowerCase().indexOf(val.toLowerCase());
                    }
                    if (item.TRAVEL_DATE != null) {
                        date = item.TRAVEL_DATE.toString().toLowerCase().indexOf(val.toLowerCase());
                    }
                    if (item.STATUS != null) {
                        status = item.STATUS.toString().toLowerCase().indexOf(val.toLowerCase());
                    }
                    if (item.STAGE != null) {
                        stage = item.STAGE.toString().toLowerCase().indexOf(val.toLowerCase());
                    }
                    if (item.CLAIM_AMOUNT != null) {
                        amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                    }
                    return ((claimtype > -1)
                        || (date > -1)
                        || (status > -1)
                        || (stage > -1)
                        || (amount > -1));
                });
                _this.btnSearch = true;
            });
            // Lakshman June-13,2018
            // this.userClaimhistorydetails = this.userClaimhistorydetails1.filter((item) => {
            //   let claimtype: number;
            //   let status: number;
            //   let stage: number;
            //   let amount: number;
            //   let date: number;
            //   // console.log(item);
            //   if (item.CLAIM_TYPE != null) { claimtype = item.CLAIMTYPE.toLowerCase().indexOf(val.toLowerCase()) }
            //   if (item.TRAVEL_DATE != null) { date = item.TRAVEL_DATE.toString().toLowerCase().indexOf(val.toLowerCase()) }
            //   if (item.STATUS != null) { status = item.STATUS.toString().toLowerCase().indexOf(val.toLowerCase()) }
            //   if (item.STAGE != null) { stage = item.STAGE.toString().toLowerCase().indexOf(val.toLowerCase()) }
            //   if (item.CLAIM_AMOUNT != null) { amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase()) }
            //   return (
            //     (claimtype > -1)
            //     || (date > -1)
            //     || (status > -1)
            //     || (stage > -1)
            //     || (amount > -1)
            //   );
            // })
        }
        else {
            this.userClaimhistorydetails = this.userClaimhistorydetails1;
            this.btnSearch = true;
        }
    };
    UserclaimslistPage.prototype.getuserDetails = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            //alert(JSON.stringify(data));
            _this.userdetails = data["resource"];
            //alert(this.userdetails);
        });
    };
    ;
    UserclaimslistPage.prototype.BindClaimTypes = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTypeList = data["resource"];
        });
    };
    UserclaimslistPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    UserclaimslistPage.prototype.ClaimNavigation = function (designation, claimRequestGUID, level, claimType, navType) {
        this.claimRequestGUID = claimRequestGUID;
        this.level = level;
        this.designation = designation;
        switch (claimType) {
            // case '2d8d7c80-c9ae-9736-b256-4d592e7b7887': if (navType === 1) this.pushPage(GiftClaimViewPage); else this.editPage(GiftclaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].GIFT_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_10__gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_15__giftclaim_giftclaim__["a" /* GiftclaimPage */]);
                break;
            // case '37067b3d-1bf4-33a3-2b60-3ca40baf589a': if (navType === 1) this.pushPage(OvertimeClaimViewPage); else this.editPage(OvertimeclaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].OVERTIME_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_8__overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_16__overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */]);
                break;
            // case '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86': if (navType === 1) this.pushPage(MiscellaneousClaimViewPage); else this.editPage(MiscellaneousClaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].MISCELLANIOUS_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_11__miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_17__miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */]);
                break;
            // case '58c59b56-289e-31a2-f708-138e81a9c823': if (navType === 1) this.pushPage(TravelClaimViewPage); else this.editPage(TravelclaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].TRAVEL_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_6__travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_13__travel_claim_travel_claim_component__["a" /* TravelclaimPage */]);
                break;
            // case 'd9567482-033a-6d92-3246-f33043155746': if (navType === 1) this.pushPage(PrintClaimViewPage); else this.editPage(PrintclaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].PRINT_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_9__print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_14__printclaim_printclaim__["a" /* PrintclaimPage */]);
                break;
            // case 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1': if (navType === 1) this.pushPage(EntertainmentClaimViewPage); else this.editPage(EntertainmentclaimPage); break;
            case __WEBPACK_IMPORTED_MODULE_20__dbSettings_companySettings__["b" /* ClaimTypeGuidConstants */].ENTERTAINMENT_CLAIM:
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_7__entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_12__entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */]);
                break;
        }
    };
    UserclaimslistPage.prototype.pushPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isApprover: false,
            // approverDesignation: this.designation,
            cr_GUID: this.claimRequestGUID,
            level_no: this.level,
            approver_GUID: localStorage.getItem('g_USER_GUID')
        });
    };
    UserclaimslistPage.prototype.editPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    UserclaimslistPage.prototype.DeleteClaimRequest = function (claimReqGuid) {
        var _this = this;
        var alert1 = this.alertCtrl.create({
            title: 'Confirm delete claim',
            message: 'Are you sure you want to delete this claim?',
            buttons: [
                {
                    text: 'No',
                    handler: function () {
                        return;
                    }
                },
                {
                    text: 'Yes',
                    handler: function () {
                        _this.api.deleteApiModel('main_claim_request', claimReqGuid).subscribe(function () {
                            _this.BindData('All', 'All', 'All');
                            alert('Claim has been deleted successfully.');
                        });
                    }
                }
            ]
        });
        alert1.present();
    };
    UserclaimslistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad UserclaimslistPage');
    };
    UserclaimslistPage.prototype.ExportToExcel = function () {
        this.ExportExcelClicked = true;
        this.ExcelColumns = [];
        this.ExcelColumns.push({ Columns: 'Claim Type' });
        this.ExcelColumns.push({ Columns: 'Date' });
        this.ExcelColumns.push({ Columns: 'Status' });
        this.ExcelColumns.push({ Columns: 'Stage' });
        this.ExcelColumns.push({ Columns: 'Amount(' + this.currency + ')' });
    };
    UserclaimslistPage.prototype.CloseExportExcel = function () {
        this.ExportExcelClicked = false;
        this.checked.length = 0;
    };
    UserclaimslistPage.prototype.SelectColumn = function (e, SelectedColumn) {
        if (e.checked == true) {
            this.checked.push(SelectedColumn);
        }
        else {
            var index = this.RemoveCheckedFromArray(SelectedColumn);
            this.checked.splice(index, 1);
        }
    };
    UserclaimslistPage.prototype.RemoveCheckedFromArray = function (checkbox) {
        return this.checked.findIndex(function (category) {
            return category === checkbox;
        });
    };
    UserclaimslistPage.prototype.SubmitExportExcel = function () {
        this.ExcelData = [];
        if (this.checked.length > 0) {
            for (var item in this.userClaimhistorydetails) {
                if (this.checked.length > 0) {
                    var ctr = 0;
                    var jsonStr = '';
                    for (var chkItem in this.checked) {
                        ctr = ctr + 1;
                        switch (this.checked[chkItem]["Columns"]) {
                            case "Claim Type":
                                if (this.checked.length == 1) {
                                    jsonStr += '{"ClaimType":"' + this.userClaimhistorydetails[item]["CLAIMTYPE"] + '"';
                                }
                                else {
                                    jsonStr += '{"ClaimType":"' + this.userClaimhistorydetails[item]["CLAIMTYPE"] + '",';
                                }
                                break;
                            case "Date":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Date":"' + this.userClaimhistorydetails[item]["TRAVEL_DATE"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Date":"' + this.userClaimhistorydetails[item]["TRAVEL_DATE"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Date":"' + this.userClaimhistorydetails[item]["TRAVEL_DATE"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Date":"' + this.userClaimhistorydetails[item]["TRAVEL_DATE"] + '",';
                                    }
                                }
                                break;
                            case "Status":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Status":"' + this.userClaimhistorydetails[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Status":"' + this.userClaimhistorydetails[item]["STATUS"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Status":"' + this.userClaimhistorydetails[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Status":"' + this.userClaimhistorydetails[item]["STATUS"] + '",';
                                    }
                                }
                                break;
                            case "Stage":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Stage":"' + this.userClaimhistorydetails[item]["STAGE"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Stage":"' + this.userClaimhistorydetails[item]["STAGE"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Stage":"' + this.userClaimhistorydetails[item]["STAGE"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Stage":"' + this.userClaimhistorydetails[item]["STAGE"] + '",';
                                    }
                                }
                                break;
                            case "Amount(" + this.currency + ")":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Amount":"' + this.userClaimhistorydetails[item]["CLAIM_AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Amount":"' + this.userClaimhistorydetails[item]["CLAIM_AMOUNT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Amount":"' + this.userClaimhistorydetails[item]["CLAIM_AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Amount":"' + this.userClaimhistorydetails[item]["CLAIM_AMOUNT"] + '",';
                                    }
                                }
                                break;
                        }
                        if (ctr == this.checked.length) {
                            jsonStr += '}';
                        }
                    }
                    this.ExcelData.push(JSON.parse(jsonStr));
                }
            }
            this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
        }
        else {
            alert('Please select one item.');
        }
    };
    UserclaimslistPage.prototype.SearchClaimsData = function (ddlmonth, ddlClaimTypes, ddlStatus, ddlYear) {
        this.btnSearch = false;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(USER_GUID=' + localStorage.getItem("g_USER_GUID") + ')AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.BindData(ddlmonth, ddlClaimTypes, ddlStatus);
    };
    UserclaimslistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-userclaimslist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/userclaimslist/userclaimslist.html"*/'<!--\n  Generated template for the UserclaimslistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ "HISTORY" | translate }}</ion-title>\n\n  </ion-navbar>\n  <!-- [disabled]="! isValid" (click)="SearchClick()" [disabled]="btnSearch"-->\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n      <ion-icon name="download"></ion-icon>\n    </button>\n  </ion-fab>\n\n\n\n  <ion-item class="fuha">\n    <ion-label>{{ "CLAIM_TYPE" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlClaimTypes>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let claimType of claimTypeList" [value]="claimType.CLAIM_TYPE_GUID">{{claimType.NAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_STATUS" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlStatus>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option [value]="Draft">Draft</ion-option>\n      <ion-option [value]="Paid">Paid</ion-option>\n      <ion-option [value]="Pending_Superior">Pending Superior</ion-option>\n      <ion-option [value]="Pending_Finance_Validation">Pending Finance Validation</ion-option>\n      <ion-option [value]="Pending_Payment">Pending Payment</ion-option>\n      <ion-option [value]="Superior_Rejected">Superior Rejected</ion-option>\n      <ion-option [value]="Finance_Rejected">Finance Rejected</ion-option>\n      <ion-option [value]="Payment_Rejected">Payment Rejected</ion-option>\n      <!-- <ion-option [value]="Draft">Draft</ion-option> -->\n    </ion-select>\n  </ion-item>\n\n  <ion-item class="fuha">\n    <ion-label>{{ "CLAIM_MONTH" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlmonth>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option value="Jan">Jan</ion-option>\n      <ion-option value="Feb">Feb</ion-option>\n      <ion-option value="Mar">Mar</ion-option>\n      <ion-option value="Apr">Apr</ion-option>\n      <ion-option value="May">May</ion-option>\n      <ion-option value="Jun">Jun</ion-option>\n      <ion-option value="Jul">Jul</ion-option>\n      <ion-option value="Aug">Aug</ion-option>\n      <ion-option value="Sep">Sep</ion-option>\n      <ion-option value="Oct">Oct</ion-option>\n      <ion-option value="Nov">Nov</ion-option>\n      <ion-option value="Dec">Dec</ion-option>\n    </ion-select>\n  </ion-item>\n\n\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_YEAR" | translate }}</ion-label>\n    <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n      <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlmonth.value,ddlClaimTypes.value,ddlStatus.value,ddlYear.value)">Search</button>\n  </ion-item>\n\n\n\n  <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n\n    <ion-label text-wrap>Department: {{userdetail.DEPARTMENT}}</ion-label>\n  </ion-item>\n\n  <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n    <ion-label text-wrap>Designation: {{userdetail.DESIGNATION}}</ion-label>\n\n  </ion-item>\n  <ion-item *ngFor="let userdetail of userdetails" class="fuha1">\n    <ion-label text-wrap>Name: {{userdetail.FULLNAME}}</ion-label>\n\n  </ion-item>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">No.</th>\n\n          <th class="lgl1"  style="width:120px">Claim Type</th>\n          <th class="lgl1"  style="width:100px">Date</th>\n          <th class="lgl1" style="width:90px">Status</th>\n          <!-- <th class="lgl1" style="width:140px">Stage</th> -->\n          <th class="lgl1" style="width:140px">Remarks</th>\n          <th class="lgl1"  style="width:96px">Amount({{currency }})</th>\n          <th class="lgl1 tblBrRight" style="width:125px">Action</th>\n\n\n        </tr>\n\n        <tr class="col7" *ngFor="let claimhistorydetail of userClaimhistorydetails | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' } ; let i=index">\n          <!-- <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td> -->\n          <td class="lgl1" reshead="No."> {{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Claim Type">{{claimhistorydetail.CLAIMTYPE}}</td>\n          <td class="lgl1 getHeader" reshead="Date">{{claimhistorydetail.TRAVEL_DATE | date: \'dd/MM/yyyy\'}}</td>\n          <td class="lgl1 getHeader" reshead="Status">{{claimhistorydetail.STATUS}}</td>\n          <!-- <td class="lgl1 getHeader" reshead="Stage" text-wrap>{{claimhistorydetail.STAGE}}</td> -->\n          <td class="lgl1 getHeader" reshead="Remarks" *ngIf="claimhistorydetail.PROFILE_LEVEL==0"  text-wrap>{{claimhistorydetail.REMARKS}}</td>\n          <td class="lgl1 getHeader" reshead="Remarks"*ngIf="claimhistorydetail.PROFILE_LEVEL!=0"></td>\n          <td class="lgl1 getHeader" reshead="Amount">{{claimhistorydetail.CLAIM_AMOUNT | number:\'1.2-2\'}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end (click)="ClaimNavigation(claimhistorydetail.STAGE_GUID,claimhistorydetail.CLAIM_REQUEST_GUID, claimhistorydetail.PROFILE_LEVEL, claimhistorydetail.CLAIM_TYPE_GUID,1)">\n              <ion-icon name="md-eye"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="claimhistorydetail.PROFILE_LEVEL!=1 && claimhistorydetail.PROFILE_LEVEL!=0" (click)="ClaimNavigation(claimhistorydetail.STAGE_GUID, claimhistorydetail.CLAIM_REQUEST_GUID, claimhistorydetail.PROFILE_LEVEL, claimhistorydetail.CLAIM_TYPE_GUID,2)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="claimhistorydetail.PROFILE_LEVEL!=1" (click)="DeleteClaimRequest(claimhistorydetail.CLAIM_REQUEST_GUID,claimhistorydetail.CLAIM_TYPE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- Popup for Export to Excel Starts-->\n  <div class="blackcontainer" *ngIf="ExportExcelClicked">\n  </div>\n  <div class="popup4" padding *ngIf="ExportExcelClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "EXPORT_TO_EXCEL" | translate }}</div>\n\n        <button class="btnR" (click)="CloseExportExcel()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <div style="width:100%; display:inline-table !important;">\n        \n          <ion-card>\n            <div>\n              <ion-list>\n                <ion-item *ngFor="let ExcelColumn of ExcelColumns">\n                  <ion-label>{{ExcelColumn.Columns}}</ion-label>\n                  <ion-checkbox color="secondary" checked="false" (ionChange)="SelectColumn($event, ExcelColumn)" item-end></ion-checkbox>\n                </ion-item>\n              </ion-list>\n            </div>\n          </ion-card>\n        </div>\n      </ion-list>\n      <div class="btn">\n        <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SubmitExportExcel()">{{"SUBMIT" | translate}}</button>\n      </div>\n    </ion-card>\n    \n  </div>\n  <!-- Popup for Export to Excel End-->\n\n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/userclaimslist/userclaimslist.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_19__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_19__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_18__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], UserclaimslistPage);
    return UserclaimslistPage;
}());

//# sourceMappingURL=userclaimslist.js.map

/***/ }),
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserMain_Model; });
var UserMain_Model = /** @class */ (function () {
    function UserMain_Model(USER_GUID, TENANT_GUID, STAFF_ID, LOGIN_ID, PASSWORD, EMAIL, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, IS_TENANT_ADMIN) {
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (STAFF_ID === void 0) { STAFF_ID = null; }
        if (LOGIN_ID === void 0) { LOGIN_ID = null; }
        if (PASSWORD === void 0) { PASSWORD = null; }
        if (EMAIL === void 0) { EMAIL = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = 1; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (IS_TENANT_ADMIN === void 0) { IS_TENANT_ADMIN = null; }
        this.USER_GUID = USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.STAFF_ID = STAFF_ID;
        this.LOGIN_ID = LOGIN_ID;
        this.PASSWORD = PASSWORD;
        this.EMAIL = EMAIL;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.IS_TENANT_ADMIN = IS_TENANT_ADMIN;
    }
    UserMain_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserMain_Model(json.USER_GUID, json.TENANT_GUID, json.STAFF_ID, json.LOGIN_ID, json.PASSWORD, json.EMAIL, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.IS_TENANT_ADMIN);
    };
    UserMain_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_GUID: this.USER_GUID,
            TENANT_GUID: this.TENANT_GUID,
            STAFF_ID: this.STAFF_ID,
            LOGIN_ID: this.LOGIN_ID,
            PASSWORD: this.PASSWORD,
            EMAIL: this.EMAIL,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            IS_TENANT_ADMIN: this.IS_TENANT_ADMIN
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserMain_Model;
}());

//# sourceMappingURL=user_main_model.js.map

/***/ }),
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserData; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(100);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var UserData = /** @class */ (function () {
    function UserData(events, storage) {
        this.events = events;
        this.storage = storage;
        this._favorites = [];
        this.HAS_LOGGED_IN = 'hasLoggedIn';
        this.HAS_SEEN_TUTORIAL = 'hasSeenTutorial';
    }
    UserData.prototype.hasFavorite = function (sessionName) {
        return (this._favorites.indexOf(sessionName) > -1);
    };
    ;
    UserData.prototype.addFavorite = function (sessionName) {
        this._favorites.push(sessionName);
    };
    ;
    UserData.prototype.removeFavorite = function (sessionName) {
        var index = this._favorites.indexOf(sessionName);
        if (index > -1) {
            this._favorites.splice(index, 1);
        }
    };
    ;
    UserData.prototype.login = function (username) {
        this.storage.set(this.HAS_LOGGED_IN, true);
        this.setUsername(username);
        this.events.publish('user:login');
    };
    ;
    UserData.prototype.signup = function (username) {
        this.storage.set(this.HAS_LOGGED_IN, true);
        this.setUsername(username);
        this.events.publish('user:signup');
    };
    ;
    UserData.prototype.logout = function () {
        this.storage.remove(this.HAS_LOGGED_IN);
        this.storage.remove('username');
        this.events.publish('user:logout');
    };
    ;
    UserData.prototype.setUsername = function (username) {
        this.storage.set('username', username);
    };
    ;
    UserData.prototype.getUsername = function () {
        return this.storage.get('username').then(function (value) {
            return value;
        });
    };
    ;
    UserData.prototype.hasLoggedIn = function () {
        return this.storage.get(this.HAS_LOGGED_IN).then(function (value) {
            return value === true;
        });
    };
    ;
    UserData.prototype.checkHasSeenTutorial = function () {
        return this.storage.get(this.HAS_SEEN_TUTORIAL).then(function (value) {
            return value;
        });
    };
    ;
    UserData = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Events */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */]])
    ], UserData);
    return UserData;
}());

//# sourceMappingURL=user-data.js.map

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalFunction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var GlobalFunction = /** @class */ (function () {
    function GlobalFunction(alertCtrl) {
        this.alertCtrl = alertCtrl;
    }
    GlobalFunction.prototype.showAlert_New = function (subTitle) {
        var alert = this.alertCtrl.create({
            title: 'e-Claim',
            subTitle: subTitle,
            buttons: ['OK']
        });
        alert.present();
    };
    GlobalFunction.prototype.Random = function () {
        var rand = Math.random().toString(10).substring(2, 8);
        return rand;
    };
    GlobalFunction = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({}),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], GlobalFunction);
    return GlobalFunction;
}());

//# sourceMappingURL=GlobalFunction.js.map

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_usersetup_address_model__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_observable_throw__ = __webpack_require__(613);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_observable_throw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_add_observable_throw__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var UserSetup_Service = /** @class */ (function () {
    function UserSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_info';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl2 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_main';
        this.baseResource_Url2 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl3 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_contact';
        this.baseResource_Url3 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl4 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_company';
        this.baseResource_Url4 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        // baseResourceUrl5: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/tenant_company_site';
        // baseResource_Url5: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_address';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl5 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_qualification';
        this.baseResourceUrl6 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_role';
        this.baseResourceView = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display';
        this.baseResourceView_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceView6 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_certification';
        this.baseResourceView7 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_spouse';
        this.baseResourceView8 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/user_children';
    }
    ;
    UserSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    UserSetup_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    UserSetup_Service.prototype.save_user_info = function (user_info) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl1, user_info.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_main = function (user_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl2, user_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_contact = function (user_contact) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl3, user_contact.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_company = function (user_company) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl4, user_company.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_role = function (user_role) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl6, user_role.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_address = function (user_address) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, user_address.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_qualification = function (user_qualification) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl5, user_qualification.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_certification = function (user_cetrtification) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceView6, user_cetrtification.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_spouse = function (user_spouse) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceView7, user_spouse.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.save_user_children = function (user_children) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceView8, user_children.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    //Edit	
    UserSetup_Service.prototype.update_user_main = function (user_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl2, user_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_info = function (user_info) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl1, user_info.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_contact = function (user_contact) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl3, user_contact.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_company = function (user_company) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl4, user_company.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_address = function (user_address) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, user_address.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_role = function (user_role) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl6, user_role.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.update_user_qualification = function (user_qualification) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl5, user_qualification.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    UserSetup_Service.prototype.get = function (id, params) {
        var _this = this;
        alert('stating of service');
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //let url = this.baseResourceView + "?filter=(USER_GUID=" + id + ')&api_key=' + constants.DREAMFACTORY_API_KEY; 
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + "?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */], { search: params, headers: queryHeaders })
            // .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            console.log(result);
            alert(_this.baseResourceUrl);
            var viewtype = __WEBPACK_IMPORTED_MODULE_3__models_usersetup_address_model__["a" /* UserAddress_Model */].fromJson(result);
            console.log(viewtype);
            alert(JSON.stringify(viewtype));
            alert('end of service');
            return viewtype;
        }).catch(this.handleError);
    };
    ;
    UserSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl2 + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.USER_GUID;
        });
    };
    UserSetup_Service.prototype.remove_multiple = function (id, tablename) {
        // let url_multiple: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/' + tablename;		
        // var queryHeaders = new Headers();
        // queryHeaders.append('Content-Type', 'application/json');
        // //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        // queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
        // return this.httpService.http
        // 	.delete(url_multiple + '/' + id, { headers: queryHeaders })
        // 	.map((response) => {
        // 		var result: any = response.json();
        // 		//return result.USER_GUID;
        // 		return response;
        // 	});
        var url_multiple = this.baseResource_Url + tablename + "?filter=(USER_GUID=" + id + ")AND(ROLE_FLAG=ADDITIONAL)";
        console.log(url_multiple);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    UserSetup_Service.prototype.remove_multiple_records = function (id, tablename) {
        var url_multiple = this.baseResource_Url + tablename + "?filter=(USER_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    UserSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], UserSetup_Service);
    return UserSetup_Service;
}());

//# sourceMappingURL=usersetup_service.js.map

/***/ }),
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantCompanySetup_Model; });
var TenantCompanySetup_Model = /** @class */ (function () {
    function TenantCompanySetup_Model(TENANT_COMPANY_GUID, TENANT_GUID, NAME, REGISTRATION_NO, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (TENANT_COMPANY_GUID === void 0) { TENANT_COMPANY_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (REGISTRATION_NO === void 0) { REGISTRATION_NO = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.TENANT_COMPANY_GUID = TENANT_COMPANY_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.NAME = NAME;
        this.REGISTRATION_NO = REGISTRATION_NO;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    TenantCompanySetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new TenantCompanySetup_Model(json.TENANT_COMPANY_GUID, json.TENANT_GUID, json.NAME, json.REGISTRATION_NO, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    TenantCompanySetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            TENANT_COMPANY_GUID: this.TENANT_COMPANY_GUID,
            TENANT_GUID: this.TENANT_GUID,
            NAME: this.NAME,
            REGISTRATION_NO: this.REGISTRATION_NO,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return TenantCompanySetup_Model;
}());

//# sourceMappingURL=tenantcompanysetup_model.js.map

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantCompanySiteSetup_Model; });
var TenantCompanySiteSetup_Model = /** @class */ (function () {
    function TenantCompanySiteSetup_Model(TENANT_COMPANY_SITE_GUID, TENANT_COMPANY_GUID, SITE_NAME, REGISTRATION_NUM, ADDRESS, ADDRESS2, ADDRESS3, CONTACT_NO, EMAIL, ACTIVATION_FLAG, CONTACT_PERSON, CONTACT_PERSON_CONTACT_NO, CONTACT_PERSON_EMAIL, WEBSITE, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, ISHQ) {
        if (TENANT_COMPANY_SITE_GUID === void 0) { TENANT_COMPANY_SITE_GUID = null; }
        if (TENANT_COMPANY_GUID === void 0) { TENANT_COMPANY_GUID = null; }
        if (SITE_NAME === void 0) { SITE_NAME = null; }
        if (REGISTRATION_NUM === void 0) { REGISTRATION_NUM = null; }
        if (ADDRESS === void 0) { ADDRESS = null; }
        if (ADDRESS2 === void 0) { ADDRESS2 = null; }
        if (ADDRESS3 === void 0) { ADDRESS3 = null; }
        if (CONTACT_NO === void 0) { CONTACT_NO = null; }
        if (EMAIL === void 0) { EMAIL = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CONTACT_PERSON === void 0) { CONTACT_PERSON = null; }
        if (CONTACT_PERSON_CONTACT_NO === void 0) { CONTACT_PERSON_CONTACT_NO = null; }
        if (CONTACT_PERSON_EMAIL === void 0) { CONTACT_PERSON_EMAIL = null; }
        if (WEBSITE === void 0) { WEBSITE = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (ISHQ === void 0) { ISHQ = null; }
        this.TENANT_COMPANY_SITE_GUID = TENANT_COMPANY_SITE_GUID;
        this.TENANT_COMPANY_GUID = TENANT_COMPANY_GUID;
        this.SITE_NAME = SITE_NAME;
        this.REGISTRATION_NUM = REGISTRATION_NUM;
        this.ADDRESS = ADDRESS;
        this.ADDRESS2 = ADDRESS2;
        this.ADDRESS3 = ADDRESS3;
        this.CONTACT_NO = CONTACT_NO;
        this.EMAIL = EMAIL;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CONTACT_PERSON = CONTACT_PERSON;
        this.CONTACT_PERSON_CONTACT_NO = CONTACT_PERSON_CONTACT_NO;
        this.CONTACT_PERSON_EMAIL = CONTACT_PERSON_EMAIL;
        this.WEBSITE = WEBSITE;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.ISHQ = ISHQ;
    }
    TenantCompanySiteSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new TenantCompanySiteSetup_Model(json.TENANT_COMPANY_SITE_GUID, json.TENANT_COMPANY_GUID, json.SITE_NAME, json.REGISTRATION_NUM, json.ADDRESS, json.ADDRESS2, json.ADDRESS3, json.CONTACT_NO, json.EMAIL, json.ACTIVATION_FLAG, json.CONTACT_PERSON, json.CONTACT_PERSON_CONTACT_NO, json.CONTACT_PERSON_EMAIL, json.WEBSITE, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.ISHQ);
    };
    TenantCompanySiteSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            TENANT_COMPANY_SITE_GUID: this.TENANT_COMPANY_SITE_GUID,
            TENANT_COMPANY_GUID: this.TENANT_COMPANY_GUID,
            SITE_NAME: this.SITE_NAME,
            REGISTRATION_NUM: this.REGISTRATION_NUM,
            ADDRESS: this.ADDRESS,
            ADDRESS2: this.ADDRESS2,
            ADDRESS3: this.ADDRESS3,
            CONTACT_NO: this.CONTACT_NO,
            EMAIL: this.EMAIL,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CONTACT_PERSON: this.CONTACT_PERSON,
            CONTACT_PERSON_CONTACT_NO: this.CONTACT_PERSON_CONTACT_NO,
            CONTACT_PERSON_EMAIL: this.CONTACT_PERSON_EMAIL,
            WEBSITE: this.WEBSITE,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            ISHQ: this.ISHQ
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return TenantCompanySiteSetup_Model;
}());

//# sourceMappingURL=tenantcompanysitesetup_model.js.map

/***/ }),
/* 77 */,
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserInfo_Model; });
var UserInfo_Model = /** @class */ (function () {
    function UserInfo_Model(USER_INFO_GUID, USER_GUID, FULLNAME, NICKNAME, SALUTATION, MANAGER_USER_GUID, PERSONAL_ID_TYPE, PERSONAL_ID, DOB, GENDER, JOIN_DATE, MARITAL_STATUS, BRANCH, EMPLOYEE_TYPE, APPROVER1, APPROVER2, EMPLOYEE_STATUS, DEPT_GUID, DESIGNATION_GUID, RESIGNATION_DATE, TENANT_COMPANY_GUID, CONFIRMATION_DATE, TENANT_COMPANY_SITE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, 
    // public POST_CODE: string = null,
    // public COUNTRY_GUID: string = null,
    // public STATE_GUID: string = null,
    EMG_CONTACT_NAME_1, EMG_RELATIONSHIP_1, EMG_CONTACT_NUMBER_1, EMG_CONTACT_NAME_2, EMG_RELATIONSHIP_2, EMG_CONTACT_NUMBER_2, PR_EPF_NUMBER, PR_INCOMETAX_NUMBER, BANK_GUID, PR_ACCOUNT_NUMBER, ATTACHMENT_ID) {
        if (USER_INFO_GUID === void 0) { USER_INFO_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (FULLNAME === void 0) { FULLNAME = null; }
        if (NICKNAME === void 0) { NICKNAME = null; }
        if (SALUTATION === void 0) { SALUTATION = null; }
        if (MANAGER_USER_GUID === void 0) { MANAGER_USER_GUID = null; }
        if (PERSONAL_ID_TYPE === void 0) { PERSONAL_ID_TYPE = null; }
        if (PERSONAL_ID === void 0) { PERSONAL_ID = null; }
        if (DOB === void 0) { DOB = null; }
        if (GENDER === void 0) { GENDER = null; }
        if (JOIN_DATE === void 0) { JOIN_DATE = null; }
        if (MARITAL_STATUS === void 0) { MARITAL_STATUS = null; }
        if (BRANCH === void 0) { BRANCH = null; }
        if (EMPLOYEE_TYPE === void 0) { EMPLOYEE_TYPE = null; }
        if (APPROVER1 === void 0) { APPROVER1 = null; }
        if (APPROVER2 === void 0) { APPROVER2 = null; }
        if (EMPLOYEE_STATUS === void 0) { EMPLOYEE_STATUS = null; }
        if (DEPT_GUID === void 0) { DEPT_GUID = null; }
        if (DESIGNATION_GUID === void 0) { DESIGNATION_GUID = null; }
        if (RESIGNATION_DATE === void 0) { RESIGNATION_DATE = null; }
        if (TENANT_COMPANY_GUID === void 0) { TENANT_COMPANY_GUID = null; }
        if (CONFIRMATION_DATE === void 0) { CONFIRMATION_DATE = null; }
        if (TENANT_COMPANY_SITE_GUID === void 0) { TENANT_COMPANY_SITE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (EMG_CONTACT_NAME_1 === void 0) { EMG_CONTACT_NAME_1 = null; }
        if (EMG_RELATIONSHIP_1 === void 0) { EMG_RELATIONSHIP_1 = null; }
        if (EMG_CONTACT_NUMBER_1 === void 0) { EMG_CONTACT_NUMBER_1 = null; }
        if (EMG_CONTACT_NAME_2 === void 0) { EMG_CONTACT_NAME_2 = null; }
        if (EMG_RELATIONSHIP_2 === void 0) { EMG_RELATIONSHIP_2 = null; }
        if (EMG_CONTACT_NUMBER_2 === void 0) { EMG_CONTACT_NUMBER_2 = null; }
        if (PR_EPF_NUMBER === void 0) { PR_EPF_NUMBER = null; }
        if (PR_INCOMETAX_NUMBER === void 0) { PR_INCOMETAX_NUMBER = null; }
        if (BANK_GUID === void 0) { BANK_GUID = null; }
        if (PR_ACCOUNT_NUMBER === void 0) { PR_ACCOUNT_NUMBER = null; }
        if (ATTACHMENT_ID === void 0) { ATTACHMENT_ID = null; }
        this.USER_INFO_GUID = USER_INFO_GUID;
        this.USER_GUID = USER_GUID;
        this.FULLNAME = FULLNAME;
        this.NICKNAME = NICKNAME;
        this.SALUTATION = SALUTATION;
        this.MANAGER_USER_GUID = MANAGER_USER_GUID;
        this.PERSONAL_ID_TYPE = PERSONAL_ID_TYPE;
        this.PERSONAL_ID = PERSONAL_ID;
        this.DOB = DOB;
        this.GENDER = GENDER;
        this.JOIN_DATE = JOIN_DATE;
        this.MARITAL_STATUS = MARITAL_STATUS;
        this.BRANCH = BRANCH;
        this.EMPLOYEE_TYPE = EMPLOYEE_TYPE;
        this.APPROVER1 = APPROVER1;
        this.APPROVER2 = APPROVER2;
        this.EMPLOYEE_STATUS = EMPLOYEE_STATUS;
        this.DEPT_GUID = DEPT_GUID;
        this.DESIGNATION_GUID = DESIGNATION_GUID;
        this.RESIGNATION_DATE = RESIGNATION_DATE;
        this.TENANT_COMPANY_GUID = TENANT_COMPANY_GUID;
        this.CONFIRMATION_DATE = CONFIRMATION_DATE;
        this.TENANT_COMPANY_SITE_GUID = TENANT_COMPANY_SITE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.EMG_CONTACT_NAME_1 = EMG_CONTACT_NAME_1;
        this.EMG_RELATIONSHIP_1 = EMG_RELATIONSHIP_1;
        this.EMG_CONTACT_NUMBER_1 = EMG_CONTACT_NUMBER_1;
        this.EMG_CONTACT_NAME_2 = EMG_CONTACT_NAME_2;
        this.EMG_RELATIONSHIP_2 = EMG_RELATIONSHIP_2;
        this.EMG_CONTACT_NUMBER_2 = EMG_CONTACT_NUMBER_2;
        this.PR_EPF_NUMBER = PR_EPF_NUMBER;
        this.PR_INCOMETAX_NUMBER = PR_INCOMETAX_NUMBER;
        this.BANK_GUID = BANK_GUID;
        this.PR_ACCOUNT_NUMBER = PR_ACCOUNT_NUMBER;
        this.ATTACHMENT_ID = ATTACHMENT_ID;
    }
    UserInfo_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserInfo_Model(json.USER_INFO_GUID, json.USER_GUID, json.FULLNAME, json.NICKNAME, json.SALUTATION, json.MANAGER_USER_GUID, json.PERSONAL_ID_TYPE, json.PERSONAL_ID, json.DOB, json.GENDER, json.JOIN_DATE, json.MARITAL_STATUS, json.BRANCH, json.EMPLOYEE_TYPE, json.APPROVER1, json.APPROVER2, json.EMPLOYEE_STATUS, json.DEPT_GUID, json.DESIGNATION_GUID, json.RESIGNATION_DATE, json.TENANT_COMPANY_GUID, json.CONFIRMATION_DATE, json.TENANT_COMPANY_SITE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, 
        // json.POST_CODE,
        // json.COUNTRY_GUID,
        // json.STATE_GUID,
        json.EMG_CONTACT_NAME_1, json.EMG_RELATIONSHIP_1, json.EMG_CONTACT_NUMBER_1, json.EMG_CONTACT_NAME_2, json.EMG_RELATIONSHIP_2, json.EMG_CONTACT_NUMBER_2, json.PR_EPF_NUMBER, json.PR_INCOMETAX_NUMBER, json.BANK_GUID, json.PR_ACCOUNT_NUMBER, json.ATTACHMENT_ID);
    };
    UserInfo_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_INFO_GUID: this.USER_INFO_GUID,
            USER_GUID: this.USER_GUID,
            FULLNAME: this.FULLNAME,
            NICKNAME: this.NICKNAME,
            SALUTATION: this.SALUTATION,
            MANAGER_USER_GUID: this.MANAGER_USER_GUID,
            PERSONAL_ID_TYPE: this.PERSONAL_ID_TYPE,
            PERSONAL_ID: this.PERSONAL_ID,
            DOB: this.DOB,
            GENDER: this.GENDER,
            JOIN_DATE: this.JOIN_DATE,
            MARITAL_STATUS: this.MARITAL_STATUS,
            BRANCH: this.BRANCH,
            EMPLOYEE_TYPE: this.EMPLOYEE_TYPE,
            APPROVER1: this.APPROVER1,
            APPROVER2: this.APPROVER2,
            EMPLOYEE_STATUS: this.EMPLOYEE_STATUS,
            DEPT_GUID: this.DEPT_GUID,
            DESIGNATION_GUID: this.DESIGNATION_GUID,
            RESIGNATION_DATE: this.RESIGNATION_DATE,
            TENANT_COMPANY_GUID: this.TENANT_COMPANY_GUID,
            CONFIRMATION_DATE: this.CONFIRMATION_DATE,
            TENANT_COMPANY_SITE_GUID: this.TENANT_COMPANY_SITE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            // POST_CODE: this.POST_CODE,
            // COUNTRY_GUID: this.COUNTRY_GUID,
            // STATE_GUID: this.STATE_GUID,
            EMG_CONTACT_NAME_1: this.EMG_CONTACT_NAME_1,
            EMG_RELATIONSHIP_1: this.EMG_RELATIONSHIP_1,
            EMG_CONTACT_NUMBER_1: this.EMG_CONTACT_NUMBER_1,
            EMG_CONTACT_NAME_2: this.EMG_CONTACT_NAME_2,
            EMG_RELATIONSHIP_2: this.EMG_RELATIONSHIP_2,
            EMG_CONTACT_NUMBER_2: this.EMG_CONTACT_NUMBER_2,
            PR_EPF_NUMBER: this.PR_EPF_NUMBER,
            PR_INCOMETAX_NUMBER: this.PR_INCOMETAX_NUMBER,
            BANK_GUID: this.BANK_GUID,
            PR_ACCOUNT_NUMBER: this.PR_ACCOUNT_NUMBER,
            ATTACHMENT_ID: this.ATTACHMENT_ID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserInfo_Model;
}());

//# sourceMappingURL=usersetup_info_model.js.map

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserAddress_Model; });
var UserAddress_Model = /** @class */ (function () {
    function UserAddress_Model(USER_ADDRESS_GUID, USER_GUID, ADDRESS_TYPE, USER_ADDRESS1, USER_ADDRESS2, USER_ADDRESS3, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, POST_CODE, COUNTRY_GUID, STATE_GUID) {
        if (USER_ADDRESS_GUID === void 0) { USER_ADDRESS_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (ADDRESS_TYPE === void 0) { ADDRESS_TYPE = null; }
        if (USER_ADDRESS1 === void 0) { USER_ADDRESS1 = null; }
        if (USER_ADDRESS2 === void 0) { USER_ADDRESS2 = null; }
        if (USER_ADDRESS3 === void 0) { USER_ADDRESS3 = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (POST_CODE === void 0) { POST_CODE = null; }
        if (COUNTRY_GUID === void 0) { COUNTRY_GUID = null; }
        if (STATE_GUID === void 0) { STATE_GUID = null; }
        this.USER_ADDRESS_GUID = USER_ADDRESS_GUID;
        this.USER_GUID = USER_GUID;
        this.ADDRESS_TYPE = ADDRESS_TYPE;
        this.USER_ADDRESS1 = USER_ADDRESS1;
        this.USER_ADDRESS2 = USER_ADDRESS2;
        this.USER_ADDRESS3 = USER_ADDRESS3;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.POST_CODE = POST_CODE;
        this.COUNTRY_GUID = COUNTRY_GUID;
        this.STATE_GUID = STATE_GUID;
    }
    UserAddress_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserAddress_Model(json.USER_ADDRESS_GUID, json.USER_GUID, json.ADDRESS_TYPE, json.USER_ADDRESS1, json.USER_ADDRESS2, json.USER_ADDRESS3, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.POST_CODE, json.COUNTRY_GUID, json.STATE_GUID);
    };
    UserAddress_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_ADDRESS_GUID: this.USER_ADDRESS_GUID,
            USER_GUID: this.USER_GUID,
            ADDRESS_TYPE: this.ADDRESS_TYPE,
            USER_ADDRESS1: this.USER_ADDRESS1,
            USER_ADDRESS2: this.USER_ADDRESS2,
            USER_ADDRESS3: this.USER_ADDRESS3,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            POST_CODE: this.POST_CODE,
            COUNTRY_GUID: this.COUNTRY_GUID,
            STATE_GUID: this.STATE_GUID,
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserAddress_Model;
}());

//# sourceMappingURL=usersetup_address_model.js.map

/***/ }),
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TravelClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__travel_claim_travel_claim_component__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var TravelClaimViewPage = /** @class */ (function () {
    function TravelClaimViewPage(profileMngProvider, api, api1, http, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tollParkLookupClicked = false;
        this.tollParkAmount = 0;
        this.isRemarksAccepted = false;
        // approverDesignation: any;
        // totalAmount: number = 0;
        this.isActionTaken = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.checkbox_ngModel = false;
        this.isImage = false;
        // imageURL: string;
        // DisplayImage(val: any) {
        //   this.displayImage = true;
        //   this.imageURL = val;
        //   if (val !== null) { 
        //     this.imageURL = this.api.getImageUrl(val); 
        //     this.displayImage = true; 
        //     this.isImage = this.api.isFileImage(val); 
        //   }
        // }
        this.isImageUrl = true;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = this.navParams.get('level_no');
        this.LoadMainClaim();
        // this.approverDesignation = this.navParams.get("approverDesignation");
    }
    TravelClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    TravelClaimViewPage.prototype.updateCheckbox = function () {
        console.log('checkbox:' + this.checkbox_ngModel);
    };
    TravelClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        var claimResult = this.LoadClaimDetails();
        claimResult.then(function (tollorParkAmount) {
            _this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID).subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                _this.claimRequestData.forEach(function (element) {
                    _this.checkbox_ngModel = element.ROUND_TRIP === 1 ? true : false;
                    // element.START_TS = new Date(element.START_TS.replace(/-/g, "/"))
                    _this.travelDate = element.START_TS = new Date(element.START_TS.replace(/-/g, "/"));
                    element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                    element.END_TS = new Date(element.END_TS.replace(/-/g, "/"));
                    if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                    else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                        element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                    if (element.ATTACHMENT_ID !== null) {
                        _this.imageURL = _this.api.getImageUrl(element.ATTACHMENT_ID);
                    }
                    _this.TravelType = element.TRAVEL_TYPE === '0' ? 'Local' : 'Outstation';
                    // this.totalClaimAmount = element.CLAIM_AMOUNT;
                    _this.remarks = element.REMARKS;
                });
                //  this.totalClaimAmount += tollorParkAmount;
            });
        });
    };
    TravelClaimViewPage.prototype.LoadClaimDetails = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.api.getApiModel('view_claim_details', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID).subscribe(function (res) {
                _this.claimDetailsData = res['resource'];
                _this.claimDetailsData.forEach(function (element) {
                    if (element.ATTACHMENT_ID !== null) {
                        element.ATTACHMENT_ID = _this.api.getImageUrl(element.ATTACHMENT_ID);
                    }
                    _this.tollParkAmount += element.AMOUNT;
                });
                resolve(_this.tollParkAmount);
            });
        });
    };
    TravelClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__travel_claim_travel_claim_component__["a" /* TravelclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    TravelClaimViewPage.prototype.CloseTollParkLookup = function () {
        this.tollParkLookupClicked = false;
    };
    TravelClaimViewPage.prototype.TollParkLookup = function () {
        this.tollParkLookupClicked = true;
        this.LoadClaimDetails();
        this.tollParkAmount = 0;
    };
    TravelClaimViewPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    TravelClaimViewPage.prototype.CheckAttachment = function () {
        this.isImageUrl = true;
    };
    TravelClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-travel-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/travel-claim-view/travel-claim-view.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ \'TRAVEL_CLAIM_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n\n        <ion-label><b>Travel Claim View</b> </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} :</ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "START_DATE_LABEL" | translate }} :</ion-label>\n        <ion-label> {{ claim.START_TS | date:\'MMM dd, yyyy HH:mm\' }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "END_DATE_LABEL" | translate }} :</ion-label>\n        <ion-label>{{ claim.END_TS |date:\'MMM dd, yyyy HH:mm\' }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.CUSTOMER_NAME">\n        <ion-label> {{ "CUSTOMER_NAME_LABEL" | translate }} :</ion-label>\n        <ion-label> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "PROJECT_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} :</ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "TRAVEL_TYPE_LABEL" | translate }}: </ion-label>\n        <ion-label>{{ TravelType }}</ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.AUTO_CALCULATE===0">\n        <ion-label> {{ "PAY_BY_LABEL" | translate }}: </ion-label>\n        <ion-label>{{ claim.PAYMENT_TYPE }}</ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "TRAVEL_MODE_LABEL" | translate }}: </ion-label>\n        <ion-label>{{ claim.VEHICLE_NAME }}</ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "ORIGIN_PLACE_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.ORIGIN }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "DESTINATION_PLACE_LABEL" | translate }} ：</ion-label>\n        <ion-label text-wrap> {{ claim.DESTINATION }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "DISTANCE_LABEL" | translate }} ：</ion-label>\n        <ion-label> {{ claim.DISTANCE_KM | number:\'1.2-2\'}} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "MILEAGE_AMOUNT_LABEL" | translate }} ： </ion-label>\n        <ion-label>{{currency}} {{claim.MILEAGE_AMOUNT | number:\'1.2-2\'}}  </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "TOTAL_CLAIM_AMOUNT_LABEL" | translate }} ： </ion-label>\n        <ion-label>{{currency}} {{claim.TOTAL_CLAIM_AMOUNT | number:\'1.2-2\'}}  </ion-label>\n    </ion-item>   \n   \n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} ：</ion-label>\n        <ion-label> {{ claim.STATUS }}</ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "ROUND_TRIP_LABEL" | translate }}  </ion-label>\n        <ion-checkbox [disabled]= true [(ngModel)]="checkbox_ngModel" (ionChange)="updateCheckbox()" ></ion-checkbox>\n    </ion-item>\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1"> \n        <ion-label> {{ "STAGE_LABEL" | translate }} ： </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}: </ion-label>\n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item>\n        <ion-label> {{ "APPROVER_NAME" | translate }}: </ion-label>\n        <ion-label>{{ claim.APPROVER_NAME }}</ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} ： </ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.ATTACHMENT_ID!==null">\n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" >\n            View Receipt\n        </button> -->\n        <a href={{imageURL}} target=\'_blank\'>View Receipt</a>\n\n    </ion-item>\n\n    <div>\n\n        <button ion-button outline item-end icon-left (click)="TollParkLookup()">\n            <ion-icon name="eye"></ion-icon>\n            {{ "CLAIM_DETAILS_BUTTON" | translate }}\n        </button>\n\n    </div>\n    <ion-item *ngIf="isApprover">\n        <ion-label> {{ "REMARKS_LABEL" | translate }} :</ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n\n    </ion-item>\n\n    <div class="btn" *ngIf="isApprover">\n\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')" [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')" [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n    </div>\n\n    <ion-item *ngIf="!isApprover && level===1">\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </ion-item>\n\n\n    <div class="blackcontainer" *ngIf="tollParkLookupClicked"></div>\n    <div class="popup1" padding *ngIf="tollParkLookupClicked">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">Toll, Park and Accommodation Details</div>\n                <button class="btnR" (click)="CloseTollParkLookup()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-card-content>\n                <ion-list>\n\n\n                    <ion-item>\n                        <table class="Tabler" border=\'2\'>\n                            <tr class="linedsg TColor">\n\n\n                                <th class="lgl1">Claim Method</th>\n\n                                <th class="lgl1">Payment Mode</th>\n                                <th class="lgl1">Description</th>\n                                <th class="lgl1">Receipt</th>\n                                <th class="lgl1">Amount({{currency }})</th>\n                            </tr>\n                            <tr class="col7" *ngFor="let item of claimDetailsData; let i=index ">\n\n\n                                <td class="lgl1">{{item.CLAIM_METHOD}}</td>\n\n                                <!-- <td class="lgl1">{{item.AMOUNT | number:\'1.2-2\'}}</td> -->\n                                <td class="lgl1">{{item.PAYMENT_TYPE}}</td>\n                                <td class="lgl1" text-wrap>{{item.DESCRIPTION}}</td>\n                                <td class="lgl1">\n                                    <!-- <button ion-button (click)="DisplayImage(item.ATTACHMENT_ID)" *ngIf="item.ATTACHMENT_ID!==null ">\n                                            Receipt\n                                        </button> -->\n                                    <a href={{item.ATTACHMENT_ID}} target=\'_blank\' *ngIf="item.ATTACHMENT_ID!==null">Receipt</a>\n\n\n                                </td>\n                                <td class="lgl1">{{item.AMOUNT | number:\'1.2-2\'}}</td>\n                            </tr>\n\n                            <tr class="col7">\n\n                                <td class="lgl11" colspan="5"> {{ "TOTAL_AMOUNT_LABEL" | translate }}({{currency }}) : \n                                        {{tollParkAmount | number:\'1.2-2\'}}     </td>\n\n                            </tr>\n                        </table>\n                    </ion-item>\n                </ion-list>\n            </ion-card-content>\n        </ion-card>\n    </div>\n    <div class="blackcontainer" *ngIf="displayImage"></div>\n    <div class="popup1" padding *ngIf="displayImage">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">Receipt</div>\n                <button class="btnR" (click)="CloseDisplayImage()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null && isImage">\n            <a href={{imageURL}} *ngIf="!isImage" target=_ blank>VIEW</a>\n        </ion-card>\n    </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/travel-claim-view/travel-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], TravelClaimViewPage);
    return TravelClaimViewPage;
}());

//# sourceMappingURL=travel-claim-view.component.js.map

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TravelclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_image_upload_model__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__ = __webpack_require__(471);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__providers_conference_data__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import { TravelClaim_Model } from '../../models/travelclaim_model';
//import { TravelClaim_Service } from '../../services/travelclaim_service';












var TravelclaimPage = /** @class */ (function () {
    function TravelclaimPage(numberPipe, conference, profileMng, api, navCtrl, viewCtrl, modalCtrl, navParams, translate, fb, http, actionSheetCtrl, loadingCtrl, toastCtrl) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.conference = conference;
        this.profileMng = profileMng;
        this.api = api;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.modalCtrl = modalCtrl;
        this.navParams = navParams;
        this.translate = translate;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.locationHistory = [];
        this.currency = localStorage.getItem("cs_default_currency");
        this.draftStatus = '';
        this.Roundtrip_ngModel = false;
        this.Start_DT_ngModel = this.api.CreateTimestamp();
        this.End_DT_ngModel = this.api.CreateTimestamp();
        this.Travel_Mode_ngModel = 'car';
        this.isFormSubmitted = false;
        this.tollParkLookupClicked = false;
        //public socGUID : any;
        this.AddTravelClicked = false;
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.AddLookupClicked = false;
        this.AddToLookupClicked = false;
        this.MainClaimSaved = false;
        this.claimFor = 'seg_project';
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.tollParkAmount = 0;
        this.PublicTransValue = false;
        this.chooseFile = false;
        this.ImageUploadValidation = false;
        this.isPublicTransport = false;
        this.isFormEdit = false;
        this.CalculationData = [];
        this.imageURLEdit = null;
        this.imageOptional = false;
        // CloseDisplayImage() {
        //   this.displayImage = false;
        // }
        // imageURL: string;
        // DisplayImage(val: any) {
        //   this.displayImage = true;
        //   this.imageURL = val;
        //   if (val !== null) { 
        //     this.imageURL = this.api.getImageUrl(val); 
        //     this.displayImage = true; 
        //     this.isImage = this.api.isFileImage(val); 
        //   }
        // }
        this.isImage = false;
        this.newImage = true;
        this.countries = [{ id: 'IN', name: 'India' }, { id: 'MY', name: 'Malaysia' }];
        this.country_select = 'Malaysia';
        this.countryRange = 'my';
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        // this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        // this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        var currency = localStorage.getItem("cs_default_currency");
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID');
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        //this.PayType=;
        // if (this.isFormEdit)
        // this.GetDataforEdit();
        if (this.isFormEdit) {
            this.api.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
                _this.MainClaimSaved = true;
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
            this.LoadVehicles();
            this.LoadPayments();
            this.onTravelTypeSelect('Local');
            this.Travel_Type_ngModel = 'Local';
            this.Travel_Mode_ngModel = 'Car';
            this.getCountryList();
        }
        this.Travelform = fb.group({
            avatar1: null,
            avatar: null,
            PayType: '',
            soc_no: '',
            distance: '',
            uuid: '',
            travelType: '',
            //PublicTransValidation: ['', Validators.required],
            travel_date: '',
            destination: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            start_DT: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            end_DT: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            origin: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            vehicleType: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claimTypeGUID: '',
            meal_allowance: '',
            attachment_GUID: '',
            //travel_amount: ['', Validators.required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            from_id: '', to_id: '',
            Roundtrip: ''
        });
    }
    TravelclaimPage.prototype.Roundtrip_Calculation = function () {
        // this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(data => {
        //   this.claimRequestData = data["resource"];
        var _this = this;
        // });
        var url = 'http://api.zen.com.my/api/v2/google/distancematrix/json?destinations=place_id:' + this.OriginPlaceID + '&origins=place_id:' + this.DestinationPlaceID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var destination;
        return new Promise(function (resolve, reject) {
            _this.http.get(url).map(function (res) { return res.json(); }).subscribe(function (data) {
                var temp = data["rows"][0]["elements"][0];
                // console.table(data)
                if (temp["distance"] != null) {
                    var DistKm = data["rows"][0]["elements"][0]["distance"]["text"];
                    // console.log(DistKm)
                    DistKm = DistKm.replace(',', '');
                    _this.Travel_Distance_ngModel = destination = DistKm.substring(0, DistKm.length - 2);
                    _this.Travel_Distance_ngModel = _this.numberPipe.transform(_this.Travel_Distance_ngModel, '1.2-2');
                    // this.Travel_Mode_ngModel = this.vehicleCategory;
                    if (!_this.isPublicTransport)
                        //Added by bijay on 24/09/2018
                        _this.travelAmount = _this.roundNumber(destination * _this.VehicleRate, 2);
                    // this.travelAmountNgmodel = this.numberPipe.transform(this.travelAmount, '1.2-2');
                    _this.travelAmountNgmodel = _this.travelAmount;
                    _this.travelAmount = _this.travelAmount === undefined ? 0 : _this.travelAmount;
                    _this.tollParkAmount = _this.tollParkAmount === undefined ? 0 : _this.tollParkAmount;
                    //Added by bijay on 24/09/2018
                    _this.totalClaimAmount = _this.roundNumber(_this.travelAmount + _this.tollParkAmount, 2);
                    var temp_data = {
                        Return_distance: _this.Travel_Distance_ngModel, Return_travelAmount: _this.travelAmountNgmodel,
                        Return_totalAmount: _this.totalClaimAmount
                    };
                    _this.CalculationData.push(temp_data);
                    resolve(_this.CalculationData);
                    // console.log(this.CalculationData);
                }
            });
        });
    };
    TravelclaimPage.prototype.Roundtrip_Change = function (formValues) {
        var _this = this;
        if (this.Travel_From_ngModel != null && this.Travel_Destination_ngModel != null && this.travelAmountNgmodel != null && this.travelAmountNgmodel != undefined) {
            var str = new String(this.travelAmountNgmodel);
            var str1 = str.indexOf(",");
            if (str1 > 0) {
                this.travelAmountNgmodel = this.travelAmountNgmodel.split(",").join("");
            }
            if (this.Roundtrip_ngModel) {
                this.CalculationData = [];
                var val = this.Roundtrip_Calculation();
                val.then(function (cal_data) {
                    // console.log(cal_data);
                    var return_distance = cal_data[0]["Return_distance"];
                    var return_totalAmount = cal_data[0]["Return_totalAmount"];
                    var return_travelAmount = cal_data[0]["Return_travelAmount"];
                    // console.log(return_distance);
                    // console.log(return_totalAmount);
                    // console.log(return_travelAmount);
                    var distance = new String(formValues.distance);
                    var distance1 = distance.indexOf(",");
                    if (distance1 > 0) {
                        _this.Travel_Distance_ngModel = formValues.distance.split(",").join("");
                    }
                    else {
                        _this.Travel_Distance_ngModel = formValues.distance;
                    }
                    _this.One_Way_Distance = _this.Travel_Distance_ngModel;
                    var re_distance = new String(return_distance);
                    var re_distance1 = re_distance.indexOf(",");
                    if (re_distance1 > 0) {
                        return_distance = return_distance.split(",").join("");
                    }
                    else {
                        return_distance = return_distance;
                    }
                    var Total_Distance = Number(_this.One_Way_Distance) + Number(return_distance);
                    _this.Travel_Distance_ngModel = _this.numberPipe.transform(Total_Distance, '1.2-2');
                    // alert(this.Travel_Distance_ngModel)
                    var two_way_amount = Total_Distance * _this.VehicleRate;
                    _this.travelAmountNgmodel = _this.numberPipe.transform(two_way_amount, '1.2-2');
                    _this.totalClaimAmount = Number(two_way_amount) + _this.tollParkAmount;
                    _this.travelAmount = Number(two_way_amount);
                });
            }
            else {
                if (!this.isFormEdit) {
                    var One_Way_Distance_string = this.numberPipe.transform(this.One_Way_Distance, '1.2-2');
                    this.Travel_Distance_ngModel = One_Way_Distance_string;
                    var one_way_amount = this.One_Way_Distance * this.VehicleRate;
                    this.travelAmountNgmodel = this.numberPipe.transform(one_way_amount, '1.2-2');
                    this.totalClaimAmount = Number(one_way_amount) + this.tollParkAmount;
                    this.travelAmount = Number(one_way_amount);
                }
                else {
                    this.GetDistance();
                }
            }
        }
    };
    TravelclaimPage.prototype.getCurrency = function (amount) {
        amount = amount.split(",").join("");
        amount = Number(amount);
        if (amount > 99999) {
        }
        else {
            this.travelAmountNgmodel = this.numberPipe.transform(amount, '1.2-2');
            this.travelAmount = amount;
            this.totalClaimAmount = amount;
        }
    };
    TravelclaimPage.prototype.ionViewWillEnter = function () {
        //if(!this.isFormEdit)
        this.LoadClaimDetails();
    };
    TravelclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.isFormSubmitted = true;
        //TODO: Take data by Effective Date
        this.api.getApiModel('main_mileage', 'filter=TENANT_GUID=' + this.TenantGUID).subscribe(function (data) {
            _this.vehicles = data["resource"];
            _this.api.getApiModel('view_customer', 'filter=TENANT_GUID=' + _this.TenantGUID).subscribe(function (data) {
                _this.storeCustomers = _this.customers = data["resource"];
                _this.api.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID).subscribe(function (data) {
                    _this.storeProjects = _this.projects = data["resource"];
                    _this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID).subscribe(function (data) {
                        _this.claimRequestData = data["resource"];
                        _this.api.getApiModel('main_payment_type', 'filter=TENANT_GUID=' + _this.TenantGUID).subscribe(function (data) {
                            _this.paymentTypes = data["resource"];
                            // this.imageURLEdit = this.claimRequestData[0].ATTACHMENT_ID;
                            if (_this.claimRequestData[0].ATTACHMENT_ID !== null)
                                _this.imageURLEdit = _this.api.getImageUrl(_this.claimRequestData[0].ATTACHMENT_ID);
                            _this.PublicTransValue = true;
                            _this.travelAmountNgmodel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                            _this.totalClaimAmount = _this.travelAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                            _this.Roundtrip_ngModel = _this.claimRequestData[0].ROUND_TRIP === 1 ? true : false;
                            if (_this.claimRequestData[0].SOC_GUID === null) {
                                _this.claimFor = 'seg_customer';
                                _this.isCustomer = true;
                                if (_this.storeCustomers != undefined)
                                    _this.storeCustomers.forEach(function (element) {
                                        if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                            _this.Customer_Lookup_ngModel = element.NAME;
                                            _this.Customer_GUID = element.CUSTOMER_GUID;
                                        }
                                    });
                            }
                            else {
                                _this.claimFor = 'seg_project';
                                _this.isCustomer = false;
                                if (_this.storeCustomers != undefined)
                                    _this.storeProjects.forEach(function (element) {
                                        if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                            _this.Project_Lookup_ngModel = element.project_name;
                                            _this.Travel_SOC_No_ngModel = element.soc;
                                            _this.Soc_GUID = element.SOC_GUID;
                                        }
                                    });
                            }
                            // this.Start_DT_ngModel = new Date(this.claimRequestData[0].START_TS).toISOString();
                            // this.End_DT_ngModel = new Date(this.claimRequestData[0].END_TS).toISOString();
                            _this.Start_DT_ngModel = __WEBPACK_IMPORTED_MODULE_17_moment___default()(_this.claimRequestData[0].START_TS).format('YYYY-MM-DDTHH:mm');
                            _this.End_DT_ngModel = __WEBPACK_IMPORTED_MODULE_17_moment___default()(_this.claimRequestData[0].END_TS).format('YYYY-MM-DDTHH:mm');
                            // this.Travel_Mode_ngModel = this.claimRequestData[0].MILEAGE_GUID;
                            _this.Travel_From_ngModel = _this.claimRequestData[0].FROM;
                            _this.Travel_Destination_ngModel = _this.claimRequestData[0].DESTINATION;
                            _this.DestinationPlaceID = _this.claimRequestData[0].to_place_id;
                            _this.OriginPlaceID = _this.claimRequestData[0].from_place_id;
                            _this.Travel_Distance_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].DISTANCE_KM, '1.2-2');
                            _this.LoadClaimDetails();
                            _this.Travel_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                            if (_this.claimRequestData[0].STATUS === "Draft") {
                                _this.draftStatus = "Draft";
                            }
                            _this.paymentTypes.forEach(function (element) {
                                if (_this.claimRequestData[0].claim_method_guid === element.PAYMENT_TYPE_GUID) {
                                    _this.PayType = element.PAYMENT_TYPE_GUID;
                                }
                            });
                            _this.vehicles.forEach(function (element) {
                                if (_this.claimRequestData[0].MILEAGE_GUID === '427b1ef9-6474-297c-acac-a430199ab882')
                                    _this.isPublicTransport = true;
                                if (element.MILEAGE_GUID === _this.claimRequestData[0].MILEAGE_GUID) {
                                    {
                                        _this.Travel_Mode_ngModel = element.CATEGORY;
                                        _this.VehicleRate = element.RATE_PER_UNIT;
                                        // this.onVehicleSelect(element)
                                    }
                                }
                            });
                            if (_this.claimRequestData[0].TRAVEL_TYPE === '1') {
                                _this.Travel_Type_ngModel = 'Outstation';
                                _this.isTravelLocal = false;
                            }
                            else {
                                _this.Travel_Type_ngModel = 'Local';
                                _this.isTravelLocal = true;
                            }
                        });
                    });
                });
            });
        });
    };
    TravelclaimPage.prototype.GetSocNo = function (item) {
        this.Travel_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    TravelclaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    TravelclaimPage.prototype.claimForChanged = function () {
        // console.log(this.claimFor)
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    TravelclaimPage.prototype.LoadPayments = function () {
        var _this = this;
        this.api.getApiModel('main_payment_type', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.paymentTypes = data["resource"];
            //  this.PayType = this.paymentTypes.filter(s => s.NAME == localStorage.getItem("cs_default_payment_type"))[0].PAYMENT_TYPE_GUID;
            var paymentType = _this.paymentTypes.filter(function (s) { return s.NAME == localStorage.getItem("cs_default_payment_type"); })[0];
            _this.PayType = paymentType.PAYMENT_TYPE_GUID;
            _this.onPaySelect(paymentType);
        });
    };
    TravelclaimPage.prototype.LoadProjects = function () {
        // this.api.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.api.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    TravelclaimPage.prototype.LoadCustomers = function () {
        // this.api.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.api.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    TravelclaimPage.prototype.LoadVehicles = function () {
        var _this = this;
        this.api.getApiModel('main_mileage', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.vehicles = data["resource"];
            if (!_this.isFormEdit) {
                _this.vehicles.forEach(function (element) {
                    if (element.CATEGORY === 'Car') {
                        _this.onVehicleSelect(element);
                    }
                });
            }
        });
    };
    TravelclaimPage.prototype.LoadClaimDetails = function () {
        var _this = this;
        this.tollParkAmount = 0;
        return new Promise(function (resolve) {
            _this.api.getApiModel('view_claim_details', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID).subscribe(function (res) {
                _this.claimDetailsData = res['resource'];
                _this.claimDetailsData.forEach(function (element) {
                    if (element.ATTACHMENT_ID !== null)
                        element.ATTACHMENT_ID = _this.api.getImageUrl(element.ATTACHMENT_ID);
                    //this.imageURLEdit = this.api.getImageUrl(element.ATTACHMENT_ID);
                    _this.tollParkAmount += _this.roundNumber(element.AMOUNT, 12);
                });
                if (_this.isFormSubmitted) {
                    _this.tollParkAmount = _this.tollParkAmount === undefined ? 0 : _this.tollParkAmount;
                    _this.totalClaimAmount = _this.travelAmount + _this.tollParkAmount;
                    _this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                        .subscribe(function (data) {
                        _this.claimRequestData = data;
                        _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.totalClaimAmount;
                        _this.api.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                        });
                    });
                }
                else
                    _this.totalClaimAmount = 0;
                resolve(_this.tollParkAmount);
            });
        });
    };
    TravelclaimPage.prototype.roundNumber = function (number, decimals) {
        var newnumber = new Number(number + '').toFixed(parseInt(decimals));
        return parseFloat(newnumber);
    };
    TravelclaimPage.prototype.GetDistance = function () {
        var _this = this;
        if (this.tollParkAmount > 0) {
            alert('You have added toll/parking/accommodation details to previous path. Please review the details.');
        }
        var url = 'http://api.zen.com.my/api/v2/google/distancematrix/json?destinations=place_id:' + this.DestinationPlaceID + '&origins=place_id:' + this.OriginPlaceID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var destination;
        this.http.get(url).map(function (res) { return res.json(); }).subscribe(function (data) {
            var temp = data["rows"][0]["elements"][0];
            // console.table(data)
            if (temp["distance"] != null) {
                var DistKm = data["rows"][0]["elements"][0]["distance"]["text"];
                // console.log(DistKm)
                DistKm = DistKm.replace(',', '');
                _this.Travel_Distance_ngModel = destination = DistKm.substring(0, DistKm.length - 2);
                _this.Travel_Distance_ngModel = _this.numberPipe.transform(_this.Travel_Distance_ngModel, '1.2-2');
                // this.Travel_Mode_ngModel = this.vehicleCategory;
                if (!_this.isPublicTransport) {
                    _this.travelAmount = _this.roundNumber(destination * _this.VehicleRate, 2);
                    _this.travelAmountNgmodel = _this.numberPipe.transform(_this.travelAmount, '1.2-2');
                }
                else {
                    _this.getCurrency('0');
                }
                _this.travelAmount = _this.travelAmount === undefined ? 0 : _this.travelAmount;
                _this.tollParkAmount = _this.tollParkAmount === undefined ? 0 : _this.tollParkAmount;
                //Added by bijay on 24/09/2018
                _this.totalClaimAmount = _this.roundNumber(_this.travelAmount + _this.tollParkAmount, 2);
            }
            else
                alert('Please select Valid Origin & Destination Places');
        });
    };
    TravelclaimPage.prototype.CloseTravelClick = function () {
        this.AddToLookupClicked = false;
        this.AddTravelClicked = false;
    };
    TravelclaimPage.prototype.CloseLookupClick = function () {
        if (this.AddLookupClicked == true) {
            this.AddLookupClicked = false;
        }
        if (this.AddToLookupClicked == true) {
            this.AddToLookupClicked = false;
        }
        if (this.Travel_From_ngModel != undefined && this.Travel_Destination_ngModel != undefined) {
            this.GetDistance();
        }
    };
    TravelclaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    TravelclaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    TravelclaimPage.prototype.AddLookupClick = function () {
        var _this = this;
        this.search_inputs = '';
        this.Roundtrip_ngModel = false;
        this.AddLookupClicked = true;
        this.api.getApiModel('view_origin_history', 'filter=USER_GUID=' + localStorage.getItem('g_USER_GUID')).subscribe(function (res) {
            _this.currentItems = _this.locationHistory = res['resource'];
        });
    };
    TravelclaimPage.prototype.getCountryList = function () {
        var _this = this;
        this.api.getApiModel('ref_countries').subscribe(function (res) {
            _this.countries = res.resource;
        });
    };
    TravelclaimPage.prototype.AddToLookupClick = function () {
        var _this = this;
        this.search_inputs = '';
        this.Roundtrip_ngModel = false;
        this.AddToLookupClicked = true;
        this.api.getApiModel('view_destination_history', 'filter=USER_GUID=' + localStorage.getItem('g_USER_GUID')).subscribe(function (res) {
            _this.currentItems = _this.locationHistory = res['resource'];
        });
    };
    TravelclaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
        // this.projects = null;
    };
    TravelclaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
        // this.projects = null;
    };
    TravelclaimPage.prototype.openItem = function (item) {
        if (this.AddToLookupClicked) {
            this.Travel_Destination_ngModel = item.description;
            this.DestinationPlaceID = item.place_id;
        }
        else {
            this.Travel_From_ngModel = item.description;
            this.OriginPlaceID = item.place_id;
        }
        this.CloseLookupClick();
    };
    TravelclaimPage.prototype.onCountrySelect = function (id) {
        this.countryRange = id;
        if (this.search_inputs !== '') {
            this.searchLocation(this.search_inputs);
        }
    };
    TravelclaimPage.prototype.searchLocation = function (val) {
        var _this = this;
        // let val = key.target.value;
        //val = val.replace(/ /g, '');
        if (!val || !val.trim()) {
            this.currentItems = this.locationHistory;
            return;
        }
        else {
            val = val.replace(/ /g, '');
        }
        var url = 'http://api.zen.com.my/api/v2/google/place/autocomplete/json?json?radius=500&components=country:' + this.countryRange + '&input=' + val + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(url).map(function (res) { return res.json(); }).subscribe(function (data) {
            _this.currentItems = data["predictions"];
            console.table(_this.currentItems);
        });
    };
    // Search project start:
    TravelclaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val, soc: val
        });
    };
    TravelclaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    TravelclaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    TravelclaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    TravelclaimPage.prototype.showAddToll = function (claimDetailGuid) {
        this.CloseTollParkLookup();
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__["a" /* AddTollPage */], {
            MainClaim: this.claimRequestGUID,
            ClaimReqDetailGuid: claimDetailGuid,
            ClaimMethod: '03048acb-037a-11e8-a50c-00155de7e742',
            ClaimMethodName: 'Toll'
        });
    };
    TravelclaimPage.prototype.showAddParking = function (claimDetailGuid) {
        this.CloseTollParkLookup();
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__["a" /* AddTollPage */], {
            MainClaim: this.claimRequestGUID,
            ClaimReqDetailGuid: claimDetailGuid,
            ClaimMethod: '0ebb7e5f-037a-11e8-a50c-00155de7e742',
            ClaimMethodName: 'Parking'
        });
    };
    TravelclaimPage.prototype.showAddAccommodation = function (claimDetailGuid) {
        this.CloseTollParkLookup();
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__["a" /* AddTollPage */], {
            MainClaim: this.claimRequestGUID,
            ClaimReqDetailGuid: claimDetailGuid,
            ClaimMethod: '0ebb7e5f-037a-11e8-a50c-ssh55de7e742',
            ClaimMethodName: 'Accommodation'
        });
    };
    TravelclaimPage.prototype.showMealAllowance = function (claimDetailGuid) {
        var _this = this;
        this.CloseTollParkLookup();
        if (claimDetailGuid === null) {
            this.api.getApiModel('claim_request_detail', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(CLAIM_METHOD_GUID=0ebb7e5f-ssha-11e8-a50c-ssh55de7e742)').subscribe(function (data) {
                if (data['resource'].length === 1) {
                    alert('Meal Allowance is already applied.');
                    return;
                }
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__["a" /* AddTollPage */], {
                    MainClaim: _this.claimRequestGUID,
                    ClaimReqDetailGuid: claimDetailGuid,
                    ClaimMethod: '0ebb7e5f-ssha-11e8-a50c-ssh55de7e742',
                    ClaimMethodName: 'Meal Allowance'
                });
            });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__add_toll_add_toll_component__["a" /* AddTollPage */], {
                MainClaim: this.claimRequestGUID,
                ClaimReqDetailGuid: claimDetailGuid,
                ClaimMethod: '0ebb7e5f-ssha-11e8-a50c-ssh55de7e742',
                ClaimMethodName: 'Meal Allowance'
            });
        }
    };
    TravelclaimPage.prototype.onPaySelect = function (payBy) {
        if (payBy.REQUIRE_ATTACHMENT === 0) {
            this.imageOptional = true;
        }
        else
            this.imageOptional = false;
    };
    TravelclaimPage.prototype.onVehicleSelect = function (vehicle) {
        //blm    
        this.Roundtrip_ngModel = false;
        //blm 
        this.VehicleId = vehicle.MILEAGE_GUID;
        this.VehicleRate = vehicle.RATE_PER_UNIT;
        this.vehicleCategory = vehicle.CATEGORY;
        this.PublicTransValue = true;
        if (vehicle.AUTO_CALCULATE === 0) {
            this.isPublicTransport = true;
            //alert(localStorage.getItem("cs_default_payment_type"));
            // this.PayType="Cash"; //localStorage.getItem("cs_default_payment_type");
            if (this.isFormEdit)
                this.PublicTransValue = true;
            //this.travelAmount = undefined;
            else
                this.PublicTransValue = false;
        }
        else
            this.isPublicTransport = false;
        if (this.Travel_From_ngModel != undefined && this.Travel_Destination_ngModel != undefined) {
            this.GetDistance();
        }
    };
    TravelclaimPage.prototype.onAllowanceSelect = function (allowance) {
        this.allowanceGUID = allowance.ALLOWANCE_GUID;
    };
    TravelclaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.Travelform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Travelform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
        //this.disableButton = false;
        this.PublicTransValue = true;
        // this.PublicTransValue = false;
        this.ImageUploadValidation = false;
    };
    TravelclaimPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.Travelform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = true;
        this.saveIm();
    };
    TravelclaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            //this.imageGUID(this.uploadFileName, formvalues)
            // console.table(resJson)
            // let imageResult = this.SaveImageinDB();
            // imageResult.then((objImage: ImageUpload_model) => { 
            _this.ImageUploadValidation = true;
            //  this.imageGUID = objImage.Image_Guid
            _this.imageGUID = _this.uniqueName;
            // , formvalues
            //this.disableButton = true;
            //this.PublicTransValue = false;
            // this.PublicTransValue = true;
            _this.chooseFile = false;
        });
        // setTimeout(() => {
        //   this.loading = false;
        // }, 1000);
    };
    TravelclaimPage.prototype.SaveImageinDB = function () {
        var _this = this;
        var objImage = new __WEBPACK_IMPORTED_MODULE_7__models_image_upload_model__["a" /* ImageUpload_model */]();
        objImage.Image_Guid = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        objImage.IMAGE_URL = this.CloudFilePath + this.uploadFileName;
        objImage.CREATION_TS = new Date().toISOString();
        objImage.Update_Ts = new Date().toISOString();
        return new Promise(function (resolve) {
            _this.api.postData('main_images', objImage.toJson(true)).subscribe(function () {
                // let res = response.json();
                // let imageGUID = res["resource"][0].Image_Guid;
                resolve(objImage.toJson());
            });
        });
    };
    TravelclaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.Travelform.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    TravelclaimPage.prototype.validateDate = function (startDate, endDate) {
        var today = this.api.CreateTimestamp();
        var start = startDate;
        var end = endDate;
        if (start > end || today < start) {
            alert('The Date Range is not valid.');
            return false;
        }
        return true;
    };
    TravelclaimPage.prototype.TollParkLookup = function () {
        this.tollParkLookupClicked = true;
        this.LoadClaimDetails();
        this.tollParkAmount = 0;
    };
    TravelclaimPage.prototype.CloseTollParkLookup = function () {
        this.tollParkLookupClicked = false;
    };
    TravelclaimPage.prototype.onTravelTypeSelect = function (value) {
        if (value === 'Local')
            this.isTravelLocal = true;
        else
            this.isTravelLocal = false;
    };
    // valueChange(value: any) {
    // }
    TravelclaimPage.prototype.valueChange = function (value) {
        //blm
        // if(this.travelAmountNgmodel != null && this.travelAmountNgmodel != undefined){
        // this.trip_amount=this.travelAmountNgmodel;
        // }
        //this.Roundtrip_ngModel=false;
        // if(this.travelAmountNgmodel != null && this.travelAmountNgmodel != undefined){
        // // let  amount= Number(this.travelAmountNgmodel)
        // // this.travelAmountNgmodel =  this.numberPipe.transform(this.travelAmountNgmodel, '1.2-2');
        // // this.travelAmountNgmodel =this.travelAmountNgmodel ;
        // this.totalClaimAmount =  Number(this.travelAmountNgmodel);
        // }
        //blm
    };
    TravelclaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var amount = Number(this.totalClaimAmount);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.travelAmountNgmodel = null;
            this.totalClaimAmount = 0;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.travelAmountNgmodel = this.travelAmountNgmodel;
        }
        formValues.travel_date = formValues.start_DT;
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        if (this.validateDate(this.Start_DT_ngModel, this.End_DT_ngModel)) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(formValues.travel_date, true)) {
                        return;
                    }
                var distCalc = _this.Travel_Distance_ngModel.split(",");
                var optDistance = distCalc.length <= 0 ? _this.Travel_Distance_ngModel : _this.Travel_Distance_ngModel.split(",").join("");
                if (!_this.isFormSubmitted) {
                    _this.isFormSubmitted = true;
                    formValues.uuid = _this.claimRequestGUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
                    // formValues.travel_date = formValues.start_DT
                    formValues.claimTypeGUID = '58c59b56-289e-31a2-f708-138e81a9c823';
                    formValues.meal_allowance = _this.allowanceGUID;
                    formValues.distance = optDistance;
                    formValues.vehicleType = _this.VehicleId;
                    formValues.attachment_GUID = _this.imageGUID;
                    formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                    formValues.PayType = _this.PayType === undefined ? 'f74c3366-0437-51ec-91cc-d3fad23b061c' : _this.PayType;
                    formValues.from_id = _this.OriginPlaceID;
                    formValues.to_id = _this.DestinationPlaceID;
                    formValues.Roundtrip = _this.Roundtrip_ngModel ? 1 : 0;
                    _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
                    _this.MainClaimSaved = true;
                    _this.draftStatus = "Draft";
                }
                else {
                    _this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                        .subscribe(function (data) {
                        _this.claimRequestData = data;
                        // this.claimRequestData["resource"][0].STATUS = 'Pending';
                        _this.claimRequestData["resource"][0].MILEAGE_GUID = _this.VehicleId;
                        _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.start_DT;
                        _this.claimRequestData["resource"][0].START_TS = formValues.start_DT;
                        _this.claimRequestData["resource"][0].END_TS = formValues.end_DT;
                        _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.travelAmount;
                        _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.totalClaimAmount;
                        _this.claimRequestData["resource"][0].ROUND_TRIP = _this.Roundtrip_ngModel ? 1 : 0;
                        _this.claimRequestData["resource"][0].UPDATE_TS = new Date().toISOString();
                        _this.claimRequestData["resource"][0].FROM = formValues.origin;
                        _this.claimRequestData["resource"][0].DESTINATION = formValues.destination;
                        _this.claimRequestData["resource"][0].DISTANCE_KM = optDistance;
                        _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                        _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                        _this.claimRequestData["resource"][0].TRAVEL_TYPE = formValues.travelType === 'Outstation' ? '1' : '0';
                        _this.claimRequestData["resource"][0].claim_method_guid = _this.PayType === undefined ? 'f74c3366-0437-51ec-91cc-d3fad23b061c' : _this.PayType;
                        if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                            _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                            _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                            _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                            if (_this.rejectedLevel === 3)
                                _this.claimRequestData["resource"][0].STATUS = 'Approved';
                            else
                                _this.claimRequestData["resource"][0].STATUS = 'Pending';
                        }
                        else {
                            _this.claimRequestData["resource"][0].STATUS = 'Pending';
                        }
                        if (_this.isCustomer) {
                            _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                            _this.claimRequestData["resource"][0].SOC_GUID = null;
                        }
                        else {
                            _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                            _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                        }
                        //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                        if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                            _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                        }
                        else {
                            _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                        }
                        //-------------------------------------------------------------------
                        var month = new Date(formValues.travel_date).getMonth() + 1;
                        var year = new Date(formValues.travel_date).getFullYear();
                        _this.api.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                            .subscribe(function (claimRefdata) {
                            _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                            _this.api.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                                alert('Claim details updated successfully.');
                                _this.conference.pushTravelClaim();
                            });
                        });
                        // this.api.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(() => {
                        //   // if (isClaim && modelJSON.STATUS != 'Draft')
                        //   // if (this.claimRequestData["resource"][0].STATUS != 'Draft') {
                        //   // Send Email------------------------------------------------
                        //   // this.api.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, formValues.start_DT, formValues.end_DT, moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.start_DT, this.claimRequestGUID);
                        //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                        //   // this.api.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, formValues.start_DT, formValues.end_DT, moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.start_DT, this.claimRequestGUID, formValues.origin, formValues.destination, formValues.description, this.Soc_GUID, this.Customer_GUID);
                        //   // ----------------------------------------------------------
                        //   //}
                        //   alert('Claim details updated successfully.');
                        //   // this.navCtrl.push(UserclaimslistPage);
                        //   this.conference.pushTravelClaim();
                        // })
                    });
                    // this.profileMng.save(formValues, this.travelAmount, this.isCustomer)
                    // this.MainClaimSaved = true;
                }
            });
        }
    };
    TravelclaimPage.prototype.EditDetail = function (claimDetailId, claimMethodGuid) {
        if (this.claimRequestGUID === null)
            this.claimRequestGUID = localStorage.getItem("g_CR_GUID");
        if (claimMethodGuid === '03048acb-037a-11e8-a50c-00155de7e742') {
            this.showAddToll(claimDetailId);
        }
        else if (claimMethodGuid === '0ebb7e5f-037a-11e8-a50c-00155de7e742') {
            this.showAddParking(claimDetailId);
        }
        else if (claimMethodGuid === '0ebb7e5f-ssha-11e8-a50c-ssh55de7e742') {
            this.showMealAllowance(claimDetailId);
        }
        else if (claimMethodGuid === '0ebb7e5f-037a-11e8-a50c-ssh55de7e742') {
            this.showAddAccommodation(claimDetailId);
        }
    };
    TravelclaimPage.prototype.selfRoot = function () {
        this.conference.pushTravelClaim();
    };
    TravelclaimPage.prototype.DeleteDetail = function (claimDetailId) {
        var _this = this;
        this.api.deleteApiModel('claim_request_detail', claimDetailId).subscribe(function () {
            _this.tollParkAmount = 0;
            _this.LoadClaimDetails();
            alert('Claim detail has been deleted successfully.');
        });
    };
    TravelclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-travelclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/travel-claim/travel-claim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ \'TRAVEL_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-segment color="primary500" [(ngModel)]="claimFor">\n    <ion-segment-button value="seg_project" (click)="claimForChanged()">\n      {{"PROJECT_TITLE" | translate }}\n    </ion-segment-button>\n    <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n      {{"CUSTOMER_TITLE" | translate }}\n    </ion-segment-button>\n\n  </ion-segment>\n\n  <div [ngSwitch]="claimFor">\n    <div *ngSwitchDefault ngSelected="selected">\n\n      <ion-item text-wrap>\n        <ion-label floating color="primary500"> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea [ngModelOptions]="{standalone: true}" (click)="CustomerLookup()" [(ngModel)]="Customer_Lookup_ngModel"\n          type="text" [disabled]="true"></ion-textarea>\n      </ion-item>\n    </div>\n    <div *ngSwitchCase="\'seg_project\'">\n\n      <ion-item text-wrap style="width:80%;display: inline-block;">\n        <ion-label floating color="primary500"> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea (click)="ProjectLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel"\n          type="text" [disabled]="true"></ion-textarea>\n      </ion-item>\n      <ion-item style="width: 19%;display: inline-block;">\n        <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n        <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="Travel_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n          type="text" disabled="true"></ion-input>\n      </ion-item>\n    </div>\n  </div>\n\n  <form [formGroup]="Travelform">\n\n    <!-- minuteValues="0,5,10,15,20,25,30,35,40,45,50,55" -->\n    <ion-item class="fuha">\n      <ion-label floating color="primary500"> <span style="color:red">*</span>Departure</ion-label>\n      <ion-datetime formControlName="start_DT" [(ngModel)]="Start_DT_ngModel" displayFormat="DD/MM/YYYY HH:mm"></ion-datetime>\n    </ion-item>\n\n    <!-- minuteValues="0,5,10,15,20,25,30,35,40,45,50,55" -->\n    <ion-item class="fuha">\n      <ion-label floating color="primary500"> <span style="color:red">*</span>Arrival</ion-label>\n      <ion-datetime displayFormat="DD/MM/YYYY HH:mm" formControlName="end_DT" [(ngModel)]="End_DT_ngModel"></ion-datetime>\n    </ion-item>\n\n\n    <ion-item class="fuha">\n      <ion-label floating color="primary500"> <span style="color:red">*</span>{{ "TRAVEL_TYPE_LABEL" | translate }}</ion-label>\n      <ion-select [(ngModel)]="Travel_Type_ngModel" formControlName="travelType">\n\n        <ion-option (ionSelect)="onTravelTypeSelect(\'Local\')" selected>Local</ion-option>\n        <ion-option (ionSelect)="onTravelTypeSelect(\'Outstation\')">Outstation</ion-option>\n      </ion-select>\n      <!-- (ionSelect)="onTravelTypeSelect(\'Local\')" -->\n    </ion-item>\n\n\n\n    <ion-item class="fuha">\n\n      <ion-label floating color="primary500"> <span style="color:red">*</span> {{ "TRAVEL_MODE_LABEL" | translate }}</ion-label>\n      <ion-select [(ngModel)]="Travel_Mode_ngModel" formControlName="vehicleType">\n        <!-- <ion-option value="0" (ionSelect)="onVehicleSelect(\'Select Vehicle\')">Select Vehicle</ion-option> -->\n        <ion-option *ngFor="let vehicle of vehicles" (ionSelect)="onVehicleSelect(vehicle)" [value]="vehicle.CATEGORY">{{vehicle.CATEGORY}}</ion-option>\n      </ion-select>\n    </ion-item>\n\n\n    <ion-item *ngIf="isPublicTransport">\n      <ion-label fixed>{{ \'PAY_BY_LABEL\' | translate }}</ion-label>\n      <ion-select [(ngModel)]="PayType" formControlName="PayType">\n        <ion-option *ngFor="let item of paymentTypes" (ionSelect)="onPaySelect(item)" value={{item.PAYMENT_TYPE_GUID}}>{{\n          item.NAME}}</ion-option>\n      </ion-select>\n    </ion-item>\n\n\n\n    <ion-item text-wrap>\n      <ion-label floating color="primary500"> <span style="color:red">*</span> {{ "ORIGIN_PLACE_LABEL" | translate }}\n      </ion-label>\n      <ion-textarea [disabled]="true" (click)="AddLookupClick()" [(ngModel)]="Travel_From_ngModel" type="text"\n        formControlName="origin"></ion-textarea>\n\n    </ion-item>\n\n    <ion-item text-wrap>\n      <ion-label floating color="primary500"> <span style="color:red">*</span> {{ "DESTINATION_PLACE_LABEL" | translate\n        }} </ion-label>\n      <ion-textarea [disabled]="true" (click)="AddToLookupClick()" [(ngModel)]="Travel_Destination_ngModel" type="text"\n        formControlName="destination"></ion-textarea>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="primary500">{{ "ROUND_TRIP_LABEL" | translate }}</ion-label>\n      <ion-checkbox [(ngModel)]="Roundtrip_ngModel" formControlName="Roundtrip" (ionChange)="Roundtrip_Change(Travelform.value)"></ion-checkbox>\n    </ion-item>\n    <ion-label style="margin-left: 16px;" color="primary500" text-wrap stacked>\n      {{ "ROUND_TRIP_NOTE" | translate }}</ion-label>\n    <ion-item class="fuha">\n      <ion-label floating> {{ "DISTANCE_LABEL" | translate }} </ion-label>\n      <ion-input [disabled]="true" [(ngModel)]="Travel_Distance_ngModel" formControlName="distance"></ion-input>\n    </ion-item>\n\n\n    <ion-item class="fuha">\n      <ion-label floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ currency }}</ion-label>\n      <ion-input (change)=\'getCurrency($event.target.value)\' [disabled]="!isPublicTransport" [(ngModel)]="travelAmountNgmodel"\n        type="text" formControlName="claim_amount" (ionChange)="valueChange()"></ion-input>\n    </ion-item>\n    <!-- <ion-item *ngIf="!Travelform.controls.claim_amount.valid  && (Travelform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n  </ion-item> -->\n\n    <ion-item>\n      <ion-label floating color="primary500"> <span style="color:red">*</span> {{ "DESCRIPTION_LABEL" | translate }}\n      </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="Travel_Description_ngModel"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="primary500" stacked> {{ "TOTAL_CLAIM_AMOUNT_LABEL" | translate }} {{ "TOTAL_CLAIM_AMOUNT_NOTE"\n        | translate }}</ion-label>\n      <ion-label color="primary500">{{currency}} {{totalClaimAmount | number:\'1.2-2\'}} </ion-label>\n      <!-- <ion-label style="margin-left: 16px;" color="primary">{{draftStatus}}</ion-label> -->\n    </ion-item>\n\n    <ion-label style="margin-left: 16px;" color="primary">{{draftStatus}}</ion-label>\n\n    <!-- <ion-item *ngIf="isPublicTransport">\n              <input type="file" id="avatar" (change)="onFileChange($event)" #fileInput>\n              <button ion-button type="primary"  (click)="saveIm()" [disabled]="!ImageUploadValidation">upload image</button>\n            </ion-item> -->\n\n    <ion-item *ngIf="isPublicTransport">\n      <ion-label class="text">Attachment: </ion-label>\n      <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n      <!-- <button ion-button type="primary" (click)="saveIm()" [disabled]="!chooseFile">Upload image</button> -->\n      <!-- <button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file</button> -->\n      <!-- <button ion-button type="primary"  (click)="saveIm()" [disabled]= "!chooseFile">upload image</button>    -->\n      <!-- <ion-button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file> </ion-button> -->\n    </ion-item>\n\n    <ion-item *ngIf="imageURLEdit!==null">\n      <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(imageURLEdit)" *ngIf="imageURLEdit!==null">\n        View Receipt\n      </button> -->\n      <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a>\n    </ion-item>\n\n\n    <div *ngIf="isImage">\n      <img src="{{ProfileImage}}" style="width: 20%">\n    </div>\n\n    <!-- <ion-item *ngIf="isPublicTransport">\n      <button ion-button type="primary" (click)="saveIm()" [disabled]="!chooseFile">Upload image</button>\n    </ion-item> -->\n\n    <div class="btn" *ngIf="!isFormSubmitted">\n      <!-- <button ion-button color="primary" (click)=\'submitAction(Travelform.value)\' [disabled]="!Travelform.valid">{{ "NEXT_BUTTON" | translate }}</button> -->\n\n      <button *ngIf="!imageOptional" ion-button color="primary" (click)=\'submitAction(Travelform.value)\' [disabled]="(Travelform.valid && !PublicTransValue) || !Travelform.valid">{{\n        "NEXT_BUTTON" | translate }}</button>\n      <button *ngIf="imageOptional" ion-button color="primary" (click)=\'submitAction(Travelform.value)\' [disabled]="!Travelform.valid">{{\n        "NEXT_BUTTON" | translate }}</button>\n    </div>\n    <div class="btn" *ngIf="isFormSubmitted">\n      <button ion-button outline item-end icon-left (click)="TollParkLookup()">\n        <ion-icon name="eye"></ion-icon>\n        {{ "CLAIM_DETAILS_BUTTON" | translate }}\n      </button>\n      <button *ngIf="imageOptional" ion-button color="primary" (click)=\'submitAction(Travelform.value)\' [disabled]="!Travelform.valid">{{\n        "SUBMIT_BUTTON" | translate }}</button>\n      <button *ngIf="!imageOptional" ion-button color="primary" (click)=\'submitAction(Travelform.value)\' [disabled]="!Travelform.valid">{{\n        "SUBMIT_BUTTON" | translate }}</button>\n    </div>\n    <!-- <div *ngIf="!Travelform.controls.claim_amount.valid  && (Travelform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">claim amount should be RM {{min_claim_amount}} - {{max_claim_amount}} </p>\n  </div> -->\n\n  </form>\n\n  <div class="blackcontainer" *ngIf="AddLookupClicked || AddToLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="AddLookupClicked || AddToLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Search Location</div>\n        <button class="btnR" (click)="CloseLookupClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-item>\n        <ion-select class="searwid" [(ngModel)]="country_select" placeholder="Select Country">\n          <ion-option *ngFor=\'let country of countries\' (ionSelect)="onCountrySelect(country.code)">{{country.name}}</ion-option>\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-searchbar class="searwid" [(ngModel)]="search_inputs" (ionInput)="searchLocation($event.target.value)"\n          placeholder=\'Search Location\'></ion-searchbar>\n      </ion-item>\n      <span *ngFor="let item of currentItems">\n        <ion-chip (click)="openItem(item)">{{item.description.substring(0,35)}}{{ item.description.length > 35 ? "...":\n          "" }}</ion-chip>\n      </span>\n      <!--\n      <ion-list>\n        <ion-item-sliding *ngFor="let item of currentItems">\n          <button ion-item (click)="openItem(item)">\n            <ion-label> {{item.description}}</ion-label>\n          </button>\n        </ion-item-sliding>\n      </ion-list>\n      -->\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-searchbar [(ngModel)]="Travel_ProjectName_ngModel" (ionInput)="searchProject($event)" placeholder=\'{{ "PROJECT_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of projects">\n            <button ion-item (click)="GetSocNo(item)">\n              <ion-label text-wrap>{{item.project_name}} [{{item.soc}}]\n              </ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_Customer_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n              <ion-label text-wrap>{{item.NAME}}</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n  <div class="blackcontainer" *ngIf="tollParkLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="tollParkLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Toll, Parking and Accommodation Details</div>\n        <button class="btnR" (click)="CloseTollParkLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <ion-item>\n          <table class="Tabler" border=\'2\'>\n            <tr class="linedsg TColor">\n\n              <th class="lgl1">Claim Method</th>\n\n              <th class="lgl1">Payment Mode</th>\n              <th class="lgl1">Description</th>\n              <th class="lgl1">Receipt</th>\n              <th class="lgl1">Amount({{currency }})</th>\n              <th class="lgl1">Action</th>\n            </tr>\n\n            <tr class="col7" *ngFor="let item of claimDetailsData; let i=index ">\n              <!-- <td class="lgl1">{{i+1}}</td> -->\n\n              <td class="lgl1">{{item.CLAIM_METHOD}}</td>\n\n              <!-- <td class="lgl1">{{item.AMOUNT | number:\'1.2-2\'}}</td> -->\n              <!-- <td class="lgl1">{{item.AMOUNT | currency:\'MYR\':\'symbol-narrow\':\'1.2-2\'}}</td> -->\n\n\n\n              <td class="lgl1">{{item.PAYMENT_TYPE}}</td>\n              <td class="lgl1" text-wrap>{{item.DESCRIPTION}}</td>\n              <td class="lgl1">\n                <!-- <button ion-button (click)="DisplayImage(item.ATTACHMENT_ID)" *ngIf="item.ATTACHMENT_ID!==null">\n                  Receipt\n                </button> -->\n                <a href={{item.ATTACHMENT_ID}} target=\'_blank\' *ngIf="item.ATTACHMENT_ID!=null">Receipt</a>\n                <!-- <a href={{imageURLEdit}} target=\'_blank\' *ngIf="item.ATTACHMENT_ID!=null">Receipt</a> -->\n              </td>\n              <!-- <td class="lgl1">{{item.AMOUNT | number:\'1.2-2\'}}</td> -->\n              <td class="lgl1">{{currency}} {{item.AMOUNT | number:\'1.2-2\'}}</td>\n              <td class="lgl1 fColor">\n                <button ion-button item-end (click)="EditDetail(item.CLAIM_REQUEST_DETAIL_GUID,item.CLAIM_METHOD_GUID)">\n                  <ion-icon name="md-create"></ion-icon>\n                </button>\n                <button ion-button item-end (click)="DeleteDetail(item.CLAIM_REQUEST_DETAIL_GUID)">\n                  <ion-icon name="md-close"></ion-icon>\n                </button>\n              </td>\n            </tr>\n            <tr class="col7">\n\n              <td class="lgl11" colspan="6"> {{ "TOTAL_AMOUNT_LABEL" | translate }} :{{currency}} {{tollParkAmount |\n                number:\'1.2-2\'}} </td>\n\n            </tr>\n          </table>\n\n        </ion-item>\n\n      </ion-list>\n    </ion-card>\n  </div>\n  <div class="blackcontainer" *ngIf="displayImage">\n  </div>\n  <div class="popup1" padding *ngIf="displayImage">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Receipt</div>\n        <button class="btnR" (click)="CloseDisplayImage()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null && isImage">\n      <a href={{imageURL}} *ngIf="!isImage" target=_blank>VIEW</a>\n    </ion-card>\n  </div>\n\n  <ion-fab bottom right *ngIf="MainClaimSaved">\n    <button ion-fab mini color="secondary400">\n      <ion-icon name="add"></ion-icon>\n    </button>\n    <ion-fab-list side="top">\n      <button ion-fab (click)="selfRoot()">\n        <ion-icon name="document"></ion-icon>\n        <ion-label>{{ "SAVE_AS_DRAFT" | translate }}</ion-label>\n      </button>\n      <button ion-fab *ngIf="!isPublicTransport" (click)="showAddToll(null)">\n        <ion-icon name="easel"></ion-icon>\n        <ion-label>{{ "ADD_TOLL_LABEL" | translate }}</ion-label>\n      </button>\n      <button ion-fab *ngIf="!isPublicTransport" (click)="showAddParking(null)">\n        <ion-icon name="car"></ion-icon>\n        <ion-label>{{ "ADD_PARKING_LABEL" | translate }}</ion-label>\n      </button>\n      <button ion-fab (click)="showAddAccommodation(null)">\n        <ion-icon name="home"></ion-icon>\n        <ion-label>{{ "ADD_Accommodation_HEADING" | translate }}</ion-label>\n      </button>\n      <button ion-fab *ngIf="!isTravelLocal" (click)="showMealAllowance(null)">\n        <ion-icon name="cash"></ion-icon>\n        <ion-label>{{ "ADD_MEAL_ALLOWANCE_HEADING" | translate }}</ion-label>\n      </button>\n    </ion-fab-list>\n  </ion-fab>\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/travel-claim/travel-claim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_11__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_16__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_16__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_15__providers_conference_data__["a" /* ConferenceData */], __WEBPACK_IMPORTED_MODULE_14__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_13__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* ModalController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], TravelclaimPage);
    return TravelclaimPage;
}());

//# sourceMappingURL=travel-claim.component.js.map

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EntertainmentClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__entertainmentclaim_entertainmentclaim__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









//import { ExcelService } from '../../providers/excel.service';
var EntertainmentClaimViewPage = /** @class */ (function () {
    function EntertainmentClaimViewPage(profileMngProvider, api, api1, http, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        this.currency = localStorage.getItem("cs_default_currency");
        // approverDesignation: any;
        this.isActionTaken = false;
        this.isImage = false;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = navParams.get('level_no');
        // this.approverDesignation = this.navParams.get("approverDesignation");
        this.LoadMainClaim();
    }
    EntertainmentClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    EntertainmentClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                // element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"))
                _this.travelDate = element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                if (element.ATTACHMENT_ID !== null) {
                    _this.imageURL = _this.api.getImageUrl(element.ATTACHMENT_ID);
                }
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
                _this.remarks = element.REMARKS;
            });
        });
    };
    EntertainmentClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    EntertainmentClaimViewPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    EntertainmentClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-entertainment-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/entertainment-claim-view/entertainment-claim-view.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ \'ENTERTAINMENT_CLAIM_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n\n        <ion-label>\n            <b>Entertainment Claim View</b>\n        </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.CUSTOMER_NAME">\n        <ion-label> {{ "CUSTOMER_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "PROJECT_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_AMOUNT_LABEL" | translate }} : </ion-label>\n\n        <ion-label> {{currency}} {{totalClaimAmount | number:\'1.2-2\'}} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} : </ion-label>\n        <!-- <ion-label> {{ claim.STATUS }} at {{approverDesignation}}</ion-label> -->\n        <ion-label> {{ claim.STATUS }} </ion-label>\n    </ion-item>\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1">\n        <ion-label> {{ "STAGE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}: </ion-label>\n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item>\n        <ion-label> {{ "APPROVER_NAME" | translate }} : </ion-label>\n        <ion-label> {{ claim.APPROVER_NAME }} </ion-label>\n    </ion-item>\n\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item>\n\n     <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" *ngIf="claim.ATTACHMENT_ID!==null">\n            View Receipt\n        </button> -->\n        <a href={{imageURL}} target=\'_blank\'>View Receipt</a> \n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" > \n            View Receipt \n        </button>         -->\n    </ion-item>\n\n   \n    \n              \n        <div class="blackcontainer" *ngIf="displayImage">\n            </div>\n            <div class="popup1" padding *ngIf="displayImage">\n                <ion-card>\n                    <ion-card-header class="icTitle headerColor-white ">\n                        <div class="icHeaderText">Receipt</div>\n                        <button class="btnR" (click)="CloseDisplayImage()">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                    </ion-card-header>\n                    <img style="width: 25%" height="50%" src={{imageURL}} *ngIf="imageURL!==null && isImage">\n                    <a href={{imageURL}} *ngIf="!isImage" target = _blank>VIEW</a>\n\n                    <!-- *ngIf="isImage" -->\n                </ion-card>\n            </div>      \n\n\n\n    <ion-item *ngIf="isApprover">\n        <ion-label> {{ "REMARKS_LABEL" | translate }} : </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n\n    <div class="btn" *ngIf="isApprover">\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')"  [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')"  [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n\n    </div>\n\n\n    <div *ngIf="!isApprover">\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </div>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/entertainment-claim-view/entertainment-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], EntertainmentClaimViewPage);
    return EntertainmentClaimViewPage;
}());

//# sourceMappingURL=entertainment-claim-view.js.map

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OvertimeClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__overtimeclaim_overtimeclaim__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var OvertimeClaimViewPage = /** @class */ (function () {
    function OvertimeClaimViewPage(profileMngProvider, api, api1, http, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        this.currency = localStorage.getItem("cs_default_currency");
        this.isRemarksAccepted = false;
        this.isActionTaken = false;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = navParams.get('level_no');
        this.approverDesignation = this.navParams.get("approverDesignation");
        this.LoadMainClaim();
    }
    OvertimeClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    OvertimeClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                // element.START_TS = new Date(element.START_TS.replace(/-/g, "/"))
                _this.travelDate = element.START_TS = new Date(element.START_TS.replace(/-/g, "/"));
                element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                element.END_TS = new Date(element.END_TS.replace(/-/g, "/"));
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                if (element.ATTACHMENT_ID !== null)
                    element.ATTACHMENT_ID = _this.api.getImageUrl(element.ATTACHMENT_ID);
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
                _this.remarks = element.REMARKS;
            });
        });
    };
    OvertimeClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    OvertimeClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-overtime-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/overtime-claim-view/overtime-claim-view.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ \'OVERTIME_CLAIM_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n        <ion-label>\n            <b>Overtime Claim View</b>\n        </ion-label>\n\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "START_DT_LABEL" | translate }} :</ion-label>\n        <!-- <h3>{{ claim.START_TS | date:\'medium\'  }} </h3>  -->\n        <ion-label>{{ claim.START_TS | date:\'MMM dd, yyyy HH:mm\' }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "END_DT_LABEL" | translate }} :</ion-label>\n        <!-- <h3>{{ claim.END_TS |date:\'medium\'  }}</h3>  -->\n        <ion-label>{{ claim.END_TS |date:\'MMM dd, yyyy HH:mm\' }}</ion-label>\n    </ion-item>\n\n    <!-- <ion-item>\n        <ion-label> {{ "CLAIM_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item> -->\n\n    <ion-item *ngIf="claim.CUSTOMER_NAME">\n        <ion-label>{{ "CUSTOMER_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "PROJECT_NAME_LABEL" | translate }} ： </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} ： </ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_AMOUNT_LABEL" | translate }} </ion-label>\n        <ion-label> {{currency}} {{totalClaimAmount | number:\'1.2-2\'}} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STATUS }}</ion-label>\n    </ion-item>\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1">\n        <ion-label> {{ "STAGE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}: </ion-label>\n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item>\n        <ion-label> {{ "APPROVER_NAME" | translate }} </ion-label>\n        <ion-label> {{ claim.APPROVER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} ：</ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="isApprover">\n        <ion-label> {{ "REMARKS_LABEL" | translate }} : </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n\n    <div class="btn" *ngIf="isApprover">\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')" [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')" [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n\n    </div>\n\n\n    <ion-item *ngIf="!isApprover && level===1">\n\n\n\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </ion-item>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/overtime-claim-view/overtime-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], OvertimeClaimViewPage);
    return OvertimeClaimViewPage;
}());

//# sourceMappingURL=overtime-claim-view.js.map

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PrintClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__printclaim_printclaim__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var PrintClaimViewPage = /** @class */ (function () {
    function PrintClaimViewPage(profileMngProvider, api, api1, http, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        this.currency = localStorage.getItem("cs_default_currency");
        this.isRemarksAccepted = false;
        // approverDesignation: any;
        this.isActionTaken = false;
        this.isImage = false;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = navParams.get('level_no');
        // this.approverDesignation = this.navParams.get("approverDesignation");
        this.LoadMainClaim();
    }
    PrintClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    PrintClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                // element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"))
                _this.travelDate = element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                if (element.ATTACHMENT_ID !== null) {
                    _this.imageURL = _this.api.getImageUrl(element.ATTACHMENT_ID);
                }
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
                _this.remarks = element.REMARKS;
            });
        });
    };
    PrintClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__printclaim_printclaim__["a" /* PrintclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    PrintClaimViewPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    PrintClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-print-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/print-claim-view/print-claim-view.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n\n        <ion-title>{{ \'PRINT_CLAIM_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n        <ion-label>\n            <b>Printing Claim View</b>\n        </ion-label>\n\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.CUSTOMER_NAME">\n        <ion-label> {{ "CUSTOMER_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "PROJECT_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "CLAIM_AMOUNT_LABEL" | translate }} : </ion-label>\n        <ion-label> {{currency}} {{totalClaimAmount | number:\'1.2-2\'}} </ion-label>\n        <!-- <ion-label> {{ claim.MILEAGE_AMOUNT }} </ion-label> -->\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STATUS }}</ion-label>\n    </ion-item>\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1">\n        <ion-label> {{ "STAGE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label > {{ "STAGE_LABEL" | translate }}: </ion-label>\n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item>\n        <ion-label> {{ "APPROVER_NAME" | translate }} </ion-label>\n        <ion-label> {{ claim.APPROVER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" *ngIf="claim.ATTACHMENT_ID!==null">\n            View Receipt\n        </button> -->\n        <a href={{imageURL}} target=\'_blank\'>View Receipt</a> \n    </ion-item>\n\n    <div class="blackcontainer" *ngIf="displayImage">\n    </div>\n    <div class="popup1" padding *ngIf="displayImage">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">Receipt</div>\n                <button class="btnR" (click)="CloseDisplayImage()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n            <a href={{imageURL}} *ngIf="!isImage" target=_ blank>VIEW</a>\n        </ion-card>\n    </div>\n\n    <ion-item *ngIf="isApprover">\n\n        <ion-label> {{ "REMARKS_LABEL" | translate }} : </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n    <div class="btn" *ngIf="isApprover">\n\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')" [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')" [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n\n    </div>\n\n\n    <ion-item *ngIf="!isApprover && level===1">\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </ion-item>\n\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/print-claim-view/print-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], PrintClaimViewPage);
    return PrintClaimViewPage;
}());

//# sourceMappingURL=print-claim-view.js.map

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GiftClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__giftclaim_giftclaim__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var GiftClaimViewPage = /** @class */ (function () {
    function GiftClaimViewPage(profileMngProvider, api, api1, http, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        this.currency = localStorage.getItem("cs_default_currency");
        this.isRemarksAccepted = false;
        // approverDesignation: any;
        this.isActionTaken = false;
        this.isImage = false;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = navParams.get('level_no');
        this.LoadMainClaim();
        // this.approverDesignation = this.navParams.get("approverDesignation");
    }
    GiftClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                // element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"))
                _this.travelDate = element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_8__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                if (element.ATTACHMENT_ID !== null) {
                    _this.imageURL = _this.api.getImageUrl(element.ATTACHMENT_ID);
                }
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
                _this.remarks = element.REMARKS;
            });
        });
    };
    GiftClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    GiftClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__giftclaim_giftclaim__["a" /* GiftclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    GiftClaimViewPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    GiftClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-gift-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/gift-claim-view/gift-claim-view.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ \'GIFT_CLAIM_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n        <ion-label><b>Gift Claim View</b> </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label>\n          {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} :\n        </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>  \n\n    <ion-item>\n        <ion-label>\n           {{ "CLAIM_DATE_LABEL" | translate }} :\n        </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.CUSTOMER_NAME" >\n        <ion-label>\n           {{ "CUSTOMER_NAME_LABEL" | translate }} :\n        </ion-label>\n\n        <ion-label text-wrap> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>    \n\n    <ion-item *ngIf="claim.SOC" >\n            <ion-label>\n                    {{ "PROJECT_NAME_LABEL" | translate }} :\n               </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n    \n    <ion-item *ngIf="claim.SOC" >\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n\n    <ion-item >\n        <ion-label> {{ "CLAIM_AMOUNT_LABEL" | translate }} </ion-label>\n        <ion-label>{{currency}} {{totalClaimAmount | number:\'1.2-2\'}}  </ion-label>\n    </ion-item>\n\n    <ion-item >\n        <ion-label> {{ "STATUS_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STATUS }} </ion-label>\n    </ion-item>\n\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}  : </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}: </ion-label>           \n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item >\n\n        <ion-label> {{ "APPROVER_NAME" | translate }} </ion-label>\n        <ion-label> {{ claim.APPROVER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item> \n    \n    <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" *ngIf="claim.ATTACHMENT_ID!==null">\n            View Receipt\n        </button> -->\n        <a href={{imageURL}} target=\'_blank\'>View Receipt</a> \n    </ion-item>\n\n\n    <div class="blackcontainer" *ngIf="displayImage">\n    </div>\n    <div class="popup1" padding *ngIf="displayImage">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">Receipt</div>\n                <button class="btnR" (click)="CloseDisplayImage()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null && isImage">\n            <a href={{imageURL}} *ngIf="!isImage" target = _blank>VIEW</a>\n        </ion-card>\n    </div>\n\n\n    <ion-item *ngIf="isApprover">\n        <ion-label> {{ "REMARKS_LABEL" | translate }} : </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n    <div class="btn" *ngIf="isApprover">\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')" [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')" [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n    </div>  \n\n    <ion-item *ngIf="!isApprover && level===1">\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </ion-item>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/gift-claim-view/gift-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], GiftClaimViewPage);
    return GiftClaimViewPage;
}());

//# sourceMappingURL=gift-claim-view.js.map

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MiscellaneousClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__miscellaneous_claim_miscellaneous_claim__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var MiscellaneousClaimViewPage = /** @class */ (function () {
    function MiscellaneousClaimViewPage(profileMngProvider, api, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        // approverDesignation: any;
        this.isActionTaken = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.stringToSplit = "";
        this.tempUserSplit1 = "";
        this.tempUserSplit2 = "";
        this.tempUserSplit3 = "";
        this.isImage = false;
        this.isApprover = this.navParams.get("isApprover");
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        this.level = navParams.get('level_no');
        this.LoadMainClaim();
        // this.approverDesignation = this.navParams.get("approverDesignation"); 
    }
    MiscellaneousClaimViewPage.prototype.isAccepted = function (val) {
        var _this = this;
        this.isActionTaken = true;
        this.isRemarksAccepted = val === 'accepted' ? true : false;
        if (this.claimRequestGUID !== undefined || this.claimRequestGUID !== null) {
            this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.api.isClaimExpired(_this.travelDate, true)) {
                        return;
                    }
                if (!_this.isRemarksAccepted) {
                    if (_this.Remarks_NgModel === undefined) {
                        alert('Please enter valid remarks');
                        _this.isActionTaken = false;
                        return;
                    }
                }
                _this.profileMngProvider.ProcessProfileMng(_this.Remarks_NgModel, _this.Approver_GUID, _this.level, _this.claimRequestGUID, _this.isRemarksAccepted, 1);
            });
        }
    };
    MiscellaneousClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                if (element.ATTACHMENT_ID !== null) {
                    _this.imageURL = _this.api.getImageUrl(element.ATTACHMENT_ID);
                }
                // element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"))
                _this.travelDate = element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                element.CREATION_TS = new Date(element.CREATION_TS.replace(/-/g, "/"));
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_5__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
                _this.remarks = element.REMARKS;
            });
        });
    };
    MiscellaneousClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    MiscellaneousClaimViewPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    MiscellaneousClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-miscellaneous-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/miscellaneous-claim-view/miscellaneous-claim-view.html"*/'<ion-header>\n\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ "MISCELLANEOUS_CLAIM_HEADING" | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding *ngFor="let claim of claimRequestData">\n    <ion-item>\n        <ion-label>\n            <b>Miscellaneous Claim View</b>\n        </ion-label>\n\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_DATE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item>\n    <ion-item *ngIf="claim.CUSTOMER_NAME">\n        <ion-label> {{ "CUSTOMER_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.CUSTOMER_NAME }} </ion-label>\n    </ion-item>\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "PROJECT_NAME_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.PROJECT_NAME }} </ion-label>\n\n    </ion-item>\n    <ion-item *ngIf="claim.SOC">\n        <ion-label> {{ "SOC_NUMBER_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.SOC }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_AMOUNT_LABEL" | translate }} </ion-label>\n        <ion-label> {{currency}} {{totalClaimAmount | number:\'1.2-2\'}} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STATUS }}</ion-label>\n    </ion-item>\n\n    <!-- <ion-item *ngIf="claim.PROFILE_LEVEL!=1">\n        <ion-label> {{ "STAGE_LABEL" | translate }} : </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.PROFILE_LEVEL===1">\n        <ion-label> {{ "STAGE_LABEL" | translate }}: </ion-label>\n        <ion-label>Superior</ion-label>\n    </ion-item> -->\n\n    <ion-item>\n        <ion-label> {{ "APPROVER_NAME" | translate }} </ion-label>\n        <ion-label> {{ claim.APPROVER_NAME }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <ion-label> {{ "DESCRIPTION_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.DESCRIPTION }} </ion-label>\n    </ion-item>\n\n    <ion-item *ngIf="claim.REMARKS!==null && claim.PROFILE_LEVEL==0">\n        <ion-label> {{ "REMARK_LABEL" | translate }} : </ion-label>\n        <ion-label text-wrap> {{ claim.REMARKS }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(claim.ATTACHMENT_ID)" *ngIf="claim.ATTACHMENT_ID!==null">\n            View Receipt\n        </button> -->\n        <a href={{imageURL}} target=\'_blank\'>View Receipt</a> \n    </ion-item>\n\n\n\n    <div class="blackcontainer" *ngIf="displayImage">\n    </div>\n    <div class="popup1" padding *ngIf="displayImage">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">Receipt</div>\n                <button class="btnR" (click)="CloseDisplayImage()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <img style="width: 25%" height="50%" src={{imageURL}} *ngIf="imageURL!==null && isImage">\n            <a href={{imageURL}} *ngIf="!isImage" target=_ blank>VIEW</a>\n        </ion-card>\n    </div>\n\n    <ion-item *ngIf="isApprover">\n        <ion-label> {{ "REMARKS_LABEL" | translate }} : </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n\n    </ion-item>\n\n    <div class="btn" *ngIf="isApprover">\n        <button ion-button outline item-start (click)="isAccepted(\'accepted\')" [disabled]="isActionTaken">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'rejected\')" [disabled]="isActionTaken">\n            {{ "REJECT_BUTTON" | translate }} </button>\n    </div>\n\n    <div *ngIf="!isApprover">\n        <button ion-button outline item-start icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </div>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/miscellaneous-claim-view/miscellaneous-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_2__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], MiscellaneousClaimViewPage);
    return MiscellaneousClaimViewPage;
}());

//# sourceMappingURL=miscellaneous-claim-view.js.map

/***/ }),
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantCompanySetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_tenantcompanysetup_model__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var TenantCompanySetup_Service = /** @class */ (function () {
    function TenantCompanySetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/tenant_company';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    TenantCompanySetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead   
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    TenantCompanySetup_Service.prototype.save = function (tenant_company) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(tenant_company));
        return this.httpService.http.post(this.baseResourceUrl, tenant_company.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantCompanySetup_Service.prototype.update = function (tenant_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, tenant_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantCompanySetup_Service.prototype.get_tenant = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            return branches;
        }).catch(this.handleError);
    };
    ;
    TenantCompanySetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.TENANT_COMPANY_SITE_GUID;
        });
    };
    TenantCompanySetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var tenanttype = __WEBPACK_IMPORTED_MODULE_3__models_tenantcompanysetup_model__["a" /* TenantCompanySetup_Model */].fromJson(result);
            return tenanttype;
        }).catch(this.handleError);
    };
    ;
    TenantCompanySetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], TenantCompanySetup_Service);
    return TenantCompanySetup_Service;
}());

//# sourceMappingURL=tenantcompanysetup_service.js.map

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantCompanySiteSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_tenantcompanysitesetup_model__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








;
var TenantCompanySiteSetup_Service = /** @class */ (function () {
    function TenantCompanySiteSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/tenant_company_site';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl_view = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_tenant_edit';
    }
    ;
    TenantCompanySiteSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    TenantCompanySiteSetup_Service.prototype.save = function (tenant_company_site) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        //alert(JSON.stringify(tenant_company_site));
        return this.httpService.http.post(this.baseResourceUrl, tenant_company_site.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantCompanySiteSetup_Service.prototype.update = function (tenant_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, tenant_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantCompanySiteSetup_Service.prototype.get_tenant = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    TenantCompanySiteSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.TENANT_COMPANY_SITE_GUID;
        });
    };
    TenantCompanySiteSetup_Service.prototype.remove_multiple = function (id, tablename) {
        var url_multiple = this.baseResource_Url + tablename + "?filter=(TENANT_COMPANY_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    TenantCompanySiteSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            //.get(this.baseResourceUrl_view + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var tenanttype = __WEBPACK_IMPORTED_MODULE_3__models_tenantcompanysitesetup_model__["a" /* TenantCompanySiteSetup_Model */].fromJson(result);
            return tenanttype;
        }).catch(this.handleError);
    };
    ;
    TenantCompanySiteSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], TenantCompanySiteSetup_Service);
    return TenantCompanySiteSetup_Service;
}());

//# sourceMappingURL=tenantcompanysitesetup_service.js.map

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserContact_Model; });
var UserContact_Model = /** @class */ (function () {
    function UserContact_Model(CONTACT_INFO_GUID, USER_GUID, TYPE, CONTACT_NO, DESCRIPTION, REMARKS, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (CONTACT_INFO_GUID === void 0) { CONTACT_INFO_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (TYPE === void 0) { TYPE = null; }
        if (CONTACT_NO === void 0) { CONTACT_NO = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (REMARKS === void 0) { REMARKS = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.CONTACT_INFO_GUID = CONTACT_INFO_GUID;
        this.USER_GUID = USER_GUID;
        this.TYPE = TYPE;
        this.CONTACT_NO = CONTACT_NO;
        this.DESCRIPTION = DESCRIPTION;
        this.REMARKS = REMARKS;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    UserContact_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserContact_Model(json.CONTACT_INFO_GUID, json.USER_GUID, json.TYPE, json.CONTACT_NO, json.DESCRIPTION, json.REMARKS, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    UserContact_Model.prototype.toJson = function (stringify) {
        var doc = {
            CONTACT_INFO_GUID: this.CONTACT_INFO_GUID,
            USER_GUID: this.USER_GUID,
            TYPE: this.TYPE,
            CONTACT_NO: this.CONTACT_NO,
            DESCRIPTION: this.DESCRIPTION,
            REMARKS: this.REMARKS,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserContact_Model;
}());

//# sourceMappingURL=user_contact_model.js.map

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserCompany_Model; });
var UserCompany_Model = /** @class */ (function () {
    function UserCompany_Model(USER_COMPANY_GUID, USER_GUID, TENANT_COMPANY_SITE_GUID, COMPANY_CONTACT_NO, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (USER_COMPANY_GUID === void 0) { USER_COMPANY_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (TENANT_COMPANY_SITE_GUID === void 0) { TENANT_COMPANY_SITE_GUID = null; }
        if (COMPANY_CONTACT_NO === void 0) { COMPANY_CONTACT_NO = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.USER_COMPANY_GUID = USER_COMPANY_GUID;
        this.USER_GUID = USER_GUID;
        this.TENANT_COMPANY_SITE_GUID = TENANT_COMPANY_SITE_GUID;
        this.COMPANY_CONTACT_NO = COMPANY_CONTACT_NO;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    UserCompany_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserCompany_Model(json.USER_COMPANY_GUID, json.USER_GUID, json.TENANT_COMPANY_SITE_GUID, json.COMPANY_CONTACT_NO, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    UserCompany_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_COMPANY_GUID: this.USER_COMPANY_GUID,
            USER_GUID: this.USER_GUID,
            TENANT_COMPANY_SITE_GUID: this.TENANT_COMPANY_SITE_GUID,
            COMPANY_CONTACT_NO: this.COMPANY_CONTACT_NO,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserCompany_Model;
}());

//# sourceMappingURL=user_company_model.js.map

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserRole_Model; });
var UserRole_Model = /** @class */ (function () {
    function UserRole_Model(USER_ROLE_GUID, USER_GUID, ROLE_GUID, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, ROLE_FLAG) {
        if (USER_ROLE_GUID === void 0) { USER_ROLE_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (ROLE_GUID === void 0) { ROLE_GUID = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (ROLE_FLAG === void 0) { ROLE_FLAG = null; }
        this.USER_ROLE_GUID = USER_ROLE_GUID;
        this.USER_GUID = USER_GUID;
        this.ROLE_GUID = ROLE_GUID;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.ROLE_FLAG = ROLE_FLAG;
    }
    UserRole_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserRole_Model(json.USER_ROLE_GUID, json.USER_GUID, json.ROLE_GUID, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.ROLE_FLAG);
    };
    UserRole_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_ROLE_GUID: this.USER_ROLE_GUID,
            USER_GUID: this.USER_GUID,
            ROLE_GUID: this.ROLE_GUID,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            ROLE_FLAG: this.ROLE_FLAG
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserRole_Model;
}());

//# sourceMappingURL=user_role_model.js.map

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocCustomer_Model; });
var SocCustomer_Model = /** @class */ (function () {
    function SocCustomer_Model(CUSTOMER_GUID, TENANT_GUID, NAME, DESCRIPTION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, ACTIVE_FLAG) {
        if (CUSTOMER_GUID === void 0) { CUSTOMER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (ACTIVE_FLAG === void 0) { ACTIVE_FLAG = null; }
        this.CUSTOMER_GUID = CUSTOMER_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.ACTIVE_FLAG = ACTIVE_FLAG;
    }
    SocCustomer_Model.fromJson = function (json) {
        if (!json)
            return;
        return new SocCustomer_Model(json.CUSTOMER_GUID, json.TENANT_GUID, json.NAME, json.DESCRIPTION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.ACTIVE_FLAG);
    };
    SocCustomer_Model.prototype.toJson = function (stringify) {
        var doc = {
            CUSTOMER_GUID: this.CUSTOMER_GUID,
            TENANT_GUID: this.TENANT_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            ACTIVE_FLAG: this.ACTIVE_FLAG,
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return SocCustomer_Model;
}());

//# sourceMappingURL=soc_customer_model.js.map

/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashboardPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_chart_js__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_chart_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_chart_piecelabel_js__ = __webpack_require__(665);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_chart_piecelabel_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_chart_piecelabel_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








// import { InAppBrowser } from '@ionic-native/in-app-browser';


/**
 * Generated class for the DashboardPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashboardPage = /** @class */ (function () {
    function DashboardPage(numberPipe, fb, navCtrl, navParams, http, config) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.config = config;
        this.Rejected_Claim_Count = 0;
        this.Rejected_Claim_Amount = '0.00';
        this.Pending_Claim_Count = 0;
        this.Pending_Claim_Amount = '0.00';
        this.Pending_Claim_Count_Superior = 0;
        this.Pending_Claim_Amount_Superior = '0.00';
        this.Pending_Claim_Count_Finance = 0;
        this.Pending_Claim_Amount_Finance = '0.00';
        this.currency = localStorage.getItem("cs_default_currency");
        this.Approved_Claim_Count = 0;
        this.Approved_Claim_Amount = '0.00';
        this.PaidReqCount = 0;
        this.PaidClaimAmount = '0.00';
        // Role Based Dashboard Details
        // i:any;
        this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        this.yeardata = [];
        this.chart1 = false;
        this.chart2 = false;
        this.IsApprover = false;
        this.IsFinanceExecutive = false;
        this.IsFinanceManager = false;
        //  ClaimsInfoChart
        // public doughnutChartLabels: Array<string> = ['Validated', 'Approved', 'Pending', 'Rejected', 'Paid'];
        this.doughnutChartLabels = ['Pending Payment', 'Pending Finance Validation', 'Pending Superior', 'Rejected', 'Paid'];
        this.doughnutChartData = [];
        this.doughnutChartType = 'doughnut';
        this.doughnutChartColors = [{ backgroundColor: ["#008000", "orange", "yellow", "red", "rgb(90, 165, 90)"] }];
        this.doughnutChartOptions = {
            // showInLegend : true,
            plugin_one_attribute: 'chart2',
            cutoutPercentage: 70,
            responsive: true,
            // centerText: true,
            // rotation: 0.75 * Math.PI, 
            // circumference: 1.5 * Math.PI, 
            // cutoutPercentage: 80,
            legend: {
                display: true,
                position: 'bottom'
            },
            title: {
                display: true,
                //  text: 'My Claim Count',
                fontSize: 20,
                fontColor: 'green'
            },
            //   pieceLabel: {
            //     mode: 'value',
            //     overlap: true,
            //     fontColor: ['white', 'blue', 'yellow','black'],
            //    // fontStyle: 'bold'
            //   //  indexLabelPlacement: "outside", 
            //   // mode: 'value'
            // //   mode: 'label',
            // //   overlap: true,
            // //   fontColor: ['Red', 'blue', 'yellow','black'],
            // //  fontStyle: 'bold',
            // // //  indexLabelPlacement: "outside", 
            // //   // arc: true,
            // //   position: 'outside'
            //   },
            // elements: {
            //   center: {
            //     text: 'Desktop',
            //     color: '#36A2EB', //Default black
            //     fontStyle: 'Helvetica', //Default Arial
            //     sidePadding: 15 //Default 20 (as a percentage)
            //   }
            // },
            tooltips: {
                enabled: true,
                callbacks: {
                    label: function (tooltipItem, data) {
                        var label = data.labels[tooltipItem.index];
                        var datasetLabel = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                        return label + ' : ' + datasetLabel.toFixed(0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ' ';
                    }
                }
            },
        };
        // ClaimAmountChart
        // public claimAmountLabels: Array<string> = ['Validated', 'Approved', 'Pending', 'Rejected', 'Paid'];
        this.claimAmountLabels = ['Pending Payment', 'Pending Finance Validation', 'Pending Superior', 'Rejected', 'Paid'];
        this.claimAmountData = [];
        this.claimAmountChartType = 'doughnut';
        this.claimAmountChartColors = [{ backgroundColor: ["#008000", "orange", "yellow", "red", "rgb(90, 165, 90)"] }];
        this.claimAmountOptions = {
            // showInLegend : true,
            plugin_one_attribute: 'chart1',
            cutoutPercentage: 70,
            responsive: true,
            // centerText: true,
            legend: {
                display: true,
                position: 'bottom'
            },
            title: {
                display: true,
                // text: 'My Claim Amount',
                fontSize: 20,
                fontColor: 'green'
            },
            // pieceLabel: {
            //   // mode: 'value',
            //   //fontColor:'blue',
            //   render: function (args:any) {
            //     const label = args.label,
            //       value = args.value;
            //     //console.log(label + ': ' + value)
            //     return value.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //   },
            //   overlap: true,
            //  //s fontStyle: 'bold',
            //   fontColor: ['white', 'blue', 'yellow','black'],
            //   // indexLabelPlacement: "outside", 
            // },
            // this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
            tooltips: {
                enabled: true,
                callbacks: {
                    label: function (tooltipItem, data) {
                        var label = data.labels[tooltipItem.index];
                        var datasetLabel = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                        return label + ' : ' + datasetLabel.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ' ';
                    }
                }
            },
        };
        this.DashboardForm = fb.group({
            'Month': [null, __WEBPACK_IMPORTED_MODULE_7__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["f" /* Validators */].required])],
            'Year': [null, __WEBPACK_IMPORTED_MODULE_7__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["f" /* Validators */].required])]
        });
        this.baseResourceUrl_New = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/vw_dashboardchart?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var current_date = new Date();
        this.month_value = current_date.getMonth();
        this.year_value = current_date.getFullYear();
        this.Month_Change_ngModel = this.month_value + 1;
        this.Month_Change_ngModel = this.monthNames(this.Month_Change_ngModel);
        // let Year_ngModel = this.monthNames(this.Month_Change_ngModel) + " " + this.year_value;   
        var Year_ngModel = this.Month_Change_ngModel + " " + this.year_value;
        this.Year_Change_ngModel = Year_ngModel;
        this.paid_month_model = this.monthNameToNum(this.Month_Change_ngModel);
        // For web
        // this.Year_Change_ngModel = this.year_value;
        // this.MONTH = this.monthNames(this.Month_Change_ngModel);
        this.MONTH = this.Month_Change_ngModel;
        this.YEAR = this.year_value;
        // this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.Domain = localStorage.getItem("g_EMAIL").toString();
        if (this.Domain != null && this.Domain != undefined) {
            this.Domain = this.Domain.split('@')[1];
            // alert(this.Domain)
        }
        // this.GetRoleName();
        this.GetData_filter();
        this.GetDashboardInfo();
        this.GetInfoForCards();
        this.GetData_Years();
        // this.GetData_filter();
        this.GetRoleDashboard();
        this.GetRoleDashboard_Year();
        this.GetData_FeRole();
        this.GetData_FaRole();
        // this.GetData_FeRole_Year();
        var val = this.GetRoleName();
        val.then(function (res) {
            res.forEach(function (e) {
                if (e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].TEAM_LEAD || e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].DIVISION_HEAD || e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].HOD
                    || e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].HR || e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].DESK_ADMIN) {
                    _this.IsApprover = true;
                }
                // Finance Executive
                if (e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].FINANCE_EXECUTIVE) {
                    _this.IsFinanceExecutive = true;
                }
                if (e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].FINANCE_MANAGER || e["ROLE_NAME"] === __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["e" /* UserRoleConstants */].FINANCE_ADMIN) {
                    _this.IsFinanceManager = true;
                    _this.IsApprover = true;
                }
            });
        });
    }
    // Unique and Sort years
    DashboardPage.prototype.sortUnique = function (arr) {
        arr.sort();
        var last_i;
        for (var i = 0; i < arr.length; i++)
            if ((last_i = arr.lastIndexOf(arr[i])) !== i)
                arr.splice(i + 1, last_i - i);
        return arr;
    };
    // Unique years
    DashboardPage.prototype.deduplicate = function (data) {
        if (data.length > 0) {
            var result = [];
            data.forEach(function (elem) {
                if (result.indexOf(elem.YEAR) === -1) {
                    result.push(elem.YEAR);
                }
            });
            return result;
        }
    };
    DashboardPage.prototype.deduplicate_month = function (data) {
        if (data.length > 0) {
            var result = [];
            data.forEach(function (elem) {
                if (result.indexOf(elem.MONTH) === -1) {
                    result.push(elem.MONTH);
                    // if (result.indexOf(elem.YEAR) === -1) {
                    //   result.push(elem.YEAR);            
                    // }
                }
            });
            return result;
        }
    };
    DashboardPage.prototype.GetRoleName = function () {
        var _this = this;
        //Get the role of that particular user----------------------------------------------
        var role_url = "";
        var result;
        // role_url = constants.DREAMFACTORY_TABLE_URL + "/view_role_display?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')AND(ROLE_FLAG=MAIN)&api_key=' + constants.DREAMFACTORY_API_KEY;
        role_url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "/view_role_display?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log(role_url)
        return new Promise(function (resolve, reject) {
            _this.http.get(role_url)
                .map(function (res) { return res.json(); })
                .subscribe(function (response) {
                var role_result = response["resource"];
                // console.log(role_result);
                // this.role_name = role_result[0]["ROLE_NAME"];
                if (role_result != null) {
                }
                else {
                    role_result = null;
                }
                resolve(role_result);
            });
        });
    };
    DashboardPage.prototype.ngOnInit = function () {
        // register plugin    
        __WEBPACK_IMPORTED_MODULE_2_chart_js__["Chart"].plugins.register({
            beforeDraw: function (chart) {
                if (chart.config.options.plugin_one_attribute === 'chart1') {
                    // Plugin code here...    
                    var data = chart.data.datasets[0].data;
                    var sum = data.reduce(function (a, b) {
                        var x = a + b;
                        var y = parseFloat(x.toFixed(2));
                        // y=this.numberPipe.transform(y, '1.2-2');
                        return y;
                    }, 0);
                    var width = chart.chart.width, height = chart.chart.height, ctx = chart.chart.ctx;
                    ctx.restore();
                    var fontSize = (height / 18).toFixed(2);
                    ctx.font = fontSize + "px Verdana";
                    ctx.textBaseline = "middle";
                    ctx.fillStyle = "blue";
                    ctx.fontStyle = "bold";
                    if (sum != 0) {
                        // var text = sum,
                        var text = sum.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), 
                        // var text =this.numberPipe.transform(sum,'1.2-2'),
                        // var text = this.numberPipe.transform(sum, '1.2-2'),          
                        textX = Math.round((width - ctx.measureText(text).width) / 2), textY = height / 2;
                        // this.chart1 = true;
                    }
                    else {
                        // this.chart1 = false;
                        text = 'Data Not Available', textX = Math.round((width - ctx.measureText(text).width) / 2),
                            textY = height / 2;
                    }
                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
                if (chart.config.options.plugin_one_attribute === 'chart2') {
                    var data = chart.data.datasets[0].data;
                    var sum = data.reduce(function (a, b) {
                        var x = a + b;
                        var y = parseFloat(x.toFixed(2));
                        // y=this.numberPipe.transform(y, '1.2-2');
                        return y;
                    }, 0);
                    var width = chart.chart.width, height = chart.chart.height, ctx = chart.chart.ctx;
                    ctx.restore();
                    var fontSize = (height / 18).toFixed(2);
                    ctx.font = fontSize + "px Verdana";
                    ctx.textBaseline = "middle";
                    ctx.fillStyle = "blue";
                    ctx.fontStyle = "bold";
                    if (sum != 0) {
                        // var text = sum,
                        var text = sum.toFixed(0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), 
                        // var text =this.numberPipe.transform(sum,'1.2-2'),
                        // var text = this.numberPipe.transform(sum, '1.2-2'),          
                        textX = Math.round((width - ctx.measureText(text).width) / 2), textY = height / 2;
                        // this.chart2 = true;
                    }
                    else {
                        // this.chart2 = false;
                        text = 'Data Not Available', textX = Math.round((width - ctx.measureText(text).width) / 2),
                            textY = height / 2;
                    }
                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
            }
        });
    };
    DashboardPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DashboardPage');
    };
    DashboardPage.prototype.chartClicked = function (e) {
        console.log(e);
    };
    DashboardPage.prototype.chartHovered = function (e) {
        console.log(e);
    };
    DashboardPage.prototype.claimAmountClicked = function (e) {
        console.log(e);
    };
    DashboardPage.prototype.claimAmountHovered = function (e) {
        console.log(e);
    };
    // Role Based Dashboard
    DashboardPage.prototype.monthNames = function (monthNumber) {
        var monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        return monthNames[monthNumber - 1];
    };
    DashboardPage.prototype.monthNameToNum = function (monthname) {
        var months = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        var month = months.indexOf(monthname);
        // Returns Current Month 
        // return month ? month + 1 : 0;
        // Returns Previous Month 
        return month ? month : 0;
    };
    DashboardPage.prototype.monthNameToNum_true = function (monthname) {
        var months = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        var month = months.indexOf(monthname);
        // Returns Current Month 
        return month ? month + 1 : 0;
        // Returns Previous Month 
        // return month ? month : 0;
    };
    DashboardPage.prototype.GetData_filter = function () {
        var _this = this;
        // this.baseResource_RoleUrl = constants.DREAMFACTORY_TABLE_URL + '/view_dashboard_filter?filter=(ASSIGNED_TO =' + localStorage.getItem("g_USER_GUID") + ')or(USER_GUID=' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // this.baseResource_RoleUrl = constants.DREAMFACTORY_TABLE_URL + '/vw_dashboard_dw?filter=(query_value=' + localStorage.getItem("g_USER_GUID") + ')or(query_value=' + localStorage.getItem("g_USER_GUID") + ')or(query_value>1)&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResource_RoleUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/vw_dashboard_dw?&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log("filter "+this.baseResource_RoleUrl);
        this.http
            .get(this.baseResource_RoleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.years_data = data["resource"];
            if (_this.years_data.length == 0) {
                _this.yeardata = [{ MONTH: _this.MONTH, YEAR: _this.year_value }];
                _this.Rejected_Claim_Count;
                _this.Rejected_Claim_Amount;
                _this.Pending_Claim_Count;
                _this.Pending_Claim_Amount;
                _this.Approved_Claim_Count;
                _this.Approved_Claim_Amount;
            }
            else {
                var tempdata = void 0;
                var id = void 0;
                tempdata = {
                    MONTH_NUM: _this.monthNameToNum_true(_this.MONTH), MONTH: _this.MONTH, YEAR: _this.year_value, ApprovedClaimAmount: null, ApprovedReqCount: '0',
                    CLAIM_REF_GUID: null, PendingClaimAmount: null, PendingReqCount: '0', RejectedClaimAmount: null, RejectedReqCount: null, USER_GUID: null
                };
                var item_1;
                _this.years_data.some(function (i) {
                    if (i.MONTH === _this.MONTH) {
                        item_1 = i;
                        return true;
                    }
                    return false;
                });
                if (item_1) {
                    _this.yeardata = _this.years_data;
                    // console.log(this.yeardata)
                }
                else {
                    _this.years_data.unshift(tempdata);
                    // console.log(this.yeardata)
                }
                _this.years_data = _this.years_data.filter(function (thing, index, self) {
                    return index === self.findIndex(function (t) { return (t.MONTH === thing.MONTH && t.YEAR === thing.YEAR); });
                });
                _this.yeardata = _this.years_data;
            }
        });
    };
    DashboardPage.prototype.GetRoleDashboard = function () {
        var _this = this;
        // this.baseResource_RoleUrl = constants.DREAMFACTORY_TABLE_URL + '/view_role_dashboard?filter=(ASSIGNED_TO =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResource_RoleUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/new_view_role_dashboard?filter=(ASSIGNED_TO =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log("Role " + this.baseResource_RoleUrl);
        this.http
            .get(this.baseResource_RoleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roleBasedData = data["resource"][0];
            // console.log( this.roleBasedData.length);
            if (data["resource"][0] != null && data["resource"][0] != undefined) {
                _this.ApproverLevel_PendAmount = _this.numberPipe.transform(_this.roleBasedData.PendingAmount_Appr_Fe_Fm_FirstLevel, '1.2-2');
                // this.ApproverLevel_PendAmount = this.ApproverLevel_PendAmount.toString()
                // this.ApproverLevel_PendAmount = this.numberPipe.transform(this.ApproverLevel_PendAmount, '1.2-2');
                if (_this.ApproverLevel_PendAmount == null) {
                    _this.ApproverLevel_PendAmount = "0.00";
                }
                _this.ApproverLevel_PendCount = _this.roleBasedData.PendingCount_Appr_Fe_Fm_FirstLevel;
                if (_this.ApproverLevel_PendCount == null) {
                    _this.ApproverLevel_PendCount = 0;
                }
                // this.FinanceExecLevel_PendAmt = this.roleBasedData.PendingAmount_Fe_FinalLevel;
                // this.FinanceExecLevel_PendCount = this.roleBasedData.PendingCount_Fe_FinalLevel;
                // this.FinanceMgrLevel_PendAmt = this.numberPipe.transform(this.roleBasedData.PendingAmount_Fm_MgrLevel, '1.2-2');
                // if( this.FinanceMgrLevel_PendAmt ==null)
                // {
                //   this.FinanceMgrLevel_PendAmt ="0.00";
                // }
                // this.FinanceMgrLevel_PendCount = this.roleBasedData.PendingCount_Fm_MgrLevel;
                // if( this.FinanceMgrLevel_PendCount ==null)
                // {
                //   this.FinanceMgrLevel_PendCount =0;
                // }
            }
            else {
                _this.ApproverLevel_PendAmount = "0.00";
                _this.ApproverLevel_PendCount = 0;
                // this.FinanceExecLevel_PendAmt = "0.00";
                // this.FinanceExecLevel_PendCount = 0;
                // this.FinanceMgrLevel_PendAmt = "0.00";
                // this.FinanceMgrLevel_PendCount = 0;
            }
        });
    };
    DashboardPage.prototype.GetRoleDashboard_Year = function () {
        var _this = this;
        this.baseResource_RoleUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/view_role_dashboard_year?filter=(ASSIGNED_TO =' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log("Role_year " + this.baseResource_RoleUrl);
        this.http
            .get(this.baseResource_RoleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roleBasedData = data["resource"][0];
            // console.log( this.roleBasedData.length);
            if (data["resource"][0] != null && data["resource"][0] != undefined) {
                _this.ApproverLevel_PendAmount_Year = _this.numberPipe.transform(_this.roleBasedData.PendingAmount_Appr_Fe_Fm_FirstLevel_Year, '1.2-2');
                _this.ApproverLevel_PendCount_Year = _this.roleBasedData.PendingCount_Appr_Fe_Fm_FirstLevel_Year;
                // this.FinanceExecLevel_PendAmt_Year = this.roleBasedData.PendingAmount_Fe_FinalLevel_Year;
                // this.FinanceExecLevel_PendCount_Year = this.roleBasedData.PendingCount_Fe_FinalLevel_Year;
                _this.FinanceMgrLevel_PendAmt_Year = _this.numberPipe.transform(_this.roleBasedData.PendingAmount_Fm_MgrLevel_Year, '1.2-2');
                _this.FinanceMgrLevel_PendCount_Year = _this.roleBasedData.PendingCount_Fm_MgrLevel_Year;
            }
            else {
                _this.ApproverLevel_PendAmount_Year = "0.00";
                _this.ApproverLevel_PendCount_Year = 0;
                // this.FinanceExecLevel_PendAmt_Year = "0.00";
                // this.FinanceExecLevel_PendCount_Year = 0;
                _this.FinanceMgrLevel_PendAmt_Year = "0.00";
                _this.FinanceMgrLevel_PendCount_Year = 0;
            }
        });
    };
    DashboardPage.prototype.GetData_FeRole = function () {
        var _this = this;
        // let baseResource_Fe_RoleUrl= constants.DREAMFACTORY_TABLE_URL + '/view_dashboard_fe?filter=(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        var baseResource_Fe_RoleUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/new_view_dashboard_fe?filter=(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')and(EMAIL=' + this.Domain + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log("FE_Role " + baseResource_Fe_RoleUrl);
        this.http
            .get(baseResource_Fe_RoleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var FeRoleData = data["resource"][0];
            if (data["resource"][0] != null && data["resource"][0] != undefined) {
                // this.numberPipe.transform(this.Rejected_Claim_Amount, '1.2-2');  
                _this.FinanceExecLevel_PendAmt = _this.numberPipe.transform(FeRoleData.PendingAmount_Fe_FinalLevel, '1.2-2');
                if (_this.FinanceExecLevel_PendAmt == null) {
                    _this.FinanceExecLevel_PendAmt = "0.00";
                }
                _this.FinanceExecLevel_PendCount = FeRoleData.PendingCount_Fe_FinalLevel;
                if (_this.FinanceExecLevel_PendCount == null) {
                    _this.FinanceExecLevel_PendCount = 0;
                }
            }
            else {
                _this.FinanceExecLevel_PendAmt = "0.00";
                _this.FinanceExecLevel_PendCount = 0;
            }
        });
    };
    DashboardPage.prototype.GetData_FaRole = function () {
        var _this = this;
        // this.Month_Change_ngModel= this.month.substring(0, 3);
        // let baseResource_FA_RoleUrl= constants.DREAMFACTORY_TABLE_URL + '/view_dashboard_fa?filter=(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        var baseResource_FA_RoleUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/new_view_dashboard_fa?filter=(MONTH=' + this.Month_Change_ngModel.substring(0, 3) + ')and(YEAR=' + this.year_value + ')and(EMAIL=' + this.Domain + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // console.log("FA_Role " + baseResource_FA_RoleUrl);
        this.http
            .get(baseResource_FA_RoleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var FaRoleData = data["resource"][0];
            if (data["resource"][0] != null && data["resource"][0] != undefined) {
                // this.numberPipe.transform(this.Rejected_Claim_Amount, '1.2-2');  
                _this.FinanceMgrLevel_PendAmt = _this.numberPipe.transform(FaRoleData.PendingAmount_Fm_MgrLevel, '1.2-2');
                if (_this.FinanceMgrLevel_PendAmt == null) {
                    _this.FinanceMgrLevel_PendAmt = "0.00";
                }
                _this.FinanceMgrLevel_PendCount = FaRoleData.PendingCount_Fm_MgrLevel;
                if (_this.FinanceMgrLevel_PendCount == null) {
                    _this.FinanceMgrLevel_PendCount = 0;
                }
            }
            else {
                _this.FinanceMgrLevel_PendAmt = "0.00";
                _this.FinanceMgrLevel_PendCount = 0;
            }
        });
    };
    DashboardPage.prototype.Year_Changed = function (value) {
        var stringToSplit = value;
        this.Month_Change_ngModel = stringToSplit.split(" ")[0];
        this.year_value = stringToSplit.split(" ")[1];
        this.paid_month_model = this.monthNameToNum(this.Month_Change_ngModel);
        // alert(this.paid_month_model)
        this.GetRoleDashboard();
        this.GetRoleDashboard_Year();
        this.GetDashboardInfo();
        this.GetInfoForCards();
        this.GetData_FeRole();
        // this.GetData_FeRole_Year();
        this.GetData_FaRole();
        // this.GetPaidData();
    };
    DashboardPage.prototype.GetDashboardInfo = function () {
        var _this = this;
        if (this.month_value != undefined) {
            // this.baseResourceUrl = constants.DREAMFACTORY_TABLE_URL + '/vw_dashboardchart?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH=' + this.Month_Change_ngModel + ')and(YEAR=' + this.year_value + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/new_vw_dashboardchart?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH=' + this.Month_Change_ngModel + ')and(YEAR=' + this.year_value + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            console.log('hi ' + this.baseResourceUrl);
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimrequestdetails = data["resource"][0];
            // console.log(this.claimrequestdetails);
            var val = _this.GetPaidData();
            val.then(function (paid_data) {
                // console.log(paid_data);
                var paid = paid_data["PaidReqCount"];
                paid = parseInt(paid);
                _this.PaidReqCount = paid;
                _this.PaidClaimAmount = paid_data["PaidClaimAmount"];
                if (_this.PaidClaimAmount !== null && _this.PaidClaimAmount !== undefined) {
                    _this.PaidClaimAmount = parseFloat(_this.PaidClaimAmount).toFixed(2);
                    // rejectedAmount = this.numberPipe.transform(rejectedAmount, '1.2-2');
                }
                else {
                    _this.PaidClaimAmount = '0.00';
                }
                _this.PaidClaimAmount = paid_data["PaidClaimAmount"];
                if (_this.PaidClaimAmount != null) {
                    // this.PaidClaimAmount = this.PaidClaimAmount.toFixed(2).toString();
                    _this.PaidClaimAmount = _this.numberPipe.transform(_this.PaidClaimAmount, '1.2-2');
                    // this.chart1 = true;
                    //   this.chart2 = true;
                }
                else
                    _this.PaidClaimAmount = '0.00';
                if (data["resource"][0] != null) {
                    var approve = parseInt(_this.claimrequestdetails.ApprovedReqCount);
                    // alert(approve)
                    // var pending = parseInt(this.claimrequestdetails.PendingReqCount);
                    var pending_Finance = parseInt(_this.claimrequestdetails.PendingReqCount_Finance);
                    var pending_Superior = parseInt(_this.claimrequestdetails.PendingReqCount_Superior);
                    var rejected = parseInt(_this.claimrequestdetails.RejectedReqCount);
                    // var paid = parseInt(this.claimrequestdetails.PaidReqCount);
                    var paid = paid_data["PaidReqCount"];
                    paid = parseInt(paid);
                    //  console.log(paid);
                    _this.doughnutChartData = [approve, pending_Finance, pending_Superior, rejected, paid];
                    if (_this.claimrequestdetails.ApprovedClaimAmount !== null && _this.claimrequestdetails.ApprovedClaimAmount !== undefined) {
                        var approveAmount = parseFloat(_this.claimrequestdetails.ApprovedClaimAmount).toFixed(2);
                        // approveAmount = this.numberPipe.transform(approveAmount, '1.2-2');
                    }
                    else {
                        approveAmount = '0.00';
                    }
                    // if (this.claimrequestdetails.PendingClaimAmount !== null && this.claimrequestdetails.PendingClaimAmount !== undefined) {
                    //   var pendingAmount = parseFloat(this.claimrequestdetails.PendingClaimAmount).toFixed(2);
                    //   // pendingAmount=this.format(pendingAmount);
                    //   // this.numberPipe.transform(amount, '1.2-2');
                    //   // pendingAmount = this.numberPipe.transform(pendingAmount, '1.2-2');
                    //   //  alert(pendingAmount)
                    // }
                    // else { pendingAmount = '0.00' }
                    // Superior
                    if (_this.claimrequestdetails.PendingClaimAmount_Superior !== null && _this.claimrequestdetails.PendingClaimAmount_Superior !== undefined) {
                        // console.log(  this.claimrequestdetails.PendingClaimAmount_Superior)
                        var pendingAmount_Superior = parseFloat(_this.claimrequestdetails.PendingClaimAmount_Superior).toFixed(2);
                    }
                    else {
                        pendingAmount_Superior = '0.00';
                    }
                    // Finance
                    if (_this.claimrequestdetails.PendingClaimAmount_Finance !== null && _this.claimrequestdetails.PendingClaimAmount_Finance !== undefined) {
                        var pendingAmount_Finance = parseFloat(_this.claimrequestdetails.PendingClaimAmount_Finance).toFixed(2);
                    }
                    else {
                        pendingAmount_Finance = '0.00';
                    }
                    if (_this.claimrequestdetails.RejectedClaimAmount !== null && _this.claimrequestdetails.RejectedClaimAmount !== undefined) {
                        var rejectedAmount = parseFloat(_this.claimrequestdetails.RejectedClaimAmount).toFixed(2);
                        // rejectedAmount = this.numberPipe.transform(rejectedAmount, '1.2-2');
                    }
                    else {
                        rejectedAmount = '0.00';
                    }
                    // if (this.claimrequestdetails.PaidClaimAmount !== null && this.claimrequestdetails.PaidClaimAmount !== undefined) {
                    //   var PaidClaimAmount = parseFloat(this.claimrequestdetails.PaidClaimAmount).toFixed(2);
                    //   // rejectedAmount = this.numberPipe.transform(rejectedAmount, '1.2-2');
                    // }
                    // else { PaidClaimAmount = '0.00' }
                    _this.PaidClaimAmount = paid_data["PaidClaimAmount"];
                    if (_this.PaidClaimAmount !== null && _this.PaidClaimAmount !== undefined) {
                        _this.PaidClaimAmount = parseFloat(_this.PaidClaimAmount).toFixed(2);
                        // rejectedAmount = this.numberPipe.transform(rejectedAmount, '1.2-2');
                    }
                    else {
                        _this.PaidClaimAmount = '0.00';
                    }
                    //var approveAmount=(this.claimrequestdetails.ApprovedClaimAmount);parseFloat
                    // var pendingAmount = parseFloat(this.claimrequestdetails.PendingClaimAmount).toFixed(2);
                    // var rejectedAmount = parseFloat(this.claimrequestdetails.RejectedClaimAmount).toFixed(2);
                    _this.claimAmountData = [parseFloat(approveAmount), parseFloat(pendingAmount_Finance), parseFloat(pendingAmount_Superior), parseFloat(rejectedAmount), parseFloat(_this.PaidClaimAmount)];
                    // console.log(this.claimAmountData)
                    // For Display Data In Ion-cards
                    _this.Rejected_Claim_Count = _this.claimrequestdetails.RejectedReqCount;
                    _this.Pending_Claim_Count = _this.claimrequestdetails.PendingReqCount;
                    _this.Approved_Claim_Count = _this.claimrequestdetails.ApprovedReqCount;
                    // this.PaidReqCount = this.claimrequestdetails.PaidReqCount;
                    _this.PaidReqCount = paid_data["PaidReqCount"];
                    _this.Pending_Claim_Count_Superior = _this.claimrequestdetails.PendingReqCount_Superior;
                    _this.Pending_Claim_Count_Finance = _this.claimrequestdetails.PendingReqCount_Finance;
                    if (_this.claimrequestdetails.RejectedClaimAmount != null) {
                        _this.Rejected_Claim_Amount = _this.claimrequestdetails.RejectedClaimAmount.toFixed(2).toString();
                        _this.Rejected_Claim_Amount = _this.numberPipe.transform(_this.Rejected_Claim_Amount, '1.2-2');
                    }
                    else
                        _this.Rejected_Claim_Amount = '0.00';
                    if (_this.claimrequestdetails.PendingClaimAmount != null) {
                        _this.Pending_Claim_Amount = _this.claimrequestdetails.PendingClaimAmount.toFixed(2).toString();
                        _this.Pending_Claim_Amount = _this.numberPipe.transform(_this.Pending_Claim_Amount, '1.2-2');
                    }
                    else
                        _this.Pending_Claim_Amount = '0.00';
                    // Superior
                    if (_this.claimrequestdetails.PendingClaimAmount_Superior != null) {
                        _this.Pending_Claim_Amount_Superior = _this.claimrequestdetails.PendingClaimAmount_Superior.toFixed(2).toString();
                        _this.Pending_Claim_Amount_Superior = _this.numberPipe.transform(_this.Pending_Claim_Amount_Superior, '1.2-2');
                    }
                    else
                        _this.Pending_Claim_Amount_Superior = '0.00';
                    // Finance
                    if (_this.claimrequestdetails.PendingClaimAmount_Finance != null) {
                        _this.Pending_Claim_Amount_Finance = _this.claimrequestdetails.PendingClaimAmount_Finance.toFixed(2).toString();
                        _this.Pending_Claim_Amount_Finance = _this.numberPipe.transform(_this.Pending_Claim_Amount_Finance, '1.2-2');
                    }
                    else
                        _this.Pending_Claim_Amount_Finance = '0.00';
                    if (_this.claimrequestdetails.ApprovedClaimAmount != null) {
                        _this.Approved_Claim_Amount = _this.claimrequestdetails.ApprovedClaimAmount.toFixed(2).toString();
                        _this.Approved_Claim_Amount = _this.numberPipe.transform(_this.Approved_Claim_Amount, '1.2-2');
                    }
                    else
                        _this.Approved_Claim_Amount = '0.00';
                    // if (this.claimrequestdetails.PaidClaimAmount != null) {
                    //   this.PaidClaimAmount = this.claimrequestdetails.PaidClaimAmount.toFixed(2).toString();
                    //   this.PaidClaimAmount = this.numberPipe.transform(this.PaidClaimAmount, '1.2-2');
                    // }
                    // else this.PaidClaimAmount = '0.00';
                    _this.PaidClaimAmount = paid_data["PaidClaimAmount"];
                    if (_this.PaidClaimAmount != null) {
                        // this.PaidClaimAmount = this.PaidClaimAmount.toFixed(2).toString();
                        _this.PaidClaimAmount = _this.numberPipe.transform(_this.PaidClaimAmount, '1.2-2');
                    }
                    else
                        _this.PaidClaimAmount = '0.00';
                    if (approve == 0 && pending_Finance == 0 && pending_Superior == 0 && rejected == 0 && paid == 0) {
                        _this.chart1 = false;
                        _this.chart2 = false;
                    }
                    else {
                        _this.chart1 = true;
                        _this.chart2 = true;
                    }
                }
                else {
                    _this.chart1 = false;
                    _this.chart2 = false;
                    approve = 0;
                    // pending = 0;
                    pending_Finance == 0;
                    pending_Superior == 0;
                    rejected = 0;
                    paid = 0;
                    _this.doughnutChartData = [approve, pending_Finance, pending_Superior, rejected, paid];
                    // pendingAmount = '0.00';
                    pendingAmount_Finance = '0.00';
                    pendingAmount_Superior = '0.00';
                    rejectedAmount = '0.00';
                    approveAmount = '0.00';
                    // this.PaidClaimAmount = '0.00';
                    _this.claimAmountData = [parseFloat(approveAmount), parseFloat(pendingAmount_Finance), parseFloat(pendingAmount_Superior), parseFloat(rejectedAmount), parseFloat(_this.PaidClaimAmount)];
                    // this.doughnutChartLabels = data.label;
                    // this.claimAmountLabels = data.label;
                    // For Display Data In Ion-cards
                    _this.Rejected_Claim_Count = 0;
                    _this.Pending_Claim_Count = 0;
                    _this.Approved_Claim_Count = 0;
                    // this.PaidReqCount = 0;
                    _this.Pending_Claim_Count_Finance = 0;
                    _this.Pending_Claim_Count_Superior = 0;
                    _this.Rejected_Claim_Amount = '0.00';
                    _this.Pending_Claim_Amount = '0.00';
                    _this.Approved_Claim_Amount = '0.00';
                    // this.PaidClaimAmount = '0.00';
                    _this.Pending_Claim_Amount_Finance = '0.00';
                    _this.Pending_Claim_Amount_Superior = '0.00';
                    //
                }
            });
        });
    };
    DashboardPage.prototype.GetInfoForCards = function () {
        var _this = this;
        this.baseResourceUrl_Card = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/vw_dashboard_card?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(this.baseResourceUrl_Card)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.Year_Card = data["resource"];
            // console.log('user '+this.baseResourceUrl_Card);      
            if (_this.Year_Card.length != 0) {
                _this.RejectedClaimCount_year = _this.Year_Card[0]["RejectedClaimCount_year"];
                if (_this.RejectedClaimCount_year != null && _this.RejectedClaimCount_year != undefined)
                    _this.RejectedClaimCount_year;
                else
                    _this.RejectedClaimCount_year = '0';
                _this.PendingClaimCount_year = _this.Year_Card[0]["PendingClaimCount_year"];
                if (_this.PendingClaimCount_year != null && _this.PendingClaimCount_year != undefined)
                    _this.PendingClaimCount_year;
                else
                    _this.PendingClaimCount_year = '0';
                // Superior
                _this.PendingClaimCount_year_Superior = _this.Year_Card[0]["PendingClaimCount_year_superior"];
                if (_this.PendingClaimCount_year_Superior != null && _this.PendingClaimCount_year_Superior != undefined)
                    _this.PendingClaimCount_year_Superior;
                else
                    _this.PendingClaimCount_year_Superior = '0';
                // Finance
                _this.PendingClaimCount_year_Finance = _this.Year_Card[0]["PendingClaimCount_year_finance"];
                if (_this.PendingClaimCount_year_Finance != null && _this.PendingClaimCount_year_Finance != undefined)
                    _this.PendingClaimCount_year_Finance;
                else
                    _this.PendingClaimCount_year_Finance = '0';
                _this.ApprovedClaimCount_year = _this.Year_Card[0]["ApprovedClaimCount_year"];
                if (_this.ApprovedClaimCount_year != null && _this.ApprovedClaimCount_year != undefined)
                    _this.ApprovedClaimCount_year;
                else
                    _this.ApprovedClaimCount_year = '0';
                _this.PaidClaimCount_year = _this.Year_Card[0]["PaidClaimCount_year"];
                if (_this.PaidClaimCount_year != null && _this.PaidClaimCount_year != undefined)
                    _this.PaidClaimCount_year;
                else
                    _this.PaidClaimCount_year = '0';
                _this.RejectedClaimAmount_year = _this.Year_Card[0]["RejectedClaimAmount_year"];
                if (_this.RejectedClaimAmount_year != null && _this.RejectedClaimAmount_year != undefined)
                    _this.RejectedClaimAmount_year = _this.numberPipe.transform(_this.RejectedClaimAmount_year, '1.2-2');
                else
                    _this.RejectedClaimAmount_year = '0.00';
                _this.PendingClaimAmount_year = _this.Year_Card[0]["PendingClaimAmount_year"];
                if (_this.PendingClaimAmount_year != null && _this.PendingClaimAmount_year != undefined)
                    _this.PendingClaimAmount_year = _this.numberPipe.transform(_this.PendingClaimAmount_year, '1.2-2');
                else
                    _this.PendingClaimAmount_year = '0.00';
                // Superior
                _this.PendingClaimAmount_year_Superior = _this.Year_Card[0]["PendingClaimAmount_year_superior"];
                if (_this.PendingClaimAmount_year_Superior != null && _this.PendingClaimAmount_year_Superior != undefined)
                    _this.PendingClaimAmount_year_Superior = _this.numberPipe.transform(_this.PendingClaimAmount_year_Superior, '1.2-2');
                else
                    _this.PendingClaimAmount_year_Superior = '0.00';
                // Finance
                _this.PendingClaimAmount_year_Finance = _this.Year_Card[0]["PendingClaimAmount_year_finance"];
                if (_this.PendingClaimAmount_year_Finance != null && _this.PendingClaimAmount_year_Finance != undefined)
                    _this.PendingClaimAmount_year_Finance = _this.numberPipe.transform(_this.PendingClaimAmount_year_Finance, '1.2-2');
                else
                    _this.PendingClaimAmount_year_Finance = '0.00';
                _this.ApprovedClaimAmount_year = _this.Year_Card[0]["ApprovedClaimAmount_year"];
                if (_this.ApprovedClaimAmount_year != null && _this.ApprovedClaimAmount_year != undefined)
                    _this.ApprovedClaimAmount_year = _this.numberPipe.transform(_this.ApprovedClaimAmount_year, '1.2-2');
                else
                    _this.ApprovedClaimAmount_year = '0.00';
                _this.PaidClaimAmount_year = _this.Year_Card[0]["PaidClaimAmount_year"];
                if (_this.PaidClaimAmount_year != null && _this.PaidClaimAmount_year != undefined)
                    _this.PaidClaimAmount_year = _this.numberPipe.transform(_this.PaidClaimAmount_year, '1.2-2');
                else
                    _this.PaidClaimAmount_year = '0.00';
            }
            else {
                _this.RejectedClaimCount_year = '0';
                _this.PendingClaimCount_year = '0';
                _this.ApprovedClaimCount_year = '0';
                _this.PaidClaimCount_year = '0';
                _this.PendingClaimCount_year_Finance = '0';
                _this.PendingClaimCount_year_Superior = '0';
                _this.RejectedClaimAmount_year = '0.00';
                _this.PendingClaimAmount_year = '0.00';
                _this.ApprovedClaimAmount_year = '0.00';
                _this.PaidClaimAmount_year = '0.00';
                _this.PendingClaimAmount_year_Finance = '0.00';
                _this.PendingClaimAmount_year_Superior = '0.00';
            }
        });
    };
    DashboardPage.prototype.GetData_Years = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl_New)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.years_data = data["resource"];
            // console.log(this.years_data.length)
            if (_this.years_data.length == 0) {
                _this.years = [_this.year_value - 1, _this.year_value];
                return;
            }
            else { }
            _this.years = _this.years_data;
            var uniqueYears = _this.deduplicate(_this.years);
            //console.log(uniqueYears)
            _this.years = uniqueYears;
            var SortuniqueYears = _this.sortUnique(_this.years);
            //console.log(SortuniqueYears)
            _this.years = SortuniqueYears;
        });
    };
    DashboardPage.prototype.GetPaidData = function () {
        var _this = this;
        // let Paid_Url = constants.DREAMFACTORY_TABLE_URL + '/vw_dashboardchart?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH_NUM=' + this.paid_month_model + ')and(YEAR=' + this.year_value + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // alert(this.paid_month_model)
        var Paid_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/new_vw_dashboardchart?filter=(USER_GUID =' + localStorage.getItem("g_USER_GUID") + ')and(MONTH_NUM=' + this.paid_month_model + ')and(YEAR=' + this.year_value + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        console.log("Paid " + Paid_Url);
        return new Promise(function (resolve, reject) {
            _this.http
                .get(Paid_Url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.paid_details = data["resource"][0];
                // console.log(this.paid_details);
                if (data["resource"][0] == null) {
                    _this.paid_details = { paid: 0, PaidReqCount: 0 };
                }
                resolve(_this.paid_details);
            });
        });
    };
    DashboardPage.prototype.Rejected_Click = function () {
        // this.navCtrl.setRoot('UserclaimslistPage', { Rejected: Settings.StatusConstants.REJECTED });
        this.navCtrl.push('UserclaimslistPage', { Rejected_data: [{ Rejected: __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED, month: this.Month_Change_ngModel }] });
    };
    DashboardPage.prototype.Pending_Click = function () {
        // this.navCtrl.setRoot('UserclaimslistPage', { PENDINGSUPERIOR: Settings.StatusConstants.PENDINGSUPERIOR });
        this.navCtrl.push('UserclaimslistPage', { Pending_data: [{ PENDINGSUPERIOR: __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR, month: this.Month_Change_ngModel }] });
    };
    DashboardPage.prototype.Validated_Click = function () {
        // this.navCtrl.setRoot('UserclaimslistPage', { Approved: Settings.StatusConstants.PENDINGPAYMENT });
        this.navCtrl.push('UserclaimslistPage', { Approved_data: [{ PENDINGPAYMENT: __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT, month: this.Month_Change_ngModel }] });
    };
    DashboardPage.prototype.Approved_Click = function () {
        // this.navCtrl.setRoot('UserclaimslistPage', { PENDINGFINANCEVALIDATION: Settings.StatusConstants.PENDINGFINANCEVALIDATION });
        this.navCtrl.push('UserclaimslistPage', { Validation_data: [{ PENDINGFINANCEVALIDATION: __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION, month: this.Month_Change_ngModel }] });
    };
    DashboardPage.prototype.Paid_Click = function () {
        // this.navCtrl.setRoot('UserclaimslistPage', { Paid: Settings.StatusConstants.PAID });
        this.navCtrl.push('UserclaimslistPage', { Paid_data: [{ Paid: __WEBPACK_IMPORTED_MODULE_9__dbSettings_companySettings__["d" /* StatusConstants */].PAID, month: this.Month_Change_ngModel }] });
    };
    DashboardPage.prototype.Approver_Click = function () {
        // this.navCtrl.setRoot('ClaimapprovertasklistPage');
        this.navCtrl.push('ClaimapprovertasklistPage', { month: this.Month_Change_ngModel });
    };
    DashboardPage.prototype.Finance_Executive_Click = function () {
        // this.navCtrl.setRoot('ClaimtasklistPage');
        this.navCtrl.push('ClaimtasklistPage', { month: this.Month_Change_ngModel });
    };
    DashboardPage.prototype.Finance_Manager_Click = function () {
        // this.navCtrl.setRoot('FinancePaymentTasklistPage');
        this.navCtrl.push('FinancePaymentTasklistPage', { month: this.Month_Change_ngModel });
    };
    DashboardPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
            selector: 'page-dashboard',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/dashboard/dashboard.html"*/'<!--\n  Generated template for the DashboardPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <!-- <ion-navbar>\n    <ion-title>dashboard</ion-title>\n  </ion-navbar> -->\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ "DASHBOARD_HEADING" | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding style="background: #eeeeee;">\n  <div>\n\n  </div>\n\n  <div>\n    <form [formGroup]="DashboardForm">\n\n\n      <div>\n        <ion-item text-center class="hid" style="background: white; border-radius: 10px;">\n          <ion-label inset color="primary" text-left>{{ "FILTER" | translate }}</ion-label>\n\n          <ion-select formControlName="Year" [(ngModel)]="Year_Change_ngModel" (ionChange)="Year_Changed(Year_Change_ngModel)">\n            <ion-option *ngFor="let year of yeardata">{{year.MONTH}} {{year.YEAR}}</ion-option>\n          </ion-select>\n        </ion-item>\n      </div>\n    </form>\n  </div>\n\n\n  <ion-card *ngIf="chart1" class="round3">\n    <ion-card-header style="background:gray;color: white;">{{ "COUNT" | translate }}</ion-card-header>\n    <canvas #mycanvas baseChart [data]="doughnutChartData" [labels]="doughnutChartLabels" [chartType]="doughnutChartType"\n      [options]="doughnutChartOptions" [colors]="doughnutChartColors" (chartHover)="chartHovered($event)" (chartClick)="chartClicked($event)"></canvas>\n  </ion-card>\n\n  <ion-card *ngIf="chart2" class="round3">\n    <ion-card-header style="background:gray;color: white;">My Claim Amount({{currency }})</ion-card-header>\n    <canvas #claimAmount baseChart [data]="claimAmountData" [labels]="claimAmountLabels" [chartType]="claimAmountChartType"\n      [options]="claimAmountOptions" [colors]="claimAmountChartColors" (chartHover)="claimAmountHovered($event)"\n      (chartClick)="claimAmountClicked($event)"></canvas>\n\n  </ion-card>\n\n  <div class="clear"></div>\n  <!-- *ngIf="IsApprover" -->\n  <ion-card class="round2" *ngIf="IsApprover" (click)="Approver_Click()" color="war1">\n    <div class="icondash">\n\n      <ion-icon name="alert" color="light" style="float: left; "></ion-icon>\n      <h2 class="dashhead">{{ "PENDING_APPROVAL" | translate }}</h2>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{ApproverLevel_PendAmount}}</h1>\n        <h3># this month: {{ApproverLevel_PendCount}}</h3>\n\n        <br />\n        <br />\n        <br />\n\n        <!-- <p>Amount YTD: RM {{ApproverLevel_PendAmount_Year}}</p>\n          <p># YTD: {{ApproverLevel_PendCount_Year}}</p> -->\n\n      </div>\n\n    </div>\n\n\n  </ion-card>\n\n  <!-- *ngIf="IsFinanceExecutive" -->\n  <ion-card class="round2" *ngIf="IsFinanceExecutive" (click)="Finance_Executive_Click()" color="war3">\n    <div class="icondash">\n\n      <ion-icon name="eye" color="light" style="float: left; "></ion-icon>\n      <h2 class="dashhead">{{ "PENDING_VALIDATION" | translate }}</h2>\n      <div text-right class="wordash">\n\n\n\n        <!--\n          <p>Amount YTD: RM {{FinanceExecLevel_PendAmt_Year}}</p>\n          <p># YTD: {{FinanceExecLevel_PendCount_Year}}</p> -->\n\n        <h1>{{currency }} {{FinanceExecLevel_PendAmt}}</h1>\n        <h3># this month: {{FinanceExecLevel_PendCount}}</h3>\n        <br />\n        <br />\n        <br />\n\n      </div>\n\n    </div>\n\n\n  </ion-card>\n  <!-- *ngIf="IsFinanceManager" -->\n  <ion-card class="round2" *ngIf="IsFinanceManager" (click)="Finance_Manager_Click()" color="war2">\n    <div class="icondash">\n\n      <ion-icon name="filing" color="light" style="float: left; "></ion-icon>\n      <h2 class="dashhead">{{ "PENDING_PAYMENT" | translate }}</h2>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{FinanceMgrLevel_PendAmt}}</h1>\n        <h3># this month: {{FinanceMgrLevel_PendCount}}</h3>\n\n        <br />\n        <br />\n        <br />\n        <!-- <p>Amount YTD: RM {{FinanceMgrLevel_PendAmt_Year}}</p>\n          <p># YTD: {{FinanceMgrLevel_PendCount_Year}}</p> -->\n\n      </div>\n\n    </div>\n\n  </ion-card>\n\n  <ion-card (click)="Rejected_Click()" class="round2" color="mac">\n\n    <div class="icondash">\n      <ion-icon name="close-circle" color="light" style="float: left; "></ion-icon>\n      <h2 class="dashhead">{{ "CLAIM_REJECTED" | translate }}</h2>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{Rejected_Claim_Amount}}</h1>\n        <h3># this month: {{Rejected_Claim_Count}}</h3>\n\n        <br />\n        <br />\n        <br />\n        <!-- <p>Amount YTD: RM {{RejectedClaimAmount_year}}</p>\n            <p># YTD: {{RejectedClaimCount_year}}</p> -->\n\n      </div>\n    </div>\n\n  </ion-card>\n\n\n  <!-- <ion-card (click)="Pending_Click()" class="round2" color="war">\n      <div class="icondash">\n          <h2 class="dashhead">Pending</h2>\n          <ion-icon name="alert" color="light" style="float: left;color:gray; "></ion-icon>\n          <div text-right class="wordash">\n            <h1>RM {{Pending_Claim_Amount}}</h1>\n            <h3># this month: {{Pending_Claim_Count}}</h3>\n           <p>Amount YTD: RM {{PendingClaimAmount_year}}</p>\n            <p># YTD: {{PendingClaimCount_year}}</p>\n          </div>\n        </div>\n  </ion-card> -->\n\n\n  <!-- <ion-card (click)="Validated_Click()" class="round33" color="primary500"> -->\n      <ion-card (click)="Validated_Click()" class="round2" color="primary500">\n    <div class="icondash">\n      <!-- <h2 class="dashhead">Approved</h2> -->\n\n      <h2 class="dashhead">{{ "VALIDATED" | translate }}</h2>\n      <ion-icon name="checkmark-circle-outline" color="light" style="float: left; "></ion-icon>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{Approved_Claim_Amount}}</h1>\n        <h3># this month: {{Approved_Claim_Count}}</h3>\n\n        <!-- <p>Amount YTD: RM {{ApprovedClaimAmount_year }}</p>\n          <p># YTD: {{ApprovedClaimCount_year}}</p> -->\n        <br />\n        <br />\n        <br />\n\n\n      </div>\n\n    </div>\n\n\n  </ion-card>\n\n\n\n  <ion-card class="round2" (click)="Paid_Click()" color="primary200">\n    <div class="icondash">\n      <h2 class="dashhead">{{ "PAID" | translate }}</h2>\n      <ion-icon name="logo-usd" color="light" style="float: left; "></ion-icon>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{PaidClaimAmount}}</h1>\n        <h3># previous month: {{PaidReqCount}}</h3>\n\n        <!-- <p>Amount YTD: RM {{PaidClaimAmount_year}}</p>\n          <p># YTD: {{PaidClaimCount_year}}</p> -->\n        <br />\n        <br />\n        <br />\n\n\n      </div>\n\n    </div>\n  </ion-card>\n  <ion-card (click)="Pending_Click()" class="round2" color="war">\n    <div class="icondash">\n\n      <!-- <h2 class="dashhead">Pending Superior Approval</h2> -->\n      <h2 class="dashhead">{{ "PENDING" | translate }}</h2>\n      <ion-icon name="alert" color="light" style="float: left;color:gray; "></ion-icon>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{Pending_Claim_Amount_Superior}}</h1>\n        <h3># this month: {{Pending_Claim_Count_Superior}}</h3>\n\n        <!-- <p>Amount YTD: RM {{PendingClaimAmount_year_Superior}}</p>\n          <p># YTD: {{PendingClaimCount_year_Superior}}</p> -->\n        <br />\n        <br />\n        <br />\n\n      </div>\n\n    </div>\n  </ion-card>\n  <ion-card (click)="Approved_Click()" class="round2" color="war4">\n    <div class="icondash">\n      <!-- <h2 class="dashhead">Pending Finance Validation</h2> -->\n      <h2 class="dashhead">{{ "CLAIM_APPROVED" | translate }}</h2>\n      <ion-icon name="eye" color="light" style="float: left; "></ion-icon>\n      <div text-right class="wordash">\n        <h1>{{currency }} {{Pending_Claim_Amount_Finance}}</h1>\n        <h3># this month: {{Pending_Claim_Count_Finance}}</h3>\n\n\n        <!-- <p>Amount YTD: RM {{PendingClaimAmount_year_Finance}}</p>\n        <p># YTD: {{PendingClaimCount_year_Finance}}</p> -->\n        <br />\n        <br />\n        <br />\n\n\n      </div>\n    </div>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/dashboard/dashboard.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_8__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_7__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["d" /* Config */]])
    ], DashboardPage);
    return DashboardPage;
}());

//# sourceMappingURL=dashboard.js.map

/***/ }),
/* 109 */,
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimapprovertasklistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_checkbox_list_model__ = __webpack_require__(666);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__travel_claim_view_travel_claim_view_component__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__entertainment_claim_view_entertainment_claim_view__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__overtime_claim_view_overtime_claim_view__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__medical_claim_view_medical_claim_view__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__print_claim_view_print_claim_view__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__gift_claim_view_gift_claim_view__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__miscellaneous_claim_view_miscellaneous_claim_view__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__claimtasklist_claimtasklist__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



















var ClaimapprovertasklistPage = /** @class */ (function () {
    function ClaimapprovertasklistPage(profileMngProvider, api, navCtrl, navParams, http) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.ddlEmp = 'All';
        this.ddlClaim = 'All';
        this.checkboxDataList = [];
        this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        this.totalClaimAmount = 0;
        this.page = 1;
        this.FinanceLogin = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.btnSearch = false;
        this.count = 0;
        this.approveButtonEnabled = true;
        this.month = navParams.get("month");
        if (this.month != undefined) {
            this.month = this.month.substring(0, 3);
            this.searchboxValue = this.month;
        }
        // console.log(this.month)
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_17__login_login__["a" /* LoginPage */]);
        }
        else {
            this.loginUserGuid = localStorage.getItem("g_USER_GUID");
            this.claimrefguid = navParams.get("claimRefGuid");
            this.role = navParams.get("role");
            // alert(this.claimrefguid);
            if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
                this.FinanceLogin = true;
                if (this.role == "Payment") {
                    this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(STATUS=Approved)AND(PROFILE_LEVEL=3)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                    this.buttonText = "Pay";
                }
                else {
                    this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(STATUS=Pending)AND(PROFILE_LEVEL=2)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                    this.buttonText = "Approve";
                }
            }
            else {
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(ASSIGNED_TO=' + localStorage.getItem("g_USER_GUID") + ')AND(STATUS=Pending)AND(PROFILE_LEVEL=1)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.buttonText = "Approve";
                this.FinanceLogin = false;
            }
            // this.Pending = navParams.get("Pending");
            this.BindEmployeesbyDepartment();
            this.BindClaimTypes();
            this.BindYears();
            this.BindData("All", "All");
            // alert(this.Pending);
            // this.searchboxValue = this.Pending ;
            // if (this.searchboxValue != undefined) {
            //   this.onSearchInput( this.Pending);
            // }
            // else { this.BindData(); }
            // this.searchboxValue = this.month;
            // if (this.searchboxValue != undefined) {
            //   // alert(this.searchboxValue);
            //   this.onSearchInput();
            // }
            // else { this.BindData('All', 'All'); }
        }
        // this.navCtrl.getPrevious(FinancePaymentTasklistPage:this.page)
    }
    ClaimapprovertasklistPage_1 = ClaimapprovertasklistPage;
    ClaimapprovertasklistPage.prototype.BindData = function (ddlEmployee, ddlClaimTypes) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimrequestdetails = [];
            _this.claimrequestdetails = data["resource"];
            // console.log( this.claimrequestdetails)
            _this.totalClaimAmount = 0;
            var key;
            _this.claimrequestdetails.forEach(function (element) {
                element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                // if (this.FinanceLogin) {
                // For Status changing
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_18__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                // }
                // if (element.STATUS === 'Rejected') {
                //   element.STAGE_GUID = null;
                // }
                // else {
                //   key = element.PROFILE_LEVEL;
                // }
                // switch (key) {
                //   case 1: element.STAGE_GUID = 'Superior'; break;
                //   case 2: element.STAGE_GUID = 'Finance Executive'; break;
                //   case 3:
                //   case -1: element.STAGE_GUID = 'Finance & Admin'; break;
                // }
            });
            _this.claimrequestdetails1 = _this.claimrequestdetails;
            if (_this.claimrequestdetails.length != 0) {
                if (ddlEmployee.toString() !== "All") {
                    _this.claimrequestdetails = _this.claimrequestdetails.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlClaimTypes.toString() !== "All") {
                    _this.claimrequestdetails = _this.claimrequestdetails.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === ddlClaimTypes.toString(); });
                }
            }
            _this.FindTotalAmount();
            // Lakshman
            if (_this.searchboxValue != undefined) {
                _this.onSearchInput();
            }
            // Lakshman
            _this.btnSearch = true;
        });
    };
    ClaimapprovertasklistPage.prototype.FindTotalAmount = function () {
        var _this = this;
        this.totalClaimAmount = 0;
        this.claimrequestdetails.forEach(function (element) {
            _this.totalClaimAmount = _this.totalClaimAmount + element.CLAIM_AMOUNT;
        });
    };
    ClaimapprovertasklistPage.prototype.onSearchInput = function () {
        var _this = this;
        // alert('hi')
        // alert(this.searchboxValue);
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            // alert(this.searchboxValue);
            // alert(val);
            this.claimrequestdetails = this.claimrequestdetails1.filter(function (item) {
                var fullname;
                var claimtype;
                var status;
                var stage;
                var amount;
                var date;
                var month;
                //console.log(item);
                if (item.FULLNAME != null && !_this.FinanceLogin) {
                    fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIMTYPE != null) {
                    claimtype = item.CLAIMTYPE.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.TRAVEL_DATE != null) {
                    date = item.TRAVEL_DATE.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.STATUS != null) {
                    status = item.STATUS.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.STAGE != null) {
                    stage = item.STAGE.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIM_AMOUNT != null) {
                    amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (_this.month != undefined) {
                    if (item.MONTH != null) {
                        month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                    }
                }
                return ((fullname > -1)
                    || (date > -1)
                    || (claimtype > -1)
                    || (status > -1)
                    || (stage > -1)
                    || (amount > -1)
                    || (month > -1));
            });
        }
        else {
            this.claimrequestdetails = this.claimrequestdetails1;
        }
        this.FindTotalAmount();
    };
    ClaimapprovertasklistPage.prototype.checkAllCheckBoxes = function (event) {
        if (event.checked) {
            this.selectAll = true;
        }
        else {
            this.selectAll = false;
        }
    };
    // getCheckboxValue(event:Checkbox,claimRequestGuid:any){
    //   // console.log(event);
    //   // alert(event.id);
    //   // alert(event.checked);
    //   // alert(claimRequestGuid);
    // }
    ClaimapprovertasklistPage.prototype.getCheckboxValue = function (event, claimRequestGuid, level, status) {
        // alert(event.id);
        // alert(event.checked);
        // alert(claimRequestGuid);
        // debugger;
        var checkboxData = new __WEBPACK_IMPORTED_MODULE_6__models_checkbox_list_model__["a" /* Checkboxlist */](event.checked, claimRequestGuid, level, status);
        if (event.checked) {
            this.checkboxDataList.push(checkboxData);
        }
        else {
            var chkItem = this.checkboxDataList.find(function (item) { return item.ClaimRequestGuid == claimRequestGuid; });
            var index = this.checkboxDataList.indexOf(chkItem);
            if (index !== -1) {
                this.checkboxDataList.splice(index, 1);
            }
        }
        // console.log(this.checkboxDataList);
        // alert(this.checkboxDataList.length);
        // alert(this.checkboxDataList.find(item => item.Chkid == event.id).Chkid + ","+this.checkboxDataList.find(item => item.Chkid == event.id).Checked+ ","+this.checkboxDataList.find(item => item.Chkid == event.id).claimRequestGuid);
    };
    ClaimapprovertasklistPage.prototype.approveAll = function () {
        var _this = this;
        return new Promise(function () {
            _this.checkboxDataList.forEach(function (element) {
                if (element.Checked && element.status !== 'Paid') {
                    //debugger;
                    _this.profileMngProvider.ProcessProfileMng(null, _this.loginUserGuid, element.level, element.ClaimRequestGuid, true, 2);
                    _this.count++;
                }
            });
        });
    };
    ClaimapprovertasklistPage.prototype.approveClaims = function () {
        var _this = this;
        this.approveButtonEnabled = false;
        //console.table(this.claimrequestdetails);
        this.count = 0;
        //debugger;
        if (this.checkboxDataList.length > 0) {
            var temp = this.approveAll();
            temp.then(function () {
            });
            if (this.count > 0 && this.claimrefguid !== null && this.claimrefguid !== undefined) {
                this.claimreqData = [];
                var pendingFlag_1 = false;
                var approvedFlag_1 = false;
                var url_1 = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(STATUS!=Paid)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                console.log(url_1);
                this.api.getApiModel('main_claim_ref', 'filter=CLAIM_REF_GUID=' + this.claimrefguid)
                    .subscribe(function (data) {
                    var claimRefObj = data;
                    //debugger;
                    _this.http
                        .get(url_1)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data1) {
                        //debugger;
                        _this.claimreqData = data1["resource"];
                        if (_this.claimreqData !== null && _this.claimreqData !== undefined && _this.claimreqData.length > 0) {
                            _this.claimreqData.forEach(function (element) {
                                //debugger;
                                if (element.STATUS == "Pending" && !pendingFlag_1) {
                                    pendingFlag_1 = true;
                                }
                                else if (element.STATUS == "Approved" && !approvedFlag_1) {
                                    approvedFlag_1 = true;
                                }
                            });
                        }
                        if (pendingFlag_1)
                            claimRefObj["resource"][0].STATUS = 'Pending';
                        else if (approvedFlag_1)
                            claimRefObj["resource"][0].STATUS = 'Approved';
                        else
                            claimRefObj["resource"][0].STATUS = 'Paid';
                        //debugger;
                        _this.api.updateApiModel('main_claim_ref', claimRefObj, false).subscribe(function () {
                            alert('Claim has been Approved.');
                            _this.BindData("All", "All");
                            _this.checkboxDataList = [];
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__claimtasklist_claimtasklist__["a" /* ClaimtasklistPage */]);
                        });
                    });
                });
            }
            if (this.claimrefguid === null || this.claimrefguid === undefined) {
                alert('Claim has been Approved.');
                this.claimrequestdetails = [];
                this.checkboxDataList = [];
                this.BindData("All", "All");
                this.navCtrl.setRoot(ClaimapprovertasklistPage_1);
            }
        }
        else {
            alert("Please select the claim(s) which you want to approve.");
            this.approveButtonEnabled = true;
        }
    };
    ClaimapprovertasklistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimapprovertasklistPage');
    };
    // designation: string;
    ClaimapprovertasklistPage.prototype.viewClaim = function (claimRequestGUID, level, claimType) {
        this.claimRequestGUID = claimRequestGUID;
        this.level = level;
        // this.designation = designation;
        switch (claimType) {
            case '2d8d7c80-c9ae-9736-b256-4d592e7b7887':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_14__gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */]);
                break;
            case '37067b3d-1bf4-33a3-2b60-3ca40baf589a':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_11__overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */]);
                break;
            case '40dbaf56-98e4-77b9-df95-85ec232ff714':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_12__medical_claim_view_medical_claim_view__["a" /* MedicalClaimViewPage */]);
                break;
            case '58c59b56-289e-31a2-f708-138e81a9c823':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_9__travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */]);
                break;
            case 'd9567482-033a-6d92-3246-f33043155746':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_13__print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */]);
                break;
            case 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_10__entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */]);
                break;
            case '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_15__miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */]);
                break;
        }
    };
    ClaimapprovertasklistPage.prototype.pushPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isApprover: true,
            // approverDesignation: this.designation,
            cr_GUID: this.claimRequestGUID,
            level_no: this.level,
            approver_GUID: localStorage.getItem('g_USER_GUID')
        });
    };
    ClaimapprovertasklistPage.prototype.ionViewWillEnter = function () {
        //if(!this.isFormEdit)
        this.BindData("All", "All");
    };
    ClaimapprovertasklistPage.prototype.BindClaimTypes = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTypeList = data["resource"];
        });
    };
    ClaimapprovertasklistPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    ClaimapprovertasklistPage.prototype.BindEmployeesbyDepartment = function () {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList = data["resource"];
        });
    };
    ClaimapprovertasklistPage.prototype.SearchClaimsData = function () {
        this.btnSearch = false;
        if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
            if (this.role == "Payment") {
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(STATUS=Approved)AND(PROFILE_LEVEL=3)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            }
            else {
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(STATUS=Pending)AND(PROFILE_LEVEL=2)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            }
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(ASSIGNED_TO=' + localStorage.getItem("g_USER_GUID") + ')AND(STATUS=Pending)AND(PROFILE_LEVEL=1)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(this.ddlEmp, this.ddlClaim);
    };
    var ClaimapprovertasklistPage_1;
    ClaimapprovertasklistPage = ClaimapprovertasklistPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimapprovertasklist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimapprovertasklist/claimapprovertasklist.html"*/'<ion-header>\n\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title *ngIf="FinanceLogin && role==\'Payment\'">{{ "PAYMENT_DETAILS" | translate }}</ion-title>\n        <ion-title *ngIf="FinanceLogin && role==\'Validation\'">{{ "VALIDATION_DETAILS" | translate }}</ion-title>\n        <ion-title *ngIf="!FinanceLogin">{{ "SUPERIOR_TASK_DETAILS" | translate }}</ion-title>\n    </ion-navbar>\n    <ion-toolbar no-border-top color="primary200">\n        <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "CLAIM_TYPE" | translate }}</ion-label>\n        <ion-select interface="popover" [(ngModel)]="ddlClaim" #ddlClaimTypes>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let claimType of claimTypeList" [value]="claimType.CLAIM_TYPE_GUID">{{claimType.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha" *ngIf="!FinanceLogin">\n        <ion-label>{{ "YEAR" | translate }}</ion-label>\n        <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n            <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n        </ion-select>\n    </ion-item>\n\n    <ion-item class="fuha1" *ngIf="!FinanceLogin">\n        <ion-label>{{ "CLAIM_USER_NAME" | translate }}</ion-label>\n        <ion-select interface="popover" [(ngModel)]="ddlEmp" #ddlEmployee>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n\n    <ion-item>\n\n        <span item-end *ngIf="FinanceLogin; else loggedOut">\n            <button ion-button [disabled]="!btnSearch" (click)="SearchClaimsData()">{{ "SEARCH" | translate }}</button>\n        </span>\n\n        <ng-template #loggedOut item-end>\n            <button ion-button [disabled]="!btnSearch" (click)="SearchClaimsData()">{{ "SEARCH" | translate }}</button>\n        </ng-template>\n        <!-- <span *ngIf="!FinanceLogin">\n           \n        </span>\n        <span *ngIf="FinanceLogin">\n        </span> -->\n        <span item-end>\n            <button ion-button (click)="approveClaims()" [disabled]="!approveButtonEnabled">{{buttonText}}</button>\n            <!-- <button ion-button (click)="approveClaims()">{{ "BUTTON_TEXT" | translate }}</button> -->\n        </span>\n    </ion-item>\n\n\n    <ion-list>\n        <ion-item>\n            <table class="Tabler list ">\n                <tr class="linedsg TColor">\n                    <th class="tblBrLeft" style="width:60px">\n                        <ion-item>\n                            <ion-checkbox item-end (ionChange)="checkAllCheckBoxes($event)"></ion-checkbox>\n                        </ion-item>\n                    </th>\n                    <th style="width:42px;text-align: left;">No.</th>\n                    <th *ngIf="!FinanceLogin" style="text-align: left;">Name</th>\n                    <th style="width:185px;text-align: left;">Claim Type</th>\n                    <th style="width:145px; text-align: left;">Date</th>\n                    <th style="width:150px;text-align: left;">Status</th>\n                    <th style="width:150px;text-align: left;" hidden>Stage</th>\n                    <th style="width:137px;text-align: right;">Amount({{currency }})</th>\n                    <th class="tblBrRight" style="width:68px">Action</th>\n\n                </tr>\n\n                <tr class="col7" *ngFor="let claimrequestdetail of claimrequestdetails; let i=index">\n                    <td class="lgl1">\n                        <ion-item>\n                            <ion-checkbox item-end [checked]="selectAll" [disabled]="claimrequestdetail.STATUS==\'Paid\'" (ionChange)="getCheckboxValue($event,claimrequestdetail.CLAIM_REQUEST_GUID,claimrequestdetail.PROFILE_LEVEL,claimrequestdetail.STATUS)">\n                            </ion-checkbox>\n                        </ion-item>\n                    </td>\n                    <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n                    <td class="lgl1 getHeader" *ngIf="!FinanceLogin" reshead="Name" text-wrap>{{claimrequestdetail.FULLNAME}}</td>\n                    <td class="lgl1 getHeader" reshead="Claim Type">{{claimrequestdetail.CLAIMTYPE}}</td>\n                    <td class="lgl1 getHeader" reshead="Date">{{claimrequestdetail.TRAVEL_DATE | date: \'dd/MM/yyyy\'}}</td>\n                    <td class="lgl1 getHeader" reshead="Status">{{claimrequestdetail.STATUS}}</td>\n                    <td class="lgl1 getHeader" reshead="Stage" hidden>{{claimrequestdetail.STAGE}}</td>\n                    <td class="lgl1 getHeader" reshead="Amount" style="text-align: right;">{{claimrequestdetail.CLAIM_AMOUNT | number:\'1.2-2\'}}</td>\n                    <td class="lgl1 getHeader fColor" reshead="Action" style="text-align: right;">\n                        <button ion-button item-end (click)=\'viewClaim(claimrequestdetail.CLAIM_REQUEST_GUID, claimrequestdetail.PROFILE_LEVEL, claimrequestdetail.CLAIM_TYPE_GUID)\'>\n                            <ion-icon name="md-eye"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n                <tr class="col7">\n                    <td colspan="7" *ngIf="FinanceLogin"class="lgl11" style="color:#50C878;"> Total Amount({{currency }}) : {{totalClaimAmount | number:\'1.2-2\'}}</td>\n                </tr>\n\n                <tr class="col7">\n                    <td colspan="8" *ngIf="!FinanceLogin" class="lgl11" style="color:#50C878;"> Total Amount({{currency }}) : {{totalClaimAmount | number:\'1.2-2\'}}</td>\n                </tr>\n            </table>\n            <!-- <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls> -->\n        </ion-item>\n\n    </ion-list>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimapprovertasklist/claimapprovertasklist.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_8__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_7__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], ClaimapprovertasklistPage);
    return ClaimapprovertasklistPage;
}());

//# sourceMappingURL=claimapprovertasklist.js.map

/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EntertainmentclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_entertainmentclaim_service__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_main_claim_request_model__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { MasterClaim_Model } from '../../models/masterclaim_model';



// import { FileTransfer } from '@ionic-native/file-transfer';





//import { TravelclaimPage } from '../travel-claim/travel-claim.component';

//import { ExcelService } from '../../providers/excel.service';

var EntertainmentclaimPage = /** @class */ (function () {
    // cdRef: any;
    function EntertainmentclaimPage(httpService, numberPipe, apiMng, profileMng, navCtrl, viewCtrl, navParams, translate, fb, http, actionSheetCtrl, loadingCtrl, toastCtrl) {
        var _this = this;
        this.httpService = httpService;
        this.numberPipe = numberPipe;
        this.apiMng = apiMng;
        this.profileMng = profileMng;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.translate = translate;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_xml';
        this.mainClaimReq = new __WEBPACK_IMPORTED_MODULE_10__models_main_claim_request_model__["a" /* MainClaimRequestModel */]();
        this.currency = localStorage.getItem("cs_default_currency");
        this.Entertainment_Date_ngModel = this.apiMng.CreateTimestamp();
        this.claimFor = 'seg_project';
        this.AddTravelClicked = false;
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.AddLookupClicked = false;
        this.AddToLookupClicked = false;
        this.MainClaimSaved = false;
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        // Amount_valid:boolean = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        // change(value:any){
        //   //manually launch change detection
        //   this.cdRef.detectChanges();
        //   this.Entertainment_Amount_ngModel = value >= this.min_claim_amount && value <=this.max_claim_amount ;
        // }
        this.claimAmount = 0;
        // Lakshman
        // getCurrency(amount: number) {
        //   amount = Number(amount);
        //   let amount_test=this.numberPipe.transform(amount, '1.2-2');
        //   if (amount <this.min_claim_amount || amount>this.max_claim_amount) {
        //     // this.Entertainment_Amount_ngModel = null
        //     this.claimAmount = 0;
        //   } 
        //   else {
        //     this.claimAmount = amount;
        //     this.Entertainment_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        //   }
        // } 
        // Lakshman
        // Validate_claimAmount() {
        //   if (this.Entertainment_Amount_ngModel < this.min_claim_amount || this.Entertainment_Amount_ngModel > this.max_claim_amount) {
        //     this.Entertainment_Amount_ngModel = null;
        //     // return false;
        //     this.Entertainmentform.valid === false;
        //   }
        //   else {
        //     this.Entertainment_Amount_ngModel = this.Entertainment_Amount_ngModel;
        //     // return true;
        //   }
        // }
        this.imageURLEdit = null;
        this.isImage = false;
        this.selectedImage = null;
        this.newImage = true;
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        // this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        // this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        if (this.isFormEdit) {
            this.apiMng.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
        }
        this.Entertainmentform = fb.group({
            avatar1: null,
            avatar: null,
            soc_no: '',
            travel_date: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claimTypeGUID: '',
            attachment_GUID: ''
        });
    }
    EntertainmentclaimPage.prototype.getCurrency = function (amount) {
        amount = Number(amount);
        if (amount > 99999) {
            // alert('Amount should not exceed RM 99,999.00.')
            // // this.Entertainment_Amount_ngModel = null
            // this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.Entertainment_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    EntertainmentclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            _this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID)
                .subscribe(function (data) {
                _this.storeProjects = _this.projects = data["resource"];
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data["resource"];
                    // this.imageURLEdit =this.claimRequestData[0].ATTACHMENT_ID;
                    if (_this.claimRequestData[0].ATTACHMENT_ID !== null)
                        _this.imageURLEdit = _this.apiMng.getImageUrl(_this.claimRequestData[0].ATTACHMENT_ID);
                    _this.ImageUploadValidation = true;
                    _this.claimAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                    // if(this.Entertainment_Amount_ngModel <=this.min_claim_amount && this.Entertainment_Amount_ngModel <=this.max_claim_amount)
                    // {
                    //   alert('Amount range is '+ this.min_claim_amount+ '-' +  this.min_claim_amount);
                    //   return false;
                    // }else{
                    _this.Entertainment_Amount_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                    // }
                    // this.getCurrency(this.claimRequestData[0].MILEAGE_AMOUNT)               
                    if (_this.claimRequestData[0].SOC_GUID === null) {
                        _this.claimFor = 'seg_customer';
                        _this.isCustomer = true;
                        if (_this.storeCustomers != undefined)
                            _this.storeCustomers.forEach(function (element) {
                                if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                    _this.Customer_Lookup_ngModel = element.NAME;
                                    _this.Customer_GUID = element.CUSTOMER_GUID;
                                }
                            });
                    }
                    else {
                        _this.claimFor = 'seg_project';
                        _this.isCustomer = false;
                        if (_this.storeCustomers != undefined)
                            _this.storeProjects.forEach(function (element) {
                                if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                    _this.Project_Lookup_ngModel = element.project_name;
                                    _this.Entertainment_SOC_No_ngModel = element.soc;
                                    _this.Soc_GUID = element.SOC_GUID;
                                }
                            });
                    }
                    // this.Entertainment_Date_ngModel = new Date(this.claimRequestData[0].TRAVEL_DATE).toISOString();
                    _this.Entertainment_Date_ngModel = __WEBPACK_IMPORTED_MODULE_14_moment___default()(_this.claimRequestData[0].TRAVEL_DATE).format('YYYY-MM-DD');
                    // this.Entertainment_Amount_ngModel = this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Entertainment_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                });
            });
        });
    };
    EntertainmentclaimPage.prototype.GetSocNo = function (item) {
        this.Entertainment_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    EntertainmentclaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    EntertainmentclaimPage.prototype.claimForChanged = function () {
        // console.log(this.claimFor)
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    EntertainmentclaimPage.prototype.LoadProjects = function () {
        // this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    EntertainmentclaimPage.prototype.LoadCustomers = function () {
        // this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    EntertainmentclaimPage.prototype.CloseTravelClick = function () {
        this.AddToLookupClicked = false;
        this.AddTravelClicked = false;
    };
    EntertainmentclaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    EntertainmentclaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    EntertainmentclaimPage.prototype.AddLookupClick = function () {
        this.AddLookupClicked = true;
        this.currentItems = null;
    };
    EntertainmentclaimPage.prototype.AddToLookupClick = function () {
        this.AddLookupClicked = true;
        this.AddToLookupClicked = true;
        this.currentItems = null;
    };
    EntertainmentclaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
    };
    EntertainmentclaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    EntertainmentclaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val
        });
    };
    EntertainmentclaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    EntertainmentclaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    EntertainmentclaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    EntertainmentclaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.Entertainmentform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            //this.uniqueName = file.name;
            reader.onload = function () {
                _this.Entertainmentform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
    };
    EntertainmentclaimPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.Entertainmentform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        // this.imageGUID = this.uniqueName
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = false;
        this.saveIm();
    };
    EntertainmentclaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            // this.submitAction(this.uploadFileName, formValues);
            _this.imageGUID = _this.uniqueName;
            // this.imageGUID = this.uniqueName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    EntertainmentclaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        console.log(this.uniqueName);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.Entertainmentform.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    EntertainmentclaimPage.prototype.clearFile = function () {
        this.Entertainmentform.get('avatar').setValue(null);
        console.log(this.fileInput);
        this.fileInput.nativeElement.value = '';
    };
    EntertainmentclaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var x = this.Entertainment_Amount_ngModel.split(",").join("");
        var amount = Number(x);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.Entertainment_Amount_ngModel = null;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.Entertainment_Amount_ngModel = this.Entertainment_Amount_ngModel;
        }
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        //let claimReqMainRef: ClaimReqMain_Model = new ClaimReqMain_Model();
        // let claimRequestDataModel: MainClaimRequestModel = new MainClaimRequestModel();    
        this.apiMng.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
            .subscribe(function (data) {
            if (data["resource"].length <= 0)
                if (_this.apiMng.isClaimExpired(formValues.travel_date, true)) {
                    return;
                }
            if (_this.isFormEdit) {
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data;
                    _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                    _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.travel_date;
                    //this.claimRequestData["resource"][0].TRAVEL_DATE = moment(this.claimRequestData.TRAVEL_DATE).format('YYYY-MM-DDTHH:mm');
                    _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                    if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                        _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                        _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                        _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                        if (_this.rejectedLevel === 3)
                            _this.claimRequestData["resource"][0].STATUS = 'Approved';
                        else
                            _this.claimRequestData["resource"][0].STATUS = 'Pending';
                    }
                    if (_this.isCustomer) {
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                        _this.claimRequestData["resource"][0].SOC_GUID = null;
                    }
                    else {
                        _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                    }
                    //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                    if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    else {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    //-------------------------------------------------------------------
                    //this.claimRequestData[0].STATUS = 'Pending';
                    // this.apiMng.updateMyClaimRequest(this.claimRequestData[0]).subscribe(res => alert('Claim details are submitted successfully.'))
                    var month = new Date(formValues.travel_date).getMonth() + 1;
                    var year = new Date(formValues.travel_date).getFullYear();
                    _this.apiMng.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                        .subscribe(function (claimRefdata) {
                        _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                        _this.apiMng.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                            alert('Claim details updated successfully.');
                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
                        });
                    });
                    // this.apiMng.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(() => {
                    //   //Send Email------------------------------------------------
                    //   let start_DT: string = "";
                    //   let end_DT: string = "";
                    //   // this.apiMng.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, start_DT, end_DT, this.claimRequestData["resource"][0].CREATION_TS, formValues.travel_date, this.claimRequestGUID);
                    //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                    //   // this.apiMng.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, "", "", moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.travel_date, this.claimRequestGUID, "", "", formValues.description, this.Soc_GUID, this.Customer_GUID);
                    //   //----------------------------------------------------------            
                    //   alert('Claim details updated successfully.');
                    //   this.navCtrl.push(UserclaimslistPage);
                    // });
                });
            }
            else {
                formValues.claimTypeGUID = 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1';
                formValues.attachment_GUID = _this.imageGUID;
                //formValues.attachment_GUID =  this.uniqueName ;
                _this.travelAmount = _this.claimAmount;
                formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
            }
        });
    };
    EntertainmentclaimPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EntertainmentclaimPage.prototype, "fileInput", void 0);
    EntertainmentclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-entertainmentclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/entertainmentclaim/entertainmentclaim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ \'ENTERTAINMENT_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-segment [(ngModel)]="claimFor" color="primary500">\n    <ion-segment-button value="seg_project" (click)="claimForChanged()">\n      {{"PROJECT_TITLE" | translate }}\n    </ion-segment-button>\n    <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n      {{"CUSTOMER_TITLE" | translate }}\n    </ion-segment-button>\n  </ion-segment>\n\n  <div [ngSwitch]="claimFor">\n    <div *ngSwitchDefault>\n      <ion-item text-wrap>\n        <ion-label color="primary500" floating> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea (click)="CustomerLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Customer_Lookup_ngModel" type="text"></ion-textarea>\n      </ion-item>\n    </div>\n    <div *ngSwitchCase="\'seg_project\'">\n      <ion-item text-wrap style="width:80%;display: inline-block;">\n        <ion-label color="primary500" floating> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea (click)="ProjectLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel" [ngModelOptions]="{standalone: true}"\n          type="text"></ion-textarea>\n      </ion-item>\n      <ion-item style="width:19%;display: inline-block;">\n        <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n        <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="Entertainment_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n          type="text" disabled="true"></ion-input>\n      </ion-item>\n    </div>\n  </div>\n\n  <form [formGroup]="Entertainmentform">\n    <ion-item class="fuha">\n      <ion-label color="primary500" floating>{{ "ENTERTAINMENT_DATE_LABEL" | translate }}</ion-label>\n      <ion-datetime displayFormat="DD/MM/YYYY" [(ngModel)]="Entertainment_Date_ngModel" formControlName="travel_date" max={{validDate}}></ion-datetime>\n    </ion-item>\n\n    <ion-item class="fuha">\n\n      <ion-label color="primary500" floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{currency }}</ion-label>\n      <ion-input type="text"  (change)=\'getCurrency($event.target.value)\' formControlName="claim_amount" [(ngModel)]="Entertainment_Amount_ngModel">\n      </ion-input>\n   </ion-item>    \n  <!-- <ion-item *ngIf="!Entertainmentform.controls.claim_amount.valid  && (Entertainmentform.controls.claim_amount.dirty)">\n    <p style="color: red; text-align:right;margin-right: 34%;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n</ion-item> -->\n\n\n    <ion-item>\n      <ion-label color="primary500" floating> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="Entertainment_Description_ngModel"></ion-input>\n    </ion-item>\n\n    <ion-item class="text">\n      <ion-label>Attachment :</ion-label>\n      <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n      <!-- <button ion-button color="primary500" item-end (click)="saveIm()" [disabled]="!chooseFile">Upload image</button> -->\n      <!-- <ion-button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file> </ion-button> -->\n    </ion-item>\n\n    <div *ngIf="isImage">\n      <img src="{{ProfileImage}}" style="width: 20%">\n    </div>\n\n    <div *ngIf="imageURLEdit!==null">\n      <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(imageURLEdit)" *ngIf="imageURLEdit!==null">\n        View Receipt\n      </button> -->\n      <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a> \n    </div>\n\n    <div class="btn">\n      <button ion-button color="primary500" (click)=\'submitAction(Entertainmentform.value)\' [disabled]="(Entertainmentform.valid && !ImageUploadValidation) || !Entertainmentform.valid">{{ \'SUBMIT\'}}</button>\n    </div>\n    <!-- <ion-item *ngIf="!Entertainmentform.controls.claim_amount.valid  && (Entertainmentform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Claim amount should be {{currency}} {{min_claim_amount}} - {{max_claim_amount}}</p>\n  </ion-item> -->\n    </form>\n  <div class="blackcontainer" *ngIf="displayImage">\n  </div>\n  <div class="popup1" padding *ngIf="displayImage">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Receipt</div>\n        <button class="btnR" (click)="CloseDisplayImage()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n      <a href={{imageURL}} *ngIf="!isImage" target=_ blank>VIEW</a>\n\n      <!-- <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null"> -->\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Entertainment_ProjectName_ngModel" (ionInput)="searchProject($event)" placeholder=\'{{ "PROJECT_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of projects">\n            <button ion-item (click)="GetSocNo(item)">\n              <ion-label text-wrap>{{item.project_name}}\n                <!-- <>{{item.soc}}</ion-label> -->\n                [{{item.soc}}]</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Entertainment_ProjectName_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n              <ion-label text-wrap>{{item.NAME}}</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/entertainmentclaim/entertainmentclaim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_entertainmentclaim_service__["a" /* EntertainmentClaim_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_12__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_11__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], EntertainmentclaimPage);
    return EntertainmentclaimPage;
}());

//# sourceMappingURL=entertainmentclaim.js.map

/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OvertimeclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_overtimeclaim_service__ = __webpack_require__(672);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import { TravelclaimPage } from '../travel-claim/travel-claim.component';










var OvertimeclaimPage = /** @class */ (function () {
    function OvertimeclaimPage(numberPipe, apiMng, profileMng, navCtrl, viewCtrl, navParams, translate, fb, http, actionSheetCtrl, toastCtrl) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.apiMng = apiMng;
        this.profileMng = profileMng;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.translate = translate;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.toastCtrl = toastCtrl;
        this.loading = false;
        this.claimFor = 'seg_project';
        this.currency = localStorage.getItem("cs_default_currency");
        this.AddTravelClicked = false;
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.AddLookupClicked = false;
        this.AddToLookupClicked = false;
        this.MainClaimSaved = false;
        this.Start_DT_ngModel = this.apiMng.CreateTimestamp();
        this.End_DT_ngModel = this.apiMng.CreateTimestamp();
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        this.claimAmount = 0;
        // Lakshman
        // getCurrency(amount: number) {
        //   amount = Number(amount);
        //   let amount_test=this.numberPipe.transform(amount, '1.2-2');
        //   if (amount <this.min_claim_amount || amount>this.max_claim_amount) {
        //     this.OT_Amount_ngModel = null
        //     this.claimAmount = 0;
        //   } 
        //   else {
        //     this.claimAmount = amount;
        //     this.OT_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        //   }
        // } 
        // Lakshman
        this.imageURLEdit = null;
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        //  this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        //  this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        var currency = localStorage.getItem("cs_default_currency");
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        if (this.isFormEdit) {
            this.apiMng.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
        }
        this.OTform = fb.group({
            avatar: null,
            soc_no: '',
            // travel_date:  ['', Validators.required],     
            start_DT: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            end_DT: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            attachment_GUID: '', claimTypeGUID: '',
        });
    }
    OvertimeclaimPage.prototype.getCurrency = function (amount) {
        amount = Number(amount);
        if (amount > 99999) {
            // alert('Amount should not exceed RM 9,9999.00.')
            // this.OT_Amount_ngModel = null
            // this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.OT_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    OvertimeclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            _this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID)
                .subscribe(function (data) {
                _this.storeProjects = _this.projects = data["resource"];
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data["resource"];
                    // if (this.claimRequestData[0].ATTACHMENT_ID !== null)
                    // this.imageURLEdit = this.apiMng.getImageUrl(this.claimRequestData[0].ATTACHMENT_ID);
                    // this.ImageUploadValidation = true;
                    // this.getCurrency(this.claimRequestData[0].MILEAGE_AMOUNT)
                    if (_this.claimRequestData[0].SOC_GUID === null) {
                        _this.claimFor = 'seg_customer';
                        _this.isCustomer = true;
                        if (_this.storeCustomers != undefined)
                            _this.storeCustomers.forEach(function (element) {
                                if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                    _this.Customer_Lookup_ngModel = element.NAME;
                                    _this.Customer_GUID = element.CUSTOMER_GUID;
                                }
                            });
                    }
                    else {
                        _this.claimFor = 'seg_project';
                        _this.isCustomer = false;
                        if (_this.storeCustomers != undefined)
                            _this.storeProjects.forEach(function (element) {
                                if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                    _this.Project_Lookup_ngModel = element.project_name;
                                    _this.OT_SOC_No_ngModel = element.soc;
                                    _this.Soc_GUID = element.SOC_GUID;
                                }
                            });
                    }
                    // this.Start_DT_ngModel = new Date(this.claimRequestData[0].START_TS).toISOString();
                    // this.End_DT_ngModel = new Date(this.claimRequestData[0].END_TS).toISOString();
                    _this.Start_DT_ngModel = __WEBPACK_IMPORTED_MODULE_13_moment___default()(_this.claimRequestData[0].START_TS).format('YYYY-MM-DDTHH:mm');
                    _this.End_DT_ngModel = __WEBPACK_IMPORTED_MODULE_13_moment___default()(_this.claimRequestData[0].END_TS).format('YYYY-MM-DDTHH:mm');
                    _this.claimAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.OT_Amount_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                    // this.OT_Amount_ngModel = this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.OT_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                });
            });
        });
    };
    OvertimeclaimPage.prototype.GetSocNo = function (item) {
        this.OT_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    OvertimeclaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    OvertimeclaimPage.prototype.claimForChanged = function () {
        // console.log(this.claimFor)
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    OvertimeclaimPage.prototype.LoadProjects = function () {
        // this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    OvertimeclaimPage.prototype.LoadCustomers = function () {
        // this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    OvertimeclaimPage.prototype.CloseTravelClick = function () {
        this.AddToLookupClicked = false;
        this.AddTravelClicked = false;
    };
    OvertimeclaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    OvertimeclaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    OvertimeclaimPage.prototype.AddLookupClick = function () {
        this.AddLookupClicked = true;
        this.currentItems = null;
    };
    OvertimeclaimPage.prototype.AddToLookupClick = function () {
        this.AddLookupClicked = true;
        this.AddToLookupClicked = true;
        this.currentItems = null;
    };
    OvertimeclaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
    };
    OvertimeclaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    OvertimeclaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val
        });
    };
    OvertimeclaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    OvertimeclaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    OvertimeclaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    OvertimeclaimPage.prototype.validateDate = function (startDate, endDate) {
        var today = this.apiMng.CreateTimestamp();
        var start = startDate;
        var end = endDate;
        // let today = Date.parse(new Date().toISOString())
        // let start = Date.parse(this.Start_DT_ngModel)
        // let end = Date.parse(this.End_DT_ngModel)
        if (start > end || today < start) {
            alert('The date range is not valid.');
            return false;
        }
        return true;
    };
    OvertimeclaimPage.prototype.onAllowanceSelect = function (allowance) {
        this.allowanceGUID = allowance.ALLOWANCE_GUID;
    };
    OvertimeclaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var x = this.OT_Amount_ngModel.split(",").join("");
        var amount = Number(x);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.OT_Amount_ngModel = null;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.OT_Amount_ngModel = this.OT_Amount_ngModel;
        }
        formValues.travel_date = formValues.start_DT;
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        if (this.validateDate(this.Start_DT_ngModel, this.End_DT_ngModel)) {
            this.apiMng.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
                .subscribe(function (data) {
                if (data["resource"].length <= 0)
                    if (_this.apiMng.isClaimExpired(formValues.travel_date, true)) {
                        return;
                    }
                if (_this.isFormEdit) {
                    _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                        .subscribe(function (data) {
                        _this.claimRequestData = data;
                        _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                        _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.claimAmount;
                        _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.claimAmount;
                        _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.travel_date;
                        _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                        _this.claimRequestData["resource"][0].START_TS = formValues.start_DT;
                        _this.claimRequestData["resource"][0].END_TS = formValues.end_DT;
                        if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                            _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                            _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                            _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                            if (_this.rejectedLevel === 3)
                                _this.claimRequestData["resource"][0].STATUS = 'Approved';
                            else
                                _this.claimRequestData["resource"][0].STATUS = 'Pending';
                        }
                        //this.claimRequestData[0].claim_amount= formValues.claim_amount;
                        if (_this.isCustomer) {
                            _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                            _this.claimRequestData["resource"][0].SOC_GUID = null;
                        }
                        else {
                            _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                            _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                        }
                        //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                        if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                            _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + ")" + " User From:W";
                        }
                        else {
                            _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + ")" + " User From:W";
                        }
                        //-------------------------------------------------------------------
                        //this.claimRequestData[0].STATUS = 'Pending';
                        // this.apiMng.updateMyClaimRequest(this.claimRequestData[0]).subscribe(res => alert('Claim details are submitted successfully.'))
                        var month = new Date(formValues.travel_date).getMonth() + 1;
                        var year = new Date(formValues.travel_date).getFullYear();
                        _this.apiMng.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                            .subscribe(function (claimRefdata) {
                            _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                            _this.apiMng.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                                alert('Claim details updated successfully.');
                                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
                            });
                        });
                        // this.apiMng.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(() => {
                        //   //Send Email------------------------------------------------
                        //   // this.apiMng.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, formValues.start_DT, formValues.end_DT, moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.start_DT, this.claimRequestGUID);
                        //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                        //   // this.apiMng.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, formValues.start_DT, formValues.end_DT, moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.travel_date, this.claimRequestGUID, "", "", formValues.description, this.Soc_GUID, this.Customer_GUID);
                        //   //----------------------------------------------------------
                        //   alert('Claim details updated successfully.');
                        //   this.navCtrl.push(UserclaimslistPage);
                        // });
                    });
                }
                else {
                    formValues.claimTypeGUID = '37067b3d-1bf4-33a3-2b60-3ca40baf589a';
                    formValues.attachment_GUID = _this.imageGUID;
                    _this.travelAmount = _this.claimAmount;
                    formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                    _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
                }
            });
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], OvertimeclaimPage.prototype, "fileInput", void 0);
    OvertimeclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-overtimeclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/overtimeclaim/overtimeclaim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ \'OVERTIME_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-segment [(ngModel)]="claimFor" color="primary500">       \n        <ion-segment-button value="seg_project" (click)="claimForChanged()">\n          {{"PROJECT_TITLE" | translate }}\n        </ion-segment-button>\n        <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n          {{"CUSTOMER_TITLE" | translate }}\n        </ion-segment-button>\n      </ion-segment>\n  \n      <div [ngSwitch]="claimFor">\n        <div *ngSwitchDefault>\n          \n          <ion-item  text-wrap>\n            <ion-label color="primary500" floating> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="CustomerLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Customer_Lookup_ngModel" type="text"></ion-textarea>\n  \n          </ion-item>\n        </div>\n        <div *ngSwitchCase="\'seg_project\'">\n          <ion-item  text-wrap style="width:80%;display: inline-block;">\n            <ion-label color="primary500" floating> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="ProjectLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel" [ngModelOptions]="{standalone: true}"\n              type="text"></ion-textarea>\n            <!-- <button color="primary500" ion-button outline item-start icon-left (click)="ProjectLookup()">\n              <ion-icon name="eye"></ion-icon>\n              {{ "PROJECT_LOOKUP_BUTTON" | translate }} </button> -->\n          </ion-item>\n          <ion-item style="width:19%;display: inline-block;">\n            <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n            <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="OT_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n              type="text" disabled="true" ></ion-input>\n          </ion-item>\n        </div>\n      </div>\n\n    <form [formGroup]="OTform">    \n      <!-- minuteValues="0,5,10,15,20,25,30,35,40,45,50,55" -->\n    <ion-item  class="fuha">\n      <ion-label color="primary500" floating>{{ "START_DT_LABEL" | translate }}</ion-label>\n      <ion-datetime  displayFormat="DD/MM/YYYY HH:mm" \n      [(ngModel)]="Start_DT_ngModel" formControlName="start_DT"  ></ion-datetime>\n    </ion-item>\n    <!-- max={{validDate}} -->\n    <!-- minuteValues="0,5,10,15,20,25,30,35,40,45,50,55" -->\n    <ion-item  class="fuha">\n      <ion-label color="primary500" floating>{{ "END_DT_LABEL" | translate }}</ion-label>\n      <ion-datetime  displayFormat="DD/MM/YYYY HH:mm" \n      [(ngModel)]="End_DT_ngModel" formControlName="end_DT"  ></ion-datetime>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="primary500" floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ currency }}</ion-label>\n      <ion-input (change)=\'getCurrency($event.target.value)\' type="text" formControlName="claim_amount" \n      [(ngModel)]="OT_Amount_ngModel"></ion-input>\n    </ion-item>\n    <!-- <ion-item *ngIf="!OTform.controls.claim_amount.valid  && (OTform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:left;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n  </ion-item> -->\n\n    <ion-item>\n      <ion-label color="primary500" floating> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="OT_Description_ngModel" ></ion-input>\n    </ion-item>\n\n    <div class="btn">     \n      <button ion-button color="primary500" (click)=\'submitAction(OTform.value)\' [disabled]= "!OTform.valid">{{ \'SUBMIT\'}}</button>     \n   </div>   \n   <!-- <ion-item *ngIf="!OTform.controls.claim_amount.valid  && (OTform.controls.claim_amount.dirty)">\n    <p style="color: red; text-align:right;margin-right: 34%;">Claim amount should be {{currency}} {{min_claim_amount}} - {{max_claim_amount}}</p>\n</ion-item> -->\n  </form>\n\n  <div class="blackcontainer" *ngIf="AddLookupClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">Search Location</div>\n        <button class="btnR" (click)="CloseLookupClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar (ionInput)="searchLocation($event)" placeholder="Enter Keywords"></ion-searchbar>\n      <ion-list>\n        <ion-item-sliding *ngFor="let item of currentItems">\n          <button ion-item (click)="openItem(item)">\n            <ion-label> {{item.description}}</ion-label>\n          </button>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar color="primary500" [(ngModel)]="Travel_ProjectName_ngModel" (ionInput)="searchProject($event)" placeholder=\'{{ "PROJECT_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n      <ion-list>\n        <div *ngFor="let item of projects">\n          <button ion-item (click)="GetSocNo(item)">\n            <ion-label text-wrap>{{item.project_name}}\n              [{{item.soc}}]</ion-label> \n          </button>\n        </div>\n      </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_Customer_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n      <ion-list>\n        <div *ngFor="let item of customers">\n          <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n            <ion-label text-wrap>{{item.NAME}}</ion-label>\n          </button>\n        </div>\n      </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n  \n</ion-content>\n\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/overtimeclaim/overtimeclaim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_6__services_overtimeclaim_service__["a" /* OvertimeClaim_Service */], __WEBPACK_IMPORTED_MODULE_7__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_8__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_8__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_11__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_10__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], OvertimeclaimPage);
    return OvertimeclaimPage;
}());

//# sourceMappingURL=overtimeclaim.js.map

/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PrintclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_printingclaim_service__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









// import { TravelclaimPage } from '../travel-claim/travel-claim.component';







var PrintclaimPage = /** @class */ (function () {
    function PrintclaimPage(numberPipe, apiMng, profileMng, navCtrl, viewCtrl, navParams, translate, fb, http, actionSheetCtrl, loadingCtrl, toastCtrl) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.apiMng = apiMng;
        this.profileMng = profileMng;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.translate = translate;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.MainClaimSaved = false;
        this.Printing_Date_ngModel = this.apiMng.CreateTimestamp();
        this.isCustomer = false;
        this.validDate = new Date().toISOString();
        this.claimFor = 'seg_project';
        this.currency = localStorage.getItem("cs_default_currency");
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.AddLookupClicked = false;
        this.AddToLookupClicked = false;
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        this.claimAmount = 0;
        // Lakshman
        // getCurrency(amount: number) {
        //   amount = Number(amount);
        //   let amount_test=this.numberPipe.transform(amount, '1.2-2');
        //   if (amount <this.min_claim_amount || amount>this.max_claim_amount) {
        //     this.Printing_Amount_ngModel = null
        //     this.claimAmount = 0;
        //   } 
        //   else {
        //     this.claimAmount = amount;
        //     this.Printing_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        //   }
        // } 
        // Lakshman
        this.imageURLEdit = null;
        this.isImage = false;
        this.newImage = true;
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        // this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        // this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_14__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        var currency = localStorage.getItem("cs_default_currency");
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        if (this.isFormEdit) {
            this.apiMng.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
        }
        this.Printform = fb.group({
            avatar1: null,
            claimTypeGUID: '',
            avatar: null,
            soc_no: '',
            travel_date: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            attachment_GUID: ''
        });
    }
    PrintclaimPage.prototype.getCurrency = function (amount) {
        amount = Number(amount);
        if (amount > 99999) {
            // alert('Amount should not exceed RM 9,9999.00.')
            // this.Printing_Amount_ngModel = null
            // this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.Printing_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    PrintclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            _this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID)
                .subscribe(function (data) {
                _this.storeProjects = _this.projects = data["resource"];
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data["resource"];
                    // this.imageURLEdit = this.claimRequestData[0].ATTACHMENT_ID;
                    if (_this.claimRequestData[0].ATTACHMENT_ID !== null)
                        _this.imageURLEdit = _this.apiMng.getImageUrl(_this.claimRequestData[0].ATTACHMENT_ID);
                    _this.ImageUploadValidation = true;
                    _this.claimAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Printing_Amount_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                    // this.getCurrency(this.claimRequestData[0].MILEAGE_AMOUNT)
                    if (_this.claimRequestData[0].SOC_GUID === null) {
                        _this.claimFor = 'seg_customer';
                        _this.isCustomer = true;
                        if (_this.storeCustomers != undefined)
                            _this.storeCustomers.forEach(function (element) {
                                if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                    _this.Customer_Lookup_ngModel = element.NAME;
                                    _this.Customer_GUID = element.CUSTOMER_GUID;
                                }
                            });
                    }
                    else {
                        _this.claimFor = 'seg_project';
                        _this.isCustomer = false;
                        if (_this.storeCustomers != undefined)
                            _this.storeProjects.forEach(function (element) {
                                if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                    _this.Project_Lookup_ngModel = element.project_name;
                                    _this.Print_SOC_No_ngModel = element.soc;
                                    _this.Soc_GUID = element.SOC_GUID;
                                }
                            });
                    }
                    _this.Printing_Date_ngModel = new Date(_this.claimRequestData[0].TRAVEL_DATE).toISOString();
                    // this.Printing_Amount_ngModel = this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Printing_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                });
            });
        });
    };
    PrintclaimPage.prototype.GetSocNo = function (item) {
        this.Print_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    PrintclaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    PrintclaimPage.prototype.claimForChanged = function () {
        // console.log(this.claimFor)
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    PrintclaimPage.prototype.LoadProjects = function () {
        // this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    PrintclaimPage.prototype.LoadCustomers = function () {
        // this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    PrintclaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    PrintclaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    PrintclaimPage.prototype.AddLookupClick = function () {
        this.AddLookupClicked = true;
        this.currentItems = null;
    };
    PrintclaimPage.prototype.AddToLookupClick = function () {
        this.AddLookupClicked = true;
        this.AddToLookupClicked = true;
        this.currentItems = null;
    };
    PrintclaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
    };
    PrintclaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    PrintclaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    PrintclaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    PrintclaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val
        });
    };
    PrintclaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    PrintclaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.Printform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Printform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
        //this.chooseFile = true;
    };
    PrintclaimPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.Printform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.ImageUploadValidation = false;
        this.newImage = false;
        this.onFileChange(e);
        this.saveIm();
    };
    PrintclaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            //this.submitAction(this.uploadFileName, formValues);
            _this.imageGUID = _this.uniqueName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    PrintclaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.Printform.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    PrintclaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var x = this.Printing_Amount_ngModel.split(",").join("");
        var amount = Number(x);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.Printing_Amount_ngModel = null;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.Printing_Amount_ngModel = this.Printing_Amount_ngModel;
        }
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        this.apiMng.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
            .subscribe(function (data) {
            if (data["resource"].length <= 0)
                if (_this.apiMng.isClaimExpired(formValues.travel_date, true)) {
                    return;
                }
            if (_this.isFormEdit) {
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data;
                    _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                    _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.travel_date;
                    _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                    if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                        _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                        _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                        _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                        if (_this.rejectedLevel === 3)
                            _this.claimRequestData["resource"][0].STATUS = 'Approved';
                        else
                            _this.claimRequestData["resource"][0].STATUS = 'Pending';
                    }
                    //this.claimRequestData[0].claim_amount= formValues.claim_amount;
                    if (_this.isCustomer) {
                        // this.claimRequestData["resource"][0].CUSTOMER_GUID = formValues.soc_no;
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                        _this.claimRequestData["resource"][0].SOC_GUID = null;
                    }
                    else {
                        // this.claimRequestData["resource"][0].SOC_GUID = formValues.soc_no;
                        _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                    }
                    //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                    if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    else {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    //-------------------------------------------------------------------
                    //this.claimRequestData[0].STATUS = 'Pending';
                    // this.apiMng.updateMyClaimRequest(this.claimRequestData[0]).subscribe(res => alert('Claim details are submitted successfully.'))
                    var month = new Date(formValues.travel_date).getMonth() + 1;
                    var year = new Date(formValues.travel_date).getFullYear();
                    _this.apiMng.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                        .subscribe(function (claimRefdata) {
                        _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                        _this.apiMng.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                            alert('Claim details updated successfully.');
                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
                        });
                    });
                    // this.apiMng.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(() => {
                    //   //Send Email------------------------------------------------
                    //   let start_DT: string = "";
                    //   let end_DT: string = "";
                    //   // this.apiMng.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, start_DT, end_DT, this.claimRequestData["resource"][0].CREATION_TS, formValues.travel_date, this.claimRequestGUID);
                    //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                    //   // this.apiMng.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, "", "", moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.travel_date, this.claimRequestGUID, "", "", formValues.description, this.Soc_GUID, this.Customer_GUID);
                    //   //----------------------------------------------------------
                    //   alert('Claim details updated successfully.');
                    //   this.navCtrl.push(UserclaimslistPage);
                    // });
                });
            }
            else {
                formValues.claimTypeGUID = 'd9567482-033a-6d92-3246-f33043155746';
                formValues.attachment_GUID = _this.imageGUID;
                _this.travelAmount = _this.claimAmount;
                formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
            }
        });
    };
    PrintclaimPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], PrintclaimPage.prototype, "fileInput", void 0);
    PrintclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-printclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/printclaim/printclaim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ \'PRINT_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-segment color="primary500" [(ngModel)]="claimFor">        \n        <ion-segment-button value="seg_project" (click)="claimForChanged()">\n          {{"PROJECT_TITLE" | translate }}\n        </ion-segment-button>\n        <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n          {{"CUSTOMER_TITLE" | translate }}\n        </ion-segment-button>\n      </ion-segment>\n\n    <div [ngSwitch]="claimFor">\n        <div *ngSwitchDefault  ngSelected="selected">\n         \n          <ion-item text-wrap>\n            <ion-label color="primary500" floating> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="CustomerLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Customer_Lookup_ngModel" type="text" [disabled]="true"></ion-textarea>\n          </ion-item>\n        </div>\n        <div *ngSwitchCase="\'seg_project\'">\n           \n          <ion-item text-wrap style="width:80%;display: inline-block;"> \n            <ion-label color="primary500" floating> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="ProjectLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel" [disabled]="true"\n              type="text"></ion-textarea>\n          </ion-item>\n          <ion-item style="width:19%;display: inline-block;">\n            <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n            <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="Print_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n              type="text" disabled="true"></ion-input>\n          </ion-item>\n        </div>\n      </div>\n\n\n  <form [formGroup]="Printform">\n\n    <ion-item class="fuha">\n      <ion-label color="primary500" floating>{{ "PRINTING_DATE_LABEL" | translate }}</ion-label>\n      <ion-datetime displayFormat="DD/MM/YYYY" formControlName="travel_date" [(ngModel)]="Printing_Date_ngModel" max={{validDate}}></ion-datetime>\n    </ion-item>\n\n    <ion-item class="fuha">\n      <ion-label color="primary500" floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ currency }}</ion-label>\n      <!-- <ion-label> {{travelAmount | number}} </ion-label> -->\n      <ion-input type="text" (change)=\'getCurrency($event.target.value)\' formControlName="claim_amount" [(ngModel)]="Printing_Amount_ngModel"></ion-input>\n    </ion-item>\n    <!-- <ion-item *ngIf="!Printform.controls.claim_amount.valid  && (Printform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n  </ion-item> -->\n    <ion-item>\n      <ion-label color="primary500" floating> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="Printing_Description_ngModel"></ion-input>\n    </ion-item>\n\n    <ion-item class="text">\n      <ion-label>Attachment :</ion-label>\n      <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n      <!-- <button ion-button color="primary500" item-end (click)="saveIm()" [disabled]="!chooseFile">Upload image</button> -->\n    </ion-item>\n\n    <div  *ngIf= "isImage">\n      <img src="{{ProfileImage}}" style="width: 20%">\n    </div>  \n\n    <div *ngIf="imageURLEdit!==null">\n      <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(imageURLEdit)" *ngIf="imageURLEdit!==null">\n          View Receipt\n          </button> -->\n          <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a> \n        </div>\n\n    <div class="btn">\n      <button ion-button color="primary500" (click)=\'submitAction(Printform.value)\' [disabled]="(Printform.valid && !ImageUploadValidation) || !Printform.valid">{{ \'SUBMIT\'}}</button>\n    </div>   \n    <!-- <ion-item *ngIf="!Printform.controls.claim_amount.valid  && (Printform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Claim amount should be {{currency}} {{min_claim_amount}} - {{max_claim_amount}}</p>\n  </ion-item> -->\n  </form>\n\n  <div class="popup2" padding *ngIf="displayImage">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Claim Details</div>\n        <button class="btnR" (click)="CloseDisplayImage()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n      <a href={{imageURL}} *ngIf="!isImage" target = _blank>VIEW</a>\n      <!-- <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null"> -->\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="AddLookupClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">Search Location</div>\n        <button class="btnR" (click)="CloseLookupClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar (ionInput)="searchLocation($event)" placeholder="Enter Keywords"></ion-searchbar>\n      <ion-list>\n        <ion-item-sliding *ngFor="let item of currentItems">\n          <button ion-item (click)="openItem(item)">\n            <ion-label> {{item.description}}</ion-label>\n          </button>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_ProjectName_ngModel" (ionInput)="searchProject($event)" placeholder=\'{{ "PROJECT_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of projects">\n            <button ion-item (click)="GetSocNo(item)">\n              <ion-label text-wrap>{{item.project_name}}\n                [{{item.soc}}]</ion-label> \n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_Customer_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n              <ion-label text-wrap>{{item.NAME}}</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div> \n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/printclaim/printclaim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_printingclaim_service__["a" /* PrintingClaim_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_11__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_12__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], PrintclaimPage);
    return PrintclaimPage;
}());

//}
//# sourceMappingURL=printclaim.js.map

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GiftclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_giftclaim_service__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { MasterClaim_Model } from '../../models/masterclaim_model';








//import { TravelclaimPage } from '../travel-claim/travel-claim.component';


var GiftclaimPage = /** @class */ (function () {
    // Lakshman
    // getCurrency(amount: number) {
    //   amount = Number(amount);
    //   let amount_test=this.numberPipe.transform(amount, '1.2-2');
    //   if (amount <this.min_claim_amount || amount>this.max_claim_amount) {
    //     this.Gift_Amount_ngModel = null
    //     this.claimAmount = 0;
    //   } 
    //   else {
    //     this.claimAmount = amount;
    //     this.Gift_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
    //   }
    // } 
    // Lakshman
    function GiftclaimPage(numberPipe, apiMng, profileMng, navCtrl, viewCtrl, translate, navParams, fb, http, actionSheetCtrl, loadingCtrl, toastCtrl) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.apiMng = apiMng;
        this.profileMng = profileMng;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.translate = translate;
        this.navParams = navParams;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.claimFor = 'seg_project';
        this.currency = localStorage.getItem("cs_default_currency");
        this.Gift_Date_ngModel = this.apiMng.CreateTimestamp();
        this.AddTravelClicked = false;
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.AddLookupClicked = false;
        this.AddToLookupClicked = false;
        this.MainClaimSaved = false;
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        this.imageURLEdit = null;
        this.claimAmount = 0;
        this.isImage = false;
        this.newImage = true;
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        // this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        //  this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_15__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        var currency = localStorage.getItem("cs_default_currency");
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        if (this.isFormEdit) {
            this.apiMng.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
        }
        this.Giftform = fb.group({
            avatar1: null,
            avatar: null,
            soc_no: '',
            travel_date: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            attachment_GUID: ''
        });
    }
    GiftclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            _this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID)
                .subscribe(function (data) {
                _this.storeProjects = _this.projects = data["resource"];
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data["resource"];
                    // this.imageURLEdit = this.claimRequestData[0].ATTACHMENT_ID;
                    if (_this.claimRequestData[0].ATTACHMENT_ID !== null)
                        _this.imageURLEdit = _this.apiMng.getImageUrl(_this.claimRequestData[0].ATTACHMENT_ID);
                    _this.ImageUploadValidation = true;
                    _this.claimAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                    // this.getCurrency(this.claimRequestData[0].MILEAGE_AMOUNT)
                    _this.Gift_Amount_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                    if (_this.claimRequestData[0].SOC_GUID === null) {
                        _this.claimFor = 'seg_customer';
                        _this.isCustomer = true;
                        if (_this.storeCustomers != undefined)
                            _this.storeCustomers.forEach(function (element) {
                                if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                    _this.Customer_Lookup_ngModel = element.NAME;
                                    _this.Customer_GUID = element.CUSTOMER_GUID;
                                }
                            });
                    }
                    else {
                        _this.claimFor = 'seg_project';
                        _this.isCustomer = false;
                        if (_this.storeCustomers != undefined)
                            _this.storeProjects.forEach(function (element) {
                                if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                    _this.Project_Lookup_ngModel = element.project_name;
                                    _this.Gift_SOC_No_ngModel = element.soc;
                                    _this.Soc_GUID = element.SOC_GUID;
                                }
                            });
                    }
                    // this.Gift_Date_ngModel = new Date(this.claimRequestData[0].TRAVEL_DATE).toISOString();
                    _this.Gift_Date_ngModel = __WEBPACK_IMPORTED_MODULE_14_moment___default()(_this.claimRequestData[0].TRAVEL_DATE).format('YYYY-MM-DD');
                    // this.Gift_Date_ngModel = new Date(this.claimRequestData.TRAVEL_DATE).toISOString();
                    // this.Gift_Date_ngModel = this.claimRequestData[0].TRAVEL_DATE;
                    // this.Gift_Amount_ngModel = this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Gift_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                });
            });
        });
    };
    GiftclaimPage.prototype.getCurrency = function (amount) {
        amount = Number(amount);
        if (amount > 99999) {
            // alert('Amount should not exceed RM 9,9999.00.')
            // this.Gift_Amount_ngModel = null
            // this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.Gift_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    GiftclaimPage.prototype.GetSocNo = function (item) {
        this.Gift_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    GiftclaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    GiftclaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.Giftform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Giftform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
        //this.chooseFile = true;
    };
    GiftclaimPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.Giftform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = false;
        this.saveIm();
    };
    GiftclaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            _this.imageGUID = _this.uniqueName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    GiftclaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.Giftform.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    GiftclaimPage.prototype.claimForChanged = function () {
        // console.log(this.claimFor)
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    GiftclaimPage.prototype.LoadProjects = function () {
        // this.apiMng.getApiModel('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    GiftclaimPage.prototype.LoadCustomers = function () {
        // this.apiMng.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.apiMng.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    // LoadProjects() {
    //   this.http
    //     .get(Services.getUrl('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID))
    //     .map(res => res.json())
    //     .subscribe(data => {
    //     this.storeProjects=  this.projects = data["resource"];
    //       console.table(this.projects)
    //     });
    // }
    // LoadCustomers() {
    //   this.http
    //     .get(Services.getUrl('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID))
    //     .map(res => res.json())
    //     .subscribe(data => {
    //       this.storeCustomers = this.customers = data["resource"];
    //       // console.table(this.projects)
    //     });
    // }
    GiftclaimPage.prototype.CloseTravelClick = function () {
        this.AddToLookupClicked = false;
        this.AddTravelClicked = false;
    };
    GiftclaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    GiftclaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    GiftclaimPage.prototype.AddLookupClick = function () {
        this.AddLookupClicked = true;
        this.currentItems = null;
    };
    GiftclaimPage.prototype.AddToLookupClick = function () {
        this.AddLookupClicked = true;
        this.AddToLookupClicked = true;
        this.currentItems = null;
    };
    GiftclaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
    };
    GiftclaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    GiftclaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val
        });
    };
    GiftclaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    GiftclaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    GiftclaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    GiftclaimPage.prototype.clearFile = function () {
        this.Giftform.get('avatar').setValue(null);
        this.fileInput.nativeElement.value = '';
    };
    GiftclaimPage.prototype.onAllowanceSelect = function (allowance) {
        this.allowanceGUID = allowance.ALLOWANCE_GUID;
    };
    GiftclaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var x = this.Gift_Amount_ngModel.split(",").join("");
        var amount = Number(x);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.Gift_Amount_ngModel = null;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.Gift_Amount_ngModel = this.Gift_Amount_ngModel;
        }
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        this.apiMng.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
            .subscribe(function (data) {
            if (data["resource"].length <= 0)
                if (_this.apiMng.isClaimExpired(formValues.travel_date, true)) {
                    return;
                }
            if (_this.isFormEdit) {
                _this.apiMng.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data;
                    _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                    _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.travel_date;
                    _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                    if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                        _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                        _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                        _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                        if (_this.rejectedLevel === 3)
                            _this.claimRequestData["resource"][0].STATUS = 'Approved';
                        else
                            _this.claimRequestData["resource"][0].STATUS = 'Pending';
                    }
                    if (_this.isCustomer) {
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                        _this.claimRequestData["resource"][0].SOC_GUID = null;
                    }
                    else {
                        _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                    }
                    //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                    if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    else {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.apiMng.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    //-------------------------------------------------------------------
                    //this.claimRequestData[0].STATUS = 'Pending';
                    // this.apiMng.updateMyClaimRequest(this.claimRequestData[0]).subscribe(res => alert('Claim details are submitted successfully.'))
                    var month = new Date(formValues.travel_date).getMonth() + 1;
                    var year = new Date(formValues.travel_date).getFullYear();
                    _this.apiMng.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                        .subscribe(function (claimRefdata) {
                        _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                        _this.apiMng.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                            alert('Claim details updated successfully.');
                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
                        });
                    });
                    // this.apiMng.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(() => {
                    //   //Send Email------------------------------------------------
                    //   let start_DT: string = "";
                    //   let end_DT: string = "";
                    //   // this.apiMng.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, start_DT, end_DT, this.claimRequestData["resource"][0].CREATION_TS, formValues.travel_date, this.claimRequestGUID);
                    //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                    //   // this.apiMng.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, "", "", moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.travel_date, this.claimRequestGUID, "", "", formValues.description, this.Soc_GUID, this.Customer_GUID);
                    //   //-----------------------------------------------------------
                    //   alert('Claim details updated successfully.');
                    //   this.navCtrl.push(UserclaimslistPage);
                    // });
                });
            }
            else {
                formValues.claimTypeGUID = '2d8d7c80-c9ae-9736-b256-4d592e7b7887';
                formValues.attachment_GUID = _this.imageGUID;
                _this.travelAmount = _this.claimAmount;
                formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
            }
        });
    };
    GiftclaimPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], GiftclaimPage.prototype, "fileInput", void 0);
    GiftclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-giftclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/giftclaim/giftclaim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ \'GIFT_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n<ion-content padding>\n  <ion-segment [(ngModel)]="claimFor" color="primary500">\n    <ion-segment-button value="seg_project" (click)="claimForChanged()">\n      {{"PROJECT_TITLE" | translate }}\n    </ion-segment-button>\n    <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n      {{"CUSTOMER_TITLE" | translate }}\n    </ion-segment-button>\n  </ion-segment>\n\n  <div [ngSwitch]="claimFor">\n    <div *ngSwitchDefault>\n\n      <ion-item text-wrap>\n        <ion-label color="primary500" floating> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea (click)="CustomerLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Customer_Lookup_ngModel" type="text"></ion-textarea>\n      </ion-item>\n\n    </div>\n    <div *ngSwitchCase="\'seg_project\'">\n\n      <ion-item text-wrap style="width:80%;display: inline-block;">\n        <ion-label color="primary500" floating> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n        <ion-textarea (click)="ProjectLookup()" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel" type="text"></ion-textarea>\n      </ion-item>\n\n      <ion-item style="width:19%;display: inline-block;">\n        <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n        <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="Gift_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n          type="text" disabled="true"></ion-input>\n      </ion-item>\n    </div>\n  </div>\n\n  <form [formGroup]="Giftform">\n\n    <ion-item class="fuha">\n      <ion-label color="primary500" floating>{{ "GIFT_DATE_LABEL" | translate }}</ion-label>\n      <ion-datetime displayFormat="DD/MM/YYYY" [(ngModel)]="Gift_Date_ngModel" formControlName="travel_date" max={{validDate}}></ion-datetime>\n    </ion-item>\n\n    <ion-item class="fuha">\n      <ion-label color="primary500" floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ currency }}</ion-label>\n      <ion-input type="text" (change)=\'getCurrency($event.target.value)\' formControlName="claim_amount" [(ngModel)]="Gift_Amount_ngModel"></ion-input>\n    </ion-item>\n    <!-- <ion-item *ngIf="!Giftform.controls.claim_amount.valid  && (Giftform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n  </ion-item> -->\n\n    <ion-item class="fuha1">\n      <ion-label color="primary500" floating> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="Gift_Description_ngModel"></ion-input>\n    </ion-item>\n\n    <ion-item class="text fuha1">\n      <ion-label>Attachment :</ion-label>\n\n      <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n\n      <!-- <button ion-button item-end color="primary500" (click)="saveIm()" [disabled]="!chooseFile">Upload image</button> -->\n\n    </ion-item>\n\n    <div *ngIf="isImage">\n      <img src="{{ProfileImage}}" style="width: 20%">\n    </div>\n\n\n    <div *ngIf="imageURLEdit!==null">\n      <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(imageURLEdit)" *ngIf="imageURLEdit!==null">\n        View Receipt\n      </button> -->\n      <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a> \n    </div>\n\n\n    <div class="btn">\n      <button ion-button color="primary500" (click)=\'submitAction(Giftform.value)\' [disabled]="(Giftform.valid && !ImageUploadValidation) || !Giftform.valid">{{ \'SUBMIT\'}}</button>\n    </div>\n    <!-- <ion-item *ngIf="!Giftform.controls.claim_amount.valid  && (Giftform.controls.claim_amount.dirty)">\n      <p style="color: red; text-align:right;margin-right: 34%;">Claim amount should be {{currency}} {{min_claim_amount}} - {{max_claim_amount}}</p>\n  </ion-item> -->\n  </form>\n\n  <div class="popup2" padding *ngIf="displayImage">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Claim Details</div>\n        <button class="btnR" (click)="CloseDisplayImage()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n      <a href={{imageURL}} *ngIf="!isImage" target=_ blank>VIEW</a>\n      <!-- <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null"> -->\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="AddLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="AddLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">Search Location</div>\n        <button class="btnR" (click)="CloseLookupClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar (ionInput)="searchLocation($event)" placeholder="Enter Keywords"></ion-searchbar>\n      <ion-list>\n        <ion-item-sliding *ngFor="let item of currentItems">\n          <button ion-item (click)="openItem(item)">\n            <ion-label text-wrap> {{item.description}}</ion-label>\n          </button>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_ProjectName_ngModel" (ionInput)="searchProject($event)" placeholder=\'{{ "PROJECT_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of projects">\n            <button ion-item (click)="GetSocNo(item)">\n              <ion-label text-wrap>{{item.project_name}} [{{item.soc}}]\n              </ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Travel_Customer_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n              <ion-label text-wrap>{{item.NAME}}</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n \n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/giftclaim/giftclaim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_giftclaim_service__["a" /* GiftClaim_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_9__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_12__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_11__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], GiftclaimPage);
    return GiftclaimPage;
}());

//# sourceMappingURL=giftclaim.js.map

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MiscellaneousClaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import { TravelclaimPage } from '../travel-claim/travel-claim.component';








var MiscellaneousClaimPage = /** @class */ (function () {
    function MiscellaneousClaimPage(numberPipe, profileMng, fb, loadingCtrl, service, navCtrl, http, navParams, api) {
        var _this = this;
        this.numberPipe = numberPipe;
        this.profileMng = profileMng;
        this.loadingCtrl = loadingCtrl;
        this.service = service;
        this.navCtrl = navCtrl;
        this.http = http;
        this.navParams = navParams;
        this.api = api;
        this.ProjectLookupClicked = false;
        this.CustomerLookupClicked = false;
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.MainClaimSaved = false;
        this.Miscellaneous_Date_ngModel = this.api.CreateTimestamp();
        this.claimFor = 'seg_project';
        this.currency = localStorage.getItem("cs_default_currency");
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        this.claimAmount = 0;
        // Lakshman
        // getCurrency(amount: number) {
        //   amount = Number(amount);
        //   let amount_test=this.numberPipe.transform(amount, '1.2-2');
        //   if (amount <this.min_claim_amount || amount>this.max_claim_amount) {
        //     this.Miscellaneous_Amount_ngModel = null
        //     this.claimAmount = 0;
        //   } 
        //   else {
        //     this.claimAmount = amount;
        //     this.Miscellaneous_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        //   }
        // } 
        // Lakshman
        // getCurrency(amount: number) {
        //   this.Miscellaneous_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        // }
        this.imageURLEdit = null;
        this.isImage = false;
        this.newImage = true;
        // Lakshman
        this.min_claim_amount = localStorage.getItem('cs_min_claim_amt');
        this.min_claim = this.numberPipe.transform(this.min_claim_amount, '1.2-2');
        // this.min_claim_amount =null;
        if (this.min_claim_amount == null) {
            this.min_claim_amount = __WEBPACK_IMPORTED_MODULE_12__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MIN_CLAIM_AMOUNT;
        }
        this.max_claim_amount = localStorage.getItem('cs_max_claim_amt');
        this.max_claim = this.numberPipe.transform(this.max_claim_amount, '1.2-2');
        // this.max_claim_amount =null;
        if (this.max_claim_amount == null) {
            this.max_claim_amount = __WEBPACK_IMPORTED_MODULE_12__dbSettings_companySettings__["a" /* ClaimAmountConstants */].MAX_CLAIM_AMOUNT;
        }
        var currency = localStorage.getItem("cs_default_currency");
        // Lakshman
        this.profileMng.CheckSessionOut();
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        if (this.isFormEdit) {
            this.api.getApiModel('view_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS=Rejected)').subscribe(function (res) {
                _this.claimRequestData = res['resource'];
                if (_this.claimRequestData.length > 0) {
                    _this.rejectedLevel = _this.claimRequestData[0]['PROFILE_LEVEL'];
                    _this.profileMng.initiateLevels(_this.rejectedLevel);
                }
                else
                    _this.profileMng.initiateLevels('1');
                _this.GetDataforEdit();
            });
        }
        else {
            this.LoadCustomers();
            this.LoadProjects();
        }
        this.MiscellaneousForm = fb.group({
            avatar1: null,
            avatar: null,
            travel_date: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            claimAmount: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required], claimTypeGUID: '', attachment_GUID: ''
        });
    }
    MiscellaneousClaimPage.prototype.getCurrency = function (amount) {
        amount = Number(amount);
        if (amount > 99999) {
            // alert('Amount should not exceed RM 9,9999.00.')
            // // this.Miscellaneous_Amount_ngModel = null
            // this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.Miscellaneous_Amount_ngModel = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    MiscellaneousClaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.api.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            _this.api.getApiModel('soc_registration', 'filter=TENANT_GUID=' + _this.TenantGUID)
                .subscribe(function (data) {
                _this.storeProjects = _this.projects = data["resource"];
                _this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data["resource"];
                    // this.imageURLEdit = this.claimRequestData[0].ATTACHMENT_ID;
                    if (_this.claimRequestData[0].ATTACHMENT_ID !== null)
                        _this.imageURLEdit = _this.api.getImageUrl(_this.claimRequestData[0].ATTACHMENT_ID);
                    _this.ImageUploadValidation = true;
                    //this.getCurrency(this.claimRequestData[0].MILEAGE_AMOUNT)
                    if (_this.claimRequestData[0].SOC_GUID === null) {
                        _this.claimFor = 'seg_customer';
                        _this.isCustomer = true;
                        if (_this.storeCustomers != undefined)
                            _this.storeCustomers.forEach(function (element) {
                                if (element.CUSTOMER_GUID === _this.claimRequestData[0].CUSTOMER_GUID) {
                                    _this.Customer_Lookup_ngModel = element.NAME;
                                    _this.Customer_GUID = element.CUSTOMER_GUID;
                                }
                            });
                    }
                    else {
                        _this.claimFor = 'seg_project';
                        _this.isCustomer = false;
                        if (_this.storeCustomers != undefined)
                            _this.storeProjects.forEach(function (element) {
                                if (element.SOC_GUID === _this.claimRequestData[0].SOC_GUID) {
                                    _this.Project_Lookup_ngModel = element.project_name;
                                    _this.Miscellaneous_SOC_No_ngModel = element.soc;
                                    _this.Soc_GUID = element.SOC_GUID;
                                }
                            });
                    }
                    // this.Miscellaneous_Date_ngModel = new Date(this.claimRequestData[0].TRAVEL_DATE).toISOString();
                    _this.Miscellaneous_Date_ngModel = __WEBPACK_IMPORTED_MODULE_11_moment___default()(_this.claimRequestData[0].TRAVEL_DATE).format('YYYY-MM-DD');
                    _this.claimAmount = _this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Miscellaneous_Amount_ngModel = _this.numberPipe.transform(_this.claimRequestData[0].MILEAGE_AMOUNT, '1.2-2');
                    // this.Miscellaneous_Amount_ngModel = this.claimRequestData[0].MILEAGE_AMOUNT;
                    _this.Miscellaneous_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
                });
            });
        });
    };
    MiscellaneousClaimPage.prototype.claimForChanged = function () {
        if (this.claimFor == 'seg_customer')
            this.isCustomer = true;
        else
            this.isCustomer = false;
    };
    MiscellaneousClaimPage.prototype.CloseProjectLookup = function () {
        if (this.ProjectLookupClicked == true) {
            this.ProjectLookupClicked = false;
        }
    };
    MiscellaneousClaimPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    MiscellaneousClaimPage.prototype.ProjectLookup = function () {
        this.ProjectLookupClicked = true;
    };
    MiscellaneousClaimPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    MiscellaneousClaimPage.prototype.GetSocNo = function (item) {
        this.Miscellaneous_SOC_No_ngModel = item.soc;
        this.Project_Lookup_ngModel = item.project_name;
        this.Soc_GUID = item.SOC_GUID;
        this.CloseProjectLookup();
    };
    MiscellaneousClaimPage.prototype.GetCustomer = function (guid, name) {
        this.Customer_Lookup_ngModel = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    MiscellaneousClaimPage.prototype.LoadProjects = function () {
        // this.api.getApiModel('soc_registration', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.api.getApiModel('soc_registration', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVATION_FLAG=1)')
            .subscribe(function (data) {
            _this.storeProjects = _this.projects = data["resource"];
        });
    };
    MiscellaneousClaimPage.prototype.LoadCustomers = function () {
        // this.api.getApiModel('view_customer', 'filter=TENANT_GUID=' + this.TenantGUID)
        var _this = this;
        // Added by Bijay on 25/09/2018
        this.api.getApiModel('view_customer', 'filter=(TENANT_GUID=' + this.TenantGUID + ')AND(ACTIVE_FLAG=A)')
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
        });
    };
    MiscellaneousClaimPage.prototype.searchProject = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.projects = this.storeProjects;
            return;
        }
        this.projects = this.filterProjects({
            project_name: val, soc: val
        });
    };
    MiscellaneousClaimPage.prototype.filterProjects = function (params) {
        if (!params) {
            return this.storeProjects;
        }
        return this.projects.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    MiscellaneousClaimPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    MiscellaneousClaimPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    MiscellaneousClaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.MiscellaneousForm.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.MiscellaneousForm.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
        // this.chooseFile = true;
    };
    MiscellaneousClaimPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.MiscellaneousForm.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.ImageUploadValidation = false;
        this.newImage = false;
        this.onFileChange(e);
        this.saveIm();
    };
    MiscellaneousClaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function (resJson) {
            //this.submitAction(this.uploadFileName, formValues);
            _this.imageGUID = _this.uniqueName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    MiscellaneousClaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_5__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_5__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve, reject) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.MiscellaneousForm.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    MiscellaneousClaimPage.prototype.clearFile = function () {
        this.MiscellaneousForm.get('avatar').setValue(null);
        console.log(this.fileInput);
        this.fileInput.nativeElement.value = '';
    };
    MiscellaneousClaimPage.prototype.submitAction = function (formValues) {
        var _this = this;
        var x = this.Miscellaneous_Amount_ngModel.split(",").join("");
        var amount = Number(x);
        if (amount < this.min_claim_amount || amount > this.max_claim_amount) {
            this.Miscellaneous_Amount_ngModel = null;
            alert("Claim amount should be " + this.currency + " " + this.min_claim_amount + " - " + this.max_claim_amount + " ");
            return;
        }
        else {
            this.Miscellaneous_Amount_ngModel = this.Miscellaneous_Amount_ngModel;
        }
        if (this.Customer_GUID === undefined && this.Soc_GUID === undefined) {
            alert('Please select "project" or "customer" to continue.');
            return;
        }
        this.api.getApiModel('claim_work_flow_history', 'filter=(CLAIM_REQUEST_GUID=' + this.claimRequestGUID + ')AND(STATUS="Rejected")')
            .subscribe(function (data) {
            if (data["resource"].length <= 0)
                if (_this.api.isClaimExpired(formValues.travel_date, true)) {
                    return;
                }
            if (_this.isFormEdit) {
                _this.api.getApiModel('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + _this.claimRequestGUID)
                    .subscribe(function (data) {
                    _this.claimRequestData = data;
                    _this.claimRequestData["resource"][0].ATTACHMENT_ID = _this.imageGUID;
                    _this.claimRequestData["resource"][0].CLAIM_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].MILEAGE_AMOUNT = _this.claimAmount;
                    _this.claimRequestData["resource"][0].TRAVEL_DATE = formValues.travel_date;
                    _this.claimRequestData["resource"][0].DESCRIPTION = formValues.description;
                    if (_this.claimRequestData["resource"][0].STATUS === 'Rejected') {
                        _this.claimRequestData["resource"][0].PROFILE_LEVEL = _this.rejectedLevel;
                        _this.claimRequestData["resource"][0].STAGE = localStorage.getItem('edit_stage');
                        _this.claimRequestData["resource"][0].ASSIGNED_TO = localStorage.getItem('edit_superior');
                        if (_this.rejectedLevel === 3)
                            _this.claimRequestData["resource"][0].STATUS = 'Approved';
                        else
                            _this.claimRequestData["resource"][0].STATUS = 'Pending';
                    }
                    if (_this.isCustomer) {
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = _this.Customer_GUID;
                        _this.claimRequestData["resource"][0].SOC_GUID = null;
                    }
                    else {
                        _this.claimRequestData["resource"][0].SOC_GUID = _this.Soc_GUID;
                        _this.claimRequestData["resource"][0].CUSTOMER_GUID = null;
                    }
                    //Added by Bijay on 12/10/2018 for audit_trial-----------------------
                    if (_this.claimRequestData["resource"][0].AUDIT_TRAIL != null && _this.claimRequestData["resource"][0].AUDIT_TRAIL != "") {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = _this.claimRequestData["resource"][0].AUDIT_TRAIL + " \n Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    else {
                        _this.claimRequestData["resource"][0].AUDIT_TRAIL = "Edited by " + localStorage.getItem("g_FULLNAME") + " at " + _this.api.CreateTimestamp() + "(USER_GUID: " + localStorage.getItem("g_USER_GUID") + ")" + " User From:W";
                    }
                    //-------------------------------------------------------------------
                    var month = new Date(formValues.travel_date).getMonth() + 1;
                    var year = new Date(formValues.travel_date).getFullYear();
                    _this.api.getApiModel('main_claim_ref', 'filter=(USER_GUID=' + _this.userGUID + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')')
                        .subscribe(function (claimRefdata) {
                        _this.claimRequestData["resource"][0].CLAIM_REF_GUID = claimRefdata["resource"][0].CLAIM_REF_GUID;
                        _this.api.updateApiModel('main_claim_request', _this.claimRequestData, true).subscribe(function (res) {
                            alert('Claim details updated successfully.');
                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
                        });
                    });
                    // this.api.updateApiModel('main_claim_request', this.claimRequestData, true).subscribe(res => {
                    //   //Send Email------------------------------------------------
                    //   let start_DT: string = "";
                    //   let end_DT: string = "";
                    //   // this.api.sendEmail(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, start_DT, end_DT, this.claimRequestData["resource"][0].CREATION_TS, formValues.travel_date, this.claimRequestGUID);
                    //   //Commented By bijay on 24/09/2018 as per scheduler implemented
                    //   // this.api.sendEmail_New(this.claimRequestData["resource"][0].CLAIM_TYPE_GUID, "", "", moment(this.claimRequestData["resource"][0].CREATION_TS).format('YYYY-MM-DDTHH:mm'), formValues.travel_date, this.claimRequestGUID, "", "", formValues.description, this.Soc_GUID, this.Customer_GUID);
                    //   //----------------------------------------------------------
                    //   alert('Claim details updated successfully.')
                    //   this.navCtrl.push(UserclaimslistPage);
                    // });
                });
            }
            else {
                formValues.claimTypeGUID = '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86';
                formValues.attachment_GUID = _this.imageGUID;
                formValues.soc_no = _this.isCustomer ? _this.Customer_GUID : _this.Soc_GUID;
                _this.travelAmount = _this.claimAmount;
                _this.profileMng.save(formValues, _this.travelAmount, _this.isCustomer);
            }
        });
    };
    MiscellaneousClaimPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], MiscellaneousClaimPage.prototype, "fileInput", void 0);
    MiscellaneousClaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-miscellaneous-claim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/miscellaneous-claim/miscellaneous-claim.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ "MISCELLANEOUS_CLAIM_HEADING" | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-segment [(ngModel)]="claimFor" color="primary500">      \n        <ion-segment-button value="seg_project" (click)="claimForChanged()">\n          {{"PROJECT_TITLE" | translate }}\n        </ion-segment-button>\n        <ion-segment-button value="seg_customer" (click)="claimForChanged()">\n          {{"CUSTOMER_TITLE" | translate }}\n        </ion-segment-button>\n      </ion-segment>\n    \n      <div [ngSwitch]="claimFor">\n        <div *ngSwitchDefault>\n         \n          <ion-item  text-wrap>\n            <ion-label color="primary500" floating> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="CustomerLookup()" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="Customer_Lookup_ngModel" type="text"></ion-textarea>\n          </ion-item>\n        </div>\n        <div *ngSwitchCase="\'seg_project\'">\n         \n          <ion-item text-wrap style="width:80%;display: inline-block;">\n            <ion-label color="primary500" floating> {{ "PROJECT_NAME_LABEL" | translate }} </ion-label>\n            <ion-textarea (click)="ProjectLookup()" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="Project_Lookup_ngModel" [ngModelOptions]="{standalone: true}"\n              type="text"></ion-textarea>\n          </ion-item>\n          <ion-item style="width:19%;display: inline-block;">\n            <ion-label floating>{{ "SOC_NUMBER_LABEL" | translate }}</ion-label>\n            <ion-input [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="Miscellaneous_SOC_No_ngModel" [ngModelOptions]="{standalone: true}"\n              type="text" disabled="true"></ion-input>\n          </ion-item>\n        </div>\n      </div>\n\n\n  <form [formGroup]="MiscellaneousForm">         \n   \n            <ion-item class="fuha"> \n              <ion-label color="primary500" floating>{{ "CLAIM_DATE_LABEL" | translate  }}</ion-label>        \n              <ion-datetime displayFormat="DD/MM/YYYY" [(ngModel)]="Miscellaneous_Date_ngModel" formControlName="travel_date" max={{validDate}} ></ion-datetime>\n            </ion-item>               \n           \n            <ion-item class="fuha">\n                <ion-label color="primary500" floating> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ currency }}</ion-label>\n                <!-- <ion-label > {{travelAmount | number}} </ion-label> -->\n                <ion-input (change)=\'getCurrency($event.target.value)\' type="text" formControlName="claimAmount" [(ngModel)]="Miscellaneous_Amount_ngModel" ></ion-input>\n              </ion-item>\n              <!-- <ion-item *ngIf="!MiscellaneousForm.controls.claimAmount.valid  && (MiscellaneousForm.controls.claimAmount.dirty)">\n                <p style="color: red; text-align:right;margin-right: 34%;">Amount is {{min_claim_amount}} - {{max_claim_amount}} RM.</p>\n            </ion-item> -->\n              <ion-item>\n                  <ion-label color="primary500" floating> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n                  <ion-input type="text" formControlName="description" [(ngModel)]="Miscellaneous_Description_ngModel" ></ion-input>\n                </ion-item>            \n\n              <ion-item class="text">      \n                <ion-label>Attachment :</ion-label>\n                <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>               \n                <!-- <button ion-button item-end color="primary500"   (click)="saveIm()" [disabled]= "!chooseFile">Upload image</button>  -->\n            </ion-item>\n          \n            <div *ngIf= "isImage">\n              <img src="{{ProfileImage}}" style="width: 20%">\n            </div>             \n\n              <div *ngIf="imageURLEdit!==null">\n                <!-- <button ion-button outline item-start icon-left (click)="DisplayImage(imageURLEdit)" *ngIf="imageURLEdit!==null">\n                    View Receipt\n                    </button> -->\n                    <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a> \n                  </div>\n\n              <div class="btn">     \n                <button ion-button color="primary500" (click)=\'submitAction(MiscellaneousForm.value)\' [disabled]="(MiscellaneousForm.valid && !ImageUploadValidation) || !MiscellaneousForm.valid" >{{ \'SUBMIT\'}}</button>               \n             </div>   \n             <!-- <ion-item *ngIf="!MiscellaneousForm.controls.claimAmount.valid  && (MiscellaneousForm.controls.claimAmount.dirty)">\n              <p style="color: red; text-align:right;margin-right: 34%;">Claim amount should be {{currency}} {{min_claim_amount}} - {{max_claim_amount}} </p>\n          </ion-item>          -->\n\n  </form>\n\n  <div class="blackcontainer" *ngIf="displayImage">\n  </div>\n  <div class="popup1" padding *ngIf="displayImage">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">Receipt</div>\n        <button class="btnR" (click)="CloseDisplayImage()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n      <a href={{imageURL}} *ngIf="!isImage" target = _blank>VIEW</a>\n      <!-- <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null"> -->\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="AddLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="AddLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">Search Location</div>\n        <button class="btnR" (click)="CloseLookupClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar (ionInput)="searchLocation($event)" placeholder="Enter Keywords"></ion-searchbar>\n      <ion-list>\n        <ion-item-sliding *ngFor="let item of currentItems">\n          <button ion-item (click)="openItem(item)">\n            <ion-label text-wrap> {{item.description}}</ion-label>\n          </button>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-card>\n  </div>\n\n\n  <div class="blackcontainer" *ngIf="ProjectLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="ProjectLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle  headerColor-white">\n        <div color="light">{{ "PROJECT_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseProjectLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Miscellaneous_ProjectName_ngModel" (ionInput)="searchProject($event)"></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n      <ion-list>\n        <div *ngFor="let item of projects">\n          <button ion-item (click)="GetSocNo(item)">\n            <ion-label text-wrap>{{item.project_name}}\n              [{{item.soc}}]</ion-label> \n          </button>\n        </div>\n      </ion-list>\n      </ion-scroll>\n\n\n    </ion-card>\n  </div>\n\n  <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n  </div>\n  <div class="popup1" padding *ngIf="CustomerLookupClicked">\n    <ion-card>\n      <ion-card-header class="icTitle  headerColor-white">\n        <div>{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n        <button class="btnR" (click)="CloseCustomerLookup()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-searchbar [(ngModel)]="Miscellaneous_Customer_ngModel" (ionInput)="searchCustomer($event)"></ion-searchbar>\n      <ion-scroll style="height:66vh;" scrollY="true">\n        <ion-list>\n          <div *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID,item.NAME)">\n              <ion-label text-wrap>{{item.NAME}}</ion-label>\n            </button>\n          </div>\n        </ion-list>\n      </ion-scroll>\n    </ion-card>\n  </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/miscellaneous-claim/miscellaneous-claim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_3__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_9__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_7__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_5__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_8__providers_api_manager_provider__["a" /* ApiManagerProvider */]])
    ], MiscellaneousClaimPage);
    return MiscellaneousClaimPage;
}());

//# sourceMappingURL=miscellaneous-claim.js.map

/***/ }),
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetupguidePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_crypto_js__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__setup_setup__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__models_tenantmainsetup_model__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_tenantmainsetup_service__ = __webpack_require__(458);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__models_tenantcompanysetup_model__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__services_tenantcompanysetup_service__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__models_tenantcompanysitesetup_model__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__services_tenantcompanysitesetup_service__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__models_usersetup_info_model__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__models_departmentsetup_model__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__services_departmentsetup_service__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__models_designationsetup_model__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__services_designationsetup_service__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__shared_GlobalFunction__ = __webpack_require__(63);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




















// import { UserContact_Model } from '../../models/user_contact_model';
// import { UserCompany_Model } from '../../models/user_company_model';
// import { UserAddress_Model } from '../../models/usersetup_address_model';






/**
 * Generated class for the SetupguidePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var SetupguidePage = /** @class */ (function () {
    function SetupguidePage(navCtrl, navParams, fb1, fb2, fb3, fb4, fb5, loadingCtrl, http, httpService, alertCtrl, TenantMainSetupService, TenantCompanySetupService, tenantcompanysitesetupservice, userservice, departmentsetupservice, designationsetupservice, titlecasePipe, Global_Function) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loadingCtrl = loadingCtrl;
        this.http = http;
        this.httpService = httpService;
        this.alertCtrl = alertCtrl;
        this.TenantMainSetupService = TenantMainSetupService;
        this.TenantCompanySetupService = TenantCompanySetupService;
        this.tenantcompanysitesetupservice = tenantcompanysitesetupservice;
        this.userservice = userservice;
        this.departmentsetupservice = departmentsetupservice;
        this.designationsetupservice = designationsetupservice;
        this.titlecasePipe = titlecasePipe;
        this.Global_Function = Global_Function;
        this.Department = [];
        this.Designation = [];
        this.Branches = [];
        //-----------For Branch Model---------------------------
        this.BranchSaveFlag = false;
        //-----------For Department Model-----------------------
        this.DepartmentSaveFlag = false;
        //-----------For Designation Model----------------------
        this.DesignationSaveFlag = false;
        //------------------------------------------------------
        this.tenant_main_entry = new __WEBPACK_IMPORTED_MODULE_11__models_tenantmainsetup_model__["a" /* TenantMainSetup_Model */]();
        this.tenant_company_entry = new __WEBPACK_IMPORTED_MODULE_13__models_tenantcompanysetup_model__["a" /* TenantCompanySetup_Model */]();
        this.tenant_company_site_entry = new __WEBPACK_IMPORTED_MODULE_15__models_tenantcompanysitesetup_model__["a" /* TenantCompanySiteSetup_Model */]();
        // GlobalFunction_New: GlobalFunction = new GlobalFunction();
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_17__models_user_main_model__["a" /* UserMain_Model */]();
        this.userinfo_entry = new __WEBPACK_IMPORTED_MODULE_18__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        // usercontact_entry: UserContact_Model = new UserContact_Model();
        // usercompany_entry: UserCompany_Model = new UserCompany_Model();
        // useraddress_entry: UserAddress_Model = new UserAddress_Model();
        this.department_entry = new __WEBPACK_IMPORTED_MODULE_20__models_departmentsetup_model__["a" /* DepartmentSetup_Model */]();
        this.designation_entry = new __WEBPACK_IMPORTED_MODULE_22__models_designationsetup_model__["a" /* DesignationSetup_Model */]();
        this.isReadonly = false;
        this.Mode = "";
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            //Clear all controls-------------------------
            var strPassword = Global_Function.Random();
            //this.Password_ngModel = Global_Function.Random().toString();
            this.Password_ngModel = __WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.SHA256(strPassword).toString(__WEBPACK_IMPORTED_MODULE_5_crypto_js___default.a.enc.Hex);
            alert(strPassword);
        }
        else {
            //on the page load all the details of tenant get display----------------------------------
            this.BindControls();
        }
        this.CompanyClicked = true;
        this.HQClicked = false;
        this.BranchClicked = false;
        this.DepartmentClicked = false;
        this.DesignationClicked = false;
        this.Branch_ISHQ_FLAG_ngModel = false;
        this.Branchform1 = fb1.group({
            //-----------For Tenant Company-------------------
            TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            //USER_ID: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
            USER_ID: [null],
            PASSWORD: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            CONTACT_PERSON: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
        });
        this.Branchform2 = fb2.group({
            //-----------For Tenant HQ------------------------
            COMPANY_NAME: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            HQ_REGNO: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            TENANT_EMAIL: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            TENANT_CONTACTNO: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
        });
        this.Branchform3 = fb3.group({
            //-----------For Branch---------------------------
            BRANCH_NAME: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            BRANCH_REGNO: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            BRANCH_EMAIL: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            BRANCH_CONTACT_NO: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
        });
        this.Branchform4 = fb4.group({
            //-----------For Department-----------------------
            DEPARTMENT_NAME: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            DEPARTMENT_DESCRIPTION: [null],
        });
        this.Branchform5 = fb5.group({
            //-----------For Designation----------------------
            DESINATION_NAME: [null, __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
            DESIGNATION_DESC: [null],
        });
    }
    SetupguidePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SetupguidePage');
    };
    SetupguidePage.prototype.Readonly = function () {
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.isReadonly = true;
        }
        else {
            this.isReadonly = false;
        }
        return this.isReadonly;
    };
    SetupguidePage.prototype.SkipSetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__setup_setup__["a" /* SetupPage */]);
    };
    SetupguidePage.prototype.SaveCompany = function () {
        this.CompanyClicked = false;
        this.HQClicked = true;
    };
    SetupguidePage.prototype.SaveHQ = function () {
        this.HQClicked = false;
        this.BranchClicked = true;
        //One Record should entry to Branch for HQ---------------
        //Check if the same record exist then it will be update else insert----------------     \    
        if (this.Branches.length <= 0) {
            this.Branches.push({ BRANCH_GUID: __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID(), BRANCH_NAME: this.titlecasePipe.transform(this.Companyname_ngModel.trim()), BRANCH_REGNO: this.HQregno_ngModel.trim(), BRANCH_EMAIL: this.Tenantemail_ngModel.trim(), BRANCH_CONTACTNO: this.Tenantcontactno_ngModel.trim(), ISHQ: true });
        }
        else {
            for (var item in this.Branches) {
                if (this.Branches[item]["ISHQ"] == true) {
                    var HQ_BRANCH_GUID = this.Branches[item]["BRANCH_GUID"];
                    this.Branches.splice(parseInt(item), 1);
                    this.Branches.push({ BRANCH_GUID: HQ_BRANCH_GUID, BRANCH_NAME: this.titlecasePipe.transform(this.Companyname_ngModel.trim()), BRANCH_REGNO: this.HQregno_ngModel.trim(), BRANCH_EMAIL: this.Tenantemail_ngModel.trim(), BRANCH_CONTACTNO: this.Tenantcontactno_ngModel.trim(), ISHQ: true });
                }
            }
        }
    };
    SetupguidePage.prototype.BackHQ = function () {
        this.CompanyClicked = true;
        this.HQClicked = false;
    };
    SetupguidePage.prototype.SaveBranch = function () {
        if (this.Branches.length > 0) {
            this.BranchClicked = false;
            this.DepartmentClicked = true;
        }
        else {
            alert('Please Register Branch.');
        }
    };
    SetupguidePage.prototype.BackBranch = function () {
        this.HQClicked = true;
        this.BranchClicked = false;
    };
    SetupguidePage.prototype.SaveDepartment = function () {
        if (this.Department.length > 0) {
            this.DesignationClicked = true;
            this.DepartmentClicked = false;
        }
        else {
            alert('Please Register Department.');
        }
    };
    SetupguidePage.prototype.BackDepartment = function () {
        this.BranchClicked = true;
        this.DepartmentClicked = false;
    };
    SetupguidePage.prototype.SaveDesignation = function () {
        if (this.Designation.length > 0) {
            //Save/Update to User_main---------------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            this.Save_User_Main();
        }
        else {
            alert('Please Register Designation.');
        }
        //Save/Update to User_main---------------------------------------
        // this.loading = this.loadingCtrl.create({
        //   content: 'Please wait...',
        // });
        // this.loading.present();
        // this.Save_User_Main();
        // this.loading.dismissAll();
        // this.navCtrl.push(SetupPage);
        //Save/Update to Tenant_main-------------------------------------
        //Save/Update to Tenant_company----------------------------------
        //Save/Update to Tenant_compny_site------------------------------
        //Save/Update to user_main---------------------------------------
        //this.navCtrl.push(SetupPage);
    };
    SetupguidePage.prototype.BackDesignation = function () {
        this.DesignationClicked = false;
        this.DepartmentClicked = true;
    };
    SetupguidePage.prototype.AddDesignation = function () {
        if (this.Designation_Name_ngModel != undefined && this.Designation_Name_ngModel.trim() != "") {
            //if (this.Designation_Desc_ngModel != undefined && this.Designation_Desc_ngModel.trim() != "") {
            if (this.DesignationSaveFlag == false) {
                this.Designation.push({ DESIGNATION_GUID: __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID(), DESIGNATION_NAME: this.titlecasePipe.transform(this.Designation_Name_ngModel.trim()), DESIGNATION_DESC: this.Designation_Desc_ngModel });
            }
            else {
                this.Designation = this.Designation.filter(function (item) { return item.DESIGNATION_GUID != localStorage.getItem("DESIGNATION_GUID"); });
                this.Designation.push({ DESIGNATION_GUID: localStorage.getItem("DESIGNATION_GUID"), DESIGNATION_NAME: this.titlecasePipe.transform(this.Designation_Name_ngModel.trim()), DESIGNATION_DESC: this.Designation_Desc_ngModel });
                this.DesignationSaveFlag = false;
                localStorage.removeItem("DESIGNATION_GUID");
            }
            //Clear the Controls------------------------
            this.Designation_Name_ngModel = "";
            this.Designation_Desc_ngModel = "";
            // }
            // else {
            //   alert("Fill in Description.");
            // }
        }
        else {
            alert("Fill in Designation.");
        }
    };
    SetupguidePage.prototype.AddDepartment = function () {
        if (this.Department_Name_ngModel != undefined && this.Department_Name_ngModel.trim() != "") {
            //if (this.Department_Desc_ngModel != undefined && this.Department_Desc_ngModel.trim() != "") {
            if (this.DepartmentSaveFlag == false) {
                this.Department.push({ DEPARTMENT_GUID: __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID(), DEPARTMENT_NAME: this.titlecasePipe.transform(this.Department_Name_ngModel.trim()), DEPARTMENT_DESC: this.Department_Desc_ngModel });
            }
            else {
                this.Department = this.Department.filter(function (item) { return item.DEPARTMENT_GUID != localStorage.getItem("DEPARTMENT_GUID"); });
                this.Department.push({ DEPARTMENT_GUID: localStorage.getItem("DEPARTMENT_GUID"), DEPARTMENT_NAME: this.titlecasePipe.transform(this.Department_Name_ngModel.trim()), DEPARTMENT_DESC: this.Department_Desc_ngModel });
                this.DepartmentSaveFlag = false;
                localStorage.removeItem("DEPARTMENT_GUID");
            }
            //Clear the Controls------------------------
            this.Department_Name_ngModel = "";
            this.Department_Desc_ngModel = "";
            //}
            // else {
            //   alert("Fill in Description.");
            // }
        }
        else {
            alert("Fill in Department.");
        }
    };
    SetupguidePage.prototype.AddBranch = function () {
        if (this.Branch_Name_ngModel != undefined && this.Branch_Name_ngModel.trim() != "") {
            if (this.Branch_Regno_ngModel != undefined && this.Branch_Regno_ngModel.trim() != "") {
                if (this.Branch_Email_ngModel != undefined && this.Branch_Email_ngModel.trim() != "") {
                    if (this.Branch_Contactno_ngModel != undefined && this.Branch_Contactno_ngModel.trim() != "") {
                        if (this.BranchSaveFlag == false) {
                            this.Branches.push({ BRANCH_GUID: __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID(), BRANCH_NAME: this.titlecasePipe.transform(this.Branch_Name_ngModel.trim()), BRANCH_REGNO: this.Branch_Regno_ngModel.trim(), BRANCH_EMAIL: this.Branch_Email_ngModel.trim(), BRANCH_CONTACTNO: this.Branch_Contactno_ngModel.trim(), ISHQ: this.Branch_ISHQ_FLAG_ngModel });
                        }
                        else {
                            this.Branches = this.Branches.filter(function (item) { return item.BRANCH_GUID != localStorage.getItem("BRANCH_GUID"); });
                            this.Branches.push({ BRANCH_GUID: localStorage.getItem("BRANCH_GUID"), BRANCH_NAME: this.titlecasePipe.transform(this.Branch_Name_ngModel.trim()), BRANCH_REGNO: this.Branch_Regno_ngModel.trim(), BRANCH_EMAIL: this.Branch_Email_ngModel.trim(), BRANCH_CONTACTNO: this.Branch_Contactno_ngModel.trim(), ISHQ: this.Branch_ISHQ_FLAG_ngModel });
                            this.BranchSaveFlag = false;
                            localStorage.removeItem("BRANCH_GUID");
                        }
                        //Clear the Controls------------------------
                        this.Branch_Name_ngModel = "";
                        this.Branch_Regno_ngModel = "";
                        this.Branch_Email_ngModel = "";
                        this.Branch_Contactno_ngModel = "";
                        this.Branch_ISHQ_FLAG_ngModel = false;
                    }
                    else {
                        alert('Fill in Contact No.');
                    }
                }
                else {
                    alert('Fill in Email.');
                }
            }
            else {
                alert('Fill in Registration No.');
            }
        }
        else {
            alert("Fill in Branch Name.");
        }
    };
    SetupguidePage.prototype.EditDesignation = function (DESIGNATION_GUID) {
        for (var item in this.Designation) {
            if (this.Designation[item]["DESIGNATION_GUID"] == DESIGNATION_GUID) {
                this.Designation_Name_ngModel = this.Designation[item]["DESIGNATION_NAME"];
                this.Designation_Desc_ngModel = this.Designation[item]["DESIGNATION_DESC"];
                localStorage.setItem("DESIGNATION_GUID", this.Designation[item]["DESIGNATION_GUID"]);
                this.DesignationSaveFlag = true;
                return;
            }
        }
    };
    SetupguidePage.prototype.EditDepartment = function (DEPARTMENT_GUID) {
        for (var item in this.Department) {
            if (this.Department[item]["DEPARTMENT_GUID"] == DEPARTMENT_GUID) {
                this.Department_Name_ngModel = this.Department[item]["DEPARTMENT_NAME"];
                this.Department_Desc_ngModel = this.Department[item]["DEPARTMENT_DESC"];
                localStorage.setItem("DEPARTMENT_GUID", this.Department[item]["DEPARTMENT_GUID"]);
                this.DepartmentSaveFlag = true;
                return;
            }
        }
    };
    SetupguidePage.prototype.EditBranch = function (BRANCH_GUID) {
        for (var item in this.Branches) {
            if (this.Branches[item]["BRANCH_GUID"] == BRANCH_GUID) {
                this.Branch_Name_ngModel = this.Branches[item]["BRANCH_NAME"];
                this.Branch_Regno_ngModel = this.Branches[item]["BRANCH_REGNO"];
                this.Branch_Email_ngModel = this.Branches[item]["BRANCH_EMAIL"];
                this.Branch_Contactno_ngModel = this.Branches[item]["BRANCH_CONTACTNO"];
                this.Branch_ISHQ_FLAG_ngModel = this.Branches[item]["ISHQ"];
                localStorage.setItem("BRANCH_GUID", this.Branches[item]["BRANCH_GUID"]);
                this.BranchSaveFlag = true;
                return;
            }
        }
    };
    SetupguidePage.prototype.RemoveDesignation = function (DESIGNATION_GUID) {
        if (this.DesignationSaveFlag == false) {
            this.Designation = this.Designation.filter(function (item) { return item.DESIGNATION_GUID != DESIGNATION_GUID; });
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    SetupguidePage.prototype.RemoveDepartment = function (DEPARTMENT_GUID) {
        if (this.DepartmentSaveFlag == false) {
            this.Department = this.Department.filter(function (item) { return item.DEPARTMENT_GUID != DEPARTMENT_GUID; });
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    SetupguidePage.prototype.RemoveBranch = function (BRANCH_GUID) {
        if (this.BranchSaveFlag == false) {
            this.Branches = this.Branches.filter(function (item) { return item.BRANCH_GUID != BRANCH_GUID; });
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    SetupguidePage.prototype.BindControls = function () {
        var _this = this;
        var Url = __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_tenant_setup_guide' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')and(USER_GUID=' + localStorage.getItem('g_USER_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(Url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenants = data.resource;
            if (data.resource.length > 0) {
                //-----------For Tenant Company Model-------------------
                _this.Tenant_Name_ngModel = _this.tenants[0]["TENANT_ACCOUNT_NAME"];
                _this.Userid_ngModel = _this.tenants[0]["LOGIN_ID"];
                _this.Password_ngModel = _this.tenants[0]["PASSWORD"];
                _this.ContactPerson_ngModel = _this.tenants[0]["CONTACT_PERSON_NAME"];
                //-----------For Tenant HQ Model------------------------
                _this.Companyname_ngModel = _this.tenants[0]["NAME"];
                _this.HQregno_ngModel = _this.tenants[0]["Company_RegNo"];
                _this.Tenantemail_ngModel = _this.tenants[0]["EMAIL"];
                _this.Tenantcontactno_ngModel = _this.tenants[0]["CONTACT_NO"];
                //-----------For Branch Model---------------------------
                _this.BranchSaveFlag = false;
                _this.Branches = [];
                _this.Branch_Name_ngModel = "";
                _this.Branch_Regno_ngModel = "";
                _this.Branch_Email_ngModel = "";
                _this.Branch_Contactno_ngModel = "";
                var Url_Tenant_Company_Site = __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/tenant_company_site' + '?filter=(TENANT_COMPANY_GUID=' + localStorage.getItem('g_TENANT_COMPANY_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                _this.http
                    .get(Url_Tenant_Company_Site)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.tenant_company_sites = data.resource;
                    for (var item in _this.tenant_company_sites) {
                        var HQflag;
                        if (_this.tenant_company_sites[item]["ISHQ"] == 1) {
                            HQflag = true;
                        }
                        else {
                            HQflag = false;
                        }
                        _this.Branches.push({
                            BRANCH_GUID: _this.tenant_company_sites[item]["TENANT_COMPANY_SITE_GUID"],
                            BRANCH_NAME: _this.tenant_company_sites[item]["SITE_NAME"],
                            BRANCH_REGNO: _this.tenant_company_sites[item]["REGISTRATION_NUM"],
                            BRANCH_EMAIL: _this.tenant_company_sites[item]["EMAIL"],
                            BRANCH_CONTACTNO: _this.tenant_company_sites[item]["CONTACT_NO"],
                            ISHQ: HQflag
                        });
                    }
                });
                // var HQflag;
                // if (this.tenants[0]["ISHQ"] == 1) {
                //   HQflag = true;
                // }
                // else {
                //   HQflag = false;
                // }
                // this.Branches.push({
                //   BRANCH_GUID: this.tenants[0]["TENANT_COMPANY_SITE_GUID"],
                //   BRANCH_NAME: this.tenants[0]["SITE_NAME"],
                //   BRANCH_REGNO: this.tenants[0]["BRANCH_REG_NO"],
                //   BRANCH_EMAIL: this.tenants[0]["EMAIL"],
                //   BRANCH_CONTACTNO: this.tenants[0]["CONTACT_NO"],
                //   ISHQ: HQflag
                // });
                //-----------For Department Model-----------------------
                _this.DepartmentSaveFlag = false;
                _this.Department = [];
                _this.Department_Name_ngModel = "";
                _this.Department_Desc_ngModel = "";
                var Url_Dept = __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                _this.http
                    .get(Url_Dept)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.departments = data.resource;
                    for (var item in _this.departments) {
                        _this.Department.push({ DEPARTMENT_GUID: _this.departments[item]["DEPARTMENT_GUID"], DEPARTMENT_NAME: _this.departments[item]["NAME"], DEPARTMENT_DESC: _this.departments[item]["DESCRIPTION"] });
                    }
                });
                //-----------For Designation Model----------------------
                _this.DesignationSaveFlag = false;
                _this.Designation = [];
                _this.Designation_Name_ngModel = "";
                _this.Designation_Desc_ngModel = "";
                var Url_Desig = __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_designation' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_9__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                _this.http
                    .get(Url_Desig)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.designations = data.resource;
                    for (var item in _this.designations) {
                        _this.Designation.push({ DESIGNATION_GUID: _this.designations[item]["DESIGNATION_GUID"], DESIGNATION_NAME: _this.designations[item]["NAME"], DESIGNATION_DESC: _this.designations[item]["DESCRIPTION"] });
                    }
                });
            }
            _this.loading.dismissAll();
        });
    };
    SetupguidePage.prototype.ClearControls = function () {
        //-----------For Tenant Company Model-------------------
        this.Tenant_Name_ngModel = "";
        this.Userid_ngModel = "";
        this.Password_ngModel = "";
        this.ContactPerson_ngModel = "";
        //-----------For Tenant HQ Model------------------------
        this.Companyname_ngModel = "";
        this.HQregno_ngModel = "";
        this.Tenantemail_ngModel = "";
        this.Tenantcontactno_ngModel = "";
        //-----------For Branch Model---------------------------
        this.BranchSaveFlag = false;
        this.Branches = [];
        this.Branch_Name_ngModel = "";
        this.Branch_Regno_ngModel = "";
        this.Branch_Email_ngModel = "";
        this.Branch_Contactno_ngModel = "";
        this.Branch_ISHQ_FLAG_ngModel = false;
        //-----------For Department Model-----------------------
        this.DepartmentSaveFlag = false;
        this.Department = [];
        this.Department_Name_ngModel = "";
        this.Department_Desc_ngModel = "";
        //-----------For Designation Model----------------------
        this.DesignationSaveFlag = false;
        this.Designation = [];
        this.Designation_Name_ngModel = "";
        this.Designation_Desc_ngModel = "";
    };
    SetupguidePage.prototype.Save_User_Main = function () {
        var _this = this;
        //Setup Entity for Super Admin--------------------    
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.usermain_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
            this.usermain_entry.USER_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
            this.usermain_entry.STAFF_ID = "";
            //this.usermain_entry.LOGIN_ID = this.Userid_ngModel.trim();
            this.usermain_entry.LOGIN_ID = this.Tenantemail_ngModel.trim();
            this.usermain_entry.PASSWORD = this.Password_ngModel;
            this.usermain_entry.EMAIL = this.Tenantemail_ngModel.trim();
            this.usermain_entry.ACTIVATION_FLAG = 1;
            this.usermain_entry.CREATION_TS = new Date().toISOString();
            this.usermain_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usermain_entry.UPDATE_TS = new Date().toISOString();
            this.usermain_entry.UPDATE_USER_GUID = "";
            this.usermain_entry.IS_TENANT_ADMIN = "1";
        }
        //Setup Entity for Tenant Admin-------------------
        else {
            this.usermain_entry.TENANT_GUID = localStorage.getItem('g_TENANT_GUID');
            this.usermain_entry.USER_GUID = localStorage.getItem('g_USER_GUID');
            this.usermain_entry.STAFF_ID = this.tenants[0]["STAFF_ID"];
            //this.usermain_entry.LOGIN_ID = this.Userid_ngModel.trim();
            this.usermain_entry.LOGIN_ID = this.Tenantemail_ngModel.trim();
            this.usermain_entry.PASSWORD = this.Password_ngModel;
            this.usermain_entry.EMAIL = this.Tenantemail_ngModel.trim();
            this.usermain_entry.ACTIVATION_FLAG = this.tenants[0]["USER_ACTIVATION_FLAG"];
            this.usermain_entry.CREATION_TS = this.tenants[0]["USER_CREATION_TS"];
            this.usermain_entry.CREATION_USER_GUID = this.tenants[0]["USER_CREATION_GUID"];
            this.usermain_entry.UPDATE_TS = new Date().toISOString();
            this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usermain_entry.IS_TENANT_ADMIN = "1";
        }
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.userservice.save_user_main(this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('User main updated sucessfully.');
                    _this.Save_User_Info();
                    // this.Save_Tenant_Main();
                }
            });
        }
        else {
            this.userservice.update_user_main(this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('User main updated sucessfully.');
                    _this.Save_User_Info();
                }
            });
        }
    };
    SetupguidePage.prototype.Save_User_Info = function () {
        var _this = this;
        var userinfo_entry = new __WEBPACK_IMPORTED_MODULE_18__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.userinfo_entry.USER_INFO_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
            this.userinfo_entry.TENANT_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
        }
        else {
            this.userinfo_entry.USER_INFO_GUID = this.tenants[0]["USER_INFO_GUID"];
            this.userinfo_entry.TENANT_COMPANY_GUID = this.tenants[0]["TENANT_COMPANY_GUID"];
        }
        this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userinfo_entry.FULLNAME = this.titlecasePipe.transform(this.ContactPerson_ngModel.trim());
        //NICKNAME
        //SALUTATION
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.userinfo_entry.MANAGER_USER_GUID = this.userinfo_entry.USER_INFO_GUID;
            this.userinfo_entry.PERSONAL_ID_TYPE = "";
            this.userinfo_entry.PERSONAL_ID = "";
            this.userinfo_entry.DOB = "";
            this.userinfo_entry.GENDER = "1";
            this.userinfo_entry.JOIN_DATE = "";
            this.userinfo_entry.MARITAL_STATUS = "0";
        }
        else {
            this.userinfo_entry.MANAGER_USER_GUID = this.userinfo_entry.USER_INFO_GUID;
            this.userinfo_entry.PERSONAL_ID_TYPE = this.tenants[0]["PERSONAL_ID_TYPE"];
            this.userinfo_entry.PERSONAL_ID = this.tenants[0]["PERSONAL_ID"];
            this.userinfo_entry.DOB = this.tenants[0]["DOB"];
            this.userinfo_entry.GENDER = this.tenants[0]["GENDER"];
            this.userinfo_entry.JOIN_DATE = this.tenants[0]["JOIN_DATE"];
            this.userinfo_entry.MARITAL_STATUS = this.tenants[0]["MARITAL_STATUS"];
        }
        for (var item in this.Branches) {
            if (this.Branches[item]["ISHQ"] == true) {
                this.userinfo_entry.BRANCH = this.Branches[item]["BRANCH_GUID"];
                this.userinfo_entry.TENANT_COMPANY_SITE_GUID = this.Branches[item]["BRANCH_GUID"];
            }
        }
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.userinfo_entry.EMPLOYEE_TYPE = "";
            this.userinfo_entry.ATTACHMENT_ID = "";
            this.userinfo_entry.APPROVER1 = null;
            this.userinfo_entry.APPROVER2 = null;
            this.userinfo_entry.EMPLOYEE_STATUS = "0";
            this.userinfo_entry.RESIGNATION_DATE = "";
            // this.userinfo_entry.TENANT_COMPANY_GUID = UUID.UUID();
            this.userinfo_entry.CONFIRMATION_DATE = "";
            //this.userinfo_entry.TENANT_COMPANY_SITE_GUID = this.Branches[0]["BRANCH_GUID"];
            this.userinfo_entry.CREATION_TS = new Date().toISOString();
            this.userinfo_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.userinfo_entry.UPDATE_TS = new Date().toISOString();
            this.userinfo_entry.UPDATE_USER_GUID = "";
            // this.userinfo_entry.POST_CODE
            // this.userinfo_entry.COUNTRY_GUID
            // this.userinfo_entry.STATE_GUID
            this.userinfo_entry.EMG_CONTACT_NAME_1 = "";
            this.userinfo_entry.EMG_RELATIONSHIP_1 = "";
            this.userinfo_entry.EMG_CONTACT_NUMBER_1 = "";
            this.userinfo_entry.EMG_CONTACT_NAME_2 = "";
            this.userinfo_entry.EMG_RELATIONSHIP_2 = "";
            this.userinfo_entry.EMG_CONTACT_NUMBER_2 = "";
            this.userinfo_entry.PR_EPF_NUMBER = "";
            this.userinfo_entry.PR_INCOMETAX_NUMBER = "";
            this.userinfo_entry.BANK_GUID = ""; //---------------------Required-----------------------------------
            this.userinfo_entry.PR_ACCOUNT_NUMBER = "";
        }
        else {
            this.userinfo_entry.EMPLOYEE_TYPE = this.tenants[0]["EMPLOYEE_TYPE"];
            this.userinfo_entry.ATTACHMENT_ID = this.tenants[0]["ATTACHMENT_ID"];
            this.userinfo_entry.APPROVER1 = null;
            this.userinfo_entry.APPROVER2 = null;
            this.userinfo_entry.EMPLOYEE_STATUS = this.tenants[0]["EMPLOYEE_STATUS"];
            this.userinfo_entry.RESIGNATION_DATE = this.tenants[0]["RESIGNATION_DATE"];
            this.userinfo_entry.CONFIRMATION_DATE = this.tenants[0]["CONFIRMATION_DATE"];
            this.userinfo_entry.CREATION_TS = this.tenants[0]["CREATION_TS"];
            this.userinfo_entry.CREATION_USER_GUID = this.tenants[0]["CREATION_USER_GUID"];
            this.userinfo_entry.UPDATE_TS = new Date().toISOString();
            this.userinfo_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.userinfo_entry.EMG_CONTACT_NAME_1 = this.tenants[0]["EMG_CONTACT_NAME_1"];
            this.userinfo_entry.EMG_RELATIONSHIP_1 = this.tenants[0]["EMG_RELATIONSHIP_1"];
            this.userinfo_entry.EMG_CONTACT_NUMBER_1 = this.tenants[0]["EMG_CONTACT_NUMBER_1"];
            this.userinfo_entry.EMG_CONTACT_NAME_2 = this.tenants[0]["EMG_CONTACT_NAME_2"];
            this.userinfo_entry.EMG_RELATIONSHIP_2 = this.tenants[0]["EMG_RELATIONSHIP_2"];
            this.userinfo_entry.EMG_CONTACT_NUMBER_2 = this.tenants[0]["EMG_CONTACT_NUMBER_2"];
            this.userinfo_entry.PR_EPF_NUMBER = this.tenants[0]["PR_EPF_NUMBER"];
            this.userinfo_entry.PR_INCOMETAX_NUMBER = this.tenants[0]["PR_INCOMETAX_NUMBER"];
            this.userinfo_entry.BANK_GUID = this.tenants[0]["BANK_GUID"];
            this.userinfo_entry.PR_ACCOUNT_NUMBER = this.tenants[0]["PR_ACCOUNT_NUMBER"];
        }
        this.userinfo_entry.DEPT_GUID = this.Department[0]["DEPARTMENT_GUID"];
        this.userinfo_entry.DESIGNATION_GUID = this.Designation[0]["DESIGNATION_GUID"];
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.userservice.save_user_info(this.userinfo_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_Main();
                }
            });
        }
        else {
            this.userservice.update_user_info(this.userinfo_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_Main();
                }
            });
        }
    };
    SetupguidePage.prototype.Save_User_Address = function () {
        //Code for user_Address---------- 
    };
    SetupguidePage.prototype.Save_User_Contact = function () {
        //Code for user_contact---------- 
    };
    SetupguidePage.prototype.Save_User_Company = function () {
        //Code for user_company---------- 
    };
    SetupguidePage.prototype.Save_User_Role = function () {
        //Code for user_role---------- 
    };
    SetupguidePage.prototype.Save_Tenant_Main = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.tenant_main_entry.TENANT_GUID = this.usermain_entry.TENANT_GUID;
            this.tenant_main_entry.PARENT_TENANT_GUID = "";
            this.tenant_main_entry.TENANT_ACCOUNT_NAME = this.titlecasePipe.transform(this.Tenant_Name_ngModel.trim());
            this.tenant_main_entry.ACTIVATION_FLAG = "1";
            this.tenant_main_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.tenant_main_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.tenant_main_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_main_entry.UPDATE_USER_GUID = "";
        }
        else {
            this.tenant_main_entry.TENANT_GUID = localStorage.getItem('g_TENANT_GUID');
            this.tenant_main_entry.PARENT_TENANT_GUID = "";
            this.tenant_main_entry.TENANT_ACCOUNT_NAME = this.Tenant_Name_ngModel.trim();
            this.tenant_main_entry.ACTIVATION_FLAG = this.tenants[0]["ACTIVATION_FLAG"];
            this.tenant_main_entry.CREATION_TS = this.tenants[0]["CREATION_TS"];
            this.tenant_main_entry.CREATION_USER_GUID = this.tenants[0]["USER_GUID"];
            this.tenant_main_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_main_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.TenantMainSetupService.save(this.tenant_main_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Main Registered successfully');
                    _this.Save_Tenant_Company();
                }
            });
        }
        else {
            this.TenantMainSetupService.update(this.tenant_main_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Main Registered successfully');
                    _this.Save_Tenant_Company();
                }
            });
        }
    };
    SetupguidePage.prototype.Save_Tenant_Company = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            //this.tenant_company_entry.TENANT_COMPANY_GUID = UUID.UUID();
            this.tenant_company_entry.TENANT_COMPANY_GUID = this.userinfo_entry.TENANT_COMPANY_GUID;
            this.tenant_company_entry.TENANT_GUID = this.usermain_entry.TENANT_GUID;
            this.tenant_company_entry.NAME = this.titlecasePipe.transform(this.Companyname_ngModel.trim());
            this.tenant_company_entry.REGISTRATION_NO = this.HQregno_ngModel.trim();
            this.tenant_company_entry.ACTIVATION_FLAG = this.tenant_main_entry.ACTIVATION_FLAG;
            this.tenant_company_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
            this.tenant_company_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
            this.tenant_company_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
        }
        else {
            this.tenant_company_entry.TENANT_COMPANY_GUID = this.tenants[0]["TENANT_COMPANY_GUID"];
            this.tenant_company_entry.TENANT_GUID = this.tenant_main_entry.TENANT_GUID;
            this.tenant_company_entry.NAME = this.Companyname_ngModel.trim();
            this.tenant_company_entry.REGISTRATION_NO = this.HQregno_ngModel.trim();
            this.tenant_company_entry.ACTIVATION_FLAG = this.tenant_main_entry.ACTIVATION_FLAG;
            this.tenant_company_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
            this.tenant_company_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
            this.tenant_company_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
        }
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.TenantCompanySetupService.save(this.tenant_company_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Registered successfully');
                    _this.Save_Tenant_Company_Site();
                }
            });
        }
        else {
            this.TenantCompanySetupService.update(this.tenant_company_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Registered successfully');
                    _this.Save_Tenant_Company_Site();
                }
            });
        }
    };
    SetupguidePage.prototype.Save_Tenant_Company_Site = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            for (var item in this.Branches) {
                this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = this.Branches[item]["BRANCH_GUID"];
                this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
                this.tenant_company_site_entry.SITE_NAME = this.titlecasePipe.transform(this.Branches[item]["BRANCH_NAME"]);
                this.tenant_company_site_entry.REGISTRATION_NUM = this.Branches[item]["BRANCH_REGNO"];
                this.tenant_company_site_entry.ADDRESS = "";
                this.tenant_company_site_entry.ADDRESS2 = "";
                this.tenant_company_site_entry.ADDRESS3 = "";
                this.tenant_company_site_entry.CONTACT_NO = this.Branches[item]["BRANCH_CONTACTNO"];
                this.tenant_company_site_entry.EMAIL = this.Branches[item]["BRANCH_EMAIL"];
                this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
                this.tenant_company_site_entry.CONTACT_PERSON = "";
                this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = "";
                this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = "";
                this.tenant_company_site_entry.WEBSITE = "";
                this.tenant_company_site_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
                this.tenant_company_site_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
                this.tenant_company_site_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
                this.tenant_company_site_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
                if (this.Branches[item]["ISHQ"] == true) {
                    this.tenant_company_site_entry.ISHQ = "1";
                }
                else {
                    this.tenant_company_site_entry.ISHQ = "0";
                }
                //this.tenantcompanysitesetupservice.update(this.tenant_company_site_entry)
                this.tenantcompanysitesetupservice.save(this.tenant_company_site_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        // this.InsertDepartment();
                        //alert('Tenant company Site Registered successfully');
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                });
            }
            this.InsertDepartment();
        }
        else {
            //Before insert data to db first delete all the records of particular tenant_company then insert once again.
            this.tenantcompanysitesetupservice.remove_multiple(this.tenants[0]["TENANT_COMPANY_GUID"], "tenant_company_site")
                .subscribe(function (response) {
                if (response.status == 200) {
                    for (var item in _this.Branches) {
                        _this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = _this.Branches[item]["BRANCH_GUID"];
                        _this.tenant_company_site_entry.TENANT_COMPANY_GUID = _this.tenant_company_entry.TENANT_COMPANY_GUID;
                        _this.tenant_company_site_entry.SITE_NAME = _this.Branches[item]["BRANCH_NAME"];
                        _this.tenant_company_site_entry.REGISTRATION_NUM = _this.Branches[item]["BRANCH_REGNO"];
                        _this.tenant_company_site_entry.ADDRESS = "";
                        _this.tenant_company_site_entry.ADDRESS2 = "";
                        _this.tenant_company_site_entry.ADDRESS3 = "";
                        _this.tenant_company_site_entry.CONTACT_NO = _this.Branches[item]["BRANCH_CONTACTNO"];
                        _this.tenant_company_site_entry.EMAIL = _this.Branches[item]["BRANCH_EMAIL"];
                        _this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
                        _this.tenant_company_site_entry.CONTACT_PERSON = "";
                        _this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = "";
                        _this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = "";
                        _this.tenant_company_site_entry.WEBSITE = "";
                        _this.tenant_company_site_entry.CREATION_TS = _this.tenant_main_entry.CREATION_TS;
                        _this.tenant_company_site_entry.CREATION_USER_GUID = _this.tenant_main_entry.CREATION_USER_GUID;
                        _this.tenant_company_site_entry.UPDATE_TS = _this.tenant_main_entry.UPDATE_TS;
                        _this.tenant_company_site_entry.UPDATE_USER_GUID = _this.tenant_main_entry.UPDATE_USER_GUID;
                        if (_this.Branches[item]["ISHQ"] == true) {
                            _this.tenant_company_site_entry.ISHQ = "1";
                        }
                        else {
                            _this.tenant_company_site_entry.ISHQ = "0";
                        }
                        //this.tenantcompanysitesetupservice.update(this.tenant_company_site_entry)
                        _this.tenantcompanysitesetupservice.save(_this.tenant_company_site_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                // this.InsertDepartment();
                                //alert('Tenant company Site Registered successfully');
                                //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
            });
            this.InsertDepartment();
        }
    };
    SetupguidePage.prototype.InsertDepartment = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            for (var item in this.Department) {
                this.department_entry.DEPARTMENT_GUID = this.Department[item]["DEPARTMENT_GUID"];
                this.department_entry.NAME = this.Department[item]["DEPARTMENT_NAME"];
                this.department_entry.DESCRIPTION = this.Department[item]["DEPARTMENT_DESC"];
                this.department_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
                this.department_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
                this.department_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
                this.department_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
                this.department_entry.TENANT_GUID = this.tenant_company_entry.TENANT_GUID;
                this.departmentsetupservice.save(this.department_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        //alert('Department Registered successfully');
                        //this.InsertDesignation();
                    }
                });
            }
            this.InsertDesignation();
        }
        else {
            //Before insert data to db first delete all the records of particular tenant then insert once again.
            this.departmentsetupservice.remove_multiple(this.tenant_company_entry.TENANT_GUID, "main_department")
                .subscribe(function (response) {
                if (response.status == 200) {
                    for (var item in _this.Department) {
                        _this.department_entry.DEPARTMENT_GUID = _this.Department[item]["DEPARTMENT_GUID"];
                        _this.department_entry.NAME = _this.Department[item]["DEPARTMENT_NAME"];
                        _this.department_entry.DESCRIPTION = _this.Department[item]["DEPARTMENT_DESC"];
                        _this.department_entry.CREATION_TS = _this.tenant_main_entry.CREATION_TS;
                        _this.department_entry.CREATION_USER_GUID = _this.tenant_main_entry.CREATION_USER_GUID;
                        _this.department_entry.UPDATE_TS = _this.tenant_main_entry.UPDATE_TS;
                        _this.department_entry.UPDATE_USER_GUID = _this.tenant_main_entry.UPDATE_USER_GUID;
                        _this.department_entry.TENANT_GUID = _this.tenant_company_entry.TENANT_GUID;
                        _this.departmentsetupservice.save(_this.department_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                //alert('Department Registered successfully');
                                //this.InsertDesignation();
                            }
                        });
                    }
                    _this.InsertDesignation();
                }
            });
        }
    };
    SetupguidePage.prototype.InsertDesignation = function () {
        var _this = this;
        var SaveDesigFlag = false;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            for (var item in this.Designation) {
                this.designation_entry.DESIGNATION_GUID = this.Designation[item]["DESIGNATION_GUID"];
                this.designation_entry.NAME = this.Designation[item]["DESIGNATION_NAME"];
                this.designation_entry.DESCRIPTION = this.Designation[item]["DESIGNATION_DESC"];
                this.designation_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
                this.designation_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
                this.designation_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
                this.designation_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
                this.designation_entry.TENANT_GUID = this.tenant_company_entry.TENANT_GUID;
                this.designationsetupservice.save(this.designation_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        //alert('Designation Registered successfully');
                        SaveDesigFlag = true;
                    }
                });
            }
            // if (SaveDesigFlag == true) {
            alert('Setup done successfully.');
            this.loading.dismissAll();
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__setup_setup__["a" /* SetupPage */]);
        }
        else {
            //Before insert data to db first delete all the records of particular tenant then insert once again.
            this.designationsetupservice.remove_multiple(this.tenant_company_entry.TENANT_GUID, "main_designation")
                .subscribe(function (response) {
                if (response.status == 200) {
                    for (var item in _this.Designation) {
                        _this.designation_entry.DESIGNATION_GUID = _this.Designation[item]["DESIGNATION_GUID"];
                        _this.designation_entry.NAME = _this.Designation[item]["DESIGNATION_NAME"];
                        _this.designation_entry.DESCRIPTION = _this.Designation[item]["DESIGNATION_DESC"];
                        _this.designation_entry.CREATION_TS = _this.tenant_main_entry.CREATION_TS;
                        _this.designation_entry.CREATION_USER_GUID = _this.tenant_main_entry.CREATION_USER_GUID;
                        _this.designation_entry.UPDATE_TS = _this.tenant_main_entry.UPDATE_TS;
                        _this.designation_entry.UPDATE_USER_GUID = _this.tenant_main_entry.UPDATE_USER_GUID;
                        _this.designation_entry.TENANT_GUID = _this.tenant_company_entry.TENANT_GUID;
                        _this.designationsetupservice.save(_this.designation_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                //alert('Designation Registered successfully');
                                SaveDesigFlag = true;
                            }
                        });
                    }
                    // if (SaveDesigFlag == true) {
                    alert('Setup done successfully.');
                    _this.loading.dismissAll();
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__setup_setup__["a" /* SetupPage */]);
                    // }                       
                }
            });
        }
    };
    SetupguidePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-setupguide',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/setupguide/setupguide.html"*/'<!--\n  Generated template for the SetupguidePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ "SETUP_GUIDE" | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="blackcontainer"></div>\n  <div class="popscroll" padding>\n\n    <ion-card>\n      <ion-card-header color="pure" class="icTitle2">\n        {{ "REGISTER_COMPANY" | translate }}\n      </ion-card-header>\n\n      <ion-card-content *ngIf="CompanyClicked" color="pure">\n        <ion-list>\n          <form [formGroup]="Branchform1">\n\n            <ion-item>\n              <ion-label stacked> {{ "TENANT_NAME" | translate }}</ion-label>\n              <ion-input type="text" formControlName="TENANT_NAME" [(ngModel)]="Tenant_Name_ngModel" placeholder="{{\'Please fill in the name of tenant\'}}"\n                [readonly]="Readonly()"></ion-input>\n            </ion-item>\n\n            <ion-item>\n              <ion-label stacked>{{"S_CONTACT_PERSON" | translate}}</ion-label>\n              <ion-input type="text" formControlName="CONTACT_PERSON" [(ngModel)]="ContactPerson_ngModel" placeholder="{{\'Please fill in the contact person\'}}"></ion-input>\n            </ion-item>\n\n            <ion-item style="display: none">\n              <ion-label stacked>{{"USER_ID" | translate}}</ion-label>\n              <ion-input type="text" formControlName="USER_ID" [(ngModel)]="Userid_ngModel" placeholder="{{\'Please fill in the user id\'}}"></ion-input>\n            </ion-item>\n\n            <ion-item style="display: none;">\n              <ion-label stacked>{{"PASSWORD" | translate}}</ion-label>\n              <ion-input type="password" formControlName="PASSWORD" [(ngModel)]="Password_ngModel" placeholder="{{\'Please fill in the password\'}}"></ion-input>\n            </ion-item>\n\n            <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Branchform1.valid" (click)="SaveCompany()">{{"NEXT" | translate}}\n                <ion-icon name="ios-arrow-forward" style="padding: 10px;"></ion-icon>\n              </button>\n              <a ion-button color="primary" (click)="SkipSetup()">{{"SKIP" | translate}}</a>\n            </div>\n\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card>\n      <ion-card-header color="pure" class="icTitle2">\n        {{"REGISTER_HQ" | translate}} \n      </ion-card-header>\n\n      <ion-card-content *ngIf="HQClicked">\n        <ion-list>\n          <form [formGroup]="Branchform2">\n\n            <div style="width: 47%; display:inline-table !important;">\n              <ion-item>\n                <ion-label stacked> {{"COMPANY_HQ" | translate}} </ion-label>\n                <ion-input type="text" formControlName="COMPANY_NAME" [(ngModel)]="Companyname_ngModel" placeholder="{{\'Please fill in the company name\'}}"></ion-input>\n              </ion-item>\n\n              <ion-item>\n                <ion-label stacked> {{"HQ_REG_NO" | translate}} {{"HQ REG NO."}}</ion-label>\n                <ion-input type="text" formControlName="HQ_REGNO" [(ngModel)]="HQregno_ngModel" placeholder="{{\'Please fill in the registration number\'}}"></ion-input>\n              </ion-item>\n            </div>\n\n            <div style="width: 47%; display:inline-table !important;">\n              <ion-item>\n                <ion-label stacked> {{"S_EMAIL" | translate}}</ion-label>\n                <ion-input type="text" formControlName="TENANT_EMAIL" [(ngModel)]="Tenantemail_ngModel" placeholder="{{\'Please fill in the email\'}}"></ion-input>\n              </ion-item>\n\n              <ion-item>\n                <ion-label stacked> {{"CONTACT_NO" | translate}}</ion-label>\n                <ion-input type="number" formControlName="TENANT_CONTACTNO" [(ngModel)]="Tenantcontactno_ngModel" placeholder="{{\'Please fill in the contact no\'}}"></ion-input>\n              </ion-item>\n            </div>\n\n            <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="BackHQ()">\n                <ion-icon name="ios-arrow-back" style="padding: 10px;"></ion-icon>{{"BACK" | translate}}\n              </button>\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Branchform2.valid" (click)="SaveHQ()">{{"NEXT" | translate}}\n                <ion-icon name="ios-arrow-forward" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card>\n      <ion-card-header color="pure" class="icTitle2">\n        {{"REGISTER_BRANCH" | translate}}\n      </ion-card-header>\n\n      <ion-card-content *ngIf="BranchClicked">\n        <ion-list>\n          <form [formGroup]="Branchform3">\n            <div style="width: 47%; display:inline-table !important;">\n              <ion-item>\n                <ion-label stacked>  {{"BRANCH_NAME" | translate}}</ion-label>\n                <ion-input type="text" formControlName="BRANCH_NAME" [(ngModel)]="Branch_Name_ngModel" placeholder="{{\'Please fill in the name of your company\'}}"></ion-input>\n              </ion-item>\n\n              <ion-item>\n                <ion-label stacked>  {{"BRANCH_REG_NO" | translate}}</ion-label>\n                <ion-input type="text" formControlName="BRANCH_REGNO" [(ngModel)]="Branch_Regno_ngModel" placeholder="{{\'Please fill in the registration number of the company\'}}"></ion-input>\n              </ion-item>\n            </div>\n\n            <div style="width: 47%; display:inline-table !important;">\n              <ion-item>\n                <ion-label stacked>  {{"SETUP_GUID_EMAIL" | translate}}</ion-label>\n                <ion-input type="text" formControlName="BRANCH_EMAIL" [(ngModel)]="Branch_Email_ngModel" placeholder="{{\'Please fill in the email\'}}"></ion-input>\n              </ion-item>\n\n              <div style="width: 51%; display:inline-table !important;">\n                <ion-item>\n                  <ion-label stacked>  {{"S_CONTACT_NO" | translate}}</ion-label>\n                  <ion-input type="number" formControlName="BRANCH_CONTACT_NO" [(ngModel)]="Branch_Contactno_ngModel" placeholder="{{\'Please fill in the contact no\'}}"></ion-input>\n                </ion-item>\n              </div>\n\n              <!-- <div style="width: 47%; display:inline-table !important;">\n                 <ion-item>\n                  <ion-label stacked>{{"BRANCH HQ"}}</ion-label> \n                  <ion-toggle formControlName="ISHQ_FLAG" [(ngModel)]="Branch_ISHQ_FLAG_ngModel"></ion-toggle>                 \n                </ion-item> \n\n\n\n              </div> -->\n\n            </div>\n            <div class="btn">\n              <button ion-button icon-left [disabled]="!Branchform3.valid" (click)="AddBranch()">\n                {{"S_ADD" | translate}}\n                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n            <ion-list>\n              <ion-item>\n                <table class="Tabler">\n                  <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                    <th class="lgl1">NAME</th>\n                    <th class="lgl1">REG NO.</th>\n                    <th class="lgl1">EMAIL</th>\n                    <th class="lgl1">CONTACT NO</th>\n                    <th class="lgl1">IS HQ</th>\n                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                  </tr>\n\n                  <tr class="col7" *ngFor="let branch of Branches; let i=index">\n                    <td class="lgl1">{{i+1}}</td>\n                    <td class="lgl1">{{branch.BRANCH_NAME}}</td>\n                    <td class="lgl1">{{branch.BRANCH_REGNO}}</td>\n                    <td class="lgl1">{{branch.BRANCH_EMAIL}}</td>\n                    <td class="lgl1">{{branch.BRANCH_CONTACTNO}}</td>\n                    <td class="lgl1">\n                      <ion-icon *ngIf="branch.ISHQ==true" md="md-done-all"></ion-icon>\n                      <ion-icon *ngIf="branch.ISHQ==false" md="md-close"></ion-icon>\n                    </td>\n\n                    <td class="lgl1 fColor">\n                      <button ion-button item-end (click)="EditBranch(branch.BRANCH_GUID)">\n                        <ion-icon name="md-create"></ion-icon>\n                      </button>\n                      <button ion-button item-end (click)="RemoveBranch(branch.BRANCH_GUID)">\n                        <ion-icon name="md-close"></ion-icon>\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </ion-item>\n            </ion-list>\n\n            <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="BackBranch()">\n                <ion-icon name="ios-arrow-back" style="padding: 10px;"></ion-icon>{{"BACK" | translate}}\n              </button>\n              <!-- [disabled]="!Branchform3.valid" -->\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SaveBranch()">NEXT\n                <ion-icon name="ios-arrow-forward" style="padding: 10px;"></ion-icon>\n              </button>\n              <a ion-button color="primary" (click)="SaveBranch()">{{"SKIP" | translate}}</a>\n            </div>\n\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card>\n      <ion-card-header color="pure" class="icTitle2">\n        {{"REGISTER_DEPARTMENT" | translate}}\n      </ion-card-header>\n\n      <ion-card-content *ngIf="DepartmentClicked">\n        <ion-list>\n          <form [formGroup]="Branchform4">\n\n            <ion-item>\n              <ion-label stacked> {{"DEPARTMENT_NAME" | translate}}</ion-label>\n              <ion-input type="text" formControlName="DEPARTMENT_NAME" [(ngModel)]="Department_Name_ngModel" placeholder="{{\'Please fill in the department name of your company\'}}"></ion-input>\n            </ion-item>\n\n            <ion-item style="display: none;">\n              <ion-label stacked> {{"S_DESCRIPTION" | translate}}</ion-label>\n              <ion-input type="text" formControlName="DEPARTMENT_DESCRIPTION" [(ngModel)]="Department_Desc_ngModel" placeholder="{{\'Please fill in the department description of your company\'}}"></ion-input>\n            </ion-item>\n            <div class="btn">\n              <button ion-button icon-left [disabled]="!Branchform4.valid" (click)="AddDepartment()">\n                {{"S_ADD" | translate}}\n                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n\n            <ion-list>\n              <ion-item>\n                <table class="Tabler">\n                  <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                    <th class="lgl1">NAME</th>\n                    <th class="lgl1" style="display: none;">DESCRIPTION</th>\n                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                  </tr>\n\n                  <tr class="col7" *ngFor="let dept of Department; let i=index">\n                    <td class="lgl1">{{i+1}}</td>\n                    <td class="lgl1">{{dept.DEPARTMENT_NAME}}</td>\n                    <td class="lgl1" style="display: none;">{{dept.DEPARTMENT_DESC}}</td>\n                    <td class="lgl1 fColor">\n                      <button ion-button item-end (click)="EditDepartment(dept.DEPARTMENT_GUID)">\n                        <ion-icon name="md-create"></ion-icon>\n                      </button>\n                      <button ion-button item-end (click)="RemoveDepartment(dept.DEPARTMENT_GUID)">\n                        <ion-icon name="md-close"></ion-icon>\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </ion-item>\n            </ion-list>\n\n            <div class="btn">\n              <button ion-button (click)="BackDepartment()">{{"BACK" | translate}}\n                <ion-icon name="ios-arrow-back" style="padding: 10px;"></ion-icon>\n              </button>\n              <!-- [disabled]="!Branchform4.valid" -->\n              <button ion-button (click)="SaveDepartment()">  {{"NEXT" | translate}}\n                <ion-icon name="ios-arrow-forward" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card>\n      <ion-card-header color="pure" class="icTitle2">\n        {{"REGISTER_DESIGNATION" | translate}}\n      </ion-card-header>\n\n      <ion-card-content *ngIf="DesignationClicked">\n        <ion-list>\n          <form [formGroup]="Branchform5">\n\n            <ion-item>\n              <ion-label stacked>{{"S_DESIGNATION_NAME" | translate}}</ion-label>\n              <ion-input type="text" formControlName="DESINATION_NAME" [(ngModel)]="Designation_Name_ngModel" placeholder="{{\'Please fill in the designation name of your company\'}}"></ion-input>\n            </ion-item>\n\n            <ion-item style="display: none;">\n              <ion-label stacked>{{"S_DESCRIPTION" | translate}}</ion-label>\n              <ion-input type="text" formControlName="DESIGNATION_DESC" [(ngModel)]="Designation_Desc_ngModel" placeholder="{{\'Please fill in the designation description of your company\'}}"></ion-input>\n            </ion-item>\n            <div class="btn">\n              <button ion-button icon-left [disabled]="!Branchform5.valid" (click)="AddDesignation()">\n                {{"S_ADD" | translate}}\n                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n\n            <ion-list>\n              <ion-item>\n                <table class="Tabler">\n                  <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                    <th class="lgl1">NAME</th>\n                    <th class="lgl1" style="display: none;">DESCRIPTION</th>\n                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                  </tr>\n\n                  <tr class="col7" *ngFor="let desig of Designation; let i=index">\n                    <td class="lgl1">{{i+1}}</td>\n                    <td class="lgl1">{{desig.DESIGNATION_NAME}}</td>\n                    <td class="lgl1" style="display: none;">{{desig.DESIGNATION_DESC}}</td>\n                    <td class="lgl1 fColor">\n                      <button ion-button item-end (click)="EditDesignation(desig.DESIGNATION_GUID)">\n                        <ion-icon name="md-create"></ion-icon>\n                      </button>\n                      <button ion-button item-end (click)="RemoveDesignation(desig.DESIGNATION_GUID)">\n                        <ion-icon name="md-close"></ion-icon>\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </ion-item>\n            </ion-list>\n\n            <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="BackDesignation()">\n                <ion-icon name="ios-arrow-back" style="padding: 10px;"></ion-icon>{{"BACK" | translate}}\n              </button>\n              <!-- [disabled]="!Branchform6.valid" -->\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SaveDesignation()">{{"FINISH" | translate}}</button>\n            </div>\n\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n\n  </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/setupguide/setupguide.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_12__services_tenantmainsetup_service__["a" /* TenantMainSetup_Service */], __WEBPACK_IMPORTED_MODULE_14__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_16__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_19__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_21__services_departmentsetup_service__["a" /* DepartmentSetup_Service */], __WEBPACK_IMPORTED_MODULE_23__services_designationsetup_service__["a" /* DesignationSetup_Service */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */], __WEBPACK_IMPORTED_MODULE_24__shared_GlobalFunction__["a" /* GlobalFunction */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_12__services_tenantmainsetup_service__["a" /* TenantMainSetup_Service */], __WEBPACK_IMPORTED_MODULE_14__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_16__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_19__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_21__services_departmentsetup_service__["a" /* DepartmentSetup_Service */], __WEBPACK_IMPORTED_MODULE_23__services_designationsetup_service__["a" /* DesignationSetup_Service */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */], __WEBPACK_IMPORTED_MODULE_24__shared_GlobalFunction__["a" /* GlobalFunction */]])
    ], SetupguidePage);
    return SetupguidePage;
}());

//# sourceMappingURL=setupguide.js.map

/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__banksetup_banksetup__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__branchsetup_branchsetup__ = __webpack_require__(291);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__cashcardsetup_cashcardsetup__ = __webpack_require__(292);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__claimtype_claimtype__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__companysetup_companysetup__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__designationsetup_designationsetup__ = __webpack_require__(421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__departmentsetup_departmentsetup__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mileagesetup_mileagesetup__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__paymenttypesetup_paymenttypesetup__ = __webpack_require__(427);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__qualificationsetup_qualificationsetup__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__user_user__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__soc_registration_soc_registration__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__countrysetup_countrysetup__ = __webpack_require__(443);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__statesetup_statesetup__ = __webpack_require__(444);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__import_excel_data_import_excel_data__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__device_setup_device_setup__ = __webpack_require__(447);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__rolesetup_rolesetup__ = __webpack_require__(449);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__rolemodulesetup_rolemodulesetup__ = __webpack_require__(451);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__customer_setup_customer_setup__ = __webpack_require__(452);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__setupguide_setupguide__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__settings_settings__ = __webpack_require__(453);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__companysettings_companysettings__ = __webpack_require__(455);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__dbmaintenance_dbmaintenance__ = __webpack_require__(456);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__approval_profile_approval_profile__ = __webpack_require__(457);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__models_tenantcompanysetup_model__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__models_tenantcompanysitesetup_model__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__services_tenantcompanysetup_service__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__services_tenantcompanysitesetup_service__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_32_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_35_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





































/**
 * Generated class for the SetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var SetupPage = /** @class */ (function () {
    function SetupPage(navCtrl, navParams, fb, http, TenantCompanySetupService, tenantcompanysitesetupservice) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.TenantCompanySetupService = TenantCompanySetupService;
        this.tenantcompanysitesetupservice = tenantcompanysitesetupservice;
        this.tenant_company_entry = new __WEBPACK_IMPORTED_MODULE_27__models_tenantcompanysetup_model__["a" /* TenantCompanySetup_Model */]();
        this.tenant_company_site_entry = new __WEBPACK_IMPORTED_MODULE_28__models_tenantcompanysitesetup_model__["a" /* TenantCompanySiteSetup_Model */]();
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_branch' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.AddBranchsClicked = false;
        this.EditBranchsClicked = false;
        this.Exist_Record = false;
        this.AddBranchesClicked = false;
        //---------------------------------------------------------------------
        this.SetupGuideDisplay = false;
        this.TenantCompanyDisplay = false;
        this.BankDisplay = false;
        this.CashcardDisplay = false;
        this.ClaimTypeDisplay = false;
        this.DesignationDisplay = false;
        this.DepartmentDisplay = false;
        this.MileageDisplay = false;
        this.PaymentTypeDisplay = false;
        this.QualificationDisplay = false;
        this.UserDisplay = false;
        this.CustomerDisplay = false;
        this.SocDisplay = false;
        this.CountryDisplay = false;
        this.StateDisplay = false;
        this.DeviceDisplay = false;
        this.ImportDataDisplay = false;
        this.CompanySettingsDisplay = false;
        this.DBMaintenanceDisplay = false;
        this.RoleSetupDisplay = false;
        this.RoleModuleDisplay = false;
        this.ApprovalProfileDisplay = false;
        if (localStorage.getItem("g_USER_GUID") != null) {
            // this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + "/api/v2/zcs/_table/vw_tenantcompanysitedetails?filter=(TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
            // this.http
            //   .get(this.baseResourceUrl)
            //   .map(res => res.json())
            //   .subscribe(data => {
            //     this.branchs = data.resource;
            //   });
            // this.Branchform = fb.group({
            //   COMPANYNAME: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
            //   BRANCHNAME: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
            //   ISHQ_FLAG: ["", Validators.required],
            // });
            this.SetupGuideDisplay = false;
            this.TenantCompanyDisplay = false;
            this.BankDisplay = false;
            this.CashcardDisplay = false;
            this.ClaimTypeDisplay = false;
            this.DesignationDisplay = false;
            this.DepartmentDisplay = false;
            this.MileageDisplay = false;
            this.PaymentTypeDisplay = false;
            this.QualificationDisplay = false;
            this.UserDisplay = false;
            this.CustomerDisplay = false;
            this.SocDisplay = false;
            this.CountryDisplay = false;
            this.StateDisplay = false;
            this.DeviceDisplay = false;
            this.ImportDataDisplay = false;
            this.CompanySettingsDisplay = false;
            this.DBMaintenanceDisplay = false;
            this.RoleSetupDisplay = false;
            this.RoleModuleDisplay = false;
            this.ApprovalProfileDisplay = false;
            if (localStorage.getItem("g_USER_GUID") == "sva" || localStorage.getItem("g_IS_TENANT_ADMIN") == "1") {
                this.SetupGuideDisplay = true;
                this.TenantCompanyDisplay = true;
                this.BankDisplay = true;
                this.CashcardDisplay = true;
                this.ClaimTypeDisplay = true;
                this.DesignationDisplay = true;
                this.DepartmentDisplay = true;
                this.MileageDisplay = true;
                this.PaymentTypeDisplay = true;
                this.QualificationDisplay = true;
                this.UserDisplay = true;
                this.CustomerDisplay = true;
                this.SocDisplay = true;
                this.CountryDisplay = true;
                this.StateDisplay = true;
                this.DeviceDisplay = true;
                this.ImportDataDisplay = true;
                this.CompanySettingsDisplay = true;
                this.DBMaintenanceDisplay = true;
                this.RoleSetupDisplay = true;
                this.RoleModuleDisplay = true;
                this.ApprovalProfileDisplay = true;
            }
            else {
                //Get all the setup menu details for that particular role-----------------
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/view_user_role_submenu?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http
                    .get(this.baseResourceUrl)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.submodules = data.resource;
                    for (var item in data.resource) {
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'SetupguidePage') {
                            _this.SetupGuideDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'BranchsetupPage') {
                            _this.TenantCompanyDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'BanksetupPage') {
                            _this.BankDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'CashcardsetupPage') {
                            _this.CashcardDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'ClaimtypePage') {
                            _this.ClaimTypeDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'DesignationsetupPage') {
                            _this.DesignationDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'DepartmentsetupPage') {
                            _this.DepartmentDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'MileagesetupPage') {
                            _this.MileageDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'PaymenttypesetupPage') {
                            _this.PaymentTypeDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'QualificationsetupPage') {
                            _this.QualificationDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'UserPage') {
                            _this.UserDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'SocRegistrationPage') {
                            _this.SocDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'CountrysetupPage') {
                            _this.CountryDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'StatesetupPage') {
                            _this.StateDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'ImportExcelDataPage') {
                            _this.ImportDataDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'DeviceSetupPage') {
                            _this.DeviceDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'RolesetupPage') {
                            _this.RoleSetupDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'RolemodulesetupPage') {
                            _this.RoleModuleDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'CustomerSetupPage') {
                            _this.CustomerDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'ApprovalProfilePage') {
                            _this.ApprovalProfileDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'DbmaintenancePage') {
                            _this.DBMaintenanceDisplay = true;
                        }
                        if (data.resource[item]["CODE_PAGE_NAME"] == 'CompanysettingsPage') {
                            _this.CompanySettingsDisplay = true;
                        }
                    }
                });
                //------------------------------------------------------------------------
            }
        }
        else {
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_22__login_login__["a" /* LoginPage */]);
        }
    }
    SetupPage.prototype.AddBranchsClick = function () {
        this.AddBranchsClicked = true;
        this.ClearControls();
        this.COMPANYNAME_ngModel_Add = this.branchs[0]["NAME"];
    };
    SetupPage.prototype.CloseBranchsClick = function () {
        if (this.AddBranchsClicked == true) {
            this.AddBranchsClicked = false;
        }
        if (this.EditBranchsClicked == true) {
            this.EditBranchsClicked = false;
        }
    };
    SetupPage.prototype.EditClick = function () {
        // this.ClearControls();
        // this.EditBranchsClicked = true;
        // var self = this;
        // this.branchsetupservice
        //   .get(BRANCH_GUID)
        //   .subscribe((data) => {
        //     self.branch_details = data;
        //     this.NAME_ngModel_Edit = self.branch_details.NAME; localStorage.setItem('Prev_br_Name', self.branch_details.NAME);
        //   });
    };
    SetupPage.prototype.DeleteClick = function () {
        // let alert = this.alertCtrl.create({
        //   title: 'Remove Confirmation',
        //   message: 'Are you sure to remove?',
        //   buttons: [
        //     {
        //       text: 'Cancel',
        //       role: 'cancel',
        //       handler: () => {
        //         console.log('Cancel clicked');
        //       }
        //     },
        //     {
        //       text: 'OK',
        //       handler: () => {
        //         console.log('OK clicked');
        //         var self = this;
        //         this.branchsetupservice.remove(BRANCH_GUID)
        //           .subscribe(() => {
        //             self.branchs = self.branchs.filter((item) => {
        //               return item.BRANCH_GUID != BRANCH_GUID
        //             });
        //           });
        //       }
        //     }
        //   ]
        // }); alert.present();
    };
    SetupPage.prototype.goToSetupGuide = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_21__setupguide_setupguide__["a" /* SetupguidePage */]);
    };
    SetupPage.prototype.goToBanksetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__banksetup_banksetup__["a" /* BanksetupPage */]);
    };
    SetupPage.prototype.goToBranchsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__branchsetup_branchsetup__["a" /* BranchsetupPage */]);
    };
    SetupPage.prototype.goToCashcardsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__cashcardsetup_cashcardsetup__["a" /* CashcardsetupPage */]);
    };
    SetupPage.prototype.goToClaimtypesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__claimtype_claimtype__["a" /* ClaimtypePage */]);
    };
    SetupPage.prototype.goToUser = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__user_user__["a" /* UserPage */]);
    };
    SetupPage.prototype.goToCustomer = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_20__customer_setup_customer_setup__["a" /* CustomerSetupPage */]);
    };
    SetupPage.prototype.goToSOC = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__soc_registration_soc_registration__["a" /* SocRegistrationPage */]);
    };
    SetupPage.prototype.goToCompanysetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__companysetup_companysetup__["a" /* CompanysetupPage */]);
    };
    SetupPage.prototype.goToDesignationsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__designationsetup_designationsetup__["a" /* DesignationsetupPage */]);
    };
    SetupPage.prototype.goToDepartmentsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__departmentsetup_departmentsetup__["a" /* DepartmentsetupPage */]);
    };
    SetupPage.prototype.goToPaymenttypesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__paymenttypesetup_paymenttypesetup__["a" /* PaymenttypesetupPage */]);
    };
    SetupPage.prototype.goToStatesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_15__statesetup_statesetup__["a" /* StatesetupPage */]);
    };
    SetupPage.prototype.goToCountrysetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_14__countrysetup_countrysetup__["a" /* CountrysetupPage */]);
    };
    SetupPage.prototype.goToQualificationsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__qualificationsetup_qualificationsetup__["a" /* QualificationsetupPage */]);
    };
    SetupPage.prototype.goToMileagesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__mileagesetup_mileagesetup__["a" /* MileagesetupPage */]);
    };
    SetupPage.prototype.goToDevicesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_17__device_setup_device_setup__["a" /* DeviceSetupPage */]);
    };
    SetupPage.prototype.goToImport_Excel_Data_setup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__import_excel_data_import_excel_data__["a" /* ImportExcelDataPage */]);
    };
    SetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SetupPage');
    };
    SetupPage.prototype.Save = function () {
        if (this.Branchform.valid) {
            this.Save_Tenant_Company();
        }
    };
    SetupPage.prototype.Save_Tenant_Company = function () {
        var _this = this;
        //----------Check if the new tenant_company entered then take new guid else take the previous-------------
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/tenant_company?filter=(NAME=" + this.COMPANYNAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.resource[0] != undefined) {
                _this.tenant_company_entry.TENANT_COMPANY_GUID = data.resource[0]["TENANT_COMPANY_GUID"];
                _this.Save_Tenant_Company_Site();
            }
            else {
                _this.tenant_company_entry.TENANT_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_32_angular2_uuid__["UUID"].UUID();
                _this.tenant_company_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
                _this.tenant_company_entry.NAME = _this.COMPANYNAME_ngModel_Add.trim();
                _this.tenant_company_entry.ACTIVATION_FLAG = "1";
                _this.tenant_company_entry.CREATION_TS = new Date().toISOString();
                _this.tenant_company_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                _this.tenant_company_entry.UPDATE_TS = new Date().toISOString();
                _this.tenant_company_entry.UPDATE_USER_GUID = "";
                _this.TenantCompanySetupService.save(_this.tenant_company_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        _this.Save_Tenant_Company_Site();
                    }
                });
            }
        });
    };
    SetupPage.prototype.Save_Tenant_Company_Site = function () {
        var _this = this;
        this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = __WEBPACK_IMPORTED_MODULE_32_angular2_uuid__["UUID"].UUID();
        this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
        this.tenant_company_site_entry.SITE_NAME = this.BRANCHNAME_ngModel_Add.trim();
        this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
        this.tenant_company_site_entry.CREATION_TS = new Date().toISOString();
        this.tenant_company_site_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
        this.tenant_company_site_entry.UPDATE_USER_GUID = "";
        if (this.ISHQ_FLAG_ngModel_Add == true) {
            this.tenant_company_site_entry.ISHQ = "1";
        }
        else {
            this.tenant_company_site_entry.ISHQ = "0";
        }
        this.tenantcompanysitesetupservice.save(this.tenant_company_site_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //Check if previous tenant_company_site is hq active but current tenant_company_site is updating to hq active then previous tenant_company_site will inactive.      
                if (_this.ISHQ_FLAG_ngModel_Add == true) {
                    _this.UpdateHQ();
                }
                else {
                    alert('Company & Site Registered successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            }
        });
    };
    SetupPage.prototype.UpdateHQ = function () {
        var _this = this;
        if (this.ISHQ_FLAG_ngModel_Add == true) {
            //-------------Get all the details of previous tenant_company_site------------------------------
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/tenant_company_site?filter=(TENANT_COMPANY_SITE_GUID=" + localStorage.getItem("g_TENANT_COMPANY_SITE_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_36__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.hqDetails = data.resource;
                _this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem("g_TENANT_COMPANY_SITE_GUID");
                _this.tenant_company_site_entry.TENANT_COMPANY_GUID = localStorage.getItem("g_TENANT_COMPANY_GUID");
                _this.tenant_company_site_entry.SITE_NAME = _this.hqDetails[0]["SITE_NAME"];
                _this.tenant_company_site_entry.REGISTRATION_NUM = _this.hqDetails[0]["REGISTRATION_NUM"];
                _this.tenant_company_site_entry.ADDRESS = _this.hqDetails[0]["ADDRESS"];
                _this.tenant_company_site_entry.ADDRESS2 = _this.hqDetails[0]["ADDRESS2"];
                _this.tenant_company_site_entry.ADDRESS3 = _this.hqDetails[0]["ADDRESS3"];
                _this.tenant_company_site_entry.CONTACT_NO = _this.hqDetails[0]["CONTACT_NO"];
                _this.tenant_company_site_entry.EMAIL = _this.hqDetails[0]["EMAIL"];
                _this.tenant_company_site_entry.ACTIVATION_FLAG = _this.hqDetails[0]["ACTIVATION_FLAG"];
                _this.tenant_company_site_entry.CONTACT_PERSON = _this.hqDetails[0]["CONTACT_PERSON"];
                _this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = _this.hqDetails[0]["CONTACT_PERSON_CONTACT_NO"];
                _this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = _this.hqDetails[0]["CONTACT_PERSON_EMAIL"];
                _this.tenant_company_site_entry.WEBSITE = _this.hqDetails[0]["WEBSITE"];
                _this.tenant_company_site_entry.CREATION_TS = _this.hqDetails[0]["CREATION_TS"];
                _this.tenant_company_site_entry.CREATION_USER_GUID = _this.hqDetails[0]["CREATION_USER_GUID"];
                _this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
                _this.tenant_company_site_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                _this.tenant_company_site_entry.ISHQ = "0";
                _this.tenantcompanysitesetupservice.update(_this.tenant_company_site_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Company & Site Registered successfully');
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            });
        }
    };
    SetupPage.prototype.getBranchList = function () {
    };
    SetupPage.prototype.Update = function () {
    };
    SetupPage.prototype.ClearControls = function () {
        this.BRANCHNAME_ngModel_Add = "";
        this.COMPANYNAME_ngModel_Add = "";
        this.NAME_ngModel_Edit = "";
    };
    SetupPage.prototype.goToSettings = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_23__settings_settings__["a" /* SettingsPage */]);
    };
    SetupPage.prototype.goToCompanySettings = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_24__companysettings_companysettings__["a" /* CompanysettingsPage */]);
    };
    SetupPage.prototype.goToDBMaintenance = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_25__dbmaintenance_dbmaintenance__["a" /* DbmaintenancePage */]);
    };
    SetupPage.prototype.goToRolesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_18__rolesetup_rolesetup__["a" /* RolesetupPage */]);
    };
    SetupPage.prototype.goToRoleModulesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_19__rolemodulesetup_rolemodulesetup__["a" /* RolemodulesetupPage */]);
    };
    SetupPage.prototype.goToApprovalProfileSetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_26__approval_profile_approval_profile__["a" /* ApprovalProfilePage */]);
    };
    SetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-setup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/setup/setup.html"*/'<!--\n  Generated template for the SetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n\n    <ion-title>\n      <b>{{ "SETUP" | translate }}</b>\n    </ion-title>\n  </ion-navbar>\n\n</ion-header>\n<div class="popup123">\n  <div class="bgpop"></div>\n  <div class="PopUpwarn">\n    <div class="poptext">Sorry, this page cannot be viewed in this screen size. <br>Please use desktop browser to view the\n      page. </div>\n  </div>\n</div>\n<ion-content padding style="background: #eeeeee;">\n  <ion-card class="round1" (click)="goToSetupGuide()" *ngIf="SetupGuideDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-cog" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_GUID" | translate }}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToBranchsetup()" *ngIf="TenantCompanyDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-briefcase" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "TENANT_COMPANY" | translate }}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToBanksetup()" *ngIf="BankDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="logo-usd" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "BANK" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToCashcardsetup()" *ngIf="CashcardDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="cash" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "CASH_CARD" | translate }}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToClaimtypesetup()" *ngIf="ClaimTypeDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="list" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_CLAIM_TYPE" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToDesignationsetup()" *ngIf="DesignationDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="person" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_DESIGNATION" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToDepartmentsetup()" *ngIf="DepartmentDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="git-pull-request" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_DEPARTMENT" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToMileagesetup()" *ngIf="MileageDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="car" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_MILEAGE" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToPaymenttypesetup()" *ngIf="PaymentTypeDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="list-box" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "PAYMENT_TYPE" | translate }} \n\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToQualificationsetup()" *ngIf="QualificationDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="medal" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_QUALIFICATION" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToUser()" *ngIf="UserDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="people" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "USER_REGISTRATION" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToCustomer()" *ngIf="CustomerDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="man" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_CUSTOMER_REGISTRATION" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToSOC()" *ngIf="SocDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="md-clipboard" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "S_SETUP_GUID" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToCountrysetup()" *ngIf="CountryDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-pin" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_COUNTRY" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToStatesetup()" *ngIf="StateDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-pin-outline" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_STATE" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToDevicesetup()" *ngIf="DeviceDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-finger-print-outline" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "ATTENDANCE" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToImport_Excel_Data_setup()" *ngIf="ImportDataDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-stats-outline" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_IMPORT_DATA" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <!-- <ion-card class="round1" (click)="goToSettings()" style="display:none;">\n    <ion-card-header class="icon">\n      <ion-icon name="settings" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "SETUP_SETTING" | translate }}  \n    </ion-card-content>\n  </ion-card> -->\n\n  <ion-card class="round1" (click)="goToCompanySettings()" *ngIf="CompanySettingsDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="settings" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "COMPANY_SETTING" | translate }} \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToDBMaintenance()" *ngIf="DBMaintenanceDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="cloud-download" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      {{ "DB_MAINTENANCE" | translate }}  \n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToRolesetup()" *ngIf="RoleSetupDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="git-network" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Role Setup\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToRoleModulesetup()" *ngIf="RoleModuleDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-git-network" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Role Module Setup\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToApprovalProfileSetup()" *ngIf="ApprovalProfileDisplay">\n    <ion-card-header class="icon">\n      <ion-icon name="basket" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Approval Profile\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/setup/setup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_29__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_30__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_31__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_33__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_34__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_29__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_30__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */]])
    ], SetupPage);
    return SetupPage;
}());

//# sourceMappingURL=setup.js.map

/***/ }),
/* 169 */,
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MainClaimRequestModel; });
var MainClaimRequestModel = /** @class */ (function () {
    function MainClaimRequestModel(CLAIM_REQUEST_GUID, SOC_GUID, CUSTOMER_GUID, TENANT_GUID, CLAIM_REF_GUID, CLAIM_TYPE_GUID, MILEAGE_GUID, ALLOWANCE_GUID, START_TS, END_TS, FROM, DESTINATION, DISTANCE_KM, DESCRIPTION, MILEAGE_AMOUNT, CLAIM_AMOUNT, ROUND_TRIP, CALENDAR_REF, TRAVEL_DATE, STATUS, STATUS_REMARKS, STAGE, STAGE_REMARKS, ASSIGNED_TO, PROFILE_JSON, PROFILE_LEVEL, PREVIOUS_LEVEL, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, ATTACHMENT_ID, TRAVEL_TYPE, claim_method_guid, from_place_id, to_place_id, AUDIT_TRAIL) {
        if (CLAIM_REQUEST_GUID === void 0) { CLAIM_REQUEST_GUID = null; }
        if (SOC_GUID === void 0) { SOC_GUID = null; }
        if (CUSTOMER_GUID === void 0) { CUSTOMER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (CLAIM_REF_GUID === void 0) { CLAIM_REF_GUID = null; }
        if (CLAIM_TYPE_GUID === void 0) { CLAIM_TYPE_GUID = null; }
        if (MILEAGE_GUID === void 0) { MILEAGE_GUID = null; }
        if (ALLOWANCE_GUID === void 0) { ALLOWANCE_GUID = null; }
        if (START_TS === void 0) { START_TS = null; }
        if (END_TS === void 0) { END_TS = null; }
        if (FROM === void 0) { FROM = null; }
        if (DESTINATION === void 0) { DESTINATION = null; }
        if (DISTANCE_KM === void 0) { DISTANCE_KM = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (MILEAGE_AMOUNT === void 0) { MILEAGE_AMOUNT = null; }
        if (CLAIM_AMOUNT === void 0) { CLAIM_AMOUNT = null; }
        if (ROUND_TRIP === void 0) { ROUND_TRIP = null; }
        if (CALENDAR_REF === void 0) { CALENDAR_REF = null; }
        if (TRAVEL_DATE === void 0) { TRAVEL_DATE = null; }
        if (STATUS === void 0) { STATUS = null; }
        if (STATUS_REMARKS === void 0) { STATUS_REMARKS = null; }
        if (STAGE === void 0) { STAGE = null; }
        if (STAGE_REMARKS === void 0) { STAGE_REMARKS = null; }
        if (ASSIGNED_TO === void 0) { ASSIGNED_TO = null; }
        if (PROFILE_JSON === void 0) { PROFILE_JSON = null; }
        if (PROFILE_LEVEL === void 0) { PROFILE_LEVEL = null; }
        if (PREVIOUS_LEVEL === void 0) { PREVIOUS_LEVEL = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (ATTACHMENT_ID === void 0) { ATTACHMENT_ID = null; }
        if (TRAVEL_TYPE === void 0) { TRAVEL_TYPE = null; }
        if (claim_method_guid === void 0) { claim_method_guid = null; }
        if (from_place_id === void 0) { from_place_id = null; }
        if (to_place_id === void 0) { to_place_id = null; }
        if (AUDIT_TRAIL === void 0) { AUDIT_TRAIL = null; }
        this.CLAIM_REQUEST_GUID = CLAIM_REQUEST_GUID;
        this.SOC_GUID = SOC_GUID;
        this.CUSTOMER_GUID = CUSTOMER_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.CLAIM_REF_GUID = CLAIM_REF_GUID;
        this.CLAIM_TYPE_GUID = CLAIM_TYPE_GUID;
        this.MILEAGE_GUID = MILEAGE_GUID;
        this.ALLOWANCE_GUID = ALLOWANCE_GUID;
        this.START_TS = START_TS;
        this.END_TS = END_TS;
        this.FROM = FROM;
        this.DESTINATION = DESTINATION;
        this.DISTANCE_KM = DISTANCE_KM;
        this.DESCRIPTION = DESCRIPTION;
        this.MILEAGE_AMOUNT = MILEAGE_AMOUNT;
        this.CLAIM_AMOUNT = CLAIM_AMOUNT;
        this.ROUND_TRIP = ROUND_TRIP;
        this.CALENDAR_REF = CALENDAR_REF;
        this.TRAVEL_DATE = TRAVEL_DATE;
        this.STATUS = STATUS;
        this.STATUS_REMARKS = STATUS_REMARKS;
        this.STAGE = STAGE;
        this.STAGE_REMARKS = STAGE_REMARKS;
        this.ASSIGNED_TO = ASSIGNED_TO;
        this.PROFILE_JSON = PROFILE_JSON;
        this.PROFILE_LEVEL = PROFILE_LEVEL;
        this.PREVIOUS_LEVEL = PREVIOUS_LEVEL;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.ATTACHMENT_ID = ATTACHMENT_ID;
        this.TRAVEL_TYPE = TRAVEL_TYPE;
        this.claim_method_guid = claim_method_guid;
        this.from_place_id = from_place_id;
        this.to_place_id = to_place_id;
        this.AUDIT_TRAIL = AUDIT_TRAIL;
    }
    MainClaimRequestModel.fromJson = function (json) {
        if (!json)
            return;
        return new MainClaimRequestModel(json.CLAIM_REQUEST_GUID, json.SOC_GUID, json.CUSTOMER_GUID, json.TENANT_GUID, json.CLAIM_REF_GUID, json.CLAIM_TYPE_GUID, json.MILEAGE_GUID, json.ALLOWANCE_GUID, json.START_TS, json.END_TS, json.FROM, json.DESTINATION, json.DISTANCE_KM, json.DESCRIPTION, json.MILEAGE_AMOUNT, json.CLAIM_AMOUNT, json.ROUND_TRIP, json.CALENDAR_REF, json.TRAVEL_DATE, json.STATUS, json.STATUS_REMARKS, json.STAGE, json.STAGE_REMARKS, json.ASSIGNED_TO, json.PROFILE_JSON, json.PROFILE_LEVEL, json.PREVIOUS_LEVEL, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.ATTACHMENT_ID, json.TRAVEL_TYPE, json.claim_method_guid, json.from_place_id, json.to_place_id, json.AUDIT_TRAIL);
    };
    MainClaimRequestModel.prototype.toJson = function (stringify) {
        var doc = {
            CLAIM_REQUEST_GUID: this.CLAIM_REQUEST_GUID,
            SOC_GUID: this.SOC_GUID,
            CUSTOMER_GUID: this.CUSTOMER_GUID, TENANT_GUID: this.TENANT_GUID,
            CLAIM_REF_GUID: this.CLAIM_REF_GUID,
            CLAIM_TYPE_GUID: this.CLAIM_TYPE_GUID,
            MILEAGE_GUID: this.MILEAGE_GUID,
            ALLOWANCE_GUID: this.ALLOWANCE_GUID,
            START_TS: this.START_TS,
            END_TS: this.END_TS,
            FROM: this.FROM,
            DESTINATION: this.DESTINATION,
            DISTANCE_KM: this.DISTANCE_KM,
            DESCRIPTION: this.DESCRIPTION,
            MILEAGE_AMOUNT: this.MILEAGE_AMOUNT,
            CLAIM_AMOUNT: this.CLAIM_AMOUNT,
            ROUND_TRIP: this.ROUND_TRIP,
            CALENDAR_REF: this.CALENDAR_REF,
            TRAVEL_DATE: this.TRAVEL_DATE,
            STATUS: this.STATUS,
            STATUS_REMARKS: this.STATUS_REMARKS,
            STAGE: this.STAGE,
            STAGE_REMARKS: this.STAGE_REMARKS, ASSIGNED_TO: this.ASSIGNED_TO,
            CREATION_TS: this.CREATION_TS,
            PROFILE_JSON: this.PROFILE_JSON,
            PROFILE_LEVEL: this.PROFILE_LEVEL,
            PREVIOUS_LEVEL: this.PREVIOUS_LEVEL,
            ATTACHMENT_ID: this.ATTACHMENT_ID,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            TRAVEL_TYPE: this.TRAVEL_TYPE,
            claim_method_guid: this.claim_method_guid,
            from_place_id: this.from_place_id,
            to_place_id: this.to_place_id,
            AUDIT_TRAIL: this.AUDIT_TRAIL
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return MainClaimRequestModel;
}());

//# sourceMappingURL=main-claim-request.model.js.map

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DesignationSetup_Model; });
var DesignationSetup_Model = /** @class */ (function () {
    function DesignationSetup_Model(DESIGNATION_GUID, NAME, DESCRIPTION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, TENANT_GUID) {
        if (DESIGNATION_GUID === void 0) { DESIGNATION_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        this.DESIGNATION_GUID = DESIGNATION_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
    }
    DesignationSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new DesignationSetup_Model(json.DESIGNATION_GUID, json.NAME, json.DESCRIPTION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.TENANT_GUID);
    };
    DesignationSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            DESIGNATION_GUID: this.DESIGNATION_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            TENANT_GUID: this.TENANT_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return DesignationSetup_Model;
}());

//# sourceMappingURL=designationsetup_model.js.map

/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepartmentSetup_Model; });
var DepartmentSetup_Model = /** @class */ (function () {
    function DepartmentSetup_Model(DEPARTMENT_GUID, NAME, 
    //public COMPANY: string = null,
    DESCRIPTION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, TENANT_GUID) {
        if (DEPARTMENT_GUID === void 0) { DEPARTMENT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        this.DEPARTMENT_GUID = DEPARTMENT_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
    }
    DepartmentSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new DepartmentSetup_Model(json.DEPARTMENT_GUID, json.NAME, 
        //json.COMPANY,
        json.DESCRIPTION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.TENANT_GUID);
    };
    DepartmentSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            DEPARTMENT_GUID: this.DEPARTMENT_GUID,
            NAME: this.NAME,
            //COMPANY: this.COMPANY,
            DESCRIPTION: this.DESCRIPTION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            TENANT_GUID: this.TENANT_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return DepartmentSetup_Model;
}());

//# sourceMappingURL=departmentsetup_model.js.map

/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_crypto_js__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_transfer__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_camera__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_file_path__ = __webpack_require__(434);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_file__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__models_usersetup_info_model__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__models_user_contact_model__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__models_user_company_model__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__models_usersetup_address_model__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__models_user_qualification_model__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__models_user_certification_model__ = __webpack_require__(436);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__models_user_spouse_model__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__models_user_children_model__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__models_viewuser_model__ = __webpack_require__(611);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__models_view_dropdown__ = __webpack_require__(612);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__models_user_role_model__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_28_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__models_image_upload_model__ = __webpack_require__(177);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
































/**
 * Generated class for the UserPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var UserPage = /** @class */ (function () {
    function UserPage(navCtrl, viewCtrl, navParams, fb, http, api, userservice, alertCtrl, camera, actionSheetCtrl, loadingCtrl, file, filePath, toastCtrl, platform, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.http = http;
        this.api = api;
        this.userservice = userservice;
        this.alertCtrl = alertCtrl;
        this.camera = camera;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.file = file;
        this.filePath = filePath;
        this.toastCtrl = toastCtrl;
        this.platform = platform;
        this.titlecasePipe = titlecasePipe;
        //selectedValue: number;
        this.page = 1;
        this.load = false;
        this.genders = [];
        this.maritals = [];
        this.emptypes = [];
        this.empstatuss = [];
        this.userinfo_entry = new __WEBPACK_IMPORTED_MODULE_13__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_14__models_user_main_model__["a" /* UserMain_Model */]();
        this.usercontact_entry = new __WEBPACK_IMPORTED_MODULE_15__models_user_contact_model__["a" /* UserContact_Model */]();
        this.usercompany_entry = new __WEBPACK_IMPORTED_MODULE_16__models_user_company_model__["a" /* UserCompany_Model */]();
        // tenantcompany_entry: UserCompany_Model = new UserCompany_Model();
        this.useraddress_entry = new __WEBPACK_IMPORTED_MODULE_17__models_usersetup_address_model__["a" /* UserAddress_Model */]();
        this.userqualification_entry = new __WEBPACK_IMPORTED_MODULE_18__models_user_qualification_model__["a" /* UserQualification_Model */]();
        this.UserCertification_Entry = new __WEBPACK_IMPORTED_MODULE_19__models_user_certification_model__["a" /* UserCertification_Model */]();
        this.UserSpouse_Entry = new __WEBPACK_IMPORTED_MODULE_20__models_user_spouse_model__["a" /* UserSpouse_Model */]();
        this.UserChildren_Entry = new __WEBPACK_IMPORTED_MODULE_21__models_user_children_model__["a" /* UserChildren_Model */]();
        this.userrole_entry = new __WEBPACK_IMPORTED_MODULE_27__models_user_role_model__["a" /* UserRole_Model */]();
        this.viewuser_entry = new __WEBPACK_IMPORTED_MODULE_22__models_viewuser_model__["a" /* ViewUser_Model */]();
        this.viewdropdown_entry = new __WEBPACK_IMPORTED_MODULE_23__models_view_dropdown__["a" /* View_Dropdown_Model */]();
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_address?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')&' + this.Key_Param;
        this.users = [];
        this.users_local = [];
        //public employees: UserInfo_Model[] =[];
        this.employees = [];
        this.employees_local = [];
        // public employees_local: UserInfo_Model[] =[];
        this.Exist_Record = false;
        this.AddUserClicked = false;
        this.EditUserClicked = false;
        this.ProfessionalCertification = [];
        this.FamilyDetails = [];
        this.ChildrenDetails = [];
        this.MaritalStatusMarried = false;
        // private _users: any[];
        this.Global_Function = new __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__["a" /* GlobalFunction */](this.alertCtrl);
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        this.CertificateSaveFlag = false;
        this.SpouseSaveFlag = false;
        this.ChildSaveFlag = false;
        this.lastImage = null;
        this.baseUrl = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + 'car1.jpg' + '?' + this.Key_Param;
        // uploadFileName: string; 
        this.chooseFile = false;
        this.newImage = true;
        this.ImageUploadValidation = false;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        localStorage.removeItem("Unique_File_Name");
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            //Get the role for this page------------------------------        
            if (localStorage.getItem("g_KEY_ADD") == "0") {
                this.button_Add_Disable = true;
            }
            if (localStorage.getItem("g_KEY_EDIT") == "0") {
                this.button_Edit_Disable = true;
            }
            if (localStorage.getItem("g_KEY_DELETE") == "0") {
                this.button_Delete_Disable = true;
            }
            if (localStorage.getItem("g_KEY_VIEW") == "0") {
                this.button_View_Disable = true;
            }
        }
        //this.ProfileImageGet();
        if (localStorage.getItem("g_USER_GUID") != null) {
            //---------Bind Designation-----------------      
            //this.GetDesignation("main_designation", "NAME");
            //---------Bind Company---------------------
            this.GetCompany("tenant_company", "NAME");
            //---------Bind Department------------------
            // this.GetDepartment("main_department", "NAME");
            //---------Bind Branch----------------------
            //this.GetBranch("tenant_company_site", "SITE_NAME");
            //---------Bind Country---------------------
            this.BindCountry("main_country", "NAME");
            //---------Bind State-----------------------
            //this.BindState("main_state", "NAME");
            //--------Bind Qualification----------------
            this.BindQualification("main_qualification_type", "TYPE_NAME");
            //---------Bind Bank------------------------
            //this.BindBank("main_bank", "NAME");
            //---------Bind Approver-------------------
            //this.BindApprover1("view_get_tenant_admin");
            //---------Bind Grid------------------------
            this.BindGrid("view_user_display_new");
            //--------Bind Role--------------------------
            this.BindRole();
            this.Userform = fb.group({
                // -------------------PERSONAL DETAILS--------------------
                avatar: null,
                avatar1: null,
                avatar2: null,
                avatar3: null,
                NAME: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                EMAIL: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
                LOGIN_ID: [null],
                PASSWORD: [null],
                CONTACT_NO: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                COMPANY_CONTACT_NO: [null],
                MARITAL_STATUS: [null],
                PERSONAL_ID_TYPE: [null],
                PERSONAL_ID: [null],
                DOB: [null],
                GENDER: [null],
                // -------------------EMPLOYMENT DETAILS--------------------
                DESIGNATION_GUID: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                TENANT_COMPANY_GUID: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                DEPT_GUID: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                JOIN_DATE: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                CONFIRMATION_DATE: [null],
                RESIGNATION_DATE: [null],
                BRANCH: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                EMPLOYEE_TYPE: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                APPROVER1: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                // APPROVER2: ['', Validators.required],
                EMPLOYEE_STATUS: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                // -------------------EDUCATIONAL QUALIFICATION--------------------
                HIGHEST_QUALIFICATION: [null],
                UNIVERSITY: [null],
                MAJOR: [null],
                EDU_YEAR: [null],
                // -------------------PROFESSIONAL CERTIFICATIONS--------------------
                CERTIFICATION: [null],
                CERTIFICATION_YEAR: [null],
                CERTIFICATION_GRADE: [null],
                ATTACHMENT_PROFESSIONAL: [null],
                // -------------------RESIDENTIAL ADDRESS----------------------------
                USER_ADDRESS1: [null],
                USER_ADDRESS2: [null],
                USER_ADDRESS3: [null],
                USER_POSTCODE: [null],
                USER_COUNTRY: [null],
                USER_STATE: [null],
                // -------------------FAMILY DETAILS----------------------------------
                //--------For Spouse----------
                SPOUSENAME: [null],
                SPOUSE_ICNUMBER: [null],
                //--------For Child----------
                CHILDNAME: [null],
                CHILD_ICNUMBER: [null],
                CHILD_GENDER: [null],
                SPOUSE_CHILD: [null],
                // -------------------EMERGENCY CONTACT DETAILS------------------------
                EMG_CONTACT_NAME1: [null],
                EMG_RELATIONSHIP: [null],
                EMG_CONTACT_NO1: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                EMG_CONTACT_NAME2: [null],
                EMG_RELATIONSHIP2: [null],
                EMG_CONTACT_NO2: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                // -------------------PAYROLL DETAILS------------------------
                EPF_NUMBER: [null],
                INCOMETAX_NO: [null],
                BANK_NAME: [null],
                ACCOUNT_NUMBER: [null],
                //-------------------ROLE DETAILS---------------------------
                ROLE_NAME: [null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required],
                ADDITIONAL_ROLE_NAME: [null]
            });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_29__login_login__["a" /* LoginPage */]);
        }
    }
    UserPage.prototype.AddUserClick = function () {
        this.AddUserClicked = true;
        this.ClearControls();
        //Generate Password Encrypt-----------------
        var strPassword = this.Global_Function.Random();
        //this.User_Password_ngModel = Global_Function.Random().toString();
        this.User_Password_ngModel = __WEBPACK_IMPORTED_MODULE_2_crypto_js___default.a.SHA256(strPassword).toString(__WEBPACK_IMPORTED_MODULE_2_crypto_js___default.a.enc.Hex);
        //console.log(this.User_Password_ngModel);
        // alert(strPassword);
    };
    UserPage.prototype.CloseUserClick = function () {
        if (this.AddUserClicked == true) {
            this.AddUserClicked = false;
        }
        if (this.EditUserClicked == true) {
            this.EditUserClicked = false;
        }
    };
    UserPage.prototype.EditClick_Personaldetails = function (id) {
        var _this = this;
        this.ClearControls();
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.USER_GUID_FOR_UPDATE = id;
        this.EditUserClicked = true;
        var headers = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        var options = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["d" /* RequestOptions */]({ headers: headers });
        var url_user_edit = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "view_user_edit?filter=(USER_GUID=" + id + ')&' + this.Key_Param;
        var url_user_Professional_Certification = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_certification?filter=(USER_GUID=" + id + ')&' + this.Key_Param;
        var url_user_Spouse = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_spouse?filter=(USER_GUID=" + id + ')&' + this.Key_Param;
        var url_user_Children = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_children?filter=(USER_GUID=" + id + ')&' + this.Key_Param;
        //----------------Get the Details from Db and bind Controls---------------------------------
        this.http.get(url_user_edit, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.view_user_details = data["resource"];
            //------------------------PERSONAL DETAILS----------------------------------
            _this.User_Name_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["FULLNAME"]);
            _this.User_Email_Edit_ngModel = _this.view_user_details[0]["EMAIL"];
            _this.User_LoginId_Edit_ngModel = _this.view_user_details[0]["LOGIN_ID"];
            _this.User_Password_Edit_ngModel = _this.view_user_details[0]["PASSWORD"];
            _this.User_PersonalNo_Edit_ngModel = _this.view_user_details[0]["CONTACT_NO"];
            _this.User_CompanyNo_Edit_ngModel = _this.view_user_details[0]["COMPANY_CONTACT_NO"];
            _this.User_Marital_Edit_ngModel = _this.view_user_details[0]["MARITAL_STATUS"];
            if (_this.view_user_details[0]["MARITAL_STATUS"] == "1") {
                _this.MaritalStatusMarried = true;
            }
            else {
                _this.MaritalStatusMarried = false;
            }
            _this.User_StaffID_Edit_ngModel = _this.view_user_details[0]["PERSONAL_ID_TYPE"];
            _this.User_ICNo_Edit_ngModel = _this.view_user_details[0]["PERSONAL_ID"];
            _this.User_DOB_Edit_ngModel = _this.view_user_details[0]["DOB"];
            _this.User_Gender_Edit_ngModel = _this.view_user_details[0]["GENDER"];
            if (_this.view_user_details[0]["ATTACHMENT_ID"] == null || _this.view_user_details[0]["ATTACHMENT_ID"] == '') {
                _this.Profile_Image_Display = "assets/img/profile_no_preview.png";
            }
            else {
                _this.Profile_Image_Display = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + _this.view_user_details[0]["ATTACHMENT_ID"] + "?" + _this.Key_Param;
            }
            //------------------------EMPLOYMENT DETAILS----------------------------------
            _this.USER_INFO_GUID_FOR_UPDATE = _this.view_user_details[0]["USER_INFO_GUID"];
            _this.USER_GUID_FOR_COMPANY_CONTACT = _this.view_user_details[0]["USER_COMPANY_GUID"];
            _this.USER_GUID_FOR_CONTACT = _this.view_user_details[0]["CONTACT_INFO_GUID"];
            _this.User_Company_Edit_ngModel = _this.view_user_details[0]["COMPANY_GUID"];
            _this.GetBranch("tenant_company_site", _this.User_Company_Edit_ngModel, "SITE_NAME");
            _this.GetDesignation('main_designation', 'NAME');
            _this.GetDepartment('main_department', 'NAME');
            _this.BindBank('main_bank', 'NAME');
            _this.BindApprover1("view_get_tenant_admin");
            _this.BindRole();
            if (_this.view_user_details[0]["DESIGNATION_GUID"] != null) {
                _this.User_Designation_Edit_ngModel = _this.view_user_details[0]["DESIGNATION_GUID"];
            }
            if (_this.view_user_details[0]["DEPT_GUID"] != null) {
                _this.User_Department_Edit_ngModel = _this.view_user_details[0]["DEPT_GUID"];
            }
            _this.User_JoinDate_Edit_ngModel = _this.view_user_details[0]["JOIN_DATE"];
            _this.User_ConfirmationDate_Edit_ngModel = _this.view_user_details[0]["CONFIRMATION_DATE"];
            _this.User_ResignationDate_Edit_ngModel = _this.view_user_details[0]["RESIGNATION_DATE"];
            _this.User_Branch_Edit_ngModel = _this.view_user_details[0]["BRANCH"];
            //this.EmployeeTypeAdjuster=  this.User_EmployeeType_Edit_ngModel = this.view_user_details[0]["EMPLOYEE_TYPE"]; 
            _this.User_EmployeeType_Edit_ngModel = _this.view_user_details[0]["EMPLOYEE_TYPE"];
            if (_this.view_user_details[0]["MANAGER_USER_GUID"] != null) {
                _this.User_Approver1_Edit_ngModel = _this.view_user_details[0]["MANAGER_USER_GUID"];
            }
            // this.User_Approver2_Edit_ngModel = this.view_user_details[0]["APPROVER2"];
            _this.User_Employment_Edit_ngModel = _this.view_user_details[0]["EMPLOYEE_STATUS"];
            //------------------------EDUCATIONAL QUALIFICATION----------------------------
            _this.USER_QUALIFICATION_GUID_FOR_UPDATE = _this.view_user_details[0]["USER_QUALIFICATION_GUID"];
            _this.User_HighestQualification_Edit_ngModel = _this.view_user_details[0]["QUALIFICATION_GUID"];
            _this.User_University_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["UNIVERSITY"]);
            _this.User_Major_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["MAJOR"]);
            _this.User_EduYear_Edit_ngModel = _this.view_user_details[0]["YEAR"];
            //------------------------RESIDENTIAL ADDRESS----------------------------------
            _this.USER_GUID_FOR_ADDRESS = _this.view_user_details[0]["USER_ADDRESS_GUID"];
            _this.User_Address1_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS1"]);
            _this.User_Address2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS2"]);
            _this.User_Address3_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS3"]);
            _this.User_PostCode_Edit_ngModel = _this.view_user_details[0]["POST_CODE"];
            _this.User_Country_Edit_ngModel = _this.view_user_details[0]["COUNTRY_GUID"];
            _this.BindState('main_state', _this.User_Country_Edit_ngModel, 'NAME');
            _this.User_State_Edit_ngModel = _this.view_user_details[0]["STATE_GUID"];
            //------------------------EMERGENCY CONTACT DETAILS---------------------------
            _this.User_EMG_CONTACT_NAME1_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_CONTACT_NAME_1"]);
            _this.User_EMG_RELATIONSHIP_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_RELATIONSHIP_1"]);
            _this.User_EMG_CONTACT_NO1_Edit_ngModel = _this.view_user_details[0]["EMG_CONTACT_NUMBER_1"];
            _this.User_EMG_CONTACT_NAME2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_CONTACT_NAME_2"]);
            _this.User_EMG_RELATIONSHIP2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_RELATIONSHIP_2"]);
            _this.User_EMG_CONTACT_NO2_Edit_ngModel = _this.view_user_details[0]["EMG_CONTACT_NUMBER_2"];
            //------------------------PAYROLL CONTACT DETAILS-----------------------------
            _this.User_EPF_NUMBER_Edit_ngModel = _this.view_user_details[0]["PR_EPF_NUMBER"];
            _this.User_INCOMETAX_NO_Edit_ngModel = _this.view_user_details[0]["PR_INCOMETAX_NUMBER"];
            if (_this.view_user_details[0]["BANK_GUID"] != null) {
                _this.User_BANK_NAME_Edit_ngModel = _this.view_user_details[0]["BANK_GUID"];
            }
            _this.User_ACCOUNT_NUMBER_Edit_ngModel = _this.view_user_details[0]["PR_ACCOUNT_NUMBER"];
            _this.loading.dismissAll();
        });
        //------------------------PROFESSIONAL CERTIFICATIONS--------------------------
        this.http.get(url_user_Professional_Certification, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.ProfessionalCertification.push({ CERTIFICATE_GUID: data["resource"][item]["certificate_guid"], NAME: data["resource"][item]["name"], GRADE: data["resource"][item]["grade"], YEAR: data["resource"][item]["passing_year"], ATTACHMENT: data["resource"][item]["attachment"] });
            }
        });
        //------------------------FAMILY DETAILS---------------------------------------
        //------------------------SPOUSE--------------------------        
        this.http.get(url_user_Spouse, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.FamilyDetails.push({ SPOUSE_GUID: data["resource"][item]["SPOUSE_GUID"], NAME: data["resource"][item]["NAME"], ICNO: data["resource"][item]["ICNO"] });
            }
        });
        //------------------------CHILDREN------------------------        
        this.http.get(url_user_Children, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.ChildrenDetails.push({ CHILD_GUID: data["resource"][item]["CHILD_GUID"], NAME: data["resource"][item]["NAME"], ICNO: data["resource"][item]["ICNO"], GENDER: data["resource"][item]["GENDER"], SPOUSE: data["resource"][item]["SPOUSE"] });
            }
        });
        //------------------------Role-------------------------------
        var CheckRole = [];
        var CheckAdditionalRole = [];
        var User_Role_url = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_role?filter=(USER_GUID=" + id + ')&' + this.Key_Param;
        this.http
            .get(User_Role_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data.resource;
            for (var itemA in _this.roles) {
                if (_this.roles[itemA]["ROLE_FLAG"] == "MAIN") {
                    CheckRole.push(_this.roles[itemA]["ROLE_GUID"]);
                    localStorage.setItem("Main_User_Role_Guid_Temp", _this.roles[itemA]["USER_ROLE_GUID"]);
                }
                else {
                    CheckAdditionalRole.push(_this.roles[itemA]["ROLE_GUID"]);
                }
            }
            _this.ROLE_ngModel_Edit = CheckRole;
            _this.ADDITIONAL_ROLE_ngModel_Edit = CheckAdditionalRole;
        });
    };
    UserPage.prototype.DeleteClick = function (USER_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.userservice.remove(USER_GUID)
                            .subscribe(function () {
                            self.users = self.users.filter(function (item) {
                                return item.USER_GUID != USER_GUID;
                            });
                            _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    UserPage.prototype.SaveImageinDB = function (fileName) {
        var _this = this;
        var objImage = new __WEBPACK_IMPORTED_MODULE_30__models_image_upload_model__["a" /* ImageUpload_model */]();
        objImage.Image_Guid = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        objImage.IMAGE_URL = this.CloudFilePath + fileName;
        objImage.CREATION_TS = new Date().toISOString();
        objImage.Update_Ts = new Date().toISOString();
        return new Promise(function (resolve) {
            _this.api.postData('main_images', objImage.toJson(true)).subscribe(function () {
                resolve(objImage.toJson());
            });
        });
    };
    UserPage.prototype.UploadImage_Old = function (fileChoose, fileName) {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.load = true;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', fileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + fileName, _this.Userform.get(fileChoose).value, options)
                .map(function (response) {
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    // clearFile(fileChoose: any) {
    //   console.log(fileChoose);
    //   this.Userform.get(fileChoose).setValue(null);
    //   //console.log(this.fileInput);
    //   // this.fileInput1.nativeElement.value = '';
    //   this.fileInput2.nativeElement.value = '';
    //   this.fileInput3.nativeElement.value = '';
    // }
    UserPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad UserPage');
    };
    UserPage.prototype.searchUser = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.userview = this.storeUsers;
            return;
        }
        this.userview = this.filterUser({
            FULLNAME: val,
            STAFF_ID: val,
            tenant_company_name: val,
            department_name: val,
            designation_name: val,
            EMAIL: val,
            EMPLOYEE_STATUS: val
        });
    };
    UserPage.prototype.filterUser = function (params) {
        if (!params) {
            return this.storeUsers;
        }
        return this.storeUsers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    UserPage.prototype.BindGrid = function (ViewName) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
        //content: 'Loading...',
        });
        this.loading.present();
        var TableURL_User;
        TableURL_User = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + ViewName + '?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&' + this.Key_Param;
        this.http
            .get(TableURL_User)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.userview = data["resource"];
            _this.storeUsers = data["resource"];
            _this.loading.dismissAll();
        });
    };
    UserPage.prototype.GetDesignation = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        if (this.AddUserClicked == true) {
            TempUser_Company_ngModel = this.User_Company_ngModel.trim();
        }
        else {
            TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        }
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.designations = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    UserPage.prototype.GetCompany = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            //TableURL = constants.DREAMFACTORY_TABLE_URL + TableName + '?filter=(TENANT_GUID=' + this.User_Company_ngModel +')&' + 'order='+ SortField + '&' + this.Key_Param;
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?order=' + SortField + '&' + this.Key_Param;
        }
        else {
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        }
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.companies = data["resource"];
        });
    };
    UserPage.prototype.GetDepartment = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        if (this.AddUserClicked == true) {
            TempUser_Company_ngModel = this.User_Company_ngModel.trim();
        }
        else {
            TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        }
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.departments = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    UserPage.prototype.GetBranch = function (TableName, FilterField, SortField) {
        var _this = this;
        var TableURL;
        if (this.User_Company_ngModel != undefined) {
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_COMPANY_GUID=' + FilterField + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        }
        else {
            if (localStorage.getItem("g_USER_GUID") == "sva") {
                TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?' + 'order=' + SortField + '&' + this.Key_Param;
            }
            else {
                TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_COMPANY_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&' + 'order=' + SortField + '&' + this.Key_Param;
            }
        }
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.branches = data["resource"];
        });
    };
    UserPage.prototype.BindCountry = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.countries = data["resource"];
        });
    };
    UserPage.prototype.BindState = function (TableName, FilterField, SortField) {
        var _this = this;
        var TableURL;
        TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(COUNTRY_GUID=' + FilterField + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.states = data["resource"];
        });
    };
    UserPage.prototype.BindBank = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        if (this.AddUserClicked == true) {
            TempUser_Company_ngModel = this.User_Company_ngModel.trim();
        }
        else {
            TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        }
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.banks = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    UserPage.prototype.BindQualification = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        // if (localStorage.getItem("g_USER_GUID") == "sva") {
        //   //TableURL = constants.DREAMFACTORY_TABLE_URL + TableName + '?filter=(TENANT_GUID=' + this.User_Company_ngModel +')&' + 'order='+ SortField + '&' + this.Key_Param;
        //   TableURL = constants.DREAMFACTORY_TABLE_URL + TableName + '?order=' + SortField + '&' + this.Key_Param;
        // }
        // else {
        //   TableURL = constants.DREAMFACTORY_TABLE_URL + TableName + '?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        // }
        TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + TableName + '?order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.qualifications = data["resource"];
        });
    };
    UserPage.prototype.BindApprover1 = function (ViewName) {
        var _this = this;
        var TableURL_Approver;
        var TempUser_Company_ngModel;
        if (this.AddUserClicked == true) {
            TempUser_Company_ngModel = this.User_Company_ngModel.trim();
        }
        else {
            TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        }
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            if (_this.AddUserClicked == true) {
                TableURL_Approver = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + ViewName + '?filter=(TENANT_GUID=' + res.toString() + ')&' + _this.Key_Param;
            }
            else {
                if (localStorage.getItem("g_USER_GUID") == "sva" || localStorage.getItem("g_IS_TENANT_ADMIN") == "1") {
                    TableURL_Approver = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + ViewName + '?filter=(TENANT_GUID=' + res.toString() + ')&' + _this.Key_Param;
                }
                else {
                    TableURL_Approver = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + ViewName + '?filter=(TENANT_GUID=' + res.toString() + ')AND(USER_GUID!=' + _this.view_user_details[0]["USER_GUID"] + ')&' + _this.Key_Param;
                }
            }
            _this.http
                .get(TableURL_Approver)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.approvers = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    UserPage.prototype.BindRole = function () {
        var _this = this;
        var roleUrl = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role' + '?order=NAME&' + this.Key_Param;
        this.http
            .get(roleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data["resource"];
        });
    };
    UserPage.prototype.AddProfessionalCertification = function () {
        if (this.User_Certification_ngModel != undefined && this.User_Certification_ngModel.trim() != "") {
            if (this.User_CertificationGrade_ngModel != undefined && this.User_CertificationGrade_ngModel.trim() != "") {
                if (this.User_CertificationYear_ngModel != undefined && this.User_CertificationYear_ngModel.trim() != "") {
                    if (this.CertificateSaveFlag == false) {
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Certification_ngModel.trim()), GRADE: this.User_CertificationGrade_ngModel.trim(), YEAR: this.User_CertificationYear_ngModel.trim(), ATTACHMENT: this.attachment_ref });
                    }
                    else {
                        this.ProfessionalCertification = this.ProfessionalCertification.filter(function (item) { return item.CERTIFICATE_GUID != localStorage.getItem("CERTIFICATE_GUID"); });
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: localStorage.getItem("CERTIFICATE_GUID"), NAME: this.titlecasePipe.transform(this.User_Certification_ngModel.trim()), GRADE: this.User_CertificationGrade_ngModel.trim(), YEAR: this.User_CertificationYear_ngModel.trim(), ATTACHMENT: this.attachment_ref });
                        this.CertificateSaveFlag = false;
                        localStorage.removeItem("SPOUSE_GUID");
                    }
                    //Clear the Controls------------------------
                    this.User_Certification_ngModel = "";
                    this.User_CertificationGrade_ngModel = "";
                    this.User_CertificationYear_ngModel = "";
                    this.User_CertificationAttachment_ngModel = "";
                }
                else {
                    alert("Fill in Year.");
                }
            }
            else {
                alert("Fill in Grade.");
            }
        }
        else {
            alert("Fill in Certificate Name.");
        }
    };
    UserPage.prototype.AddProfessionalCertificationForEdit = function () {
        if (this.User_Certification_Edit_ngModel != undefined && this.User_Certification_Edit_ngModel.trim() != "") {
            if (this.User_CertificationGrade_Edit_ngModel != undefined && this.User_CertificationGrade_Edit_ngModel.trim() != "") {
                if (this.User_CertificationYear_Edit_ngModel.toString() != undefined && this.User_CertificationYear_Edit_ngModel.toString().trim() != "") {
                    if (this.CertificateSaveFlag == false) {
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Certification_Edit_ngModel.trim()), GRADE: this.User_CertificationGrade_Edit_ngModel.trim(), YEAR: this.User_CertificationYear_Edit_ngModel.trim(), ATTACHMENT_EDIT: this.attachment_ref });
                    }
                    else {
                        this.ProfessionalCertification = this.ProfessionalCertification.filter(function (item) { return item.CERTIFICATE_GUID != localStorage.getItem("CERTIFICATE_GUID"); });
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: localStorage.getItem("CERTIFICATE_GUID"), NAME: this.titlecasePipe.transform(this.User_Certification_Edit_ngModel.trim()), GRADE: this.User_CertificationGrade_Edit_ngModel.trim(), YEAR: this.User_CertificationYear_Edit_ngModel.toString().trim(), ATTACHMENT_EDIT: this.attachment_ref });
                        this.CertificateSaveFlag = false;
                        localStorage.removeItem("SPOUSE_GUID");
                    }
                    //Clear the Controls------------------------
                    this.User_Certification_Edit_ngModel = "";
                    this.User_CertificationGrade_Edit_ngModel = "";
                    this.User_CertificationYear_Edit_ngModel = "";
                    this.User_CertificationAttachment_Edit_ngModel = "";
                }
                else {
                    alert("Fill in Year.");
                }
            }
            else {
                alert("Fill in Grade.");
            }
        }
        else {
            alert("Fill in Certificate Name.");
        }
    };
    UserPage.prototype.EditProfessionalCertification = function (CERTIFICATE_GUID) {
        for (var item in this.ProfessionalCertification) {
            if (this.ProfessionalCertification[item]["CERTIFICATE_GUID"] == CERTIFICATE_GUID) {
                this.User_Certification_ngModel = this.ProfessionalCertification[item]["NAME"];
                this.User_CertificationGrade_ngModel = this.ProfessionalCertification[item]["GRADE"];
                this.User_CertificationYear_ngModel = this.ProfessionalCertification[item]["YEAR"];
                localStorage.setItem("CERTIFICATE_GUID", this.ProfessionalCertification[item]["CERTIFICATE_GUID"]);
                this.CertificateSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.EditProfessionalCertificationForEdit = function (CERTIFICATE_GUID) {
        for (var item in this.ProfessionalCertification) {
            if (this.ProfessionalCertification[item]["CERTIFICATE_GUID"] == CERTIFICATE_GUID) {
                this.User_Certification_Edit_ngModel = this.ProfessionalCertification[item]["NAME"];
                this.User_CertificationGrade_Edit_ngModel = this.ProfessionalCertification[item]["GRADE"];
                this.User_CertificationYear_Edit_ngModel = this.ProfessionalCertification[item]["YEAR"];
                localStorage.setItem("CERTIFICATE_GUID", this.ProfessionalCertification[item]["CERTIFICATE_GUID"]);
                this.CertificateSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.RemoveProfessionalCertification = function (CERTIFICATE_GUID) {
        if (this.CertificateSaveFlag == false) {
            this.ProfessionalCertification = this.ProfessionalCertification.filter(function (item) { return item.CERTIFICATE_GUID != CERTIFICATE_GUID; });
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    UserPage.prototype.AddFamilyDetails = function () {
        if (this.User_Spouse_Name_ngModel != undefined && this.User_Spouse_Name_ngModel.trim() != "") {
            if (this.User_Spouse_IcNumber_ngModel != undefined && this.User_Spouse_IcNumber_ngModel.trim() != "") {
                if (this.SpouseSaveFlag == false) {
                    this.FamilyDetails.push({ SPOUSE_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_ngModel.trim() });
                }
                else {
                    this.FamilyDetails = this.FamilyDetails.filter(function (item) { return item.SPOUSE_GUID != localStorage.getItem("SPOUSE_GUID"); });
                    this.FamilyDetails.push({ SPOUSE_GUID: localStorage.getItem("SPOUSE_GUID"), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_ngModel.trim() });
                    this.SpouseSaveFlag = false;
                    localStorage.removeItem("SPOUSE_GUID");
                }
                this.User_Spouse_Name_ngModel = "";
                this.User_Spouse_IcNumber_ngModel = "";
            }
            else {
                alert("Fill in IC Number.");
            }
        }
        else {
            alert("Fill in Spouse Name.");
        }
    };
    UserPage.prototype.AddFamilyDetailsForEdit = function () {
        if (this.User_Spouse_Name_Edit_ngModel != undefined && this.User_Spouse_Name_Edit_ngModel.trim() != "") {
            if (this.User_Spouse_IcNumber_Edit_ngModel != undefined && this.User_Spouse_IcNumber_Edit_ngModel.trim() != "") {
                if (this.SpouseSaveFlag == false) {
                    this.FamilyDetails.push({ SPOUSE_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_Edit_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_Edit_ngModel.trim() });
                }
                else {
                    this.FamilyDetails = this.FamilyDetails.filter(function (item) { return item.SPOUSE_GUID != localStorage.getItem("SPOUSE_GUID"); });
                    this.FamilyDetails.push({ SPOUSE_GUID: localStorage.getItem("SPOUSE_GUID"), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_Edit_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_Edit_ngModel.trim() });
                    this.SpouseSaveFlag = false;
                    localStorage.removeItem("SPOUSE_GUID");
                }
                this.User_Spouse_Name_Edit_ngModel = "";
                this.User_Spouse_IcNumber_Edit_ngModel = "";
            }
            else {
                alert("Fill in IC Number.");
            }
        }
        else {
            alert("Fill in Spouse Name.");
        }
    };
    UserPage.prototype.EditFamilyDetails = function (SPOUSE_GUID) {
        for (var item in this.FamilyDetails) {
            if (this.FamilyDetails[item]["SPOUSE_GUID"] == SPOUSE_GUID) {
                this.User_Spouse_Name_ngModel = this.FamilyDetails[item]["NAME"];
                this.User_Spouse_IcNumber_ngModel = this.FamilyDetails[item]["ICNO"];
                localStorage.setItem("SPOUSE_GUID", this.FamilyDetails[item]["SPOUSE_GUID"]);
                this.SpouseSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.EditFamilyDetailsForEdit = function (SPOUSE_GUID) {
        for (var item in this.FamilyDetails) {
            if (this.FamilyDetails[item]["SPOUSE_GUID"] == SPOUSE_GUID) {
                this.User_Spouse_Name_Edit_ngModel = this.FamilyDetails[item]["NAME"];
                this.User_Spouse_IcNumber_Edit_ngModel = this.FamilyDetails[item]["ICNO"];
                localStorage.setItem("SPOUSE_GUID", this.FamilyDetails[item]["SPOUSE_GUID"]);
                this.SpouseSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.RemoveFamilyDetails = function (SPOUSE_GUID) {
        if (this.SpouseSaveFlag == false) {
            this.FamilyDetails = this.FamilyDetails.filter(function (item) { return item.SPOUSE_GUID != SPOUSE_GUID; });
            this.SpouseSaveFlag = false;
        }
        else {
            alert("Sorry. You are in Edit Mode.");
        }
    };
    UserPage.prototype.AddChildren = function () {
        if (this.User_Child_Name_ngModel != undefined && this.User_Child_Name_ngModel.trim() != "") {
            if (this.User_Child_IcNumber_ngModel != undefined && this.User_Child_IcNumber_ngModel.trim() != "") {
                if (this.User_Child_Gender_ngModel != undefined && this.User_Child_Gender_ngModel != "") {
                    if (this.User_SpouseChild_ngModel != undefined && this.User_SpouseChild_ngModel != "") {
                        if (this.ChildSaveFlag == false) {
                            this.ChildrenDetails.push({ CHILD_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Child_Name_ngModel.trim()), ICNO: this.User_Child_IcNumber_ngModel.trim(), GENDER: this.User_Child_Gender_ngModel.trim(), SPOUSE: this.User_SpouseChild_ngModel.trim() });
                        }
                        else {
                            this.ChildrenDetails = this.ChildrenDetails.filter(function (item) { return item.CHILD_GUID != localStorage.getItem("CHILD_GUID"); });
                            this.ChildrenDetails.push({ CHILD_GUID: localStorage.getItem("CHILD_GUID"), NAME: this.titlecasePipe.transform(this.User_Child_Name_ngModel.trim()), ICNO: this.User_Child_IcNumber_ngModel.trim(), GENDER: this.User_Child_Gender_ngModel.trim(), SPOUSE: this.User_SpouseChild_ngModel.trim() });
                            this.ChildSaveFlag = false;
                            localStorage.removeItem("CHILD_GUID");
                        }
                        //------Clear Controls ----------------
                        this.User_Child_Name_ngModel = "";
                        this.User_Child_IcNumber_ngModel = "";
                        this.User_Child_Gender_ngModel = "";
                        this.User_SpouseChild_ngModel = "";
                    }
                    else {
                        alert("Select Spouse.");
                    }
                }
                else {
                    alert("Select Gender.");
                }
            }
            else {
                alert("Fill in Child IC Number.");
            }
        }
        else {
            alert("Fill in Child Name.");
        }
    };
    UserPage.prototype.AddChildrenForEdit = function () {
        if (this.User_Child_Name_Edit_ngModel != undefined && this.User_Child_Name_Edit_ngModel.trim() != "") {
            if (this.User_Child_IcNumber_Edit_ngModel != undefined && this.User_Child_IcNumber_Edit_ngModel.trim() != "") {
                if (this.User_Child_Gender_Edit_ngModel != undefined && this.User_Child_Gender_Edit_ngModel != "") {
                    if (this.User_SpouseChild_Edit_ngModel != undefined && this.User_SpouseChild_Edit_ngModel != "") {
                        if (this.ChildSaveFlag == false) {
                            this.ChildrenDetails.push({ CHILD_GUID: __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Child_Name_Edit_ngModel.trim()), ICNO: this.User_Child_IcNumber_Edit_ngModel.trim(), GENDER: this.User_Child_Gender_Edit_ngModel.trim(), SPOUSE: this.User_SpouseChild_Edit_ngModel.trim() });
                        }
                        else {
                            this.ChildrenDetails = this.ChildrenDetails.filter(function (item) { return item.CHILD_GUID != localStorage.getItem("CHILD_GUID"); });
                            this.ChildrenDetails.push({ CHILD_GUID: localStorage.getItem("CHILD_GUID"), NAME: this.titlecasePipe.transform(this.User_Child_Name_Edit_ngModel.trim()), ICNO: this.User_Child_IcNumber_Edit_ngModel.trim(), GENDER: this.User_Child_Gender_Edit_ngModel.trim(), SPOUSE: this.User_SpouseChild_Edit_ngModel.trim() });
                            this.ChildSaveFlag = false;
                            localStorage.removeItem("CHILD_GUID");
                        }
                        //------Clear Controls ----------------
                        this.User_Child_Name_Edit_ngModel = "";
                        this.User_Child_IcNumber_Edit_ngModel = "";
                        this.User_Child_Gender_Edit_ngModel = "";
                        this.User_SpouseChild_Edit_ngModel = "";
                    }
                    else {
                        alert("Select Spouse.");
                    }
                }
                else {
                    alert("Select Gender.");
                }
            }
            else {
                alert("Fill in Child IC Number.");
            }
        }
        else {
            alert("Fill in Child Name.");
        }
    };
    UserPage.prototype.EditChildren = function (CHILD_GUID) {
        for (var item in this.ChildrenDetails) {
            if (this.ChildrenDetails[item]["CHILD_GUID"] == CHILD_GUID) {
                this.User_Child_Name_ngModel = this.ChildrenDetails[item]["NAME"];
                this.User_Child_IcNumber_ngModel = this.ChildrenDetails[item]["ICNO"];
                this.User_Child_Gender_ngModel = this.ChildrenDetails[item]["GENDER"];
                this.User_SpouseChild_ngModel = this.ChildrenDetails[item]["SPOUSE"];
                localStorage.setItem("CHILD_GUID", this.ChildrenDetails[item]["CHILD_GUID"]);
                this.ChildSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.EditChildrenForEdit = function (CHILD_GUID) {
        for (var item in this.ChildrenDetails) {
            if (this.ChildrenDetails[item]["CHILD_GUID"] == CHILD_GUID) {
                this.User_Child_Name_Edit_ngModel = this.ChildrenDetails[item]["NAME"];
                this.User_Child_IcNumber_Edit_ngModel = this.ChildrenDetails[item]["ICNO"];
                this.User_Child_Gender_Edit_ngModel = this.ChildrenDetails[item]["GENDER"];
                this.User_SpouseChild_Edit_ngModel = this.ChildrenDetails[item]["SPOUSE"];
                localStorage.setItem("CHILD_GUID", this.ChildrenDetails[item]["CHILD_GUID"]);
                this.ChildSaveFlag = true;
                return;
            }
        }
    };
    UserPage.prototype.RemoveChildren = function (CHILD_GUID) {
        if (this.ChildSaveFlag == false) {
            this.ChildrenDetails = this.ChildrenDetails.filter(function (item) { return item.CHILD_GUID != CHILD_GUID; });
            this.ChildSaveFlag = false;
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    UserPage.prototype.GetTenant_GUID = function (Tenant_company_guid) {
        var _this = this;
        var TableURL = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "tenant_company" + '?filter=(TENANT_COMPANY_GUID=' + Tenant_company_guid + ')&' + this.Key_Param;
        return new Promise(function (resolve) {
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data["resource"];
                //this.varTenant_Guid = this.tenants
                resolve(_this.tenants[0].TENANT_GUID);
            });
        });
    };
    UserPage.prototype.Save_User_Main = function () {
        var _this = this;
        // imageGUID: string
        ///Bind the Tenant Guid through Tenant company Guid.----------------------
        var val = this.GetTenant_GUID(this.User_Company_ngModel.trim());
        val.then(function (res) {
            _this.usermain_entry.TENANT_GUID = res.toString();
            _this.usermain_entry.USER_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
            //this.usermain_entry.TENANT_GUID = this.BindTenant_GUID(this.User_Company_ngModel.trim());
            _this.usermain_entry.STAFF_ID = _this.User_StaffID_ngModel.trim();
            //this.usermain_entry.LOGIN_ID = this.User_LoginId_ngModel.trim();
            _this.usermain_entry.LOGIN_ID = _this.User_Email_ngModel.trim();
            _this.usermain_entry.PASSWORD = _this.User_Password_ngModel.trim();
            _this.usermain_entry.EMAIL = _this.User_Email_ngModel.trim();
            _this.usermain_entry.ACTIVATION_FLAG = 1;
            _this.usermain_entry.CREATION_TS = new Date().toISOString();
            _this.usermain_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.usermain_entry.UPDATE_TS = new Date().toISOString();
            _this.usermain_entry.UPDATE_USER_GUID = "";
            _this.userservice.save_user_main(_this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('1');
                    // let uploadImage = this.UploadImage('avatar1', this.fileName1);
                    // uploadImage.then((resJson) => {
                    //   //console.table(resJson)
                    //   let imageResult = this.SaveImageinDB(this.fileName1);
                    //   imageResult.then((objImage: ImageUpload_model) => {
                    //     let result = this.Save_User_Info(objImage.Image_Guid);
                    //     //alert("User Main inserted");
                    //   })
                    // })
                    _this.Save_User_Info();
                }
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    UserPage.prototype.Update_User_Main = function (USER_GUID) {
        var _this = this;
        ///Bind the Tenant Guid through Tenant company Guid.----------------------
        var val = this.GetTenant_GUID(this.User_Company_Edit_ngModel.trim());
        val.then(function (res) {
            _this.usermain_entry.TENANT_GUID = res.toString();
            _this.usermain_entry.USER_GUID = USER_GUID;
            _this.usermain_entry.STAFF_ID = _this.User_StaffID_Edit_ngModel.trim();
            //this.usermain_entry.LOGIN_ID = this.User_LoginId_Edit_ngModel.trim();
            _this.usermain_entry.LOGIN_ID = _this.User_Email_Edit_ngModel.trim();
            if (_this.User_Password_Edit_ngModel != undefined) {
                _this.usermain_entry.PASSWORD = _this.User_Password_Edit_ngModel.trim();
            }
            _this.usermain_entry.EMAIL = _this.User_Email_Edit_ngModel.trim();
            // this.usermain_entry.ACTIVATION_FLAG = 1;
            _this.usermain_entry.ACTIVATION_FLAG = _this.view_user_details[0]["ACTIVATION_FLAG"];
            _this.usermain_entry.CREATION_TS = _this.view_user_details[0]["CREATION_TS"];
            _this.usermain_entry.CREATION_USER_GUID = _this.view_user_details[0]["CREATION_USER_GUID"];
            _this.usermain_entry.UPDATE_TS = new Date().toISOString();
            _this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.usermain_entry.IS_TENANT_ADMIN = _this.view_user_details[0]["IS_TENANT_ADMIN"];
            // alert(this.usermain_entry.EMAIL);
            // alert(this.User_Email_ngModel);
            _this.userservice.update_user_main(_this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('1');
                    _this.Update_User_Info();
                }
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    // Save_User_Info(imageGUID: string) {
    UserPage.prototype.Save_User_Info = function () {
        var _this = this;
        this.userinfo_entry.USER_INFO_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userinfo_entry.FULLNAME = this.titlecasePipe.transform(this.User_Name_ngModel.trim());
        //NICKNAME
        //SALUTATION
        this.userinfo_entry.MANAGER_USER_GUID = this.User_Approver1_ngModel.trim();
        this.userinfo_entry.PERSONAL_ID_TYPE = this.User_StaffID_ngModel.trim();
        this.userinfo_entry.PERSONAL_ID = this.User_ICNo_ngModel.trim();
        this.userinfo_entry.DOB = this.User_DOB_ngModel.trim();
        this.userinfo_entry.GENDER = this.User_Gender_ngModel;
        this.userinfo_entry.JOIN_DATE = this.User_JoinDate_ngModel.trim();
        this.userinfo_entry.MARITAL_STATUS = this.User_Marital_ngModel;
        this.userinfo_entry.BRANCH = this.User_Branch_ngModel.trim();
        this.userinfo_entry.EMPLOYEE_TYPE = this.User_EmployeeType_ngModel.trim();
        // this.userinfo_entry.ATTACHMENT_ID = imageGUID;
        if (localStorage.getItem("Unique_File_Name") != undefined) {
            this.userinfo_entry.ATTACHMENT_ID = localStorage.getItem("Unique_File_Name");
        }
        else {
            this.userinfo_entry.ATTACHMENT_ID = null;
        }
        // this.userinfo_entry.APPROVER1 = this.User_Approver1_ngModel.trim();
        // this.userinfo_entry.APPROVER2 = this.User_Approver2_ngModel.trim();
        this.userinfo_entry.EMPLOYEE_STATUS = this.User_Employment_ngModel.trim();
        this.userinfo_entry.DEPT_GUID = this.User_Department_ngModel.trim();
        this.userinfo_entry.DESIGNATION_GUID = this.User_Designation_ngModel.trim();
        this.userinfo_entry.RESIGNATION_DATE = this.User_ResignationDate_ngModel.trim();
        this.userinfo_entry.TENANT_COMPANY_GUID = this.User_Company_ngModel.trim();
        this.userinfo_entry.CONFIRMATION_DATE = this.User_ConfirmationDate_ngModel.trim();
        this.userinfo_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_ngModel.trim();
        this.userinfo_entry.CREATION_TS = new Date().toISOString();
        this.userinfo_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userinfo_entry.UPDATE_TS = new Date().toISOString();
        this.userinfo_entry.UPDATE_USER_GUID = "";
        // this.userinfo_entry.POST_CODE
        // this.userinfo_entry.COUNTRY_GUID
        // this.userinfo_entry.STATE_GUID
        this.userinfo_entry.EMG_CONTACT_NAME_1 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME1_ngModel.trim());
        this.userinfo_entry.EMG_RELATIONSHIP_1 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP_ngModel.trim());
        this.userinfo_entry.EMG_CONTACT_NUMBER_1 = this.User_EMG_CONTACT_NO1_ngModel.trim();
        this.userinfo_entry.EMG_CONTACT_NAME_2 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME2_ngModel.trim());
        this.userinfo_entry.EMG_RELATIONSHIP_2 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP2_ngModel.trim());
        this.userinfo_entry.EMG_CONTACT_NUMBER_2 = this.User_EMG_CONTACT_NO2_ngModel;
        // .trim()
        this.userinfo_entry.PR_EPF_NUMBER = this.User_EPF_NUMBER_ngModel.trim();
        this.userinfo_entry.PR_INCOMETAX_NUMBER = this.User_INCOMETAX_NO_ngModel.trim();
        this.userinfo_entry.BANK_GUID = this.User_BANK_NAME_ngModel;
        // .trim()
        this.userinfo_entry.PR_ACCOUNT_NUMBER = this.User_ACCOUNT_NUMBER_ngModel;
        // .trim()
        this.userservice.save_user_info(this.userinfo_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Save_User_Address();
                //alert("User Info inserted");
            }
        });
        // return new Promise((resolve, reject) => {
        //   this.api.postData('user_info', userinfo_entry.toJson(true)).subscribe((data) => {
        //     let res = data.json();
        //     console.log(res)
        //     let ClaimRequestMainIdType = res["resource"][0].USER_INFO_GUID;
        //     resolve(ClaimRequestMainIdType);
        //   })
        // });
    };
    UserPage.prototype.Update_User_Info = function () {
        var _this = this;
        this.userinfo_entry.USER_INFO_GUID = this.USER_INFO_GUID_FOR_UPDATE;
        this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userinfo_entry.FULLNAME = this.titlecasePipe.transform(this.User_Name_Edit_ngModel.trim());
        //NICKNAME
        //SALUTATION
        this.userinfo_entry.MANAGER_USER_GUID = this.User_Approver1_Edit_ngModel.trim();
        this.userinfo_entry.PERSONAL_ID_TYPE = this.User_StaffID_Edit_ngModel.trim();
        this.userinfo_entry.PERSONAL_ID = this.User_ICNo_Edit_ngModel.trim();
        this.userinfo_entry.DOB = this.User_DOB_Edit_ngModel.trim();
        this.userinfo_entry.GENDER = this.User_Gender_Edit_ngModel;
        this.userinfo_entry.JOIN_DATE = this.User_JoinDate_Edit_ngModel.trim();
        this.userinfo_entry.MARITAL_STATUS = this.User_Marital_Edit_ngModel;
        this.userinfo_entry.BRANCH = this.User_Branch_Edit_ngModel.trim();
        //this.userinfo_entry.EMPLOYEE_TYPE = this.User_EmployeeType_Edit_ngModel.trim()===undefined?this.EmployeeTypeAdjuster:this.User_EmployeeType_Edit_ngModel.trim();
        this.userinfo_entry.EMPLOYEE_TYPE = this.User_EmployeeType_Edit_ngModel;
        if (localStorage.getItem("Unique_File_Name") != undefined) {
            this.userinfo_entry.ATTACHMENT_ID = localStorage.getItem("Unique_File_Name");
        }
        else {
            if (this.view_user_details[0]["ATTACHMENT_ID"] == null || this.view_user_details[0]["ATTACHMENT_ID"] == '') {
                this.userinfo_entry.ATTACHMENT_ID = null;
            }
            else {
                this.userinfo_entry.ATTACHMENT_ID = this.view_user_details[0]["ATTACHMENT_ID"];
            }
        }
        // this.userinfo_entry.APPROVER1 = this.User_Approver1_ngModel.trim();
        // this.userinfo_entry.APPROVER2 = this.User_Approver2_ngModel.trim();
        this.userinfo_entry.EMPLOYEE_STATUS = this.User_Employment_Edit_ngModel;
        this.userinfo_entry.DEPT_GUID = this.User_Department_Edit_ngModel;
        this.userinfo_entry.DESIGNATION_GUID = this.User_Designation_Edit_ngModel;
        this.userinfo_entry.RESIGNATION_DATE = this.User_ResignationDate_Edit_ngModel;
        this.userinfo_entry.TENANT_COMPANY_GUID = this.User_Company_Edit_ngModel;
        this.userinfo_entry.CONFIRMATION_DATE = this.User_ConfirmationDate_Edit_ngModel;
        this.userinfo_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_Edit_ngModel;
        this.userinfo_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.userinfo_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.userinfo_entry.UPDATE_TS = new Date().toISOString();
        this.userinfo_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        // this.userinfo_entry.POST_CODE
        // this.userinfo_entry.COUNTRY_GUID
        // this.userinfo_entry.STATE_GUID
        this.userinfo_entry.EMG_CONTACT_NAME_1 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME1_Edit_ngModel);
        this.userinfo_entry.EMG_RELATIONSHIP_1 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP_Edit_ngModel);
        this.userinfo_entry.EMG_CONTACT_NUMBER_1 = this.User_EMG_CONTACT_NO1_Edit_ngModel;
        this.userinfo_entry.EMG_CONTACT_NAME_2 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME2_Edit_ngModel);
        this.userinfo_entry.EMG_RELATIONSHIP_2 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP2_Edit_ngModel);
        this.userinfo_entry.EMG_CONTACT_NUMBER_2 = this.User_EMG_CONTACT_NO2_Edit_ngModel;
        this.userinfo_entry.PR_EPF_NUMBER = this.User_EPF_NUMBER_Edit_ngModel;
        this.userinfo_entry.PR_INCOMETAX_NUMBER = this.User_INCOMETAX_NO_Edit_ngModel;
        this.userinfo_entry.BANK_GUID = this.User_BANK_NAME_Edit_ngModel;
        this.userinfo_entry.PR_ACCOUNT_NUMBER = this.User_ACCOUNT_NUMBER_Edit_ngModel;
        this.userservice.update_user_info(this.userinfo_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Address();
            }
        });
    };
    UserPage.prototype.Save_User_Address = function () {
        var _this = this;
        this.useraddress_entry.USER_ADDRESS_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.useraddress_entry.USER_GUID = this.usermain_entry.USER_GUID;
        //ADDRESS_TYPE
        this.useraddress_entry.USER_ADDRESS1 = this.titlecasePipe.transform(this.User_Address1_ngModel);
        this.useraddress_entry.USER_ADDRESS2 = this.titlecasePipe.transform(this.User_Address2_ngModel);
        this.useraddress_entry.USER_ADDRESS3 = this.titlecasePipe.transform(this.User_Address3_ngModel);
        this.useraddress_entry.CREATION_TS = new Date().toISOString();
        this.useraddress_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.useraddress_entry.UPDATE_TS = new Date().toISOString();
        this.useraddress_entry.UPDATE_USER_GUID = "";
        this.useraddress_entry.POST_CODE = this.User_PostCode_ngModel;
        this.useraddress_entry.COUNTRY_GUID = this.User_Country_ngModel;
        this.useraddress_entry.STATE_GUID = this.User_State_ngModel;
        this.userservice.save_user_address(this.useraddress_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Save_User_Company();
                //alert("User Address inserted");
            }
        });
    };
    UserPage.prototype.Update_User_Address = function () {
        var _this = this;
        this.useraddress_entry.USER_ADDRESS_GUID = this.USER_GUID_FOR_ADDRESS;
        this.useraddress_entry.USER_GUID = this.usermain_entry.USER_GUID;
        //ADDRESS_TYPE
        this.useraddress_entry.USER_ADDRESS1 = this.titlecasePipe.transform(this.User_Address1_Edit_ngModel);
        this.useraddress_entry.USER_ADDRESS2 = this.titlecasePipe.transform(this.User_Address2_Edit_ngModel);
        this.useraddress_entry.USER_ADDRESS3 = this.titlecasePipe.transform(this.User_Address3_Edit_ngModel);
        this.useraddress_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.useraddress_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.useraddress_entry.UPDATE_TS = new Date().toISOString();
        this.useraddress_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.useraddress_entry.POST_CODE = this.User_PostCode_Edit_ngModel;
        this.useraddress_entry.COUNTRY_GUID = this.User_Country_Edit_ngModel;
        this.useraddress_entry.STATE_GUID = this.User_State_Edit_ngModel;
        //alert(this.User_Address3_Edit_ngModel);
        this.userservice.update_user_address(this.useraddress_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //alert('3');
                _this.Update_User_Company();
                //alert(this.useraddress_entry.USER_ADDRESS2);
            }
        });
    };
    UserPage.prototype.Save_User_Company = function () {
        var _this = this;
        this.usercompany_entry.USER_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.usercompany_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercompany_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_ngModel;
        this.usercompany_entry.COMPANY_CONTACT_NO = this.User_CompanyNo_ngModel;
        this.usercompany_entry.CREATION_TS = new Date().toISOString();
        this.usercompany_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.usercompany_entry.UPDATE_TS = new Date().toISOString();
        this.usercompany_entry.UPDATE_USER_GUID = "";
        this.userservice.save_user_company(this.usercompany_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Save_User_Contact();
                //alert("User Company inserted");
            }
        });
    };
    UserPage.prototype.Update_User_Company = function () {
        var _this = this;
        this.usercompany_entry.USER_COMPANY_GUID = this.USER_GUID_FOR_COMPANY_CONTACT;
        this.usercompany_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercompany_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_Edit_ngModel;
        this.usercompany_entry.COMPANY_CONTACT_NO = this.User_CompanyNo_Edit_ngModel;
        this.usercompany_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.usercompany_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.usercompany_entry.UPDATE_TS = new Date().toISOString();
        this.usercompany_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userservice.update_user_company(this.usercompany_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Contact();
            }
        });
    };
    UserPage.prototype.Save_User_Contact = function () {
        var _this = this;
        this.usercontact_entry.CONTACT_NO = this.User_PersonalNo_ngModel.trim();
        this.usercontact_entry.CONTACT_INFO_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.usercontact_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercontact_entry.CREATION_TS = new Date().toISOString();
        this.usercontact_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.usercontact_entry.UPDATE_TS = new Date().toISOString();
        this.usercontact_entry.UPDATE_USER_GUID = "";
        this.userservice.save_user_contact(this.usercontact_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //alert('5');
                var uploadImage = _this.UploadImage_Old('avatar2', _this.fileName2);
                uploadImage.then(function () {
                    // console.table(resJson)
                    var imageResult = _this.SaveImageinDB(_this.fileName2);
                    imageResult.then(function (objImage) {
                        //alert("User Contact inserted");
                    });
                });
                //this.Save_User_Qualification()
            }
        });
    };
    UserPage.prototype.Update_User_Contact = function () {
        var _this = this;
        this.usercontact_entry.CONTACT_NO = this.User_PersonalNo_Edit_ngModel;
        this.usercontact_entry.CONTACT_INFO_GUID = this.USER_GUID_FOR_CONTACT;
        this.usercontact_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercontact_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.usercontact_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.usercontact_entry.UPDATE_TS = new Date().toISOString();
        this.usercontact_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userservice.update_user_contact(this.usercontact_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                var uploadImage = _this.UploadImage_Old('avatar2', _this.fileName2);
                uploadImage.then(function () {
                    // console.table(resJson)
                    var imageResult = _this.SaveImageinDB(_this.fileName2);
                    imageResult.then(function (objImage) {
                        // if (this.view_user_details[0]["QUALIFICATION_GUID"] != "") {
                        //   let result = this.Update_User_Qualification(objImage.Image_Guid);
                        // }
                        // else {
                        //   let result = this.Save_User_Qualification(objImage.Image_Guid);
                        // }
                    });
                });
                //this.Update_User_Qualification()
            }
        });
    };
    UserPage.prototype.Save_User_Qualification = function (imageGUID) {
        var _this = this;
        var userqualification_entry = new __WEBPACK_IMPORTED_MODULE_18__models_user_qualification_model__["a" /* UserQualification_Model */]();
        this.userqualification_entry.USER_QUALIFICATION_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.userqualification_entry.QUALIFICATION_GUID = this.User_HighestQualification_ngModel;
        //this.userqualification_entry.QUALIFICATION_GUID = "";
        this.userqualification_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userqualification_entry.CREATION_TS = new Date().toISOString();
        this.userqualification_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userqualification_entry.UPDATE_TS = new Date().toISOString();
        this.userqualification_entry.UPDATE_USER_GUID = "";
        this.userqualification_entry.HIGHEST_QUALIFICATION = this.User_HighestQualification_ngModel;
        //this.userqualification_entry.HIGHEST_QUALIFICATION = "";
        this.userqualification_entry.MAJOR = this.User_Major_ngModel;
        this.userqualification_entry.UNIVERSITY = this.User_University_ngModel;
        this.userqualification_entry.YEAR = this.User_EduYear_ngModel;
        this.userqualification_entry.ATTACHMENT = imageGUID;
        // console.log(imageGUID);
        this.userservice.save_user_qualification(this.userqualification_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                var uploadImage = _this.UploadImage_Old('avatar3', _this.fileName3);
                uploadImage.then(function () {
                    // console.table(resJson)
                    var imageResult = _this.SaveImageinDB(_this.fileName3);
                    imageResult.then(function (objImage) {
                        //alert("User Qualification inserted");
                    });
                });
                //this.Save_User_Certification();
                _this.Save_User_Spouse();
                _this.Save_User_Children();
                _this.Save_Role();
                alert('User inserted successfully.');
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
        return new Promise(function (resolve) {
            _this.api.postData('user_qualification', userqualification_entry.toJson(true)).subscribe(function (data) {
                var res = data.json();
                // console.log(res)
                var ClaimRequestMainIdType2 = res["resource"][0].USER_QUALIFICATION_GUID;
                resolve(ClaimRequestMainIdType2);
            });
        });
    };
    UserPage.prototype.Update_User_Qualification = function (imageGUID) {
        var _this = this;
        var userqualification_entry = new __WEBPACK_IMPORTED_MODULE_18__models_user_qualification_model__["a" /* UserQualification_Model */]();
        this.userqualification_entry.USER_QUALIFICATION_GUID = this.USER_QUALIFICATION_GUID_FOR_UPDATE;
        this.userqualification_entry.QUALIFICATION_GUID = this.User_HighestQualification_Edit_ngModel;
        //this.userqualification_entry.QUALIFICATION_GUID = "";
        this.userqualification_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userqualification_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.userqualification_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.userqualification_entry.UPDATE_TS = new Date().toISOString();
        this.userqualification_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userqualification_entry.HIGHEST_QUALIFICATION = this.User_HighestQualification_Edit_ngModel;
        this.userqualification_entry.MAJOR = this.User_Major_Edit_ngModel;
        this.userqualification_entry.UNIVERSITY = this.User_University_Edit_ngModel;
        this.userqualification_entry.YEAR = this.User_EduYear_Edit_ngModel;
        this.userqualification_entry.ATTACHMENT = imageGUID;
        this.userservice.update_user_qualification(this.userqualification_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                var uploadImage = _this.UploadImage_Old('avatar3', _this.fileName3);
                uploadImage.then(function () {
                    // console.table(resJson)
                    var imageResult = _this.SaveImageinDB(_this.fileName3);
                    imageResult.then(function (objImage) {
                    });
                });
                // this.Update_User_Certification();
                _this.Update_User_Spouse();
                _this.Update_User_Children();
                _this.Update_Role();
                alert('User updated successfully.');
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
        return new Promise(function (resolve) {
            _this.api.postData('user_qualification', userqualification_entry.toJson(true)).subscribe(function (data) {
                var res = data.json();
                // console.log(res)
                var ClaimRequestMainIdType2 = res["resource"][0].USER_QUALIFICATION_GUID;
                resolve(ClaimRequestMainIdType2);
            });
        });
    };
    //----Multiple Entry-------------------- 
    UserPage.prototype.Save_User_Certification = function (imageGUID) {
        var _this = this;
        var UserCertification_Entry = new __WEBPACK_IMPORTED_MODULE_19__models_user_certification_model__["a" /* UserCertification_Model */]();
        for (var item in this.ProfessionalCertification) {
            this.UserCertification_Entry.certificate_guid = this.ProfessionalCertification[item]["CERTIFICATE_GUID"];
            this.UserCertification_Entry.name = this.ProfessionalCertification[item]["NAME"];
            this.UserCertification_Entry.grade = this.ProfessionalCertification[item]["GRADE"];
            this.UserCertification_Entry.passing_year = this.ProfessionalCertification[item]["YEAR"];
            this.UserCertification_Entry.user_guid = this.usermain_entry.USER_GUID;
            this.UserCertification_Entry.attachment = imageGUID;
            // console.log(imageGUID);
            this.UserCertification_Entry.creation_ts = new Date().toISOString();
            this.UserCertification_Entry.creation_user_guid = localStorage.getItem("g_USER_GUID");
            this.UserCertification_Entry.update_ts = "";
            this.UserCertification_Entry.update_user_guid = "";
            this.userservice.save_user_certification(this.UserCertification_Entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('User Inserted Successfully!!');
                    // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    //alert("User Certification inserted");
                }
            });
            return new Promise(function (resolve) {
                _this.api.postData('user_certification', UserCertification_Entry.toJson(true)).subscribe(function (data) {
                    var res = data.json();
                    // console.log(res)
                    var ClaimRequestMainIdType3 = res["resource"][0].certificate_guid;
                    resolve(ClaimRequestMainIdType3);
                });
            });
        }
    };
    UserPage.prototype.Update_User_Certification = function (imageGUID) {
        var _this = this;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_certification")
            .subscribe(function (response) {
            if (response.status == 200) {
                //Insert Record again---------------------------------------------------------------------
                for (var item in _this.ProfessionalCertification) {
                    _this.UserCertification_Entry.certificate_guid = _this.ProfessionalCertification[item]["CERTIFICATE_GUID"];
                    _this.UserCertification_Entry.name = _this.ProfessionalCertification[item]["NAME"];
                    _this.UserCertification_Entry.grade = _this.ProfessionalCertification[item]["GRADE"];
                    _this.UserCertification_Entry.passing_year = _this.ProfessionalCertification[item]["YEAR"];
                    _this.UserCertification_Entry.user_guid = _this.usermain_entry.USER_GUID;
                    _this.UserCertification_Entry.attachment = imageGUID;
                    _this.UserCertification_Entry.creation_ts = _this.usermain_entry.CREATION_TS;
                    _this.UserCertification_Entry.creation_user_guid = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserCertification_Entry.update_ts = new Date().toISOString();
                    _this.UserCertification_Entry.update_user_guid = localStorage.getItem("g_USER_GUID");
                    _this.userservice.save_user_certification(_this.UserCertification_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //-----------------------------------------------------------------------------------------
            }
        });
    };
    UserPage.prototype.Save_User_Spouse = function () {
        for (var item in this.FamilyDetails) {
            this.UserSpouse_Entry.SPOUSE_GUID = this.FamilyDetails[item]["SPOUSE_GUID"];
            this.UserSpouse_Entry.NAME = this.FamilyDetails[item]["NAME"];
            this.UserSpouse_Entry.ICNO = this.FamilyDetails[item]["ICNO"];
            this.UserSpouse_Entry.CREATION_TS = new Date().toISOString();
            this.UserSpouse_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.UserSpouse_Entry.UPDATE_TS = "";
            this.UserSpouse_Entry.UPDATE_USER_GUID = "";
            this.UserSpouse_Entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userservice.save_user_spouse(this.UserSpouse_Entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('User Inserted Successfully!!');
                    // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    //alert("User Spouse inserted");
                }
            });
        }
    };
    UserPage.prototype.Update_User_Spouse = function () {
        var _this = this;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_spouse")
            .subscribe(function (response) {
            if (response.status == 200) {
                //---------Insert record-----------------------------
                for (var item in _this.FamilyDetails) {
                    _this.UserSpouse_Entry.SPOUSE_GUID = _this.FamilyDetails[item]["SPOUSE_GUID"];
                    _this.UserSpouse_Entry.NAME = _this.FamilyDetails[item]["NAME"];
                    _this.UserSpouse_Entry.ICNO = _this.FamilyDetails[item]["ICNO"];
                    _this.UserSpouse_Entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                    _this.UserSpouse_Entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserSpouse_Entry.UPDATE_TS = new Date().toISOString();
                    _this.UserSpouse_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.UserSpouse_Entry.USER_GUID = _this.usermain_entry.USER_GUID;
                    _this.userservice.save_user_spouse(_this.UserSpouse_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //----------------------------------------------------------
            }
        });
    };
    UserPage.prototype.Save_User_Children = function () {
        for (var item in this.ChildrenDetails) {
            this.UserChildren_Entry.CHILD_GUID = this.ChildrenDetails[item]["CHILD_GUID"];
            this.UserChildren_Entry.NAME = this.ChildrenDetails[item]["NAME"];
            this.UserChildren_Entry.ICNO = this.ChildrenDetails[item]["ICNO"];
            this.UserChildren_Entry.GENDER = this.ChildrenDetails[item]["GENDER"];
            this.UserChildren_Entry.SPOUSE = this.ChildrenDetails[item]["SPOUSE"];
            this.UserChildren_Entry.CREATION_TS = new Date().toISOString();
            this.UserChildren_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.UserChildren_Entry.UPDATE_TS = "";
            this.UserChildren_Entry.UPDATE_USER_GUID = "";
            this.UserChildren_Entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userservice.save_user_children(this.UserChildren_Entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('User Inserted Successfully!!');
                    // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    //alert("User Child inserted");
                }
            });
        }
    };
    UserPage.prototype.Update_User_Children = function () {
        var _this = this;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_children")
            .subscribe(function (response) {
            if (response.status == 200) {
                //---------Insert record----------------------------------------------------------
                for (var item in _this.ChildrenDetails) {
                    _this.UserChildren_Entry.CHILD_GUID = _this.ChildrenDetails[item]["CHILD_GUID"];
                    _this.UserChildren_Entry.NAME = _this.ChildrenDetails[item]["NAME"];
                    _this.UserChildren_Entry.ICNO = _this.ChildrenDetails[item]["ICNO"];
                    _this.UserChildren_Entry.GENDER = _this.ChildrenDetails[item]["GENDER"];
                    _this.UserChildren_Entry.SPOUSE = _this.ChildrenDetails[item]["SPOUSE"];
                    _this.UserChildren_Entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                    _this.UserChildren_Entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserChildren_Entry.UPDATE_TS = new Date().toISOString();
                    _this.UserChildren_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.UserChildren_Entry.USER_GUID = _this.usermain_entry.USER_GUID;
                    _this.userservice.save_user_children(_this.UserChildren_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //-----------------------------------------------------------------------------------------
            }
        });
    };
    UserPage.prototype.Save = function () {
        var _this = this;
        if (this.Userform) {
            //----------Check duplicate for email---------------
            var headers = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_main?filter=(EMAIL=" + this.User_Email_ngModel.trim() + ')&' + this.Key_Param;
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.loading = _this.loadingCtrl.create({
                            content: 'Please wait...',
                        });
                        _this.loading.present();
                        // if (this.User_HighestQualification_ngModel != "") {
                        // }
                        _this.Save_User_Main();
                        _this.loading.dismissAll();
                    }
                }
                else {
                    alert("The User is already Exist.");
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    UserPage.prototype.Update = function (USER_GUID) {
        if (this.Userform) {
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            this.Update_User_Main(USER_GUID);
            this.loading.dismissAll();
            // // let headers = new Headers();
            // // headers.append('Content-Type', 'application/json');
            // // let options = new RequestOptions({ headers: headers });
            // let url: string;
            // //let request_id = UUID.UUID();
            // //url = this.baseResource_Url + "claim_request_detail?filter=(DESCRIPTION=" + this.Travel_Description_ngModel + ')&'+this.Key_Param;
            // //url = this.baseResourceUrl2 + "user_main?filter=(USER_GUID=" + request_id + ')&'+this.Key_Param;
            // // url = constants.DREAMFACTORY_TABLE_URL + "user_main?filter=(EMAIL=" + this.User_Email_Edit_ngModel + ')&'+this.Key_Param;          
            // // this.http.get(url)
            // //   .map(res => res.json())
            // //   .subscribe(
            // //   data => {
            // //     let res = data["resource"];
            // //     if (res.length == 0) {
            // if (this.Exist_Record == false) {
            //   this.usermain_entry.EMAIL = this.User_Email_Edit_ngModel;
            //   this.usermain_entry.USER_GUID = this.USER_GUID_FOR_UPDATE;
            //   //this.usermain_entry.TENANT_GUID = "x";
            //   //this.usermain_entry.STAFF_ID	 = "y";
            //   //this.usermain_entry.PASSWORD = "z";
            //   //this.usermain_entry.LOGIN_ID = "925f21cf-7994-0716-b23c-ac8bff3167a4";
            //   this.usermain_entry.LOGIN_ID = this.User_LoginId_Edit_ngModel;
            //   this.usermain_entry.PASSWORD = this.User_Password_Edit_ngModel;
            //   //this.usermain_entry.ACTIVATION_FLAG = 1;
            //   this.usermain_entry.CREATION_TS = new Date().toISOString();
            //   this.usermain_entry.CREATION_USER_GUID = "1";
            //   this.usermain_entry.UPDATE_TS = new Date().toISOString();
            //   this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            //   this.userservice.update_user_main(this.usermain_entry)
            //     .subscribe((response) => {
            //       if (response.status == 200) {
            //         alert('user_main updated successfully');
            //         //location.reload();
            //         this.userinfo_entry.FULLNAME = this.User_Name_Edit_ngModel;
            //         // this.viewuser_entry.NAME = this.User_Name_Edit_ngModel;                    
            //         this.userinfo_entry.MARITAL_STATUS = this.User_Marital_Edit_ngModel;
            //         this.userinfo_entry.PERSONAL_ID_TYPE = this.User_StaffID_Edit_ngModel;
            //         this.userinfo_entry.PERSONAL_ID = this.User_ICNo_Edit_ngModel;
            //         this.userinfo_entry.DOB = this.User_DOB_Edit_ngModel;
            //         this.userinfo_entry.GENDER = this.User_Gender_Edit_ngModel;
            //         this.userinfo_entry.USER_INFO_GUID = this.USER_INFO_GUID_FOR_UPDATE;
            //         this.userinfo_entry.USER_GUID = this.USER_GUID_FOR_UPDATE;
            //         this.userinfo_entry.CREATION_TS = new Date().toISOString();
            //         this.userinfo_entry.CREATION_USER_GUID = "1";
            //         this.userinfo_entry.UPDATE_TS = new Date().toISOString();
            //         this.userinfo_entry.UPDATE_USER_GUID = "";
            //         this.userinfo_entry.DESIGNATION_GUID = this.User_Designation_Edit_ngModel;
            //         this.userinfo_entry.TENANT_COMPANY_GUID = this.User_Company_Edit_ngModel;
            //         this.userinfo_entry.DEPT_GUID = this.User_Department_Edit_ngModel;
            //         this.userinfo_entry.JOIN_DATE = this.User_JoinDate_Edit_ngModel;
            //         this.userinfo_entry.CONFIRMATION_DATE = this.User_ConfirmationDate_Edit_ngModel;
            //         this.userinfo_entry.RESIGNATION_DATE = this.User_ResignationDate_Edit_ngModel;
            //         this.userinfo_entry.BRANCH = this.User_Branch_Edit_ngModel;
            //         this.userinfo_entry.EMPLOYEE_TYPE = this.User_EmployeeType_Edit_ngModel;
            //         this.userinfo_entry.APPROVER1 = this.User_Approver1_Edit_ngModel;
            //         this.userinfo_entry.APPROVER2 = this.User_Approver2_Edit_ngModel;
            //         this.userinfo_entry.EMPLOYEE_STATUS = this.User_Employment_Edit_ngModel;
            //         this.userservice.update_user_info(this.userinfo_entry)
            //           .subscribe((response) => {
            //             if (response.status == 200) {
            //               alert('user_info Updated successfully');
            //               this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //             }
            //           });
            //         this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //       }
            //     });
            //   this.usercontact_entry.CONTACT_NO = this.User_PersonalNo_Edit_ngModel.trim();
            //   //this.usercontact_entry.CONTACT_INFO_GUID = this.USER_GUID_FOR_CONTACT;
            //   this.usercontact_entry.CONTACT_INFO_GUID = this.USER_GUID_FOR_CONTACT;
            //   this.usercontact_entry.USER_GUID = this.USER_GUID_FOR_UPDATE;
            //   this.usercontact_entry.CREATION_TS = new Date().toISOString();
            //   this.usercontact_entry.CREATION_USER_GUID = "1";
            //   this.usercontact_entry.UPDATE_TS = new Date().toISOString();
            //   this.usercontact_entry.UPDATE_USER_GUID = "";
            //   this.userservice.update_user_contact(this.usercontact_entry)
            //     .subscribe((response) => {
            //       if (response.status == 200) {
            //         alert('user_contact Registered successfully');
            //         this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //       }
            //     });
            //   this.usercompany_entry.COMPANY_CONTACT_NO = this.User_CompanyNo_Edit_ngModel.trim();
            //   this.usercompany_entry.USER_COMPANY_GUID = this.USER_GUID_FOR_COMPANY_CONTACT;
            //   this.usercompany_entry.USER_GUID = this.USER_GUID_FOR_UPDATE;
            //   this.usercompany_entry.CREATION_TS = new Date().toISOString();
            //   this.usercompany_entry.CREATION_USER_GUID = "1";
            //   this.usercompany_entry.UPDATE_TS = new Date().toISOString();
            //   this.usercompany_entry.UPDATE_USER_GUID = "";
            //   this.userservice.update_user_company(this.usercompany_entry)
            //     .subscribe((response) => {
            //       if (response.status == 200) {
            //         alert('user_company Registered successfully');
            //         //location.reload();
            //         this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //       }
            //     });
            //   this.useraddress_entry.USER_ADDRESS1 = this.User_Address1_Edit_ngModel.trim();
            //   this.useraddress_entry.USER_ADDRESS2 = this.User_Address2_Edit_ngModel.trim();
            //   this.useraddress_entry.USER_ADDRESS3 = this.User_Address3_Edit_ngModel.trim();
            //   this.useraddress_entry.USER_ADDRESS_GUID = this.USER_GUID_FOR_ADDRESS;
            //   this.useraddress_entry.USER_GUID = this.USER_GUID_FOR_UPDATE;
            //   this.useraddress_entry.CREATION_TS = new Date().toISOString();
            //   this.useraddress_entry.CREATION_USER_GUID = "1";
            //   this.useraddress_entry.UPDATE_TS = new Date().toISOString();
            //   this.useraddress_entry.UPDATE_USER_GUID = "";
            //   this.userservice.update_user_address(this.useraddress_entry)
            //     .subscribe((response) => {
            //       if (response.status == 200) {
            //         alert('user_address Registered successfully');
            //         //location.reload();
            //         this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //       }
            //     });
            // }
        }
    };
    UserPage.prototype.Save_Role = function () {
        // for (var ROLE_GUID of this.ROLE_ngModel_Add) {
        //   this.userrole_entry.USER_ROLE_GUID = UUID.UUID();
        //   this.userrole_entry.USER_GUID = this.usermain_entry.USER_GUID;
        //   this.userrole_entry.ROLE_GUID = ROLE_GUID;
        //   this.userrole_entry.ACTIVATION_FLAG = "1";
        //   this.userrole_entry.CREATION_TS = new Date().toISOString();
        //   this.userrole_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        //   this.userrole_entry.UPDATE_TS = new Date().toISOString();
        //   this.userrole_entry.UPDATE_USER_GUID = "";
        var _this = this;
        //   this.userservice.save_user_role(this.userrole_entry)
        //     .subscribe((response) => {
        //       if (response.status == 200) {
        //         // alert('Tenant User Registered successfully');
        //         // this.navCtrl.setRoot(this.navCtrl.getActive().component);
        //       }
        //     });
        // }
        //Insert Main Role------------------------------------------------------------------------- 
        this.userrole_entry.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
        this.userrole_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userrole_entry.ROLE_GUID = this.ROLE_ngModel_Add;
        this.userrole_entry.ACTIVATION_FLAG = "1";
        this.userrole_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.userrole_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.userrole_entry.UPDATE_TS = new Date().toISOString();
        this.userrole_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userrole_entry.ROLE_FLAG = "MAIN";
        this.userservice.save_user_role(this.userrole_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //Insert Record for Additional Role---------------------------------------------------------------------
                for (var _i = 0, _a = _this.ADDITIONAL_ROLE_ngModel_Add; _i < _a.length; _i++) {
                    var ROLE_GUID = _a[_i];
                    if (ROLE_GUID != _this.ROLE_ngModel_Edit) {
                        _this.userrole_entry.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
                        _this.userrole_entry.USER_GUID = _this.usermain_entry.USER_GUID;
                        _this.userrole_entry.ROLE_GUID = ROLE_GUID;
                        _this.userrole_entry.ACTIVATION_FLAG = "1";
                        _this.userrole_entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                        _this.userrole_entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                        _this.userrole_entry.UPDATE_TS = new Date().toISOString();
                        _this.userrole_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.userrole_entry.ROLE_FLAG = "ADDITIONAL";
                        _this.userservice.save_user_role(_this.userrole_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                            }
                        });
                    }
                }
                //--------------------------------------------------------------------------------------------------------
            }
        });
    };
    UserPage.prototype.Update_Role = function () {
        var _this = this;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple(this.usermain_entry.USER_GUID, "user_role")
            .subscribe(function (response) {
            if (response.status == 200) {
                //Update Main Role------------------------------------------------------------------------- 
                _this.userrole_entry.USER_ROLE_GUID = localStorage.getItem("Main_User_Role_Guid_Temp");
                _this.userrole_entry.USER_GUID = _this.usermain_entry.USER_GUID;
                _this.userrole_entry.ROLE_GUID = _this.ROLE_ngModel_Edit;
                _this.userrole_entry.ACTIVATION_FLAG = "1";
                _this.userrole_entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                _this.userrole_entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                _this.userrole_entry.UPDATE_TS = new Date().toISOString();
                _this.userrole_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                _this.userrole_entry.ROLE_FLAG = "MAIN";
                _this.userservice.update_user_role(_this.userrole_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                    }
                });
                //Insert Record for Additional Role---------------------------------------------------------------------
                for (var _i = 0, _a = _this.ADDITIONAL_ROLE_ngModel_Edit; _i < _a.length; _i++) {
                    var ROLE_GUID = _a[_i];
                    if (ROLE_GUID != _this.ROLE_ngModel_Edit) {
                        _this.userrole_entry.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_28_angular2_uuid__["UUID"].UUID();
                        _this.userrole_entry.USER_GUID = _this.usermain_entry.USER_GUID;
                        _this.userrole_entry.ROLE_GUID = ROLE_GUID;
                        _this.userrole_entry.ACTIVATION_FLAG = "1";
                        _this.userrole_entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                        _this.userrole_entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                        _this.userrole_entry.UPDATE_TS = new Date().toISOString();
                        _this.userrole_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.userrole_entry.ROLE_FLAG = "ADDITIONAL";
                        _this.userservice.save_user_role(_this.userrole_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                            }
                        });
                    }
                }
                //--------------------------------------------------------------------------------------------------------
            }
        });
    };
    UserPage.prototype.ClearControls = function () {
        this.User_Name_ngModel = "";
        this.User_Email_ngModel = "";
        this.User_LoginId_ngModel = "";
        this.User_Password_ngModel = "";
        this.User_PersonalNo_ngModel = "";
        this.User_CompanyNo_ngModel = "";
        this.User_Marital_ngModel = "";
        this.User_StaffID_ngModel = "";
        this.User_ICNo_ngModel = "";
        this.User_DOB_ngModel = "";
        this.User_Gender_ngModel = "";
        this.User_Designation_ngModel = "";
        this.User_Company_ngModel = "";
        this.User_Department_ngModel = "";
        this.User_JoinDate_ngModel = "";
        this.User_ConfirmationDate_ngModel = "";
        this.User_ResignationDate_ngModel = "";
        this.User_Branch_ngModel = "";
        this.User_Approver1_ngModel = "";
        // this.User_Approver2_ngModel = "";
        this.User_EmployeeType_ngModel = "";
        this.User_Employment_ngModel = "";
        this.User_HighestQualification_ngModel = "";
        this.User_University_ngModel = "";
        this.User_Major_ngModel = "";
        this.User_EduYear_ngModel = "";
        this.User_Certification_ngModel = "";
        this.User_CertificationYear_ngModel = "";
        this.User_CertificationGrade_ngModel = "";
        this.ProfessionalCertification = [];
        this.User_Address1_ngModel = "";
        this.User_Address2_ngModel = "";
        this.User_Address3_ngModel = "";
        this.User_PostCode_ngModel = "";
        this.User_Country_ngModel = "";
        this.User_State_ngModel = "";
        this.User_Spouse_Name_ngModel = "";
        this.User_Spouse_IcNumber_ngModel = "";
        this.FamilyDetails = [];
        this.User_Child_Name_ngModel = "";
        this.User_Child_IcNumber_ngModel = "";
        this.User_Child_Gender_ngModel = "";
        this.User_SpouseChild_ngModel = "";
        this.ChildrenDetails = [];
        this.User_EMG_CONTACT_NAME1_ngModel = "";
        this.User_EMG_RELATIONSHIP_ngModel = "";
        this.User_EMG_CONTACT_NO1_ngModel = "";
        this.User_EMG_CONTACT_NAME2_ngModel = "";
        this.User_EMG_RELATIONSHIP2_ngModel = "";
        this.User_EMG_CONTACT_NO2_ngModel = "";
        this.User_EPF_NUMBER_ngModel = "";
        this.User_INCOMETAX_NO_ngModel = "";
        this.User_BANK_NAME_ngModel = "";
        //-----------------------------------------------
        this.User_Name_Edit_ngModel = "";
        this.User_Email_Edit_ngModel = "";
        this.User_LoginId_Edit_ngModel = "";
        this.User_Password_Edit_ngModel = "";
        this.User_PersonalNo_Edit_ngModel = "";
        this.User_CompanyNo_Edit_ngModel = "";
        this.User_Marital_Edit_ngModel = "";
        this.User_StaffID_Edit_ngModel = "";
        this.User_ICNo_Edit_ngModel = "";
        this.User_DOB_Edit_ngModel = "";
        this.User_Gender_Edit_ngModel = "";
        this.User_Designation_Edit_ngModel = "";
        this.User_Company_Edit_ngModel = "";
        this.User_Department_Edit_ngModel = "";
        this.User_JoinDate_Edit_ngModel = "";
        this.User_ConfirmationDate_Edit_ngModel = "";
        this.User_ResignationDate_Edit_ngModel = "";
        this.User_Branch_Edit_ngModel = "";
        // this.User_Approver1_ngModel = "";
        // this.User_Approver2_ngModel = "";
        this.User_EmployeeType_Edit_ngModel = "";
        this.User_Employment_Edit_ngModel = "";
        this.User_HighestQualification_Edit_ngModel = "";
        this.User_University_Edit_ngModel = "";
        this.User_Major_Edit_ngModel = "";
        this.User_EduYear_Edit_ngModel = "";
        this.User_Certification_Edit_ngModel = "";
        this.User_CertificationYear_Edit_ngModel = "";
        this.User_CertificationGrade_Edit_ngModel = "";
        this.User_Address1_Edit_ngModel = "";
        this.User_Address2_Edit_ngModel = "";
        this.User_Address3_Edit_ngModel = "";
        this.User_PostCode_Edit_ngModel = "";
        this.User_Country_Edit_ngModel = "";
        this.User_State_Edit_ngModel = "";
        this.User_Spouse_Name_Edit_ngModel = "";
        this.User_Spouse_IcNumber_Edit_ngModel = "";
        this.User_Child_Name_Edit_ngModel = "";
        this.User_Child_IcNumber_Edit_ngModel = "";
        this.User_Child_Gender_Edit_ngModel = "";
        this.User_SpouseChild_Edit_ngModel = "";
        this.User_EMG_CONTACT_NAME1_Edit_ngModel = "";
        this.User_EMG_RELATIONSHIP_Edit_ngModel = "";
        this.User_EMG_CONTACT_NO1_Edit_ngModel = "";
        this.User_EMG_CONTACT_NAME2_Edit_ngModel = "";
        this.User_EMG_RELATIONSHIP2_Edit_ngModel = "";
        this.User_EMG_CONTACT_NO2_Edit_ngModel = "";
        this.User_EPF_NUMBER_Edit_ngModel = "";
        this.User_INCOMETAX_NO_Edit_ngModel = "";
        this.User_BANK_NAME_Edit_ngModel = "";
        this.MaritalStatusMarried = false;
        this.ROLE_ngModel_Add = "";
        this.ROLE_ngModel_Edit = "";
        localStorage.setItem("Main_User_Role_Guid_Temp", "");
    };
    UserPage.prototype.pathForImage = function (img) {
        if (img === null) {
            return '';
        }
        else {
            return cordova.file.dataDirectory + img;
        }
    };
    UserPage.prototype.presentToast = function (text) {
        var toast = this.toastCtrl.create({
            message: text,
            duration: 3000,
            position: 'top'
        });
        toast.present();
    };
    UserPage.prototype.presentActionSheet = function () {
        var _this = this;
        var actionSheet = this.actionSheetCtrl.create({
            title: 'Select Image Source',
            buttons: [
                {
                    text: 'Load from Library',
                    handler: function () {
                        _this.takePicture(_this.camera.PictureSourceType.PHOTOLIBRARY);
                    }
                },
                {
                    text: 'Use Camera',
                    handler: function () {
                        _this.takePicture(_this.camera.PictureSourceType.CAMERA);
                    }
                },
                {
                    text: 'Cancel',
                    role: 'cancel'
                }
            ]
        });
        actionSheet.present();
    };
    UserPage.prototype.takePicture = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            sourceType: sourceType,
            saveToPhotoAlbum: false,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            if (_this.platform.is('android') && sourceType === _this.camera.PictureSourceType.PHOTOLIBRARY) {
                _this.filePath.resolveNativePath(imagePath)
                    .then(function (filePath) {
                    var correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);
                    var currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));
                    _this.copyFileToLocalDir(correctPath, currentName, _this.createFileName());
                });
            }
            else {
                var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);
                var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);
                _this.copyFileToLocalDir(correctPath, currentName, _this.createFileName());
            }
        }, function () {
            _this.presentToast('Error while selecting image.');
        });
    };
    UserPage.prototype.createFileName = function () {
        var d = new Date(), n = d.getTime(), newFileName = n + ".jpg";
        return newFileName;
    };
    UserPage.prototype.copyFileToLocalDir = function (namePath, currentName, newFileName) {
        var _this = this;
        this.file.copyFile(namePath, currentName, cordova.file.dataDirectory, newFileName).then(function () {
            _this.lastImage = newFileName;
        }, function () {
            _this.presentToast('Error while storing file.');
        });
    };
    UserPage.prototype.DisplayFamily = function () {
        if (this.User_Marital_ngModel == "1") {
            this.MaritalStatusMarried = true;
        }
        else {
            this.MaritalStatusMarried = false;
        }
    };
    UserPage.prototype.DisplayFamily_Edit = function () {
        if (this.User_Marital_Edit_ngModel == "1") {
            this.MaritalStatusMarried = true;
        }
        else {
            this.MaritalStatusMarried = false;
        }
    };
    UserPage.prototype.GetQualificationID = function () {
        alert(this.User_HighestQualification_ngModel);
    };
    UserPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            this.Userform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Userform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
    };
    UserPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            _this.imageGUID = _this.uploadFileName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    // CloudFilePath: string;
    UserPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        // this.loading = true;
        var uniqueName = new Date().toISOString() + this.uploadFileName;
        localStorage.setItem("Unique_File_Name", uniqueName);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_10__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + uniqueName, _this.Userform.get('avatar').value, options)
                .map(function (response) {
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    UserPage.prototype.UserActivation = function (USER_GUID, Activation_Flag) {
        var _this = this;
        //Here get all the customer details and update
        this.GetUserMain(USER_GUID);
        var strTitle;
        if (Activation_Flag == true) {
            strTitle = "Do you want to deactivate ?";
        }
        else {
            strTitle = "Do you want to activate ?";
        }
        var alert = this.alertCtrl.create({
            title: 'Activation Confirmation',
            message: strTitle,
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        if (Activation_Flag == true) {
                            _this.usermain_entry.ACTIVATION_FLAG = 0;
                        }
                        else {
                            _this.usermain_entry.ACTIVATION_FLAG = 1;
                        }
                        _this.userservice.update_user_main(_this.usermain_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    UserPage.prototype.GetUserMain = function (USER_GUID) {
        var _this = this;
        var UserActivationUrl = __WEBPACK_IMPORTED_MODULE_12__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "user_main?filter=(USER_GUID=" + USER_GUID + ')&' + this.Key_Param;
        this.http.get(UserActivationUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.view_user_details = data["resource"];
            _this.usermain_entry.USER_GUID = USER_GUID;
            _this.usermain_entry.TENANT_GUID = _this.view_user_details[0]["TENANT_GUID"];
            _this.usermain_entry.STAFF_ID = _this.view_user_details[0]["STAFF_ID"];
            _this.usermain_entry.LOGIN_ID = _this.view_user_details[0]["LOGIN_ID"];
            _this.usermain_entry.PASSWORD = _this.view_user_details[0]["PASSWORD"];
            _this.usermain_entry.EMAIL = _this.view_user_details[0]["EMAIL"];
            // this.usermain_entry.ACTIVATION_FLAG = 1;
            _this.usermain_entry.CREATION_TS = _this.view_user_details[0]["CREATION_TS"];
            _this.usermain_entry.CREATION_USER_GUID = _this.view_user_details[0]["CREATION_USER_GUID"];
            _this.usermain_entry.UPDATE_TS = new Date().toISOString();
            _this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.usermain_entry.IS_TENANT_ADMIN = _this.view_user_details[0]["IS_TENANT_ADMIN"];
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserPage.prototype, "fileInput1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserPage.prototype, "fileInput2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput3'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserPage.prototype, "fileInput3", void 0);
    UserPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-user',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/user/user.html"*/'<ion-header>\n\n    <ion-navbar color="primary200">\n        <ion-title>{{ \'USER_REGISTRATION_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n    <ion-toolbar no-border-top color="primary200">\n        <ion-searchbar [(ngModel)]="user_search_ngModel" (ionInput)="searchUser($event)" placeholder=\'Search\'></ion-searchbar>\n    </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-fab top right edge>\n        <button ion-fab mini (click)="AddUserClick()" [disabled]="button_Add_Disable" title="Add">\n            <ion-icon name="add"></ion-icon>\n        </button>\n    </ion-fab>\n\n    <ion-list>\n        <ion-item>\n            <table class="Tabler list">\n                <tr class="linedsg TColor">\n\n                    <th class="lgl1 tblBrLeft" style="width:40px">No.</th>\n                    <th class="lgl1">{{ \'NAME\' | translate }}</th>\n                    <th class="lgl1" style="width:65px">{{ \'Staff ID\' | translate }}</th>\n                    <th class="lgl1">{{ \'COMPANY\' | translate }}</th>\n                    <th class="lgl1">{{ \'DEPARTMENT\' | translate }}</th>\n                    <th class="lgl1">{{ \'DESIGNATION\' | translate }}</th>\n                    <th class="lgl1">{{ \'EMAIL\' | translate }}</th>\n\n                    <th class="lgl1" style="width:85px">{{ \'Joining Date\' | translate }}</th>\n                    <th class="lgl1" style="width:85px">{{ \'STATUS\' | translate }}</th>\n\n                    <th class="lgl1" style="width:81px">{{ \'Activation\' | translate }}</th>\n\n                    <th class="lgl1 tblBrRight" style="width:56px">{{ \'ACTION\' | translate }}</th>\n                </tr>\n\n                <tr class="col7" *ngFor="let user of userview | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index"\n                    [hidden]="button_View_Disable">\n\n                    <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n                    <td class="lgl1 getHeader" text-wrap reshead="Name">{{user.FULLNAME}}</td>\n\n                    <td class="lgl1 getHeader" reshead="Staff ID">{{user.STAFF_ID}}</td>\n                    <td class="lgl1 getHeader" text-wrap reshead="Company">{{user.tenant_company_name}} </td>\n                    <td class="lgl1 getHeader" text-wrap reshead="Department">{{user.department_name}}</td>\n                    <td class="lgl1 getHeader" text-wrap reshead="Designation">{{user.designation_name}}</td>\n                    <td class="lgl1 getHeader" text-wrap reshead="Email">{{user.EMAIL}}</td>\n                    <td class="lgl1 getHeader" reshead="Joining Date">{{user.JOIN_DATE | date:\'dd/MM/yyyy\'}}</td>\n                    <td class="lgl1 getHeader" reshead="Status">{{user.EMPLOYEE_STATUS}}</td>\n\n                    <td class="lgl1 getHeader" reshead="Activation">\n                        <ion-item>\n                            <ion-toggle *ngIf="user.ACTIVATION_FLAG==\'1\'" checked=true (ionChange)="UserActivation(user.USER_GUID, true)"></ion-toggle>\n                            <ion-toggle *ngIf="user.ACTIVATION_FLAG==\'0\'" checked=false (ionChange)="UserActivation(user.USER_GUID, false)"></ion-toggle>\n                        </ion-item>\n                    </td>\n\n                    <td class="lgl1 getHeader fColor" reshead="Action">\n                        <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick_Personaldetails(user.USER_GUID)"\n                            title="Edit">\n                            <ion-icon name="md-create"></ion-icon>\n                        </button>\n                        <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(user.USER_GUID)"\n                            title="Delete" style="display: none;">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n\n            </table>\n            <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10"\n                directionLinks="true" autoHide="true">\n            </pagination-controls>\n        </ion-item>\n    </ion-list>\n\n\n\n    <!-- add Tenant form start-->\n    <div class="blackcontainer" *ngIf="AddUserClicked"></div>\n    <div class="popup4" padding *ngIf="AddUserClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n\n                <div class="icHeaderText">{{ \'REGISTER_NEW_USER\' | translate }} </div>\n                <button class="btnR" (click)="CloseUserClick()" title="Close">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list class="scroll">\n                <form [formGroup]="Userform">\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'PERSONAL_DETAILS\' | translate }}</b>\n                    </div>\n                    <ion-item>\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'NAME\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="NAME" [(ngModel)]="User_Name_ngModel" placeholder="{{\'Please fill the name of the user\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMAIL\' | translate }}</ion-label>\n                        <ion-input type="email" formControlName="EMAIL" [(ngModel)]="User_Email_ngModel" placeholder="{{\'Please fill the email of the tenant\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'PERSONAL_CONTACT_NO\' | translate }}</ion-label>\n                        <ion-input type="number" formControlName="CONTACT_NO" max="10" [(ngModel)]="User_PersonalNo_ngModel"\n                            placeholder="{{\'Please fill the personal contact number\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'COMAPANY_CONTACT_NO\' | translate }}</ion-label>\n                        <ion-input type="number" formControlName="COMPANY_CONTACT_NO" [(ngModel)]="User_CompanyNo_ngModel"\n                            placeholder="{{\'Please fill in the Company Contact No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'MARITAL_STATUS\' | translate }}</ion-label>\n                        <ion-select formControlName="MARITAL_STATUS" [(ngModel)]="User_Marital_ngModel" placeholder="{{\'Please select marital status\'}}"\n                            (ionChange)="DisplayFamily()">\n                            <ion-option [value]="0">Single</ion-option>\n                            <ion-option [value]="1">Married</ion-option>\n                            <ion-option [value]="2">Divorced</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'STAFF_ID\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="PERSONAL_ID_TYPE" [(ngModel)]="User_StaffID_ngModel"\n                            placeholder="{{\'Please fill the staff id\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'IC_NO\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="PERSONAL_ID" [(ngModel)]="User_ICNo_ngModel"\n                            placeholder="{{\'Please fill the ic no\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ \'DATE_OF_BIRTH\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="DOB" [(ngModel)]="User_DOB_ngModel"\n                            placeholder="{{\'Please choose your date of birth\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{\'GENDER\' | translate}}</ion-label>\n                        <ion-select formControlName="GENDER" [(ngModel)]="User_Gender_ngModel" placeholder="{{\'Please select the gender\'}}">\n                            <ion-option [value]="1">{{ \'MALE\' | translate }}</ion-option>\n                            <ion-option [value]="0">{{ \'FEMALE\' | translate }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label id="profile_image" stacked>{{ \'PROFILE_PHOTO\' | translate }}</ion-label>\n                        <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')"\n                            #fileInput1></ion-input>\n                        <button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file</button>\n                        <!-- <ion-button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file> </ion-button> -->\n                    </ion-item>\n                    <ion-item>\n                        <img src="{{ProfileImage}}" style="width: 20%">\n                    </ion-item>\n\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'EMPLOYMENT_DETAILS\' | translate }} </b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'COMPANY\' | translate }}</ion-label>\n                        <ion-select formControlName="TENANT_COMPANY_GUID" [(ngModel)]="User_Company_ngModel"\n                            placeholder="{{\'Please fill the company\'}}" (ionChange)="GetBranch(\'tenant_company_site\', User_Company_ngModel,\'SITE_NAME\'); GetDesignation(\'main_designation\', \'NAME\'); GetDepartment(\'main_department\', \'NAME\'); BindBank(\'main_bank\', \'NAME\'); BindApprover1(\'view_get_tenant_admin\')">\n                            <ion-option *ngFor="let company of companies" [value]="company.TENANT_COMPANY_GUID"\n                                selected="true">{{company.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'DESIGNATION\' | translate }}</ion-label>\n                        <ion-select formControlName="DESIGNATION_GUID" [(ngModel)]="User_Designation_ngModel"\n                            placeholder="{{\'Please fill the designation\'}}">\n                            <ion-option *ngFor="let designation of designations" [value]="designation.DESIGNATION_GUID"\n                                selected="true">{{designation.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'DEPARTMENT\' | translate }}</ion-label>\n                        <ion-select formControlName="DEPT_GUID" [(ngModel)]="User_Department_ngModel" placeholder="{{\'Please fill in the Department\'}}">\n                            <ion-option *ngFor="let department of departments" [value]="department.DEPARTMENT_GUID"\n                                selected="true">{{department.NAME }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'JOIN_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="JOIN_DATE" [(ngModel)]="User_JoinDate_ngModel"\n                            placeholder="{{\'Please fill the joining date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'CONFIRMATION_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="CONFIRMATION_DATE" [(ngModel)]="User_ConfirmationDate_ngModel"\n                            placeholder="{{\'Please fill the confermation date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'RESIGNATION_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="RESIGNATION_DATE" [(ngModel)]="User_ResignationDate_ngModel"\n                            placeholder="{{\'Please fill the Registration date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'BRANCH\' | translate }}</ion-label>\n                        <ion-select formControlName="BRANCH" [(ngModel)]="User_Branch_ngModel" placeholder="{{\'Please select Branch\'}}">\n                            <ion-option *ngFor="let branch of branches" [value]="branch.TENANT_COMPANY_SITE_GUID"\n                                selected="true">{{branch.SITE_NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMPLOYEE_TYPE\' | translate }}</ion-label>\n                        <ion-select formControlName="EMPLOYEE_TYPE" [(ngModel)]="User_EmployeeType_ngModel" placeholder="{{\'Please fill in the Employee Type\'}}">\n                            <ion-option value="0">Permanent</ion-option>\n                            <ion-option value="1">Contract</ion-option>\n                            <ion-option value="2">Temporary</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMPLOYEE_STATUS\' | translate }}</ion-label>\n                        <ion-select formControlName="EMPLOYEE_STATUS" [(ngModel)]="User_Employment_ngModel" placeholder="{{\'Please select employement status\'}}">\n                            <ion-option value="0">Probation</ion-option>\n                            <ion-option value="1">Confirmed</ion-option>\n                            <ion-option value="2">Terminated</ion-option>\n                            <ion-option value="3">Resigned</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{"Manager"}}</ion-label>\n                        <ion-select formControlName="APPROVER1" [(ngModel)]="User_Approver1_ngModel" placeholder="{{\'Please select Approver\'}}">\n                            <ion-option *ngFor="let approver of approvers" [value]="approver.USER_GUID" selected="true">{{approver.FULLNAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'EDUCATIONAL_QUALIFICATION\' | translate }} </b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'HIGHEST_QUALIFICATION\' | translate }}</ion-label>\n                        <ion-select formControlName="HIGHEST_QUALIFICATION" [(ngModel)]="User_HighestQualification_ngModel"\n                            placeholder="{{\'Select Highest Qualification\'}}">\n                            <ion-option *ngFor="let qualification of qualifications" value="{{qualification.QUALIFICATION_TYPE_GUID}}">{{qualification.TYPE_NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'UNIVERSITY\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="UNIVERSITY" [(ngModel)]="User_University_ngModel"\n                            placeholder="{{\'Please fill the University\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'MAJOR\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="MAJOR" [(ngModel)]="User_Major_ngModel" placeholder="{{\'Please fill the Major\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'YEAR\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="EDU_YEAR" [(ngModel)]="User_EduYear_ngModel"\n                            placeholder="{{\'Please fill the Year\'}}"></ion-input>\n                    </ion-item>\n\n\n                    <ion-item class="text">\n                        <input type="file" id="avatar2" (change)="onFileChange($event, \'avatar2\')" #fileInput2>\n                        <button ion-button type="button" (click)="clearFile(\'avatar2\')">clear file</button>\n                    </ion-item>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'PROFESSIONAL_CERTIFICATIONS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CERTIFICATION\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="CERTIFICATION" [(ngModel)]="User_Certification_ngModel"\n                            placeholder="{{\'Please fill the certifiation\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'YEAR\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="CERTIFICATION_YEAR" [(ngModel)]="User_CertificationYear_ngModel"\n                            placeholder="{{\'Please fill the Year\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'GRADE\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="CERTIFICATION_GRADE" [(ngModel)]="User_CertificationGrade_ngModel"\n                            placeholder="{{\'Please fill the Grade\'}}"></ion-input>\n\n                    </ion-item>\n                    <ion-item class="text">\n                        <input type="file" id="avatar3" formControlName="ATTACHMENT_PROFESSIONAL" [(ngModel)]="User_CertificationAttachment_ngModel"\n                            (change)="onFileChange($event, \'avatar3\')" #fileInput3>\n\n                        <button ion-button type="button" (click)="clearFile(\'avatar3\')">clear file</button>\n                        <button ion-button (click)="AddProfessionalCertification()">\n                            <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                        </button>\n                    </ion-item>\n\n                    <ion-list>\n                        <ion-item>\n                            <table class="Tabler">\n                                <tr class="linedsg TColor">\n                                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                    <th class="lgl1">NAME</th>\n                                    <th class="lgl1">GRADE</th>\n                                    <th class="lgl1">YEAR</th>\n                                    <th class="lgl1">ATTACHEMENT</th>\n                                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                </tr>\n\n                                <tr class="col7" *ngFor="let certificate of ProfessionalCertification; let i=index">\n                                    <td class="lgl1">{{i+1}}</td>\n                                    <td class="lgl1">{{certificate.NAME}}</td>\n                                    <td class="lgl1">{{certificate.GRADE}}</td>\n                                    <td class="lgl1">{{certificate.YEAR}}</td>\n                                    <td class="lgl1">{{certificate.ATTACHMENT}}</td>\n\n                                    <td class="lgl1 fColor">\n                                        <button ion-button item-end (click)="EditProfessionalCertification(certificate.CERTIFICATE_GUID)">\n                                            <ion-icon name="md-create"></ion-icon>\n                                        </button>\n                                        <button ion-button item-end (click)="RemoveProfessionalCertification(certificate.CERTIFICATE_GUID)">\n                                            <ion-icon name="md-close"></ion-icon>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ion-item>\n                    </ion-list>\n\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'RESIDENTIAL_ADDRESS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ADDRESS_LINE_1\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS1" [(ngModel)]="User_Address1_ngModel"\n                            placeholder="{{\'Please fill the address1\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ADDRESS_LINE_2\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS2" [(ngModel)]="User_Address2_ngModel"\n                            placeholder="{{\'Please fill the address2\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CITY\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS3" [(ngModel)]="User_Address3_ngModel"\n                            placeholder="{{\'Please fill the City\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'POST_CODE\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="USER_POSTCODE" [(ngModel)]="User_PostCode_ngModel"\n                            placeholder="{{\'Please fill the Post Code\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'COUNTRY\' | translate}}</ion-label>\n                        <ion-select formControlName="USER_COUNTRY" [(ngModel)]="User_Country_ngModel" placeholder="{{\'Select Country\'}}"\n                            (ionChange)="BindState(\'main_state\', User_Country_ngModel, \'NAME\')">\n                            <ion-option *ngFor="let country of countries" [value]="country.COUNTRY_GUID">{{\n                                country.NAME }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'STATE\' | translate}}</ion-label>\n                        <ion-select formControlName="USER_STATE" [(ngModel)]="User_State_ngModel" placeholder="{{\'Select State\'}}">\n                            <ion-option *ngFor="let state of states" [value]="state.STATE_GUID">{{ state.NAME }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <div *ngIf="MaritalStatusMarried">\n                        <div class="eClaimSubTitle2">\n                            <b>{{\'FAMILY_DETAILS\' | translate}}</b>\n                        </div>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'SPOUSE_NAME\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="SPOUSENAME" [(ngModel)]="User_Spouse_Name_ngModel"\n                                placeholder="{{\'Please fill the Spouse Name\'}}"></ion-input>\n                        </ion-item>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="SPOUSE_ICNUMBER" [(ngModel)]="User_Spouse_IcNumber_ngModel"\n                                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item class="text">\n                            <button ion-button icon-left (click)="AddFamilyDetails()">\n                                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                            </button>\n                        </ion-item>\n                        <ion-list>\n                            <ion-item>\n                                <table class="Tabler">\n                                    <tr class="linedsg TColor">\n                                        <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                        <th class="lgl1">NAME</th>\n                                        <th class="lgl1">IC NUMBER</th>\n                                        <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                    </tr>\n\n                                    <tr class="col7" *ngFor="let family of FamilyDetails; let i=index">\n                                        <td class="lgl1">{{i+1}}</td>\n                                        <td class="lgl1">{{family.NAME}}</td>\n                                        <td class="lgl1">{{family.ICNO}}</td>\n                                        <td class="lgl1 fColor">\n                                            <button ion-button item-end (click)="EditFamilyDetails(family.SPOUSE_GUID)">\n                                                <ion-icon name="md-create"></ion-icon>\n                                            </button>\n                                            <button ion-button item-end (click)="RemoveFamilyDetails(family.SPOUSE_GUID)">\n                                                <ion-icon name="md-close"></ion-icon>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ion-item>\n                        </ion-list>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'CHILD_NAME\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="CHILDNAME" [(ngModel)]="User_Child_Name_ngModel"\n                                placeholder="{{\'Please fill the Child Name\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="CHILD_ICNUMBER" [(ngModel)]="User_Child_IcNumber_ngModel"\n                                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'GENDER\' | translate}}</ion-label>\n                            <ion-select formControlName="CHILD_GENDER" [(ngModel)]="User_Child_Gender_ngModel"\n                                placeholder="{{\'Please Select Gender\'}}">\n                                <ion-option value="MALE">MALE</ion-option>\n                                <ion-option value="FEMALE">FEMALE</ion-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'SPOUSE\' | translate}}</ion-label>\n                            <ion-select formControlName="SPOUSE_CHILD" [(ngModel)]="User_SpouseChild_ngModel"\n                                placeholder="{{\'Please Select Spouse\'}}">\n                                <ion-option *ngFor="let family of FamilyDetails" [value]="family.NAME" selected="true">{{\n                                    family.NAME }}</ion-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <ion-item class="text">\n                            <button ion-button icon-left (click)="AddChildren()">\n                                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                            </button>\n                        </ion-item>\n                        <ion-list>\n                            <ion-item>\n                                <table class="Tabler">\n                                    <tr class="linedsg TColor">\n                                        <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                        <th class="lgl1">NAME</th>\n                                        <th class="lgl1">IC NUMBER</th>\n                                        <th class="lgl1">GENDER</th>\n                                        <th class="lgl1">SPOUSE</th>\n                                        <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                    </tr>\n\n                                    <tr class="col7" *ngFor="let chilren of ChildrenDetails; let i=index">\n                                        <td class="lgl1">{{i+1}}</td>\n                                        <td class="lgl1">{{chilren.NAME}}</td>\n                                        <td class="lgl1">{{chilren.ICNO}}</td>\n                                        <td class="lgl1">{{chilren.GENDER}}</td>\n                                        <td class="lgl1">{{chilren.SPOUSE}}</td>\n                                        <td class="lgl1 fColor">\n                                            <button ion-button item-end (click)="EditChildren(chilren.CHILD_GUID)">\n                                                <ion-icon name="md-create"></ion-icon>\n                                            </button>\n                                            <button ion-button item-end (click)="RemoveChildren(chilren.CHILD_GUID)">\n                                                <ion-icon name="md-close"></ion-icon>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ion-item>\n                        </ion-list>\n                    </div>\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'EMERGENCY_CONTACT_DETAILS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NAME_1\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_CONTACT_NAME1" [(ngModel)]="User_EMG_CONTACT_NAME1_ngModel"\n                            placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_RELATIONSHIP" [(ngModel)]="User_EMG_RELATIONSHIP_ngModel"\n                            placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="EMG_CONTACT_NO1" [(ngModel)]="User_EMG_CONTACT_NO1_ngModel"\n                            placeholder="{{\'Please fill the Contact No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NAME_2\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_CONTACT_NAME2" [(ngModel)]="User_EMG_CONTACT_NAME2_ngModel"\n                            placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_RELATIONSHIP2" [(ngModel)]="User_EMG_RELATIONSHIP2_ngModel"\n                            placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="EMG_CONTACT_NO2" [(ngModel)]="User_EMG_CONTACT_NO2_ngModel"\n                            placeholder="{{\'Please fill the Contact Number\'}}"></ion-input>\n                    </ion-item>\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'PAYROLL_DETAILS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'EPF_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EPF_NUMBER" [(ngModel)]="User_EPF_NUMBER_ngModel"\n                            placeholder="{{\'Please fill the Epf Number\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'INCOME_TAX_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="INCOMETAX_NO" [(ngModel)]="User_INCOMETAX_NO_ngModel"\n                            placeholder="{{\'Please fill the Income Tax No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'BANK_NAME\' | translate}}</ion-label>\n                        <ion-select formControlName="BANK_NAME" [(ngModel)]="User_BANK_NAME_ngModel" placeholder="{{\'Please Select Bank\'}}">\n                            <ion-option *ngFor="let bank of banks" value={{bank.BANK_GUID}}>{{bank.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ACCOUNT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="ACCOUNT_NUMBER" [(ngModel)]="User_ACCOUNT_NUMBER_ngModel"\n                            placeholder="{{\'Please fill the Account Number\'}}"></ion-input>\n                    </ion-item>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'Role Details\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="fuha">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{"Main Role"}}</ion-label>\n                        <ion-select formControlName="ROLE_NAME" [(ngModel)]="ROLE_ngModel_Add" placeholder="{{\'Please select role\'}}">\n                            <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="fuha">\n                        <ion-label stacked>{{"Additional Role"}}</ion-label>\n                        <ion-select formControlName="ADDITIONAL_ROLE_NAME" [(ngModel)]="ADDITIONAL_ROLE_ngModel_Add"\n                            placeholder="{{\'Please select role\'}}" multiple="true">\n                            <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <div class="btn">\n                        <button ion-button icon-left [disabled]="!Userform.valid" (click)="Save()">\n                            {{ \'SUBMIT_BUTTON\' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- add Tenant form end-->\n\n\n    <!-- edit user form start -->\n    <div class="blackcontainer" *ngIf="EditUserClicked"></div>\n    <div class="popup4" padding *ngIf="EditUserClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n\n                <div class="icHeaderText">UPDATE USER</div>\n                <button class="btnR" (click)="CloseUserClick()" title="Close">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list class="scroll">\n                <form [formGroup]="Userform">\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'PERSONAL_DETAILS\' | translate }}</b>\n                    </div>\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'NAME\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="NAME" [(ngModel)]="User_Name_Edit_ngModel" placeholder="{{\'Please fill the name of the user\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMAIL\' | translate }}</ion-label>\n                        <ion-input type="email" formControlName="EMAIL" [(ngModel)]="User_Email_Edit_ngModel"\n                            placeholder="{{\'Please fill the email of the tenant\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text" style="display: none;">\n                        <ion-label stacked>{{ \'LOGINID\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="LOGIN_ID" [(ngModel)]="User_LoginId_Edit_ngModel"\n                            placeholder="{{\'Please fill the email of the tenant\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text" style="display: none;">\n                        <ion-label stacked>{{ \'PASSWORD\' | translate }}</ion-label>\n                        <ion-input type="password" formControlName="PASSWORD" [(ngModel)]="User_Password_Edit_ngModel"\n                            placeholder="{{\'Please fill the email of the tenant\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'PERSONAL_CONTACT_NO\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="CONTACT_NO" max="10" [(ngModel)]="User_PersonalNo_Edit_ngModel"\n                            placeholder="{{\'Please fill the personal contact number\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'COMAPANY_CONTACT_NO\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="COMPANY_CONTACT_NO" [(ngModel)]="User_CompanyNo_Edit_ngModel"\n                            placeholder="{{\'Please fill in the HQ website\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n\n                        <ion-label stacked>{{ \'MARITAL_STATUS\' | translate }}</ion-label>\n                        <ion-select formControlName="MARITAL_STATUS" [(ngModel)]="User_Marital_Edit_ngModel"\n                            placeholder="{{\'Please fill the marital status\'}}">\n                            <ion-option [value]="0">Single</ion-option>\n                            <ion-option [value]="1">Married</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'STAFF_ID\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="PERSONAL_ID_TYPE" [(ngModel)]="User_StaffID_Edit_ngModel"\n                            placeholder="{{\'Please fill the staff id\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'IC_NO\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="PERSONAL_ID" [(ngModel)]="User_ICNo_Edit_ngModel"\n                            placeholder="{{\'Please fill the ic no\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'DATE_OF_BIRTH\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="DOB" [(ngModel)]="User_DOB_Edit_ngModel"\n                            placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'GENDER\' | translate }}</ion-label>\n                        <ion-select formControlName="GENDER" [(ngModel)]="User_Gender_Edit_ngModel" placeholder="{{\'Please fill the gender\'}}">\n                            <ion-option [value]="1">Male</ion-option>\n                            <ion-option [value]="0">Female</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'PROFILE PHOTO\' | translate }}</ion-label>\n                        <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')"\n                            #fileInput1></ion-input>\n                        <button ion-button item-end color="primary500" (click)="saveIm()" [disabled]="!chooseFile">Upload\n                            image</button>\n                    </ion-item>\n                    <ion-item class="text">\n                        <img [src]="Profile_Image_Display" style="width: 20%">\n                    </ion-item>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'EMPLOYMENT_DETAILS\' | translate }}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'COMPANY\' | translate }}</ion-label>\n                        <ion-select formControlName="TENANT_COMPANY_GUID" [(ngModel)]="User_Company_Edit_ngModel"\n                            placeholder="{{\'Please fill the company\'}}" (ionChange)="GetBranch(\'tenant_company_site\', User_Company_Edit_ngModel,\'SITE_NAME\'); BindApprover1(\'view_get_tenant_admin\')">\n                            <ion-option *ngFor="let company of companies" [value]="company.TENANT_COMPANY_GUID"\n                                selected="true">{{company.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'DESIGNATION\' | translate }}</ion-label>\n                        <ion-select formControlName="DESIGNATION_GUID" [(ngModel)]="User_Designation_Edit_ngModel"\n                            placeholder="{{\'Please fill the designation\'}}">\n                            <ion-option *ngFor="let designation of designations" value="{{designation.DESIGNATION_GUID}}"\n                                selected="true">{{designation.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'DEPARTMENT\' | translate }}</ion-label>\n                        <ion-select formControlName="DEPT_GUID" [(ngModel)]="User_Department_Edit_ngModel" placeholder="{{\'Please fill in the Department\'}}">\n                            <ion-option *ngFor="let department of departments" value="{{department.DEPARTMENT_GUID}}"\n                                selected="true">{{department.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'JOIN_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="JOIN_DATE" [(ngModel)]="User_JoinDate_Edit_ngModel"\n                            placeholder="{{\'Please fill the join date\'}}"></ion-datetime>\n                        <!-- <ion-input type="text" formControlName="JOIN_DATE" [(ngModel)]="User_JoinDate_ngModel" placeholder="{{\'Please fill the join date\'}}"></ion-input> -->\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'CONFIRMATION_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="CONFIRMATION_DATE" [(ngModel)]="User_ConfirmationDate_Edit_ngModel"\n                            placeholder="{{\'Please fill the confermation date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'RESIGNATION_DATE\' | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" formControlName="RESIGNATION_DATE" [(ngModel)]="User_ResignationDate_Edit_ngModel"\n                            placeholder="{{\'Please fill the Registration date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'BRANCH\' | translate }}</ion-label>\n                        <ion-select formControlName="BRANCH" [(ngModel)]="User_Branch_Edit_ngModel" placeholder="{{\'Please select Branch\'}}">\n                            <ion-option *ngFor="let branch of branches" [value]="branch.TENANT_COMPANY_SITE_GUID"\n                                selected="true">{{branch.SITE_NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMPLOYEE_TYPE\' | translate }}</ion-label>\n                        <ion-select formControlName="EMPLOYEE_TYPE" [(ngModel)]="User_EmployeeType_Edit_ngModel"\n                            placeholder="{{\'Please fill in the Email\'}}">\n                            <ion-option value="0">Permanent</ion-option>\n                            <ion-option value="1">Contract</ion-option>\n                            <ion-option value="2">Temporary</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{ \'EMPLOYEE_STATUS\' | translate }}</ion-label>\n                        <ion-select formControlName="EMPLOYEE_STATUS" [(ngModel)]="User_Employment_Edit_ngModel"\n                            placeholder="{{\'Please fill the employement status\'}}">\n                            <!-- <ion-option *ngFor="let empstatus of empstatuss" value="{{empstatus.value}}">{{empstatus.text}}</ion-option> -->\n                            <ion-option value="0">Probation</ion-option>\n                            <ion-option value="1">Confirmed</ion-option>\n                            <ion-option value="2">Terminated</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{"Manager"}}</ion-label>\n                        <ion-select formControlName="APPROVER1" [(ngModel)]="User_Approver1_Edit_ngModel" placeholder="{{\'Please select Approver\'}}">\n                            <ion-option *ngFor="let approver of approvers" [value]="approver.USER_GUID" selected="true">{{approver.FULLNAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{ \'EDUCATIONAL_QUALIFICATION\' | translate }}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'HIGHEST_QUALIFICATION\' | translate }}</ion-label>\n                        <ion-select formControlName="HIGHEST_QUALIFICATION" [(ngModel)]="User_HighestQualification_Edit_ngModel"\n                            placeholder="{{\'Select Highest Qualification\'}}">\n                            <ion-option *ngFor="let qualification of qualifications" [value]="qualification.QUALIFICATION_TYPE_GUID"\n                                selected="true">{{qualification.TYPE_NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'UNIVERSITY\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="UNIVERSITY" [(ngModel)]="User_University_Edit_ngModel"\n                            placeholder="{{\'Please fill the University\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'MAJOR\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="MAJOR" [(ngModel)]="User_Major_Edit_ngModel"\n                            placeholder="{{\'Please fill the Major\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{ \'YEAR\' | translate }}</ion-label>\n                        <ion-input type="text" formControlName="EDU_YEAR" [(ngModel)]="User_EduYear_Edit_ngModel"\n                            placeholder="{{\'Please fill the Year\'}}"></ion-input>\n                    </ion-item>\n\n                    <!-- <ion-item>\n                        <input type="file" id="avatar2" (change)="onFileChange($event, \'avatar2\')" #fileInput>\n                        <button ion-button type="button" (click)="clearFile()">clear file</button>\n\n                    </ion-item> -->\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'PROFESSIONAL_CERTIFICATIONS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CERTIFICATION\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="CERTIFICATION" [(ngModel)]="User_Certification_Edit_ngModel"\n                            placeholder="{{\'Please fill the certifiation\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'YEAR\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="CERTIFICATION_YEAR" [(ngModel)]="User_CertificationYear_Edit_ngModel"\n                            placeholder="{{\'Please fill the Year\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'GRADE\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="CERTIFICATION_GRADE" [(ngModel)]="User_CertificationGrade_Edit_ngModel"\n                            placeholder="{{\'Please fill the Grade\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{"IMAGE"}}</ion-label>\n                    </ion-item>\n\n\n                    <ion-item>\n                        <button ion-button icon-left (click)="AddProfessionalCertificationForEdit()">\n                            <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                        </button>\n                    </ion-item>\n                    <ion-list>\n                        <ion-item>\n                            <table class="Tabler">\n                                <tr class="linedsg TColor">\n                                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                    <th class="lgl1">NAME</th>\n                                    <th class="lgl1">GRADE</th>\n                                    <th class="lgl1">YEAR</th>\n                                    <th class="lgl1">ATTACHEMENT</th>\n                                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                </tr>\n\n                                <tr class="col7" *ngFor="let certificate of ProfessionalCertification; let i=index">\n                                    <td class="lgl1">{{i+1}}</td>\n                                    <td class="lgl1">{{certificate.NAME}}</td>\n                                    <td class="lgl1">{{certificate.GRADE}}</td>\n                                    <td class="lgl1">{{certificate.YEAR}}</td>\n                                    <td class="lgl1">{{certificate.ATTACHEMENT_ID}}</td>\n                                    <!-- <td class="lgl1">MCA.Pdf</td> -->\n                                    <td class="lgl1 fColor">\n                                        <button ion-button item-end (click)="EditProfessionalCertificationForEdit(certificate.CERTIFICATE_GUID)">\n                                            <ion-icon name="md-create"></ion-icon>\n                                        </button>\n                                        <button ion-button item-end (click)="RemoveProfessionalCertification(certificate.CERTIFICATE_GUID)">\n                                            <ion-icon name="md-close"></ion-icon>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ion-item>\n                    </ion-list>\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'RESIDENTIAL_ADDRESS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ADDRESS_LINE_1\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS1" [(ngModel)]="User_Address1_Edit_ngModel"\n                            [value]="USER_ADDRESS1" placeholder="{{\'Please fill the address1\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ADDRESS_LINE_2\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS2" [(ngModel)]="User_Address2_Edit_ngModel"\n                            [value]="USER_ADDRESS2" placeholder="{{\'Please fill the address2\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CITY\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="USER_ADDRESS3" [(ngModel)]="User_Address3_Edit_ngModel"\n                            [value]="USER_ADDRESS3" placeholder="{{\'Please fill the address3\'}}"></ion-input>\n                    </ion-item>\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'POST_CODE\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="USER_POSTCODE" [(ngModel)]="User_PostCode_Edit_ngModel"\n                            placeholder="{{\'Please fill the Post Code\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'COUNTRY\' | translate}}</ion-label>\n                        <ion-select formControlName="USER_COUNTRY" [(ngModel)]="User_Country_Edit_ngModel" placeholder="{{\'Select Country\'}}"\n                            (ionChange)="BindState(\'main_state\', User_Country_Edit_ngModel,\'NAME\')">\n                            <ion-option *ngFor="let country of countries" [value]="country.COUNTRY_GUID" selected="true">{{\n                                country.NAME }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'STATE\' | translate}}</ion-label>\n                        <ion-select formControlName="USER_STATE" [(ngModel)]="User_State_Edit_ngModel" placeholder="{{\'Select State\'}}">\n                            <ion-option *ngFor="let state of states" [value]="state.STATE_GUID" selected="true">{{\n                                state.NAME }}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <div *ngIf="MaritalStatusMarried">\n                        <div class="eClaimSubTitle2">\n                            <b>{{\'FAMILY_DETAILS\' | translate}}</b>\n                        </div>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'SPOUSE_NAME\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="SPOUSENAME" [(ngModel)]="User_Spouse_Name_Edit_ngModel"\n                                placeholder="{{\'Please fill the Spouse Name\'}}"></ion-input>\n                        </ion-item>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="SPOUSE_ICNUMBER" [(ngModel)]="User_Spouse_IcNumber_Edit_ngModel"\n                                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item>\n                            <button ion-button icon-left (click)="AddFamilyDetailsForEdit()">\n                                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                            </button>\n                        </ion-item>\n                        <ion-list>\n                            <ion-item>\n                                <table class="Tabler">\n                                    <tr class="linedsg TColor">\n                                        <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                        <th class="lgl1">NAME</th>\n                                        <th class="lgl1">IC NUMBER</th>\n                                        <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                    </tr>\n\n                                    <tr class="col7" *ngFor="let family of FamilyDetails; let i=index">\n                                        <td class="lgl1">{{i+1}}</td>\n                                        <td class="lgl1">{{family.NAME}}</td>\n                                        <td class="lgl1">{{family.ICNO}}</td>\n                                        <td class="lgl1 fColor">\n                                            <button ion-button item-end (click)="EditFamilyDetailsForEdit(family.SPOUSE_GUID)">\n                                                <ion-icon name="md-create"></ion-icon>\n                                            </button>\n                                            <button ion-button item-end (click)="RemoveFamilyDetails(family.SPOUSE_GUID)">\n                                                <ion-icon name="md-close"></ion-icon>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ion-item>\n                        </ion-list>\n\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'CHILD_NAME\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="CHILDNAME" [(ngModel)]="User_Child_Name_Edit_ngModel"\n                                placeholder="{{\'Please fill the Child Name\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n                            <ion-input type="text" formControlName="CHILD_ICNUMBER" [(ngModel)]="User_Child_IcNumber_Edit_ngModel"\n                                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'GENDER\' | translate}}</ion-label>\n                            <ion-select formControlName="CHILD_GENDER" [(ngModel)]="User_Child_Gender_Edit_ngModel"\n                                placeholder="{{\'Please Select Gender\'}}">\n                                <ion-option value="MALE">MALE</ion-option>\n                                <ion-option value="FEMALE">FEMALE</ion-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-item class="text">\n                            <ion-label stacked>{{\'SPOUSE\' | translate}}</ion-label>\n                            <ion-select formControlName="SPOUSE_CHILD" [(ngModel)]="User_SpouseChild_Edit_ngModel"\n                                placeholder="{{\'Please Select Spouse\'}}">\n                                <ion-option *ngFor="let family of FamilyDetails" [value]="family.NAME">{{ family.NAME\n                                    }}</ion-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <ion-item class="text">\n                            <button ion-button icon-left (click)="AddChildrenForEdit()">\n                                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n                            </button>\n                        </ion-item>\n                        <ion-list>\n                            <ion-item>\n                                <table class="Tabler">\n                                    <tr class="linedsg TColor">\n                                        <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                                        <th class="lgl1">NAME</th>\n                                        <th class="lgl1">IC NUMBER</th>\n                                        <th class="lgl1">GENDER</th>\n                                        <th class="lgl1">SPOUSE</th>\n                                        <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                                    </tr>\n\n                                    <tr class="col7" *ngFor="let chilren of ChildrenDetails; let i=index">\n                                        <td class="lgl1">{{i+1}}</td>\n                                        <td class="lgl1">{{chilren.NAME}}</td>\n                                        <td class="lgl1">{{chilren.ICNO}}</td>\n                                        <td class="lgl1">{{chilren.GENDER}}</td>\n                                        <td class="lgl1">{{chilren.SPOUSE}}</td>\n                                        <td class="lgl1 fColor">\n                                            <button ion-button item-end (click)="EditChildrenForEdit(chilren.CHILD_GUID)">\n                                                <ion-icon name="md-create"></ion-icon>\n                                            </button>\n                                            <button ion-button item-end (click)="RemoveChildren(chilren.CHILD_GUID)">\n                                                <ion-icon name="md-close"></ion-icon>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ion-item>\n                        </ion-list>\n                    </div>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'EMERGENCY_CONTACT_DETAILS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NAME_1\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_CONTACT_NAME1" [(ngModel)]="User_EMG_CONTACT_NAME1_Edit_ngModel"\n                            placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_RELATIONSHIP" [(ngModel)]="User_EMG_RELATIONSHIP_Edit_ngModel"\n                            placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="EMG_CONTACT_NO1" [(ngModel)]="User_EMG_CONTACT_NO1_Edit_ngModel"\n                            placeholder="{{\'Please fill the Contact No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NAME_2\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_CONTACT_NAME2" [(ngModel)]="User_EMG_CONTACT_NAME2_Edit_ngModel"\n                            placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EMG_RELATIONSHIP2" [(ngModel)]="User_EMG_RELATIONSHIP2_Edit_ngModel"\n                            placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="number" formControlName="EMG_CONTACT_NO2" [(ngModel)]="User_EMG_CONTACT_NO2_Edit_ngModel"\n                            placeholder="{{\'Please fill the Contact Number\'}}"></ion-input>\n                    </ion-item>\n\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'PAYROLL_DETAILS\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'EPF_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="EPF_NUMBER" [(ngModel)]="User_EPF_NUMBER_Edit_ngModel"\n                            placeholder="{{\'Please fill the Epf Number\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'INCOME_TAX_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="INCOMETAX_NO" [(ngModel)]="User_INCOMETAX_NO_Edit_ngModel"\n                            placeholder="{{\'Please fill the Income Tax No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'BANK_NAME\' | translate}}</ion-label>\n                        <ion-select formControlName="BANK_NAME" [(ngModel)]="User_BANK_NAME_Edit_ngModel" placeholder="{{\'Please Select Bank\'}}">\n                            <ion-option *ngFor="let bank of banks" value={{bank.BANK_GUID}}>{{bank.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="text">\n                        <ion-label stacked>{{\'ACCOUNT_NUMBER\' | translate}}</ion-label>\n                        <ion-input type="text" formControlName="ACCOUNT_NUMBER" [(ngModel)]="User_ACCOUNT_NUMBER_Edit_ngModel"\n                            placeholder="{{\'Please fill the Account Number\'}}"></ion-input>\n                    </ion-item>\n\n                    <div class="eClaimSubTitle2">\n                        <b>{{\'Role Details\' | translate}}</b>\n                    </div>\n\n                    <ion-item class="fuha">\n                        <ion-label stacked>\n                            <span style="color:red">*</span>{{"Main Role"}}</ion-label>\n                        <ion-select formControlName="ROLE_NAME" [(ngModel)]="ROLE_ngModel_Edit" placeholder="{{\'Please select role\'}}">\n                            <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item class="fuha">\n                        <ion-label stacked>{{"Additional Role"}}</ion-label>\n                        <ion-select formControlName="ADDITIONAL_ROLE_NAME" [(ngModel)]="ADDITIONAL_ROLE_ngModel_Edit"\n                            placeholder="{{\'Please select role\'}}" multiple="true">\n                            <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <div class="btn">\n                        <button ion-button [disabled]="!Userform.valid" (click)="Update(view_user_details[0].USER_GUID)">{{"SUBMIT"\n                            | translate}}</button>\n                    </div>\n                </form>\n\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- edit user form end -->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/user/user.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_24__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_25__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_5__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_3__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_10__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_26__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_24__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_6__ionic_native_camera__["a" /* Camera */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_8__ionic_native_file__["a" /* File */], __WEBPACK_IMPORTED_MODULE_7__ionic_native_file_path__["a" /* FilePath */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_3__angular_common__["k" /* TitleCasePipe */]])
    ], UserPage);
    return UserPage;
}());

//# sourceMappingURL=user.js.map

/***/ }),
/* 174 */,
/* 175 */,
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserQualification_Model; });
var UserQualification_Model = /** @class */ (function () {
    function UserQualification_Model(USER_QUALIFICATION_GUID, QUALIFICATION_GUID, USER_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, HIGHEST_QUALIFICATION, MAJOR, UNIVERSITY, YEAR, ATTACHMENT) {
        if (USER_QUALIFICATION_GUID === void 0) { USER_QUALIFICATION_GUID = null; }
        if (QUALIFICATION_GUID === void 0) { QUALIFICATION_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (HIGHEST_QUALIFICATION === void 0) { HIGHEST_QUALIFICATION = null; }
        if (MAJOR === void 0) { MAJOR = null; }
        if (UNIVERSITY === void 0) { UNIVERSITY = null; }
        if (YEAR === void 0) { YEAR = null; }
        if (ATTACHMENT === void 0) { ATTACHMENT = null; }
        this.USER_QUALIFICATION_GUID = USER_QUALIFICATION_GUID;
        this.QUALIFICATION_GUID = QUALIFICATION_GUID;
        this.USER_GUID = USER_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.HIGHEST_QUALIFICATION = HIGHEST_QUALIFICATION;
        this.MAJOR = MAJOR;
        this.UNIVERSITY = UNIVERSITY;
        this.YEAR = YEAR;
        this.ATTACHMENT = ATTACHMENT;
    }
    UserQualification_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserQualification_Model(json.USER_QUALIFICATION_GUID, json.QUALIFICATION_GUID, json.USER_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.HIGHEST_QUALIFICATION, json.MAJOR, json.UNIVERSITY, json.YEAR, json.ATTACHMENT);
    };
    UserQualification_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_QUALIFICATION_GUID: this.USER_QUALIFICATION_GUID,
            QUALIFICATION_GUID: this.QUALIFICATION_GUID,
            USER_GUID: this.USER_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            HIGHEST_QUALIFICATION: this.HIGHEST_QUALIFICATION,
            MAJOR: this.MAJOR,
            UNIVERSITY: this.UNIVERSITY,
            YEAR: this.YEAR,
            ATTACHMENT: this.ATTACHMENT
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserQualification_Model;
}());

//# sourceMappingURL=user_qualification_model.js.map

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageUpload_model; });
var ImageUpload_model = /** @class */ (function () {
    function ImageUpload_model(Image_Guid, IMAGE_URL, CREATION_TS, Update_Ts) {
        if (Image_Guid === void 0) { Image_Guid = null; }
        if (IMAGE_URL === void 0) { IMAGE_URL = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (Update_Ts === void 0) { Update_Ts = null; }
        this.Image_Guid = Image_Guid;
        this.IMAGE_URL = IMAGE_URL;
        this.CREATION_TS = CREATION_TS;
        this.Update_Ts = Update_Ts;
    }
    ImageUpload_model.fromJson = function (json) {
        if (!json)
            return;
        return new ImageUpload_model(json.Image_Guid, json.IMAGE_URL, json.CREATION_TS, json.Update_Ts);
    };
    ImageUpload_model.prototype.toJson = function (stringify) {
        var doc = {
            Image_Guid: this.Image_Guid,
            IMAGE_URL: this.IMAGE_URL,
            CREATION_TS: this.CREATION_TS,
            Update_Ts: this.Update_Ts
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ImageUpload_model;
}());

//# sourceMappingURL=image-upload.model.js.map

/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocProject_Model; });
var SocProject_Model = /** @class */ (function () {
    function SocProject_Model(PROJECT_GUID, NAME, CUSTOMER_GUID, CUSTOMER_LOCATION_GUID, TENANT_GUID, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (PROJECT_GUID === void 0) { PROJECT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (CUSTOMER_GUID === void 0) { CUSTOMER_GUID = null; }
        if (CUSTOMER_LOCATION_GUID === void 0) { CUSTOMER_LOCATION_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.PROJECT_GUID = PROJECT_GUID;
        this.NAME = NAME;
        this.CUSTOMER_GUID = CUSTOMER_GUID;
        this.CUSTOMER_LOCATION_GUID = CUSTOMER_LOCATION_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    SocProject_Model.fromJson = function (json) {
        if (!json)
            return;
        return new SocProject_Model(json.PROJECT_GUID, json.NAME, json.CUSTOMER_GUID, json.CUSTOMER_LOCATION_GUID, json.TENANT_GUID, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    SocProject_Model.prototype.toJson = function (stringify) {
        var doc = {
            PROJECT_GUID: this.PROJECT_GUID,
            NAME: this.NAME,
            CUSTOMER_GUID: this.CUSTOMER_GUID,
            CUSTOMER_LOCATION_GUID: this.CUSTOMER_LOCATION_GUID,
            TENANT_GUID: this.TENANT_GUID,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return SocProject_Model;
}());

//# sourceMappingURL=soc_project_model.js.map

/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocCustomerLocation_Model; });
var SocCustomerLocation_Model = /** @class */ (function () {
    function SocCustomerLocation_Model(CUSTOMER_GUID, CUSTOMER_LOCATION_GUID, NAME, DESCRIPTION, REGISTRATION_NO, ADDRESS1, ADDRESS2, ADDRESS3, CONTACT_PERSON, CONTACT_PERSON_MOBILE_NO, CONTACT_NO1, CONTACT_NO2, EMAIL, DIVISION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (CUSTOMER_GUID === void 0) { CUSTOMER_GUID = null; }
        if (CUSTOMER_LOCATION_GUID === void 0) { CUSTOMER_LOCATION_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (REGISTRATION_NO === void 0) { REGISTRATION_NO = null; }
        if (ADDRESS1 === void 0) { ADDRESS1 = null; }
        if (ADDRESS2 === void 0) { ADDRESS2 = null; }
        if (ADDRESS3 === void 0) { ADDRESS3 = null; }
        if (CONTACT_PERSON === void 0) { CONTACT_PERSON = null; }
        if (CONTACT_PERSON_MOBILE_NO === void 0) { CONTACT_PERSON_MOBILE_NO = null; }
        if (CONTACT_NO1 === void 0) { CONTACT_NO1 = null; }
        if (CONTACT_NO2 === void 0) { CONTACT_NO2 = null; }
        if (EMAIL === void 0) { EMAIL = null; }
        if (DIVISION === void 0) { DIVISION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.CUSTOMER_GUID = CUSTOMER_GUID;
        this.CUSTOMER_LOCATION_GUID = CUSTOMER_LOCATION_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.REGISTRATION_NO = REGISTRATION_NO;
        this.ADDRESS1 = ADDRESS1;
        this.ADDRESS2 = ADDRESS2;
        this.ADDRESS3 = ADDRESS3;
        this.CONTACT_PERSON = CONTACT_PERSON;
        this.CONTACT_PERSON_MOBILE_NO = CONTACT_PERSON_MOBILE_NO;
        this.CONTACT_NO1 = CONTACT_NO1;
        this.CONTACT_NO2 = CONTACT_NO2;
        this.EMAIL = EMAIL;
        this.DIVISION = DIVISION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    SocCustomerLocation_Model.fromJson = function (json) {
        if (!json)
            return;
        return new SocCustomerLocation_Model(json.CUSTOMER_GUID, json.CUSTOMER_LOCATION_GUID, json.NAME, json.DESCRIPTION, json.REGISTRATION_NO, json.ADDRESS1, json.ADDRESS2, json.ADDRESS3, json.CONTACT_PERSON, json.CONTACT_PERSON_MOBILE_NO, json.CONTACT_NO1, json.CONTACT_NO2, json.EMAIL, json.DIVISION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    SocCustomerLocation_Model.prototype.toJson = function (stringify) {
        var doc = {
            CUSTOMER_GUID: this.CUSTOMER_GUID,
            CUSTOMER_LOCATION_GUID: this.CUSTOMER_LOCATION_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            RIGISTRATION_NO: this.REGISTRATION_NO,
            ADDRESS1: this.ADDRESS1,
            ADDRESS2: this.ADDRESS2,
            ADDRESS3: this.ADDRESS3,
            CONTACT_PERSON: this.CONTACT_PERSON,
            CONTACT_PERSON_MOBILE_NO: this.CONTACT_PERSON_MOBILE_NO,
            CONTACT_NO1: this.CONTACT_NO1,
            CONTACT_NO2: this.CONTACT_NO2,
            EMAIL: this.EMAIL,
            DIVISION: this.DIVISION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return SocCustomerLocation_Model;
}());

//# sourceMappingURL=soc_customer_location_model.js.map

/***/ }),
/* 180 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return View_SOC_Model; });
var View_SOC_Model = /** @class */ (function () {
    function View_SOC_Model(SOC_GUID, TENANT_GUID, soc, project_name, customer_name, ACTIVATION_FLAG) {
        if (SOC_GUID === void 0) { SOC_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (soc === void 0) { soc = null; }
        if (project_name === void 0) { project_name = null; }
        if (customer_name === void 0) { customer_name = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        this.SOC_GUID = SOC_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.soc = soc;
        this.project_name = project_name;
        this.customer_name = customer_name;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
    }
    View_SOC_Model.fromJson = function (json) {
        if (!json)
            return;
        return new View_SOC_Model(json.SOC_GUID, json.TENANT_GUID, json.soc, json.project_name, json.customer_name, json.ACTIVATION_FLAG);
    };
    View_SOC_Model.prototype.toJson = function (stringify) {
        var doc = {
            SOC_GUID: this.SOC_GUID,
            TENANT_GUID: this.TENANT_GUID,
            soc: this.soc,
            project_name: this.project_name,
            customer_name: this.customer_name,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return View_SOC_Model;
}());

//# sourceMappingURL=view_soc_model.js.map

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CountrySetup_Model; });
var CountrySetup_Model = /** @class */ (function () {
    function CountrySetup_Model(COUNTRY_GUID, NAME, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (COUNTRY_GUID === void 0) { COUNTRY_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.COUNTRY_GUID = COUNTRY_GUID;
        this.NAME = NAME;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    CountrySetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new CountrySetup_Model(json.COUNTRY_GUID, json.NAME, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    CountrySetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            COUNTRY_GUID: this.COUNTRY_GUID,
            NAME: this.NAME,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return CountrySetup_Model;
}());

//# sourceMappingURL=countrysetup_model.js.map

/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Settings_Model; });
var Settings_Model = /** @class */ (function () {
    function Settings_Model(PERMISSION_KEY_GUID, KEY_NAME, KEY_VALUE, SHIFT_GUID, DEVICE_GUID, ROLE_GUID, COMPANY_GUID, TENANT_COMPANY_GUID, TENANT_COMPANY_SITE_GUID, DEPT_GUID, USER_GUID, TENANT_GUID, CREATION_USER_GUID, CREATION_TS, UPDATE_TS, UPDATE_USER_GUID) {
        if (PERMISSION_KEY_GUID === void 0) { PERMISSION_KEY_GUID = null; }
        if (KEY_NAME === void 0) { KEY_NAME = null; }
        if (KEY_VALUE === void 0) { KEY_VALUE = null; }
        if (SHIFT_GUID === void 0) { SHIFT_GUID = null; }
        if (DEVICE_GUID === void 0) { DEVICE_GUID = null; }
        if (ROLE_GUID === void 0) { ROLE_GUID = null; }
        if (COMPANY_GUID === void 0) { COMPANY_GUID = null; }
        if (TENANT_COMPANY_GUID === void 0) { TENANT_COMPANY_GUID = null; }
        if (TENANT_COMPANY_SITE_GUID === void 0) { TENANT_COMPANY_SITE_GUID = null; }
        if (DEPT_GUID === void 0) { DEPT_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.PERMISSION_KEY_GUID = PERMISSION_KEY_GUID;
        this.KEY_NAME = KEY_NAME;
        this.KEY_VALUE = KEY_VALUE;
        this.SHIFT_GUID = SHIFT_GUID;
        this.DEVICE_GUID = DEVICE_GUID;
        this.ROLE_GUID = ROLE_GUID;
        this.COMPANY_GUID = COMPANY_GUID;
        this.TENANT_COMPANY_GUID = TENANT_COMPANY_GUID;
        this.TENANT_COMPANY_SITE_GUID = TENANT_COMPANY_SITE_GUID;
        this.DEPT_GUID = DEPT_GUID;
        this.USER_GUID = USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.CREATION_TS = CREATION_TS;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    Settings_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Settings_Model(json.PERMISSION_KEY_GUID, json.KEY_NAME, json.KEY_VALUE, json.SHIFT_GUID, json.DEVICE_GUID, json.ROLE_GUID, json.COMPANY_GUID, json.TENANT_COMPANY_GUID, json.TENANT_COMPANY_SITE_GUID, json.DEPT_GUID, json.USER_GUID, json.TENANT_GUID, json.CREATION_USER_GUID, json.CREATION_TS, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    Settings_Model.prototype.toJson = function (stringify) {
        var doc = {
            PERMISSION_KEY_GUID: this.PERMISSION_KEY_GUID,
            KEY_NAME: this.KEY_NAME,
            KEY_VALUE: this.KEY_VALUE,
            SHIFT_GUID: this.SHIFT_GUID,
            DEVICE_GUID: this.DEVICE_GUID,
            ROLE_GUID: this.ROLE_GUID,
            COMPANY_GUID: this.COMPANY_GUID,
            TENANT_COMPANY_GUID: this.TENANT_COMPANY_GUID,
            TENANT_COMPANY_SITE_GUID: this.TENANT_COMPANY_SITE_GUID,
            DEPT_GUID: this.DEPT_GUID,
            USER_GUID: this.USER_GUID,
            TENANT_GUID: this.TENANT_GUID,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            CREATION_TS: this.CREATION_TS,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Settings_Model;
}());

//# sourceMappingURL=settings_model.js.map

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Main_Profile_Model; });
var Main_Profile_Model = /** @class */ (function () {
    function Main_Profile_Model(MAIN_PROFILE_GUID, PROFILE_NAME, PROFILE_XML, TENANT_GUID, TENANT_SITE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, PROFILE_JSON) {
        if (MAIN_PROFILE_GUID === void 0) { MAIN_PROFILE_GUID = null; }
        if (PROFILE_NAME === void 0) { PROFILE_NAME = null; }
        if (PROFILE_XML === void 0) { PROFILE_XML = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (TENANT_SITE_GUID === void 0) { TENANT_SITE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (PROFILE_JSON === void 0) { PROFILE_JSON = null; }
        this.MAIN_PROFILE_GUID = MAIN_PROFILE_GUID;
        this.PROFILE_NAME = PROFILE_NAME;
        this.PROFILE_XML = PROFILE_XML;
        this.TENANT_GUID = TENANT_GUID;
        this.TENANT_SITE_GUID = TENANT_SITE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.PROFILE_JSON = PROFILE_JSON;
    }
    Main_Profile_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Main_Profile_Model(json.MAIN_PROFILE_GUID, json.PROFILE_NAME, json.PROFILE_XML, json.TENANT_GUID, json.TENANT_SITE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.PROFILE_JSON);
    };
    Main_Profile_Model.prototype.toJson = function (stringify) {
        var doc = {
            MAIN_PROFILE_GUID: this.MAIN_PROFILE_GUID,
            PROFILE_NAME: this.PROFILE_NAME,
            PROFILE_XML: this.PROFILE_XML,
            TENANT_GUID: this.TENANT_GUID,
            TENANT_SITE_GUID: this.TENANT_SITE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            PROFILE_JSON: this.PROFILE_JSON
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Main_Profile_Model;
}());

//# sourceMappingURL=main_profile_model.js.map

/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantMainSetup_Model; });
var TenantMainSetup_Model = /** @class */ (function () {
    function TenantMainSetup_Model(TENANT_GUID, PARENT_TENANT_GUID, TENANT_ACCOUNT_NAME, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (PARENT_TENANT_GUID === void 0) { PARENT_TENANT_GUID = null; }
        if (TENANT_ACCOUNT_NAME === void 0) { TENANT_ACCOUNT_NAME = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.TENANT_GUID = TENANT_GUID;
        this.PARENT_TENANT_GUID = PARENT_TENANT_GUID;
        this.TENANT_ACCOUNT_NAME = TENANT_ACCOUNT_NAME;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    TenantMainSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new TenantMainSetup_Model(json.TENANT_GUID, json.PARENT_TENANT_GUID, json.TENANT_ACCOUNT_NAME, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    TenantMainSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            TENANT_GUID: this.TENANT_GUID,
            PARENT_TENANT_GUID: this.PARENT_TENANT_GUID,
            TENANT_ACCOUNT_NAME: this.TENANT_ACCOUNT_NAME,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return TenantMainSetup_Model;
}());

//# sourceMappingURL=tenantmainsetup_model.js.map

/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimtasklistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http } from '@angular/http';
// import 'rxjs/add/operator/map';
// import * as constants from '../../app/config/constants';
// import { ClaimapprovertasklistPage } from '../claimapprovertasklist/claimapprovertasklist';
/**
 * Generated class for the ClaimtasklistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimtasklistPage = /** @class */ (function () {
    function ClaimtasklistPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.role = "Validation";
        this.month = navParams.get("month");
        if (this.month != undefined) {
            this.month = this.month.substring(0, 3);
        }
        // console.log(this.month)
    }
    //ClaimHistory_Model = new ClaimHistory_Model();
    // claimTaskLists: any[];
    // claimTaskLists1: any[] = [];
    // claimTaskListTotal: any[];
    // searchboxValue: string;
    // baseResourceUrl: string;
    // deptList: any[];
    // employeeList: any[] = [];
    // employeeList1: any[] = [];
    // yearsList: any[] = [];
    // currentYear: number = new Date().getFullYear();
    // loginUserRole = localStorage.getItem("g_ROLE_NAME");
    // //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?filter=(ASSIGNED_TO='+localStorage.getItem("g_USER_GUID") + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
    // //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?api_key=' + constants.DREAMFACTORY_API_KEY;
    // public page: number = 1;
    // constructor(public navCtrl: NavController, public navParams: NavParams, public http: Http) {
    //   if (this.loginUserRole === "Finance Admin") {
    //     this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
    //   }
    //   else {
    //     this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
    //   }
    //   this.BindDepartment();
    //   this.BindEmployeesbyDepartment("All");
    //   this.BindYears();
    //   this.BindData("All", "All", "All");
    // }
    // BindData(ddlDept: string, ddlEmployee: string, ddlmonth: string) {
    //   this.claimTaskLists = this.claimTaskLists1 = [];
    //   this.http
    //     .get(this.baseResourceUrl)
    //     .map(res => res.json())
    //     .subscribe(data => {
    //       this.claimTaskListTotal = data["resource"];
    //       this.claimTaskListTotal.forEach(element => {
    //         if (this.claimTaskLists1.length === 0 || (this.claimTaskLists1.length > 0 && this.claimTaskLists1.find(e => e.CLAIM_REF_GUID == element.CLAIM_REF_GUID) === undefined)) {
    //           this.claimTaskLists1.push(element);
    //         }
    //         else {
    //           this.claimTaskLists1.find(e => e.CLAIM_REF_GUID === element.CLAIM_REF_GUID).CLAIM_AMOUNT += element.CLAIM_AMOUNT;
    //         }
    //       });
    //       this.claimTaskLists = this.claimTaskLists1;
    //       if (this.claimTaskLists.length != 0) {
    //         if (ddlDept.toString() !== "All") { this.claimTaskLists = this.claimTaskLists.filter(s => s.DEPT_GUID.toString() === ddlDept.toString()) }
    //         if (ddlEmployee.toString() !== "All") { this.claimTaskLists = this.claimTaskLists.filter(s => s.USER_GUID.toString() === ddlEmployee.toString()) }
    //         if (ddlmonth.toString() !== "All") { this.claimTaskLists = this.claimTaskLists.filter(s => s.MONTH.toString() === ddlmonth.toString()) }
    //       }
    //     });
    // }
    // onSearchInput() {
    //   // alert('hi')
    //   let val = this.searchboxValue;
    //   if (val && val.trim() != '') {
    //     this.claimTaskLists = this.claimTaskLists1.filter((item) => {
    //       let fullname: number;
    //       let month: number;
    //       let dept: number;
    //       let amount: number;
    //       console.log(item);
    //       if (item.FULLNAME != null) { fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase()) }
    //       if (item.DEPARTMENT != null) { dept = item.DEPARTMENT.toString().toLowerCase().indexOf(val.toLowerCase()) }
    //       if (item.MONTH != null) { month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase()) }
    //       if (item.CLAIM_AMOUNT != null) { amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase()) }
    //       return (
    //         (fullname > -1)
    //         || (dept > -1)
    //         || (month > -1)
    //         || (amount > -1)
    //       );
    //     })
    //   }
    //   else {
    //     this.claimTaskLists = this.claimTaskLists1;
    //   }
    // }
    // goToClaimApproverTaskList(claimrefguid: any) {
    //   this.navCtrl.push(ClaimapprovertasklistPage, {
    //     claimRefGuid: claimrefguid
    //   })
    // }
    // ionViewDidLoad() {
    //   console.log('ionViewDidLoad ClaimtasklistPage');
    // }
    // BindDepartment() {
    //   this.http
    //     .get(constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/main_department?api_key=' + constants.DREAMFACTORY_API_KEY)
    //     .map(res => res.json())
    //     .subscribe(data => {
    //       this.deptList = data["resource"];
    //     });
    //   //console.log(this.deptList);
    // }
    // BindEmployeesbyDepartment(dept: string) {
    //   //alert(dept);
    //   this.http
    //     .get(constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/view_user_display_new?api_key=' + constants.DREAMFACTORY_API_KEY)
    //     .map(res => res.json())
    //     .subscribe(data => {
    //       this.employeeList1 = data["resource"];
    //       this.employeeList = this.employeeList1;
    //       if (dept !== "All") {
    //         this.employeeList = this.employeeList1.filter(s => s.DEPT_GUID.toString() === dept.toString());
    //       }
    //     });
    // }
    // BindYears() {
    //   for (let i = 2016; i <= new Date().getFullYear(); i++) {
    //     this.yearsList.push(i);
    //   }
    // }
    // SearchClaimsData(ddlDept: string, ddlEmployee: string, ddlmonth: string, ddlYear: number) {
    //   if (this.loginUserRole === "Finance Admin") {
    //     this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS!=Pending)AND(PROFILE_LEVEL=3)AND(YEAR=' + ddlYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
    //   }
    //   else {
    //     this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL!=1)AND(YEAR=' + ddlYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
    //   }
    //   this.BindData(ddlDept, ddlEmployee, ddlmonth);
    // }
    ClaimtasklistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimtasklistPage');
    };
    ClaimtasklistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimtasklist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimtasklist/claimtasklist.html"*/'<!--\n  Generated template for the ClaimtasklistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<page-common-tasklist *ngIf="role" [role]="role" [month]="month"></page-common-tasklist>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimtasklist/claimtasklist.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], ClaimtasklistPage);
    return ClaimtasklistPage;
}());

//# sourceMappingURL=claimtasklist.js.map

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimhistorydetailPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_excel_service__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__travel_claim_view_travel_claim_view_component__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__entertainment_claim_view_entertainment_claim_view__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__overtime_claim_view_overtime_claim_view__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__print_claim_view_print_claim_view__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__gift_claim_view_gift_claim_view__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__miscellaneous_claim_view_miscellaneous_claim_view__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the ClaimhistorydetailPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimhistorydetailPage = /** @class */ (function () {
    function ClaimhistorydetailPage(excelService, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.FinanceLogin = false;
        this.page = 1;
        this.btnSearch = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.ddlDep = 'All';
        this.ddlName = 'All';
        this.ddlMon = 'All';
        this.ddlClaim = 'All';
        this.ddlSta = 'All';
        this.ExcelData = [];
        this.ExportExcelClicked = false;
        this.ExcelColumns = [];
        this.checked = [];
        this.claimrefguid = navParams.get("claimRefGuid");
        this.userguid = navParams.get("userGuid");
        this.month = navParams.get("Month");
        // this.role = navParams.get("role");
        // this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        // let ddlDept:any;
        //     alert(ddlDept.value)
        //alert(this.userguid);
        //this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID='+this.claimrefguid + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        //console.log(this.baseResourceUrl);
        //this.loginUserGuid = localStorage.getItem("g_USER_GUID");
        // this.claimrefguid = navParams.get("claimRefGuid");
        // alert(this.claimrefguid);
        if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
            this.FinanceLogin = true;
            // if (this.role == "Payment") {
            //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(PROFILE_LEVEL=3)&api_key=' + constants.DREAMFACTORY_API_KEY;
            // }
            // else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(PROFILE_LEVEL!=1)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            //}
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=1)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindClaimTypes();
        this.BindYears();
        this.BindData("All", "All", "All", "All", "All");
        if (this.FinanceLogin) {
            this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_getuserdetails?filter=(USER_GUID=' + this.userguid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.getuserDetails();
        }
        this.excelService = excelService;
    }
    ClaimhistorydetailPage.prototype.getuserDetails = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.userdetails = data["resource"];
        });
    };
    ;
    ClaimhistorydetailPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth, ddlClaimTypes, ddlStatus) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimhistorydetails = data["resource"];
            var key;
            _this.claimhistorydetails.forEach(function (element) {
                element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                // if (this.claimhistorydetails.length != 0 && this.loginUserRole === "Finance Admin") {
                //   if (element.STATUS.toString() === "Approved" && element.PROFILE_LEVEL.toString() === "3") { element.STATUS = "Paid"; }
                // }
                if (!_this.FinanceLogin) {
                    element.PROFILE_LEVEL = element.PROFILE_LEVEL_MAIN;
                    element.STATUS = element.REQ_STATUS;
                }
                if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGSUPERIOR;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PENDING)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGFINANCEVALIDATION;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].APPROVED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PENDINGPAYMENT;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].ONE && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].SUPERIORREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].TWO && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].FINANCEREJECTED;
                else if (element.PROFILE_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].ZERO && element.PREVIOUS_LEVEL == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["c" /* ProfileLevels */].THREE && element.STATUS == __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].REJECTED)
                    element.STATUS = __WEBPACK_IMPORTED_MODULE_13__dbSettings_companySettings__["d" /* StatusConstants */].PAYMENTREJECTED;
                // if (element.REQ_STATUS === 'Rejected') {
                //   element.STAGE_GUID = null;
                // }
                // else {
                //   key = element.PROFILE_LEVEL_MAIN;
                // }
                // switch (key) {
                //   case 1: element.STAGE_GUID = 'Superior'; break;
                //   case 2: element.STAGE_GUID = 'Finance Executive'; break;
                //   case 3:
                //   case -1: element.STAGE_GUID = 'Finance & Admin'; break;
                // }
            });
            _this.claimhistorydetails1 = _this.claimhistorydetails;
            if (_this.claimhistorydetails.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.DEPARTMENT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
                if (ddlClaimTypes.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === ddlClaimTypes.toString(); });
                }
                if (ddlStatus.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.STATUS.toString() === ddlStatus.toString().replace("_", " "); });
                }
            }
            // for (var item in data["resource"]) {
            //   this.ExcelData.push({ Name: data["resource"][item]["FULLNAME"], Department: data["resource"][item]["DEPARTMENT"], Month: data["resource"][item]["MONTH"], ClaimType: data["resource"][item]["CLAIM_TYPE"], Date: data["resource"][item]["TRAVEL_DATE"], Status: data["resource"][item]["STATUS"], Amount: data["resource"][item]["CLAIM_AMOUNT"] });
            // }
            _this.btnSearch = true;
        });
    };
    ClaimhistorydetailPage.prototype.onSearchInput = function () {
        var _this = this;
        // alert('hi')
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimhistorydetails = this.claimhistorydetails1.filter(function (item) {
                var claimtype;
                var status;
                var amount;
                var date;
                var dept;
                var user;
                var month;
                if (item.DEPARTMENT != null && !_this.FinanceLogin) {
                    dept = item.DEPARTMENT.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.FULLNAME != null && !_this.FinanceLogin) {
                    user = item.FULLNAME.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.MONTH != null && !_this.FinanceLogin) {
                    month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIM_TYPE != null) {
                    claimtype = item.CLAIM_TYPE.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.TRAVEL_DATE != null) {
                    date = item.TRAVEL_DATE.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.STATUS != null) {
                    status = item.STATUS.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIM_AMOUNT != null) {
                    amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((dept > -1)
                    || (user > -1)
                    || (month > -1)
                    || (claimtype > -1)
                    || (date > -1)
                    || (status > -1)
                    || (amount > -1));
            });
        }
        else {
            this.claimhistorydetails = this.claimhistorydetails1;
        }
    };
    ClaimhistorydetailPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimhistorydetailPage');
    };
    ClaimhistorydetailPage.prototype.BindClaimTypes = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTypeList = data["resource"];
        });
    };
    ClaimhistorydetailPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    ClaimhistorydetailPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    ClaimhistorydetailPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    ClaimhistorydetailPage.prototype.SearchClaimsData = function () {
        this.btnSearch = false;
        if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
            // if (this.role == "Payment") {
            //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=3)&api_key=' + constants.DREAMFACTORY_API_KEY;
            // }
            // else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(PROFILE_LEVEL!=1)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            //}
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=1)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(this.ddlDep, this.ddlName, this.ddlMon, this.ddlClaim, this.ddlSta);
    };
    ClaimhistorydetailPage.prototype.ExportToExcel = function () {
        // this.excelService.exportAsExcelFile(this.claimhistorydetails,'Data');
        // this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
        this.ExportExcelClicked = true;
        this.ExcelColumns = [];
        this.ExcelColumns.push({ Columns: 'Name' });
        this.ExcelColumns.push({ Columns: 'Department' });
        this.ExcelColumns.push({ Columns: 'Month' });
        this.ExcelColumns.push({ Columns: 'ClaimType' });
        this.ExcelColumns.push({ Columns: 'Date' });
        this.ExcelColumns.push({ Columns: 'Status' });
        this.ExcelColumns.push({ Columns: 'Amount' });
    };
    ClaimhistorydetailPage.prototype.CloseExportExcel = function () {
        this.ExportExcelClicked = false;
        this.checked.length = 0;
    };
    ClaimhistorydetailPage.prototype.SelectColumn = function (e, SelectedColumn) {
        if (e.checked == true) {
            this.checked.push(SelectedColumn);
        }
        else {
            var index = this.RemoveCheckedFromArray(SelectedColumn);
            this.checked.splice(index, 1);
        }
    };
    ClaimhistorydetailPage.prototype.ClaimNavigation = function (designation, claimRequestGUID, level, claimType, navType) {
        this.claimRequestGUID = claimRequestGUID;
        this.level = level;
        this.designation = designation;
        switch (claimType) {
            case '2d8d7c80-c9ae-9736-b256-4d592e7b7887':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_11__gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */]);
                break;
            case '37067b3d-1bf4-33a3-2b60-3ca40baf589a':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_9__overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */]);
                break;
            case '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_12__miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */]);
                break;
            case '58c59b56-289e-31a2-f708-138e81a9c823':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_7__travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */]);
                break;
            case 'd9567482-033a-6d92-3246-f33043155746':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_10__print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */]);
                break;
            case 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1':
                this.pushPage(__WEBPACK_IMPORTED_MODULE_8__entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */]);
                break;
        }
    };
    ClaimhistorydetailPage.prototype.pushPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isApprover: false,
            approverDesignation: this.designation,
            cr_GUID: this.claimRequestGUID,
            level_no: this.level,
            approver_GUID: localStorage.getItem('g_USER_GUID')
        });
    };
    ClaimhistorydetailPage.prototype.RemoveCheckedFromArray = function (checkbox) {
        return this.checked.findIndex(function (category) {
            return category === checkbox;
        });
    };
    ClaimhistorydetailPage.prototype.SubmitExportExcel = function () {
        this.ExcelData = [];
        if (this.checked.length > 0) {
            for (var item in this.claimhistorydetails) {
                if (this.checked.length > 0) {
                    var ctr = 0;
                    var jsonStr = '';
                    for (var chkItem in this.checked) {
                        ctr = ctr + 1;
                        switch (this.checked[chkItem]["Columns"]) {
                            case "Name":
                                if (this.checked.length == 1) {
                                    jsonStr += '{"Name":"' + this.claimhistorydetails[item]["FULLNAME"] + '"';
                                }
                                else {
                                    jsonStr += '{"Name":"' + this.claimhistorydetails[item]["FULLNAME"] + '",';
                                }
                                break;
                            case "Department":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Department":"' + this.claimhistorydetails[item]["DEPARTMENT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Department":"' + this.claimhistorydetails[item]["DEPARTMENT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Department":"' + this.claimhistorydetails[item]["DEPARTMENT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Department":"' + this.claimhistorydetails[item]["DEPARTMENT"] + '",';
                                    }
                                }
                                break;
                            case "Month":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Month":"' + this.claimhistorydetails[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Month":"' + this.claimhistorydetails[item]["MONTH"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Month":"' + this.claimhistorydetails[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Month":"' + this.claimhistorydetails[item]["MONTH"] + '",';
                                    }
                                }
                                break;
                            case "ClaimType":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"ClaimType":"' + this.claimhistorydetails[item]["CLAIM_TYPE"] + '"';
                                    }
                                    else {
                                        jsonStr += '"ClaimType":"' + this.claimhistorydetails[item]["CLAIM_TYPE"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"ClaimType":"' + this.claimhistorydetails[item]["CLAIM_TYPE"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"ClaimType":"' + this.claimhistorydetails[item]["CLAIM_TYPE"] + '",';
                                    }
                                }
                                break;
                            case "Date":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Date":"' + this.claimhistorydetails[item]["TRAVEL_DATE"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Date":"' + this.claimhistorydetails[item]["TRAVEL_DATE"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Date":"' + this.claimhistorydetails[item]["TRAVEL_DATE"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Date":"' + this.claimhistorydetails[item]["TRAVEL_DATE"] + '",';
                                    }
                                }
                                break;
                            case "Status":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Status":"' + this.claimhistorydetails[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Status":"' + this.claimhistorydetails[item]["STATUS"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Status":"' + this.claimhistorydetails[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Status":"' + this.claimhistorydetails[item]["STATUS"] + '",';
                                    }
                                }
                                break;
                            case "Amount":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Amount":"' + this.claimhistorydetails[item]["CLAIM_AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Amount":"' + this.claimhistorydetails[item]["CLAIM_AMOUNT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Amount":"' + this.claimhistorydetails[item]["CLAIM_AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Amount":"' + this.claimhistorydetails[item]["CLAIM_AMOUNT"] + '",';
                                    }
                                }
                                break;
                        }
                        if (ctr == this.checked.length) {
                            jsonStr += '}';
                        }
                    }
                    this.ExcelData.push(JSON.parse(jsonStr));
                }
            }
            this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
        }
        else {
            alert('Please select one item.');
        }
    };
    ClaimhistorydetailPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimhistorydetail',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimhistorydetail/claimhistorydetail.html"*/'<!--\n  Generated template for the ClaimhistorydetailPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title *ngIf="FinanceLogin">{{ "CLAIM_SUMMARY_DETAILS" | translate }}</ion-title>\n    <ion-title *ngIf="!FinanceLogin">{{ "SUPERIOR" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n      <ion-icon name="download"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-item class="fuha" *ngIf="!FinanceLogin">\n\n    <ion-label>{{ "CLAIM_DEPARTMENT" | translate }}</ion-label>\n    <ion-select interface="popover" [(ngModel)]="ddlDep" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha" *ngIf="!FinanceLogin">\n    <ion-label>{{ "CLAIM_USER_NAME" | translate }}</ion-label>\n    <ion-select interface="popover" [(ngModel)]="ddlName" #ddlEmployee>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha" *ngIf="!FinanceLogin">\n    <ion-label>{{ "YEAR" | translate }}</ion-label>\n    <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n      <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item class="fuha" *ngIf="!FinanceLogin">\n    <ion-label>{{ "CLAIM_MONTH" | translate }}</ion-label>\n    <ion-select interface="popover" [(ngModel)]="ddlMon" #ddlmonth>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option value="Jan">Jan</ion-option>\n      <ion-option value="Feb">Feb</ion-option>\n      <ion-option value="Mar">Mar</ion-option>\n      <ion-option value="Apr">Apr</ion-option>\n      <ion-option value="May">May</ion-option>\n      <ion-option value="Jun">Jun</ion-option>\n      <ion-option value="Jul">Jul</ion-option>\n      <ion-option value="Aug">Aug</ion-option>\n      <ion-option value="Sep">Sep</ion-option>\n      <ion-option value="Oct">Oct</ion-option>\n      <ion-option value="Nov">Nov</ion-option>\n      <ion-option value="Dec">Dec</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "CLAIM_TYPE" | translate }}</ion-label>\n    <ion-select interface="popover" [(ngModel)]="ddlClaim" #ddlClaimTypes>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let claimType of claimTypeList" [value]="claimType.CLAIM_TYPE_GUID">{{claimType.NAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_STATUS" | translate }}</ion-label>\n    <ion-select interface="popover" [(ngModel)]="ddlSta" #ddlStatus>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option [value]="Paid">Paid</ion-option>\n      <ion-option [value]="Pending_Superior">Pending Superior</ion-option>\n      <ion-option [value]="Pending_Finance_Validation">Pending Finance Validation</ion-option>\n      <ion-option [value]="Pending_Payment">Pending Payment</ion-option>\n      <ion-option [value]="Superior_Rejected">Superior Rejected</ion-option>\n      <ion-option [value]="Finance_Rejected">Finance Rejected</ion-option>\n      <ion-option [value]="Payment_Rejected">Payment Rejected</ion-option>\n\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData()">Search</button>\n  </ion-item>\n  <!-- <ion-item>\n    <button ion-button item-end (click)="SearchClaimsData(\'All\',\'All\',\'All\',ddlClaimTypes.value,ddlStatus.value,\'All\')">Search</button>\n  </ion-item> -->\n\n\n  <div *ngIf="FinanceLogin">\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n      <ion-label>{{ "CLAIM_HISTORY_NAME" | translate }} : {{userdetail.FULLNAME}}</ion-label>\n\n    </ion-item>\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n\n      <ion-label>{{ "CLAIM_HISTORY_DEPARTMENT" | translate }} : {{userdetail.DEPARTMENT}}</ion-label>\n    </ion-item>\n\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n      <ion-label>{{ "CLAIM_HISTORY_DESIGNATION" | translate }} : {{userdetail.DESIGNATION}} </ion-label>\n    </ion-item>\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n\n      <ion-label>{{ "CLAIM_HISTORY_MONTH" | translate }} : {{this.month}}</ion-label>\n\n    </ion-item>\n\n  </div>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list ">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1" *ngIf="!FinanceLogin">Name</th>\n          <th class="lgl1" *ngIf="!FinanceLogin">Department</th>\n          <th class="lgl1" *ngIf="!FinanceLogin" style="width:60px">Month</th>\n\n          <th class="lgl1">Claim Type</th>\n          <th class="lgl1" style="width:120px">Date</th>\n          <th class="lgl1"style="width:120px">Status</th>\n          <th class="lgl1"style="width:100px">Remarks</th>\n          <!-- <th class="lgl1">STAGE</th> -->\n          <th class="lgl1" style="width:90px">Amount({{currency }})</th>\n          <th class="lgl1 tblBrRight" style="width:60px">Action</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let claimhistorydetail of claimhistorydetails; let i=index">\n          <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n          <td class="lgl1 getHeader" reshead="Name" *ngIf="!FinanceLogin" text-wrap>{{claimhistorydetail.FULLNAME}}</td>\n          <td class="lgl1 getHeader" reshead="Department" *ngIf="!FinanceLogin" text-wrap>{{claimhistorydetail.DEPARTMENT}}</td>\n          <td class="lgl1 getHeader" reshead="Month" *ngIf="!FinanceLogin">{{claimhistorydetail.MONTH}}</td>\n\n          <td class="lgl1 getHeader" *ngIf="FinanceLogin" reshead="Claim Type">{{claimhistorydetail.CLAIMTYPE}}</td>\n          <td class="lgl1 getHeader" *ngIf="!FinanceLogin" reshead="Claim Type">{{claimhistorydetail.CLAIM_TYPE}}</td>\n          <td class="lgl1 getHeader" reshead="Date">{{claimhistorydetail.TRAVEL_DATE | date: \'dd/MM/yyyy\'}}</td>\n          <td class="lgl1 getHeader" reshead="Status" text-wrap>{{claimhistorydetail.STATUS}}</td>\n          <td class="lgl1 getHeader" reshead="Remarks" text-wrap>{{claimhistorydetail.REMARKS}}</td>\n          <!-- <td class="lgl1">{{claimhistorydetail.STAGE}}</td> -->\n          <td class="lgl1 getHeader" reshead="currency">{{claimhistorydetail.CLAIM_AMOUNT | number:\'1.2-2\'}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end (click)="ClaimNavigation(claimhistorydetail.STAGE_GUID,claimhistorydetail.CLAIM_REQUEST_GUID, claimhistorydetail.PROFILE_LEVEL_MAIN, claimhistorydetail.CLAIM_TYPE_GUID,1)">\n              <ion-icon name="md-eye"></ion-icon>\n            </button>\n          </td>\n        \n        </tr>\n\n\n      </table>\n      <!-- <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true"> -->\n      <!-- </pagination-controls> -->\n    </ion-item>\n  </ion-list>\n\n  <!-- Popup for Export to Excel Starts-->\n  <div class="blackcontainer" *ngIf="ExportExcelClicked">\n  </div>\n  <div class="popup4" padding *ngIf="ExportExcelClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">EXPORT TO EXCEL</div>\n\n        <button class="btnR" (click)="CloseExportExcel()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <div style="width:100%; display:inline-table !important;">\n\n          <ion-card>\n            <div>\n              <ion-list>\n                <ion-item *ngFor="let ExcelColumn of ExcelColumns">\n                  <ion-label>{{ExcelColumn.Columns}}</ion-label>\n                  <ion-checkbox color="secondary" checked="false" (ionChange)="SelectColumn($event, ExcelColumn)" item-end></ion-checkbox>\n                </ion-item>\n              </ion-list>\n            </div>\n          </ion-card>\n        </div>\n      </ion-list>\n      <div class="btn">\n        <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SubmitExportExcel()">{{"SUBMIT" | translate}}</button>\n      </div>\n    </ion-card>\n\n  </div>\n  <!-- Popup for Export to Excel End-->\n\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimhistorydetail/claimhistorydetail.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_6__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], ClaimhistorydetailPage);
    return ClaimhistorydetailPage;
}());

//# sourceMappingURL=claimhistorydetail.js.map

/***/ }),
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 198;

/***/ }),
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 240;

/***/ }),
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BanksetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_banksetup_model__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_banksetup_service__ = __webpack_require__(586);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the BanksetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var BanksetupPage = /** @class */ (function () {
    function BanksetupPage(excelService, fb, navCtrl, navParams, http, httpService, banksetupservice, alertCtrl, GlobalFunction, loadingCtrl, titlecasePipe) {
        this.excelService = excelService;
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.httpService = httpService;
        this.banksetupservice = banksetupservice;
        this.alertCtrl = alertCtrl;
        this.GlobalFunction = GlobalFunction;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.bank_entry = new __WEBPACK_IMPORTED_MODULE_7__models_banksetup_model__["a" /* BankSetup_Model */]();
        this.bank = new __WEBPACK_IMPORTED_MODULE_7__models_banksetup_model__["a" /* BankSetup_Model */]();
        this.current_bankGUID = '';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_bank' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.banks = [];
        this.AddBanksClicked = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.page = 1;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        this.emailUrl = 'http://api.zen.com.my/api/v2/zenmail?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------      
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------      
                this.FillTenant();
                //Display Grid---------------------------------------------      
                this.DisplayGrid();
                //----------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Bankform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    });
                }
                else {
                    this.Bankform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
            this.excelService = excelService;
        }
    }
    //---------------------------------------------------------------------
    BanksetupPage.prototype.AddBanksClick = function () {
        if (this.Edit_Form == false) {
            this.AddBanksClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    BanksetupPage.prototype.CloseBanksClick = function () {
        if (this.AddBanksClicked == true) {
            this.AddBanksClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    BanksetupPage.prototype.EditClick = function (BANK_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddBanksClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        //this.current_bankGUID = BANK_GUID;
        var self = this;
        this.banksetupservice
            .get(BANK_GUID)
            .subscribe(function (data) {
            self.bank_details = data;
            _this.Tenant_Add_ngModel = self.bank_details.TENANT_GUID;
            _this.NAME_ngModel_Add = self.bank_details.NAME;
            localStorage.setItem('Prev_Name', self.bank_details.NAME);
            localStorage.setItem('Prev_TenantGuid', self.bank_details.TENANT_GUID);
            _this.loading.dismissAll();
        });
    };
    BanksetupPage.prototype.DeleteClick = function (BANK_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.banksetupservice.remove(BANK_GUID)
                            .subscribe(function () {
                            self.banks = self.banks.filter(function (item) {
                                return item.BANK_GUID != BANK_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    BanksetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad BanksetupPage');
    };
    BanksetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Name') == null) {
            localStorage.setItem('Prev_Name', null);
        }
        else {
            localStorage.removeItem("Prev_Name");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
    };
    BanksetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    BanksetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        var view_url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            view_url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_bank_details' + '?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            view_url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_bank_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(view_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.banks = _this.BankDetails = data.resource;
            _this.loading.dismissAll();
        });
    };
    BanksetupPage.prototype.Save_Bank = function () {
        var _this = this;
        if (this.Bankform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_Name = "";
            if (localStorage.getItem('Prev_Name') != null) {
                strPrev_Name = localStorage.getItem('Prev_Name').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_Name || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details***************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Bank is already exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------        
                this.Update();
            }
        }
    };
    BanksetupPage.prototype.SetEntityForAdd = function () {
        if (this.Add_Form == true) {
            this.bank_entry.BANK_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
            this.bank_entry.CREATION_TS = new Date().toISOString();
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.bank_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            }
            else {
                this.bank_entry.CREATION_USER_GUID = 'sva';
            }
            this.bank_entry.UPDATE_TS = new Date().toISOString();
            this.bank_entry.UPDATE_USER_GUID = "";
        }
    };
    BanksetupPage.prototype.SetEntityForUpdate = function () {
        this.bank_entry.BANK_GUID = this.bank_details.BANK_GUID;
        this.bank_entry.CREATION_TS = this.bank_details.CREATION_TS;
        this.bank_entry.CREATION_USER_GUID = this.bank_details.CREATION_USER_GUID;
        this.bank_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.bank_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.bank_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    BanksetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.bank_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.bank_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.bank_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
        this.bank_entry.DESCRIPTION = 'Savings';
    };
    BanksetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Name");
        localStorage.removeItem("Prev_TenantGuid");
    };
    BanksetupPage.prototype.Insert = function () {
        var _this = this;
        this.banksetupservice.save_bank(this.bank_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Bank registered successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    BanksetupPage.prototype.Update = function () {
        var _this = this;
        this.banksetupservice.update_bank(this.bank_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Bank updated successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    BanksetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_bank?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_bank?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    BanksetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.Tenant_Add_ngModel = "";
    };
    BanksetupPage.prototype.ExportToExcel = function (evt) {
        this.excelService.exportAsExcelFile(this.banks, 'Data');
    };
    BanksetupPage.prototype.EmailTest = function (evt) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var body = {
            "template": "",
            "template_id": 0,
            "to": [
                {
                    "name": name,
                    "email": "tarmimi@zen.com.my"
                }
            ],
            "cc": [
                {
                    "name": name,
                    "email": "stephen@zen.com.my"
                }
            ],
            "bcc": [
                {
                    "name": name,
                    "email": "bijay@zen.com.my"
                }
            ],
            "subject": "Test mail.",
            "body_text": "",
            "body_html": '<html>' +
                '<head>' +
                '<meta name="GENERATOR" content="MSHTML 10.00.9200.17606">' +
                '</head>' +
                '<body>' +
                '<div style="FONT-FAMILY: Century Gothic">' +
                '<div style="MIN-WIDTH: 500px">' +
                '<br>' +
                '<div style="PADDING-BOTTOM: 10px; text-align: left; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://api.zen.com.my/api/v2/azurefs/azurefs/2018-09-17T13:33:42.429Zzen2.png?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */] + '"></div>' +
                '<div style="MARGIN: 0 30px;">' +
                '<div style="FONT-SIZE: 24px; COLOR: black; PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; PADDING-RIGHT: 20px"><b>Test mail</b></div>' +
                '</div>' +
                '<div style="FONT-SIZE: 12px; TEXT-ALIGN: left; padding: 11px 30px">' +
                '<hr>' +
                '<div style="FONT-SIZE: 16px; TEXT-ALIGN: left;"><b>Mail Details :</b></div>' +
                '<br />' +
                '<table style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto;">' +
                '<tbody>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Employee</td>' +
                '<td>:</td>' +
                '<td colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Applied Date</td>' +
                '<td>:</td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Claim Date </td>' +
                '<td>:</td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Claim Type</td>' +
                '<td>: </td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Project / Customer / SOC</td>' +
                '<td>:</td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Claim Amount</td>' +
                '<td>: </td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left">Description</td>' +
                '<td>: </td>' +
                '<td style="TEXT-ALIGN: left" colspan="2">&nbsp;</td>' +
                '</tr>' +
                '<tr>' +
                '<td style="TEXT-ALIGN: left"></td>' +
                '<td></td>' +
                '<td style="TEXT-ALIGN: left" colspan="2"><a href="http://autobuild.zeontech.com.my/eclaim/#/ClaimapprovertasklistPage" style="background: #0492C2; padding: 10px; color: white; text-decoration: none; border-radius: 5px; display: inline-block;">Open eClaim</a></td>' +
                '</tr>' +
                '</tbody>' +
                '</table>' +
                '<hr>' +
                '<div style="TEXT-ALIGN: left; PADDING-TOP: 20px">Thank you.</div>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '</body>' +
                '</html>',
            "from_name": "eClaim",
            "from_email": "balasingh73@gmail.com",
            "reply_to_name": "",
            "reply_to_email": ""
        };
        this.http.post(this.emailUrl, body, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            alert('Mail sent sucessfully.');
        });
    };
    BanksetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-banksetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/banksetup/banksetup.html"*/'<!--\n  Generated template for the BanksetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'BANK_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>  \n</ion-header>\n\n<ion-content padding>\n  <!-- <ion-fab top left edge>\n    <button ion-fab mini (click)="ExportToExcel($event)">\n      <ion-icon name="download"></ion-icon>\n    </button>\n  </ion-fab>\n\n  \n    <ion-fab top edge style="left:30px;">\n      <button ion-fab mini (click)="EmailTest($event)">\n        <ion-icon name="ios-mail-outline"></ion-icon>\n      </button>\n    </ion-fab> -->\n    <button ion-button  (click)="ExportToExcel($event)" style="left: 960px;"> <ion-icon name="download"></ion-icon></button>\n    <button ion-button  (click)="EmailTest($event)" style="left: 856px;"><ion-icon name="ios-mail-outline"></ion-icon></button>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddBanksClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n \n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:90px">No.</th>\n          <th class="lgl1">{{ \'BANK_NAME_HEADING\' | translate }}</th>\n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let bank of banks | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden] = "button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Bank Name">{{bank.NAME}}</td>\n          <td class="lgl1 getHeader" *ngIf="AdminLogin" >{{bank.TENANT_ACCOUNT_NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(bank.BANK_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(bank.BANK_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add bank form start-->\n  <div class="blackcontainer" *ngIf="AddBanksClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddBanksClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW BANK</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">UPDATE BANK</div>\n\n        <button class="btnR" (click)="CloseBanksClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Bankform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <!-- <ion-label stacked>{{"BANKNAME"}}</ion-label> -->\n            <ion-label stacked>{{ \'BANK_NAME_LABEL\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the bank name\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Bankform.valid" (click)="Save_Bank()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add bank form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/banksetup/banksetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_banksetup_service__["a" /* BankSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__["a" /* GlobalFunction */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */], __WEBPACK_IMPORTED_MODULE_13__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_13__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8__services_banksetup_service__["a" /* BankSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__["a" /* GlobalFunction */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], BanksetupPage);
    return BanksetupPage;
}());

//# sourceMappingURL=banksetup.js.map

/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BankSetup_Model; });
var BankSetup_Model = /** @class */ (function () {
    function BankSetup_Model(BANK_GUID, NAME, DESCRIPTION, TENANT_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (BANK_GUID === void 0) { BANK_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.BANK_GUID = BANK_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.TENANT_GUID = TENANT_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    BankSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new BankSetup_Model(json.BANK_GUID, json.NAME, json.DESCRIPTION, json.TENANT_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    BankSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            BANK_GUID: this.BANK_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            TENANT_GUID: this.TENANT_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return BankSetup_Model;
}());

//# sourceMappingURL=banksetup_model.js.map

/***/ }),
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BranchsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_tenantcompanysetup_model__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_tenantcompanysitesetup_model__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_tenantcompanysetup_service__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_tenantcompanysitesetup_service__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






// import { BranchSetup_Model } from '../../models/branchsetup_model';
// import { BranchSetup_Service } from '../../services/branchsetup_service';







/**
 * Generated class for the BranchsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var BranchsetupPage = /** @class */ (function () {
    function BranchsetupPage(navCtrl, navParams, fb, http, TenantCompanySetupService, tenantcompanysitesetupservice) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.TenantCompanySetupService = TenantCompanySetupService;
        this.tenantcompanysitesetupservice = tenantcompanysitesetupservice;
        this.tenant_company_entry = new __WEBPACK_IMPORTED_MODULE_6__models_tenantcompanysetup_model__["a" /* TenantCompanySetup_Model */]();
        this.tenant_company_site_entry = new __WEBPACK_IMPORTED_MODULE_7__models_tenantcompanysitesetup_model__["a" /* TenantCompanySiteSetup_Model */]();
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_branch' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        //public branchs: TenantCompanySetup_Model[] = [];
        this.AddBranchsClicked = false;
        this.EditBranchsClicked = false;
        this.Exist_Record = false;
        this.AddBranchesClicked = false;
        if (localStorage.getItem("g_USER_GUID") != null) {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/vw_tenantcompanysitedetails?filter=(TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.branchs = data.resource;
            });
            this.Branchform = fb.group({
                COMPANYNAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                BRANCHNAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                ISHQ_FLAG: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
    }
    //---------------------------------------------------------------------
    BranchsetupPage.prototype.AddBranchsClick = function () {
        this.AddBranchsClicked = true;
        this.ClearControls();
        this.COMPANYNAME_ngModel_Add = this.branchs[0]["NAME"];
    };
    BranchsetupPage.prototype.CloseBranchsClick = function () {
        if (this.AddBranchsClicked == true) {
            this.AddBranchsClicked = false;
        }
        if (this.EditBranchsClicked == true) {
            this.EditBranchsClicked = false;
        }
    };
    BranchsetupPage.prototype.EditClick = function () {
        // this.ClearControls();
        // this.EditBranchsClicked = true;
        // var self = this;
        // this.branchsetupservice
        //   .get(BRANCH_GUID)
        //   .subscribe((data) => {
        //     self.branch_details = data;
        //     this.NAME_ngModel_Edit = self.branch_details.NAME; localStorage.setItem('Prev_br_Name', self.branch_details.NAME);
        //   });
    };
    BranchsetupPage.prototype.DeleteClick = function () {
        // let alert = this.alertCtrl.create({
        //   title: 'Remove Confirmation',
        //   message: 'Are you sure to remove?',
        //   buttons: [
        //     {
        //       text: 'Cancel',
        //       role: 'cancel',
        //       handler: () => {
        //         console.log('Cancel clicked');
        //       }
        //     },
        //     {
        //       text: 'OK',
        //       handler: () => {
        //         console.log('OK clicked');
        //         var self = this;
        //         this.branchsetupservice.remove(BRANCH_GUID)
        //           .subscribe(() => {
        //             self.branchs = self.branchs.filter((item) => {
        //               return item.BRANCH_GUID != BRANCH_GUID
        //             });
        //           });
        //       }
        //     }
        //   ]
        // }); alert.present();
    };
    BranchsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad BranchsetupPage');
    };
    BranchsetupPage.prototype.Save = function () {
        if (this.Branchform.valid) {
            // let headers = new Headers();
            // headers.append('Content-Type', 'application/json');
            // let options = new RequestOptions({ headers: headers });
            // let url: string;
            // url = this.baseResource_Url + "main_branch?filter=(NAME=" + this.BRANCHNAME_ngModel_Add.trim() + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
            // this.http.get(url, options)
            //   .map(res => res.json())
            //   .subscribe(
            //   data => {
            //     let res = data["resource"];
            //     if (res.length == 0) {
            //       console.log("No records Found");
            //       if (this.Exist_Record == false) {
            //         this.branch_entry.NAME = this.BRANCHNAME_ngModel_Add.trim();
            //         this.branch_entry.BRANCH_GUID = UUID.UUID();
            //         this.branch_entry.CREATION_TS = new Date().toISOString();
            //         this.branch_entry.CREATION_USER_GUID = '1';
            //         this.branch_entry.UPDATE_TS = new Date().toISOString();
            //         this.branch_entry.UPDATE_USER_GUID = "";
            //         this.branchsetupservice.save(this.branch_entry)
            //           .subscribe((response) => {
            //             if (response.status == 200) {
            //               alert('Branch Registered successfully');
            //               //location.reload();
            //               this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //             }
            //           })
            //       }
            //     }
            //     else {
            //       console.log("Records Found");
            //       alert("The Branch is already Exist.")
            //     }
            //   },
            //   err => {
            //     this.Exist_Record = false;
            //     console.log("ERROR!: ", err);
            //   });
            this.Save_Tenant_Company();
        }
    };
    BranchsetupPage.prototype.Save_Tenant_Company = function () {
        var _this = this;
        //----------Check if the new tenant_company entered then take new guid else take the previous-------------
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/tenant_company?filter=(NAME=" + this.COMPANYNAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            //this.tenant_company = data.resource; 
            //console.log(data.resource[0]);
            if (data.resource[0] != undefined) {
                _this.tenant_company_entry.TENANT_COMPANY_GUID = data.resource[0]["TENANT_COMPANY_GUID"];
                _this.Save_Tenant_Company_Site();
            }
            else {
                _this.tenant_company_entry.TENANT_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
                _this.tenant_company_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
                _this.tenant_company_entry.NAME = _this.COMPANYNAME_ngModel_Add.trim();
                _this.tenant_company_entry.REGISTRATION_NO = null;
                _this.tenant_company_entry.ACTIVATION_FLAG = "1";
                _this.tenant_company_entry.CREATION_TS = new Date().toISOString();
                _this.tenant_company_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                _this.tenant_company_entry.UPDATE_TS = new Date().toISOString();
                _this.tenant_company_entry.UPDATE_USER_GUID = "";
                _this.TenantCompanySetupService.save(_this.tenant_company_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        _this.Save_Tenant_Company_Site();
                    }
                });
            }
        });
    };
    BranchsetupPage.prototype.Save_Tenant_Company_Site = function () {
        var _this = this;
        this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
        this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
        this.tenant_company_site_entry.SITE_NAME = this.BRANCHNAME_ngModel_Add.trim();
        this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
        this.tenant_company_site_entry.CREATION_TS = new Date().toISOString();
        this.tenant_company_site_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
        this.tenant_company_site_entry.UPDATE_USER_GUID = "";
        if (this.ISHQ_FLAG_ngModel_Add == true) {
            this.tenant_company_site_entry.ISHQ = "1";
        }
        else {
            this.tenant_company_site_entry.ISHQ = "0";
        }
        this.tenantcompanysitesetupservice.save(this.tenant_company_site_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //Check if previous tenant_company_site is hq active but current tenant_company_site is updating to hq active then previous tenant_company_site will inactive.      
                if (_this.ISHQ_FLAG_ngModel_Add == true) {
                    _this.UpdateHQ();
                }
                else {
                    alert('Company & Site registered successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            }
        });
    };
    BranchsetupPage.prototype.UpdateHQ = function () {
        var _this = this;
        if (this.ISHQ_FLAG_ngModel_Add == true) {
            //-------------Get all the details of previous tenant_company_site------------------------------
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/tenant_company_site?filter=(TENANT_COMPANY_SITE_GUID=" + localStorage.getItem("g_TENANT_COMPANY_SITE_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.hqDetails = data.resource;
            });
            //----------------------------------------------------------------------------------------------
            this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem("g_TENANT_COMPANY_SITE_GUID");
            this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
            this.tenant_company_site_entry.SITE_NAME = this.BRANCHNAME_ngModel_Add.trim();
            this.tenant_company_site_entry.REGISTRATION_NUM = this.hqDetails[0]["REGISTRATION_NUM"];
            this.tenant_company_site_entry.ADDRESS = this.hqDetails[0]["ADDRESS"];
            this.tenant_company_site_entry.ADDRESS2 = this.hqDetails[0]["ADDRESS2"];
            this.tenant_company_site_entry.ADDRESS3 = this.hqDetails[0]["ADDRESS3"];
            this.tenant_company_site_entry.CONTACT_NO = this.hqDetails[0]["CONTACT_NO"];
            this.tenant_company_site_entry.EMAIL = this.hqDetails[0]["EMAIL"];
            this.tenant_company_site_entry.ACTIVATION_FLAG = this.hqDetails[0]["ACTIVATION_FLAG"];
            this.tenant_company_site_entry.CONTACT_PERSON = this.hqDetails[0]["CONTACT_PERSON"];
            this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = this.hqDetails[0]["CONTACT_PERSON_CONTACT_NO"];
            this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = this.hqDetails[0]["CONTACT_PERSON_EMAIL"];
            this.tenant_company_site_entry.WEBSITE = this.hqDetails[0]["WEBSITE"];
            this.tenant_company_site_entry.CREATION_TS = this.hqDetails[0]["CREATION_TS"];
            this.tenant_company_site_entry.CREATION_USER_GUID = this.hqDetails[0]["CREATION_USER_GUID"];
            this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_company_site_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.tenantcompanysitesetupservice.update(this.tenant_company_site_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    alert('Company & Site Registered successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            });
        }
    };
    BranchsetupPage.prototype.getBranchList = function () {
        // let self = this;
        // let params: URLSearchParams = new URLSearchParams();
        // self.branchsetupservice.get_branch(params)
        //   .subscribe((branchs: BranchSetup_Model[]) => {
        //     self.branchs = branchs;
        //   });
    };
    BranchsetupPage.prototype.Update = function () {
        // if (this.Branchform.valid) {
        //   if (this.branch_entry.NAME = null) { this.branch_entry.NAME = this.NAME_ngModel_Edit.trim(); }
        //   this.branch_entry.CREATION_TS = this.branch_details.CREATION_TS;
        //   this.branch_entry.CREATION_USER_GUID = this.branch_details.CREATION_USER_GUID;
        //   this.branch_entry.BRANCH_GUID = BRANCH_GUID;
        //   this.branch_entry.UPDATE_TS = new Date().toISOString();
        //   this.branch_entry.UPDATE_USER_GUID = '1';
        //   if (this.NAME_ngModel_Edit.trim() != localStorage.getItem('Prev_br_Name')) {
        //     let url: string;
        //     url = this.baseResource_Url + "main_branch?filter=(NAME=" + this.NAME_ngModel_Edit.trim() + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        //     this.http.get(url)
        //       .map(res => res.json())
        //       .subscribe(
        //       data => {
        //         let res = data["resource"];
        //         console.log('Current Name : ' + this.NAME_ngModel_Edit + ', Previous Name : ' + localStorage.getItem('Prev_br_Name'));
        //         if (res.length == 0) {
        //           console.log("No records Found");
        //           this.branch_entry.NAME = this.NAME_ngModel_Edit.trim();
        //           //**************Update service if it is new details*************************
        //           this.branchsetupservice.update(this.branch_entry)
        //             .subscribe((response) => {
        //               if (response.status == 200) {
        //                 alert('Mileage updated successfully');
        //                 this.navCtrl.setRoot(this.navCtrl.getActive().component);
        //               }
        //             });
        //           //**************************************************************************
        //         }
        //         else {
        //           console.log("Records Found");
        //           alert("The Branch is already Exist. ");
        //         }
        //       },
        //       err => {
        //         this.Exist_Record = false;
        //         console.log("ERROR!: ", err);
        //       });
        //   }
        //   else {
        //     if (this.branch_entry.NAME == null) { this.branch_entry.NAME = localStorage.getItem('Prev_br_Name'); }
        //     this.branch_entry.NAME = this.NAME_ngModel_Edit.trim();
        //     //**************Update service if it is old details*************************
        //     this.branchsetupservice.update(this.branch_entry)
        //       .subscribe((response) => {
        //         if (response.status == 200) {
        //           alert('Branch updated successfully');
        //           //location.reload();
        //           this.navCtrl.setRoot(this.navCtrl.getActive().component);
        //         }
        //       });
        //   }
        // }
    };
    BranchsetupPage.prototype.ClearControls = function () {
        this.BRANCHNAME_ngModel_Add = "";
        this.COMPANYNAME_ngModel_Add = "";
        this.NAME_ngModel_Edit = "";
    };
    BranchsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-branchsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/branchsetup/branchsetup.html"*/'<!--\n  Generated template for the BranchsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>Tenant Company & Site Setup</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddBranchsClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <!-- <ion-list>\n    <ion-list-header>\n      BRANCH NAME\n    </ion-list-header>\n    <ion-item *ngFor="let branch of branchs">\n      {{branch.NAME}}\n      <button ion-button item-end (click)="EditClick(branch.BRANCH_GUID)"><ion-icon name="md-create"></ion-icon></button>\n      <button ion-button item-end (click)="DeleteClick(branch.BRANCH_GUID)"><ion-icon name="md-close"></ion-icon></button>\n    </ion-item>\n  </ion-list> -->\n\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Company Name</th>\n          <th class="lgl1">Branch Name</th>\n          <th class="lgl1"  style="width:105px">Head Quarter</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let branch of branchs; let i=index">\n          <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n          <td class="lgl1 getHeader" reshead="Company Name">{{branch.NAME}}</td>\n          <td class="lgl1 getHeader"reshead="Branch Name">{{branch.SITE_NAME}}</td>\n          <td class="lgl1 getHeader" reshead="Action">\n            <ion-item>\n                <ion-toggle class="tog" *ngIf="branch.ISHQ==1" checked=true></ion-toggle>\n                <ion-toggle class="tog" *ngIf="branch.ISHQ==0" checked=false></ion-toggle>\n            </ion-item>\n\n          </td>\n\n          <td class="lgl1 getHeader fColor">\n            <button ion-button item-end (click)="EditClick(branch.TENANT_COMPANY_GUID, branch.TENANT_COMPANY_SITE_GUID, branch.NAME, branch.SITE_NAME)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end (click)="DeleteClick(branch.TENANT_COMPANY_GUID, branch.TENANT_COMPANY_SITE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n\n      </table>\n    </ion-item>\n  </ion-list>\n\n  <!-- add branch form start-->\n  <div class="blackcontainer" *ngIf="AddBranchsClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddBranchsClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">REGISTER NEW BRANCH</div>\n        <button class="btnR" (click)="CloseBranchsClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Branchform">\n\n          <ion-item>\n            <ion-label stacked>{{"Company Name"}}</ion-label>\n            <ion-input type="text" formControlName="COMPANYNAME" [(ngModel)]="COMPANYNAME_ngModel_Add" placeholder="{{\'Please fill in the company name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"Branch Name"}}</ion-label>\n            <ion-input type="text" formControlName="BRANCHNAME" [(ngModel)]="BRANCHNAME_ngModel_Add" placeholder="{{\'Please fill in the branch name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"Is It HQ"}}</ion-label>\n            <ion-toggle formControlName="ISHQ_FLAG" [(ngModel)]="ISHQ_FLAG_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Branchform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add branch form end-->\n\n  <!-- Edit branch form start-->\n  <div class="blackcontainer" *ngIf="EditBranchsClicked">\n  </div>\n  <div class="popup" padding *ngIf="EditBranchsClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">UPDATE BRANCH</div>\n        <button class="btnR" (click)="CloseBranchsClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Branchform">\n          <ion-item>\n            <ion-label stacked>{{"Company Name"}}</ion-label>\n            <ion-input type="text" formControlName="COMPANYNAME" [(ngModel)]="COMPANYNAME_ngModel_Edit" placeholder="{{\'Please fill in the company name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"Branch Name"}}</ion-label>\n            <ion-input type="text" formControlName="BRANCHNAME" [(ngModel)]="BRANCHNAME_ngModel_Edit" placeholder="{{\'Please fill in the branch name\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Branchform.valid" (click)="!Update(companysite_details[0], companysite_details[1])">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- Edit branch form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/branchsetup/branchsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_10__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */]])
    ], BranchsetupPage);
    return BranchsetupPage;
}());

//# sourceMappingURL=branchsetup.js.map

/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CashcardsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_cashcardsetup_model__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_cashcardsetup_service__ = __webpack_require__(597);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the CashcardsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var CashcardsetupPage = /** @class */ (function () {
    function CashcardsetupPage(navCtrl, navParams, fb, http, cashcardsetupservice, alertCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.cashcardsetupservice = cashcardsetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.cashcard_entry = new __WEBPACK_IMPORTED_MODULE_6__models_cashcardsetup_model__["a" /* CashcardSetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_cashcard' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.cashcards = [];
        this.AddCashClicked = false;
        this.EditCashClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------      
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
                //-------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Cashform = fb.group({
                        CASHCARD_SNO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        ACCOUNT_ID: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        ACCOUNT_PASSWORD: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('((?=.*\)(?=.*[a-zA-Z0-9]).{4,20})'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        //MANAGEMENT_URL: [null, Validators.compose([Validators.pattern('^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$'), Validators.required])],          
                        MANAGEMENT_URL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        //For email validation
                        //Validators.pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}')
                        DESCRIPTION: [null],
                    });
                }
                else {
                    this.Cashform = fb.group({
                        CASHCARD_SNO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        ACCOUNT_ID: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        ACCOUNT_PASSWORD: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('((?=.*\)(?=.*[a-zA-Z0-9]).{6,20})'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        //MANAGEMENT_URL: [null, Validators.compose([Validators.pattern('^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$'), Validators.required])],
                        MANAGEMENT_URL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                        DESCRIPTION: [null],
                        TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    CashcardsetupPage.prototype.AddCashClick = function () {
        if (this.Edit_Form == false) {
            this.AddCashClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry, You are in edit mode.');
        }
    };
    CashcardsetupPage.prototype.CloseCashClick = function () {
        if (this.AddCashClicked == true) {
            this.AddCashClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    CashcardsetupPage.prototype.EditClick = function (CASHCARD_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddCashClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        this.cashcardsetupservice
            .get(CASHCARD_GUID)
            .subscribe(function (data) {
            self.cashcard_details = data;
            _this.Tenant_Add_ngModel = self.cashcard_details.TENANT_GUID;
            localStorage.setItem('Prev_TenantGuid', self.cashcard_details.TENANT_GUID);
            _this.ACCOUNT_ID_ngModel_Add = self.cashcard_details.ACCOUNT_ID;
            localStorage.setItem('Prev_ACCOUNT_ID', self.cashcard_details.ACCOUNT_ID);
            _this.CASHCARD_SNO_ngModel_Add = self.cashcard_details.CASHCARD_SNO;
            localStorage.setItem('Prev_CASHCARD_SNO', self.cashcard_details.CASHCARD_SNO);
            _this.ACCOUNT_PASSWORD_ngModel_Add = self.cashcard_details.ACCOUNT_PASSWORD;
            _this.MANAGEMENT_URL_ngModel_Add = self.cashcard_details.MANAGEMENT_URL;
            localStorage.setItem('Prev_MANAGEMENT_URL', self.cashcard_details.MANAGEMENT_URL);
            _this.DESCRIPTION_ngModel_Add = self.cashcard_details.DESCRIPTION;
            _this.loading.dismissAll();
        });
    };
    CashcardsetupPage.prototype.DeleteClick = function (CASHCARD_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.cashcardsetupservice.remove(CASHCARD_GUID)
                            .subscribe(function () {
                            self.cashcards = self.cashcards.filter(function (item) {
                                return item.CASHCARD_GUID != CASHCARD_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    CashcardsetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
        if (localStorage.getItem('Prev_ACCOUNT_ID') == null) {
            localStorage.setItem('Prev_ACCOUNT_ID', null);
        }
        else {
            localStorage.removeItem("Prev_ACCOUNT_ID");
        }
        if (localStorage.getItem('Prev_CASHCARD_SNO') == null) {
            localStorage.setItem('Prev_CASHCARD_SNO', null);
        }
        else {
            localStorage.removeItem("Prev_CASHCARD_SNO");
        }
        if (localStorage.getItem('Prev_MANAGEMENT_URL') == null) {
            localStorage.setItem('Prev_MANAGEMENT_URL', null);
        }
        else {
            localStorage.removeItem("Prev_MANAGEMENT_URL");
        }
    };
    CashcardsetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    CashcardsetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_cashcard_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_cashcard_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.cashcards = data.resource;
            _this.loading.dismissAll();
        });
    };
    CashcardsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CashcardsetupPage');
    };
    CashcardsetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Cashform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entry---------------------------------------
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            if (this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid') || this.ACCOUNT_ID_ngModel_Add.trim().toUpperCase() != localStorage.getItem('Prev_ACCOUNT_ID').toUpperCase() || this.CASHCARD_SNO_ngModel_Add != localStorage.getItem('Prev_CASHCARD_SNO') || this.MANAGEMENT_URL_ngModel_Add != localStorage.getItem('Prev_MANAGEMENT_URL')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************             
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Cashcard is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------        
                this.Update();
            }
        }
    };
    CashcardsetupPage.prototype.SetEntityForAdd = function () {
        if (this.Add_Form == true) {
            this.cashcard_entry.CASHCARD_SNO = this.CASHCARD_SNO_ngModel_Add.trim();
            this.cashcard_entry.ACCOUNT_ID = this.ACCOUNT_ID_ngModel_Add.trim();
            this.cashcard_entry.ACCOUNT_PASSWORD = this.ACCOUNT_PASSWORD_ngModel_Add.trim();
            this.cashcard_entry.MANAGEMENT_URL = this.MANAGEMENT_URL_ngModel_Add;
            this.cashcard_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Add;
            this.cashcard_entry.CASHCARD_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
            this.cashcard_entry.CREATION_TS = new Date().toISOString();
            this.cashcard_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.cashcard_entry.UPDATE_TS = new Date().toISOString();
            this.cashcard_entry.UPDATE_USER_GUID = "";
            this.cashcard_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
            //=====================================================================================
            this.cashcard_entry.CASHCARD_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
            this.cashcard_entry.CREATION_TS = new Date().toISOString();
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.cashcard_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            }
            else {
                this.cashcard_entry.CREATION_USER_GUID = 'sva';
            }
            this.cashcard_entry.UPDATE_TS = new Date().toISOString();
            this.cashcard_entry.UPDATE_USER_GUID = "";
        }
    };
    CashcardsetupPage.prototype.SetEntityForUpdate = function () {
        this.cashcard_entry.CASHCARD_GUID = this.cashcard_details.CASHCARD_GUID;
        this.cashcard_entry.CREATION_TS = this.cashcard_details.CREATION_TS;
        this.cashcard_entry.CREATION_USER_GUID = this.cashcard_details.CREATION_USER_GUID;
        this.cashcard_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.cashcard_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.cashcard_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    CashcardsetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.cashcard_entry.CASHCARD_SNO = this.CASHCARD_SNO_ngModel_Add.trim();
        this.cashcard_entry.ACCOUNT_ID = this.ACCOUNT_ID_ngModel_Add.trim();
        this.cashcard_entry.ACCOUNT_PASSWORD = this.ACCOUNT_PASSWORD_ngModel_Add.trim();
        this.cashcard_entry.MANAGEMENT_URL = this.MANAGEMENT_URL_ngModel_Add;
        this.cashcard_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Add;
        this.cashcard_entry.ACTIVATION_FLAG = 1;
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.cashcard_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.cashcard_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    CashcardsetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_TenantGuid");
        localStorage.removeItem("Prev_ACCOUNT_ID");
        localStorage.removeItem("Prev_CASHCARD_SNO");
        localStorage.removeItem("Prev_MANAGEMENT_URL");
    };
    CashcardsetupPage.prototype.Insert = function () {
        var _this = this;
        this.cashcardsetupservice.save(this.cashcard_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Cashcard Registered successfully.');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CashcardsetupPage.prototype.Update = function () {
        var _this = this;
        this.cashcardsetupservice.update(this.cashcard_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Cashcard updated successfully.');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CashcardsetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_cashcard?filter=TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ' AND ACCOUNT_ID=' + this.ACCOUNT_ID_ngModel_Add.trim() + ' AND CASHCARD_SNO=' + this.CASHCARD_SNO_ngModel_Add.trim() + ' AND MANAGEMENT_URL=' + this.MANAGEMENT_URL_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_cashcard?filter=TENANT_GUID=" + this.Tenant_Add_ngModel + ' AND ACCOUNT_ID=' + this.ACCOUNT_ID_ngModel_Add.trim() + ' AND CASHCARD_SNO=' + this.CASHCARD_SNO_ngModel_Add.trim() + ' AND MANAGEMENT_URL=' + this.MANAGEMENT_URL_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    CashcardsetupPage.prototype.ClearControls = function () {
        this.CASHCARD_SNO_ngModel_Add = "";
        this.ACCOUNT_ID_ngModel_Add = "";
        this.ACCOUNT_PASSWORD_ngModel_Add = "";
        this.MANAGEMENT_URL_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.Tenant_Add_ngModel = "";
    };
    CashcardsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-cashcardsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/cashcardsetup/cashcardsetup.html"*/'<!--\n  Generated template for the CashcardsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar color="primary200">\n        <ion-title>{{ \'CASHCARD_SETUP_HEADING\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    <ion-fab top right edge>\n        <button ion-fab mini (click)="AddCashClick()" [disabled]="button_Add_Disable">\n            <ion-icon name="add"></ion-icon>\n        </button>\n    </ion-fab>\n\n    <ion-list>\n        <ion-item>\n            <table class="Tabler list">\n                <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n                    <!-- <th class="lgl1">CASHCARD NO.</th> -->\n                    <th class="lgl1">{{ \'CARD_NO\' | translate }}</th>\n                    <th class="lgl1">{{ \'ACCOUNT_NO\' | translate }}</th>\n            \n                    <th class="lgl1">{{ \'MANAGEMENT_URL\' | translate }}</th>\n\n                    <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n                    <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n                </tr>\n\n                <tr class="col7" *ngFor="let cashcard of cashcards | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden] = "button_View_Disable">\n                    <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n                    <td class="lgl1 getHeader" reshead="Cashcard No.">{{cashcard.CASHCARD_SNO}}</td>\n                    <td class="lgl1 getHeader" reshead="Account No.">{{cashcard.ACCOUNT_ID}}</td>\n         \n                    <td class="lgl1 getHeader" reshead="Management URL">{{cashcard.MANAGEMENT_URL}}</td>\n     \n                    <td class="lgl1 getHeader" *ngIf="AdminLogin" reshead="Teanant Name">{{cashcard.TENANT_ACCOUNT_NAME}}</td>\n                    <td class="lgl1 getHeader fColor" reshead="Action">\n                        <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(cashcard.CASHCARD_GUID)">\n                            <ion-icon name="md-create"></ion-icon>\n                        </button>\n                        <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(cashcard.CASHCARD_GUID)">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n            </table>\n            <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls>\n        </ion-item>\n    </ion-list>\n\n    <!-- add cash card form start-->\n    <div class="blackcontainer" *ngIf="AddCashClicked">\n    </div>\n    <div class="popup" padding *ngIf="AddCashClicked">\n\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW CASHCARD</div>\n                <div class="icHeaderText" *ngIf="Edit_Form">UPDATE CASHCARD</div>\n                <button class="btnR" (click)="CloseCashClick()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list>\n\n                <form [formGroup]="Cashform">\n                    <ion-item *ngIf="AdminLogin">\n                        <ion-label stacked>{{"TENANT"}}</ion-label>\n                        <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n                            <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{"CASHCARD NO."}}</ion-label>\n                        <ion-input type="text" formControlName="CASHCARD_SNO" [(ngModel)]="CASHCARD_SNO_ngModel_Add" placeholder="{{\'Please fill in the cash card no.\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{"ACCOUNT NO."}}</ion-label>\n                        <ion-input type="text" formControlName="ACCOUNT_ID" [(ngModel)]="ACCOUNT_ID_ngModel_Add" placeholder="{{\'Please fill in the account no.\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{"PASSWORD"}}</ion-label>\n                        <ion-input type="password" formControlName="ACCOUNT_PASSWORD" [(ngModel)]="ACCOUNT_PASSWORD_ngModel_Add" placeholder="{{\'Please fill in yours password\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{"MANAGEMENT URL"}}</ion-label>\n                        <ion-input type="text" formControlName="MANAGEMENT_URL" [(ngModel)]="MANAGEMENT_URL_ngModel_Add" placeholder="{{\'Please fill in the management URL\'}}"></ion-input>\n                    </ion-item>\n\n                    <div class="btn">\n                        <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Cashform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n                    </div>\n                </form>\n\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- add cash card form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/cashcardsetup/cashcardsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_cashcardsetup_service__["a" /* CashcardSetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_cashcardsetup_service__["a" /* CashcardSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], CashcardsetupPage);
    return CashcardsetupPage;
}());

//# sourceMappingURL=cashcardsetup.js.map

/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CashcardSetup_Model; });
var CashcardSetup_Model = /** @class */ (function () {
    function CashcardSetup_Model(CASHCARD_GUID, CASHCARD_SNO, DESCRIPTION, ACTIVATION_FLAG, ACCOUNT_ID, ACCOUNT_PASSWORD, MANAGEMENT_URL, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, TENANT_GUID) {
        if (CASHCARD_GUID === void 0) { CASHCARD_GUID = null; }
        if (CASHCARD_SNO === void 0) { CASHCARD_SNO = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (ACCOUNT_ID === void 0) { ACCOUNT_ID = null; }
        if (ACCOUNT_PASSWORD === void 0) { ACCOUNT_PASSWORD = null; }
        if (MANAGEMENT_URL === void 0) { MANAGEMENT_URL = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        this.CASHCARD_GUID = CASHCARD_GUID;
        this.CASHCARD_SNO = CASHCARD_SNO;
        this.DESCRIPTION = DESCRIPTION;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.ACCOUNT_ID = ACCOUNT_ID;
        this.ACCOUNT_PASSWORD = ACCOUNT_PASSWORD;
        this.MANAGEMENT_URL = MANAGEMENT_URL;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
    }
    CashcardSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new CashcardSetup_Model(json.CASHCARD_GUID, json.CASHCARD_SNO, json.DESCRIPTION, json.ACTIVATION_FLAG, json.ACCOUNT_ID, json.ACCOUNT_PASSWORD, json.MANAGEMENT_URL, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.TENANT_GUID);
    };
    CashcardSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            CASHCARD_GUID: this.CASHCARD_GUID,
            CASHCARD_SNO: this.CASHCARD_SNO,
            DESCRIPTION: this.DESCRIPTION,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            ACCOUNT_ID: this.ACCOUNT_ID,
            ACCOUNT_PASSWORD: this.ACCOUNT_PASSWORD,
            MANAGEMENT_URL: this.MANAGEMENT_URL,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            TENANT_GUID: this.TENANT_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return CashcardSetup_Model;
}());

//# sourceMappingURL=cashcardsetup_model.js.map

/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimtypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_claimtypesetup_model__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_claimtypesetup_service__ = __webpack_require__(598);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the ClaimtypePage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var ClaimtypePage = /** @class */ (function () {
    function ClaimtypePage(api, navCtrl, navParams, fb, http, claimtypesetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.api = api;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.claimtypesetupservice = claimtypesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.claimtype_entry = new __WEBPACK_IMPORTED_MODULE_7__models_claimtypesetup_model__["a" /* ClaimTypeSetup_Model */]();
        //claimtype: ClaimTypeSetup_Model = new ClaimTypeSetup_Model();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.claimtypes = [];
        this.AddClaimtypeClicked = false;
        this.Exist_Record = false;
        //---------------------------------------------------------------------
        this.Add_Form = false;
        this.Edit_Form = false;
        this.HeaderText = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
        else {
            //Get the role for this page------------------------------
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
            }
            //Clear localStorage value--------------------------------      
            this.ClearLocalStorage();
            //Display Grid---------------------------- 
            this.DisplayGrid();
            //----------------------------------------
            this.Claimtypeform = fb.group({
                NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                DESCRIPTION: [null],
            });
        }
    }
    ClaimtypePage.prototype.AddClaimtypeClick = function () {
        if (this.Edit_Form == false) {
            this.AddClaimtypeClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.HeaderText = "REGISTER NEW CLAIM TYPE";
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    ClaimtypePage.prototype.EditClick = function (CLAIM_TYPE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddClaimtypeClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE NEW CLAIM TYPE";
        var self = this;
        this.claimtypesetupservice
            .get(CLAIM_TYPE_GUID)
            .subscribe(function (data) {
            self.claimtype_details = data;
            _this.NAME_ngModel_Add = self.claimtype_details.NAME;
            localStorage.setItem('Prev_cl_Name', self.claimtype_details.NAME);
            _this.DESCRIPTION_ngModel_Add = self.claimtype_details.DESCRIPTION;
            _this.loading.dismissAll();
        });
    };
    ClaimtypePage.prototype.DeleteClick = function (CLAIM_TYPE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.claimtypesetupservice.remove(CLAIM_TYPE_GUID)
                            .subscribe(function () {
                            self.claimtypes = self.claimtypes.filter(function (item) {
                                return item.CLAIM_TYPE_GUID != CLAIM_TYPE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    ClaimtypePage.prototype.CloseClaimtypeClick = function () {
        if (this.AddClaimtypeClicked == true) {
            this.AddClaimtypeClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    ClaimtypePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimtypePage');
    };
    ClaimtypePage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_cl_Name') == null) {
            localStorage.setItem('Prev_cl_Name', null);
        }
        else {
            localStorage.removeItem("Prev_cl_Name");
        }
    };
    ClaimtypePage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimtypes = data.resource;
            _this.loading.dismissAll();
        });
    };
    ClaimtypePage.prototype.Save = function () {
        var _this = this;
        if (this.Claimtypeform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            if (this.NAME_ngModel_Add.trim().toUpperCase() != localStorage.getItem('Prev_cl_Name').toUpperCase()) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Claim Type is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update---------- 
                this.Update();
            }
        }
    };
    ClaimtypePage.prototype.SetEntityForAdd = function () {
        this.claimtype_entry.CLAIM_TYPE_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.claimtype_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
        }
        else {
            this.claimtype_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        this.claimtype_entry.CREATION_TS = this.api.CreateTimestamp();
        this.claimtype_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.claimtype_entry.UPDATE_TS = this.api.CreateTimestamp();
        this.claimtype_entry.UPDATE_USER_GUID = "";
    };
    ClaimtypePage.prototype.SetEntityForUpdate = function () {
        this.claimtype_entry.CLAIM_TYPE_GUID = this.claimtype_details.CLAIM_TYPE_GUID;
        this.claimtype_entry.TENANT_GUID = this.claimtype_details.TENANT_GUID;
        this.claimtype_entry.CREATION_TS = this.claimtype_details.CREATION_TS;
        this.claimtype_entry.CREATION_USER_GUID = this.claimtype_details.CREATION_USER_GUID;
        this.claimtype_entry.UPDATE_TS = this.api.CreateTimestamp();
        this.claimtype_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
    };
    ClaimtypePage.prototype.SetCommonEntityForAddUpdate = function () {
        this.claimtype_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        this.claimtype_entry.DESCRIPTION = this.titlecasePipe.transform(this.DESCRIPTION_ngModel_Add.trim());
    };
    ClaimtypePage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_cl_Name");
    };
    ClaimtypePage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "main_claim_type?filter=NAME=" + this.NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    ClaimtypePage.prototype.Insert = function () {
        var _this = this;
        this.claimtypesetupservice.save(this.claimtype_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Claim Type Registered Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    ClaimtypePage.prototype.Update = function () {
        var _this = this;
        this.claimtypesetupservice.update(this.claimtype_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Claim Type Updated Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    ClaimtypePage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
    };
    ClaimtypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimtype',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimtype/claimtype.html"*/'<!--\n  Generated template for the ClaimtypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'CLAIM_TYPE_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddClaimtypeClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'CLAIM_NAME\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let claimtype of claimtypes | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader"  reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader"  reshead="Name">{{claimtype.NAME}}</td>\n   \n          <td class="lgl1 getHeader fColor"  reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(claimtype.CLAIM_TYPE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(claimtype.CLAIM_TYPE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add claimtype form start-->\n  <div class="blackcontainer" *ngIf="AddClaimtypeClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddClaimtypeClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ HeaderText }}</div>\n        <button class="btnR" (click)="CloseClaimtypeClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Claimtypeform">\n          <ion-item>\n            <ion-label stacked>{{ \'CLAIM_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of claim\'}}"></ion-input>\n          </ion-item>\n\n\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Claimtypeform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n  </div>\n  <!-- add bank form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimtype/claimtype.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_claimtypesetup_service__["a" /* ClaimTypeSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_claimtypesetup_service__["a" /* ClaimTypeSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], ClaimtypePage);
    return ClaimtypePage;
}());

//# sourceMappingURL=claimtype.js.map

/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimTypeSetup_Model; });
var ClaimTypeSetup_Model = /** @class */ (function () {
    function ClaimTypeSetup_Model(CLAIM_TYPE_GUID, TENANT_GUID, NAME, DESCRIPTION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (CLAIM_TYPE_GUID === void 0) { CLAIM_TYPE_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.CLAIM_TYPE_GUID = CLAIM_TYPE_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    ClaimTypeSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new ClaimTypeSetup_Model(json.CLAIM_TYPE_GUID, json.TENANT_GUID, json.NAME, json.DESCRIPTION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    ClaimTypeSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            CLAIM_TYPE_GUID: this.CLAIM_TYPE_GUID,
            TENANT_GUID: this.TENANT_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ClaimTypeSetup_Model;
}());

//# sourceMappingURL=claimtypesetup_model.js.map

/***/ }),
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanysetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_companysetup_model__ = __webpack_require__(420);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_companysetup_service__ = __webpack_require__(601);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';








/**
 * Generated class for the CompanysetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var CompanysetupPage = /** @class */ (function () {
    function CompanysetupPage(navCtrl, navParams, fb, http, companysetupservice, alertCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.companysetupservice = companysetupservice;
        this.alertCtrl = alertCtrl;
        this.company_entry = new __WEBPACK_IMPORTED_MODULE_6__models_companysetup_model__["a" /* CompanySetup_Model */]();
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_company' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.companys = [];
        this.AddCompanyClicked = false;
        this.EditCompanyClicked = false;
        this.Exist_Record = false;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.companys = data.resource;
        });
        this.Companyform = fb.group({
            //NAME: [null, Validators.compose([Validators.pattern('[a-zA-Z0-9][a-zA-Z0-9 ]+'), Validators.required])],
            NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //NAME: ["", Validators.required],
            REGISTRATION_NO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //REGISTRATION_NO: ["", Validators.required],
            ADDRESS: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //ADDRESS: ["", Validators.required],
            FAX: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[0-9]*'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //FAX: ["", Validators.required],
            //PHONE: [null, Validators.compose([Validators.pattern('^(?!(0))[0-9]*'), Validators.required])],
            PHONE: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[0-9]*'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //PHONE: ["", Validators.required],
            EMAIL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('\\b[\\w.%-]+@[-.\\w]+\\.[A-Za-z]{2,4}\\b'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
        });
    }
    //---------------------------------------------------------------------
    CompanysetupPage.prototype.AddCompanyClick = function () {
        this.AddCompanyClicked = true;
        this.ClearControls();
    };
    CompanysetupPage.prototype.EditClick = function (COMPANY_GUID) {
        var _this = this;
        this.ClearControls();
        this.EditCompanyClicked = true;
        var self = this;
        this.companysetupservice
            .get(COMPANY_GUID)
            .subscribe(function (data) {
            self.company_details = data;
            _this.NAME_ngModel_Edit = self.company_details.NAME;
            _this.REGISTRATION_NO_ngModel_Edit = self.company_details.REGISTRATION_NO;
            localStorage.setItem('Prev_co_Reg', self.company_details.REGISTRATION_NO);
            _this.ADDRESS_ngModel_Edit = self.company_details.ADDRESS;
            _this.FAX_ngModel_Edit = self.company_details.FAX;
            localStorage.setItem('Prev_co_Fax', self.company_details.FAX);
            _this.PHONE_ngModel_Edit = self.company_details.PHONE;
            localStorage.setItem('Prev_co_Phone', self.company_details.PHONE);
            _this.EMAIL_ngModel_Edit = self.company_details.EMAIL;
            localStorage.setItem('Prev_co_Email', self.company_details.EMAIL);
        });
    };
    CompanysetupPage.prototype.DeleteClick = function (COMPANY_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.companysetupservice.remove(COMPANY_GUID)
                            .subscribe(function () {
                            self.companys = self.companys.filter(function (item) {
                                return item.COMPANY_GUID != COMPANY_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    CompanysetupPage.prototype.CloseCompanyClick = function () {
        if (this.AddCompanyClicked == true) {
            this.AddCompanyClicked = false;
        }
        if (this.EditCompanyClicked == true) {
            this.EditCompanyClicked = false;
        }
    };
    CompanysetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CompanysetupPage');
    };
    CompanysetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Companyform.valid) {
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_company?filter=(REGISTRATION_NO=" + this.REGISTRATION_NO_ngModel_Add + ")OR(FAX=" + this.FAX_ngModel_Add + ")OR(PHONE=" + this.PHONE_ngModel_Add + ")OR(EMAIL=" + this.EMAIL_ngModel_Add + ")&api_key=" + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.company_entry.NAME = _this.NAME_ngModel_Add;
                        _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Add;
                        _this.company_entry.ADDRESS = _this.ADDRESS_ngModel_Add;
                        _this.company_entry.FAX = _this.FAX_ngModel_Add;
                        _this.company_entry.PHONE = _this.PHONE_ngModel_Add;
                        _this.company_entry.EMAIL = _this.EMAIL_ngModel_Add;
                        _this.company_entry.COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.company_entry.CREATION_TS = new Date().toISOString();
                        _this.company_entry.CREATION_USER_GUID = "1";
                        _this.company_entry.UPDATE_TS = new Date().toISOString();
                        _this.company_entry.UPDATE_USER_GUID = "";
                        _this.companysetupservice.save(_this.company_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Company Type Registered successfully');
                                //location.reload();
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("The Company is already Exist.");
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    CompanysetupPage.prototype.getCompanyList = function () {
        var self = this;
        var params = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["f" /* URLSearchParams */]();
        self.companysetupservice.get_company(params)
            .subscribe(function (companys) {
            self.companys = companys;
        });
    };
    CompanysetupPage.prototype.Update = function (COMPANY_GUID) {
        var _this = this;
        if (this.Companyform.valid) {
            if (this.company_entry.NAME == null) {
                this.company_entry.NAME = this.NAME_ngModel_Edit.trim();
            }
            if (this.company_entry.REGISTRATION_NO == null) {
                this.company_entry.REGISTRATION_NO = this.REGISTRATION_NO_ngModel_Edit.trim();
            }
            if (this.company_entry.ADDRESS == null) {
                this.company_entry.ADDRESS = this.ADDRESS_ngModel_Edit.trim();
            }
            if (this.company_entry.FAX == null) {
                this.company_entry.FAX = this.FAX_ngModel_Edit.trim();
            }
            if (this.company_entry.PHONE == null) {
                this.company_entry.PHONE = this.PHONE_ngModel_Edit.trim();
            }
            if (this.company_entry.EMAIL == null) {
                this.company_entry.EMAIL = this.EMAIL_ngModel_Edit.trim();
            }
            this.company_entry.CREATION_TS = this.company_details.CREATION_TS;
            this.company_entry.CREATION_USER_GUID = this.company_details.CREATION_USER_GUID;
            this.company_entry.UPDATE_TS = this.company_details.UPDATE_TS;
            this.company_entry.COMPANY_GUID = COMPANY_GUID;
            this.company_entry.UPDATE_TS = new Date().toISOString();
            this.company_entry.UPDATE_USER_GUID = '1';
            var url = void 0;
            if (this.REGISTRATION_NO_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Reg') || this.FAX_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Fax') || this.PHONE_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Phone') || this.EMAIL_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Email')) {
                url = this.baseResource_Url + "main_company?filter=(REGISTRATION_NO=" + this.REGISTRATION_NO_ngModel_Edit.trim() + ")OR(FAX=" + this.FAX_ngModel_Edit.trim() + ")OR(PHONE=" + this.PHONE_ngModel_Edit.trim() + ")OR(EMAIL=" + this.EMAIL_ngModel_Edit.trim() + ")&api_key=" + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                //url = this.baseResource_Url + "main_company?filter=(NAME=" + this.NAME_ngModel_Edit + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
                console.log(url);
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res1 = data["resource"];
                    console.log(' Current Registration No : ' + _this.REGISTRATION_NO_ngModel_Edit + ', Previous Reg : ' + localStorage.getItem('Prev_co_Reg'));
                    if (res1.length == 0) {
                        console.log("No records Found");
                        _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Edit.trim();
                        _this.company_entry.FAX = _this.FAX_ngModel_Edit.trim();
                        _this.company_entry.PHONE = _this.PHONE_ngModel_Edit.trim();
                        _this.company_entry.EMAIL = _this.EMAIL_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.companysetupservice.update(_this.company_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('hi');
                                alert('company updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    //start
                    else {
                        if (_this.REGISTRATION_NO_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Reg') && _this.FAX_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Fax') && _this.PHONE_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Phone') && _this.EMAIL_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Email')) {
                            for (var _i = 0, res1_1 = res1; _i < res1_1.length; _i++) {
                                var _a = res1_1[_i];
                                //alert(res1[j++]["ACCOUNT_ID"]);
                                // if(res1[j++]["ACCOUNT_ID"].trim()!=this.ACCOUNT_ID_ngModel_Edit.trim()){
                                //   alert('update required');
                                // }
                                // else{
                                //   alert('exist record');
                                // }
                            }
                            //alert('Record Value: ' + res1[0]["ACCOUNT_ID"].trim() + ', Entry Value:' + this.ACCOUNT_ID_ngModel_Edit.trim());   
                            if (res1[0]["REGISTRATION_NO"].trim() != _this.REGISTRATION_NO_ngModel_Edit.trim()) {
                                _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Edit.trim();
                                _this.company_entry.FAX = _this.FAX_ngModel_Edit.trim();
                                _this.company_entry.PHONE = _this.PHONE_ngModel_Edit.trim();
                                _this.company_entry.EMAIL = _this.EMAIL_ngModel_Edit.trim();
                                //**************Update service if it is new details*************************
                                _this.companysetupservice.update(_this.company_entry)
                                    .subscribe(function (response) {
                                    if (response.status == 200) {
                                        alert('Company updated successfully');
                                        //location.reload();
                                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                                    }
                                });
                                //**************************************************************************
                            }
                            else {
                                alert("The Company is already Exist.");
                            }
                        }
                        else if (_this.FAX_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Fax') && _this.PHONE_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Phone') && _this.EMAIL_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Email') && _this.REGISTRATION_NO_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Reg')) {
                            // alert('Ac id same, cash card change');
                            //alert('Record Value: ' + res1[0]["CASHCARD_SNO"].trim() + ', Entry Value:' + this.CASHCARD_SNO_ngModel_Edit.trim());  
                            if (res1[0]["FAX"].trim() != _this.FAX_ngModel_Edit.trim()) {
                                _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Edit.trim();
                                _this.company_entry.FAX = _this.FAX_ngModel_Edit.trim();
                                _this.company_entry.PHONE = _this.PHONE_ngModel_Edit.trim();
                                _this.company_entry.EMAIL = _this.EMAIL_ngModel_Edit.trim();
                                //**************Update service if it is new details*************************
                                _this.companysetupservice.update(_this.company_entry)
                                    .subscribe(function (response) {
                                    if (response.status == 200) {
                                        alert('Company updated successfully');
                                        //location.reload();
                                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                                    }
                                });
                                //**************************************************************************
                            }
                            else {
                                alert("The Company is already Exist.");
                            }
                        }
                        else if (_this.PHONE_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Phone') && _this.FAX_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Fax') && _this.EMAIL_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Email') && _this.REGISTRATION_NO_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Reg')) {
                            // alert('Ac id same, cash card change');
                            //alert('Record Value: ' + res1[0]["CASHCARD_SNO"].trim() + ', Entry Value:' + this.CASHCARD_SNO_ngModel_Edit.trim());  
                            if (res1[0]["PHONE"].trim() != _this.PHONE_ngModel_Edit.trim()) {
                                _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Edit.trim();
                                _this.company_entry.FAX = _this.FAX_ngModel_Edit.trim();
                                _this.company_entry.PHONE = _this.PHONE_ngModel_Edit.trim();
                                _this.company_entry.EMAIL = _this.EMAIL_ngModel_Edit.trim();
                                //**************Update service if it is new details*************************
                                _this.companysetupservice.update(_this.company_entry)
                                    .subscribe(function (response) {
                                    if (response.status == 200) {
                                        alert('Company updated successfully');
                                        //location.reload();
                                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                                    }
                                });
                                //**************************************************************************
                            }
                            else {
                                alert("The Company is already Exist.");
                            }
                        }
                        else if (_this.EMAIL_ngModel_Edit.trim() != localStorage.getItem('Prev_co_Email') && _this.FAX_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Fax') && _this.PHONE_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Phone') && _this.REGISTRATION_NO_ngModel_Edit.trim() == localStorage.getItem('Prev_co_Reg')) {
                            // alert('Ac id same, cash card change');
                            //alert('Record Value: ' + res1[0]["CASHCARD_SNO"].trim() + ', Entry Value:' + this.CASHCARD_SNO_ngModel_Edit.trim());  
                            if (res1[0]["EMAIL"].trim() != _this.EMAIL_ngModel_Edit.trim()) {
                                _this.company_entry.REGISTRATION_NO = _this.REGISTRATION_NO_ngModel_Edit.trim();
                                _this.company_entry.FAX = _this.FAX_ngModel_Edit.trim();
                                _this.company_entry.PHONE = _this.PHONE_ngModel_Edit.trim();
                                _this.company_entry.EMAIL = _this.EMAIL_ngModel_Edit.trim();
                                //**************Update service if it is new details*************************
                                _this.companysetupservice.update(_this.company_entry)
                                    .subscribe(function (response) {
                                    if (response.status == 200) {
                                        alert('Company updated successfully');
                                        //location.reload();
                                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                                    }
                                });
                                //**************************************************************************
                            }
                            else {
                                alert("The Company is already Exist.");
                            }
                        }
                        //end
                        else {
                            console.log("Records Found");
                            alert('hello');
                            alert("The company is already Exist. ");
                        }
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                // if (this.company_entry.NAME == null) { this.company_entry.NAME = localStorage.getItem('Prev_Name'); }
                this.company_entry.REGISTRATION_NO = localStorage.getItem('Prev_co_Reg');
                this.company_entry.FAX = localStorage.getItem('Prev_co_Fax');
                this.company_entry.PHONE = localStorage.getItem('Prev_co_Phone');
                this.company_entry.EMAIL = localStorage.getItem('Prev_co_Email');
                //**************Update service if it is old details*************************
                this.companysetupservice.update(this.company_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Company Type updated successfully');
                        //location.reload();
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    CompanysetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.REGISTRATION_NO_ngModel_Add = "";
        this.ADDRESS_ngModel_Add = "";
        this.FAX_ngModel_Add = "";
        this.PHONE_ngModel_Add = "";
        this.EMAIL_ngModel_Add = "";
        this.NAME_ngModel_Edit = "";
        this.REGISTRATION_NO_ngModel_Edit = "";
        this.ADDRESS_ngModel_Edit = "";
        this.FAX_ngModel_Edit = "";
        this.PHONE_ngModel_Edit = "";
        this.EMAIL_ngModel_Edit = "";
    };
    CompanysetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-companysetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/companysetup/companysetup.html"*/'<!--\n  Generated template for the CompanysetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "COMPANY_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddCompanyClick()"><ion-icon name="add"></ion-icon></button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">NO.</th>\n          <th class="lgl1">NAME</th>\n          <!-- <th class="lgl1">REG NO.</th> -->\n          <th class="lgl1">ADDRESS</th>\n          <th class="lgl1">FAX</th>\n          <th class="lgl1">PHONE</th>\n          <th class="lgl1">EMAIL</th>\n          <th class="lgl1 tblBrRight" style="width:90px">ACTION</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let company of companys; let i=index">\n          <td class="lgl1">{{i+1}}</td>\n          <td class="lgl1">{{company.NAME}}</td>\n          <!-- <td class="lgl1">{{company.REGISTRATION_NO}}</td> -->\n          <td class="lgl1">{{company.ADDRESS}}</td>\n          <td class="lgl1">{{company.FAX}}</td>\n          <td class="lgl1">{{company.PHONE}}</td>\n          <td class="lgl1">{{company.EMAIL}}</td>\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(company.COMPANY_GUID)"><ion-icon name="md-create"></ion-icon></button>\n            <button ion-button item-end (click)="DeleteClick(company.COMPANY_GUID)"><ion-icon name="md-close"></ion-icon></button>\n          </td>\n        </tr>\n\n\n      </table>\n    </ion-item>\n  </ion-list>\n\n\n\n\n\n  <!-- add company form start-->\n  <div class="blackcontainer" *ngIf="AddCompanyClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddCompanyClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_NEW_COMPANY" | translate }}</div>\n        <button class="btnR" (click)="CloseCompanyClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list class="scroll">\n        <form [formGroup]="Companyform">\n          <ion-item>\n            <ion-label stacked>{{ "SETUP_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"REG NO." | translate}}</ion-label>\n            <ion-input type="text" formControlName="REGISTRATION_NO" [(ngModel)]="REGISTRATION_NO_ngModel_Add" placeholder="{{\'Please fill in the registration no. of the company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_ADDRESS" | translate}}</ion-label>\n            <ion-input type="text" formControlName="ADDRESS" [(ngModel)]="ADDRESS_ngModel_Add" placeholder="{{\'Please fill in the address of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_FAX" | translate}}</ion-label>\n            <ion-input type="text" formControlName="FAX" [(ngModel)]="FAX_ngModel_Add" placeholder="{{\'Please fill in the fax no. of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_PHONE" | translate}}</ion-label>\n            <ion-input type="text" formControlName="PHONE" [(ngModel)]="PHONE_ngModel_Add" placeholder="{{\'Please fill in the phone no. of the company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_EMAIL" | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMAIL" [(ngModel)]="EMAIL_ngModel_Add" placeholder="{{\'Please fill in the email of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Companyform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button></div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add company form end-->\n\n\n  <!-- edit company form start-->\n  <div class="blackcontainer" *ngIf="EditCompanyClicked">\n  </div>\n  <div class="popup" padding *ngIf="EditCompanyClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "UPDATE_COMPANY" | translate }}</div>\n        <button class="btnR" (click)="CloseCompanyClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list class="scroll">\n        <form [formGroup]="Companyform">\n          <ion-item>\n            <ion-label stacked>{{ "SETUP_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Edit" placeholder="{{\'Please fill in the name of company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"REG NO." | translate}}</ion-label>\n            <ion-input type="text" formControlName="REGISTRATION_NO" [(ngModel)]="REGISTRATION_NO_ngModel_Edit" placeholder="{{\'Please fill in the registration no. of the company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_ADDRESS" | translate}}</ion-label>\n            <ion-input type="text" formControlName="ADDRESS" [(ngModel)]="ADDRESS_ngModel_Edit" placeholder="{{\'Please fill in the address of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_FAX" | translate}}</ion-label>\n            <ion-input type="text" formControlName="FAX" [(ngModel)]="FAX_ngModel_Edit" placeholder="{{\'Please fill in the fax no. of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_PHONE" | translate}}</ion-label>\n            <ion-input type="text" formControlName="PHONE" [(ngModel)]="PHONE_ngModel_Edit" placeholder="{{\'Please fill in the phone no. of the company\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"SETUP_EMAIL" | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMAIL" [(ngModel)]="EMAIL_ngModel_Edit" placeholder="{{\'Please fill in the email of the company\'}}"></ion-input>\n          </ion-item>\n\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="Update(company_details.COMPANY_GUID)">{{"SUBMIT" | translate}}</button></div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- edit company form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/companysetup/companysetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_companysetup_service__["a" /* CompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_companysetup_service__["a" /* CompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], CompanysetupPage);
    return CompanysetupPage;
}());

// if (this.Companyform.valid) {
//         let headers = new Headers();
//         headers.append('Content-Type', 'application/json');
//         let options = new RequestOptions({ headers: headers });
//         let url: string;
//         url = "http://api.zen.com.my/api/v2/zcs/_table/main_company?filter=(NAME=" + this.company_entry.NAME + ")AND(EMAIL=" + this.company_entry.EMAIL + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
//         this.http.get(url, options)
//           .map(res => res.json())
//           .subscribe(
//           data => {
//             let res = data["resource"];
//             if (res.length == 0) {
//               console.log("No records Found");
//               if (this.Exist_Record == false) {
// if (this.Companyform.valid) {
//}
// else {
//   console.log("Records Found");
//   alert("The Company is already Added.")
// }
// },
// err => {
//   this.Exist_Record = false;
//   console.log("ERROR!: ", err);
// }
// );
// }
// }
// }
//# sourceMappingURL=companysetup.js.map

/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanySetup_Model; });
var CompanySetup_Model = /** @class */ (function () {
    function CompanySetup_Model(COMPANY_GUID, NAME, REGISTRATION_NO, ADDRESS, FAX, PHONE, EMAIL, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (COMPANY_GUID === void 0) { COMPANY_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (REGISTRATION_NO === void 0) { REGISTRATION_NO = null; }
        if (ADDRESS === void 0) { ADDRESS = null; }
        if (FAX === void 0) { FAX = null; }
        if (PHONE === void 0) { PHONE = null; }
        if (EMAIL === void 0) { EMAIL = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.COMPANY_GUID = COMPANY_GUID;
        this.NAME = NAME;
        this.REGISTRATION_NO = REGISTRATION_NO;
        this.ADDRESS = ADDRESS;
        this.FAX = FAX;
        this.PHONE = PHONE;
        this.EMAIL = EMAIL;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    CompanySetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new CompanySetup_Model(json.COMPANY_GUID, json.NAME, json.REGISTRATION_NO, json.ADDRESS, json.FAX, json.PHONE, json.EMAIL, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    CompanySetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            COMPANY_GUID: this.COMPANY_GUID,
            NAME: this.NAME,
            REGISTRATION_NO: this.REGISTRATION_NO,
            ADDRESS: this.ADDRESS,
            FAX: this.FAX,
            PHONE: this.PHONE,
            EMAIL: this.EMAIL,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return CompanySetup_Model;
}());

//# sourceMappingURL=companysetup_model.js.map

/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DesignationsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_designationsetup_model__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_designationsetup_service__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the DesignationsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var DesignationsetupPage = /** @class */ (function () {
    function DesignationsetupPage(navCtrl, navParams, fb, http, designationsetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.designationsetupservice = designationsetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.designation_entry = new __WEBPACK_IMPORTED_MODULE_7__models_designationsetup_model__["a" /* DesignationSetup_Model */]();
        this.page = 1;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.designations = [];
        this.AddDesignationClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.HeaderText = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
                //-------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Designationform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        DESCRIPTION: [null],
                    });
                }
                else {
                    this.Designationform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        DESCRIPTION: [null],
                        TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    DesignationsetupPage.prototype.AddDesignationClick = function () {
        if (this.Edit_Form == false) {
            this.AddDesignationClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
            this.HeaderText = "REGISTER NEW DESIGNATION";
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    DesignationsetupPage.prototype.EditClick = function (DESIGNATION_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddDesignationClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE DESIGNATION";
        var self = this;
        this.designationsetupservice
            .get(DESIGNATION_GUID)
            .subscribe(function (data) {
            self.designation_details = data;
            _this.Tenant_Add_ngModel = self.designation_details.TENANT_GUID;
            _this.NAME_ngModel_Add = self.designation_details.NAME;
            localStorage.setItem('Prev_Name', self.designation_details.NAME);
            localStorage.setItem('Prev_TenantGuid', self.designation_details.TENANT_GUID);
            _this.DESCRIPTION_ngModel_Add = self.designation_details.DESCRIPTION;
            _this.loading.dismissAll();
        });
    };
    DesignationsetupPage.prototype.DeleteClick = function (DESIGNATION_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.designationsetupservice.remove(DESIGNATION_GUID)
                            .subscribe(function () {
                            self.designations = self.designations.filter(function (item) {
                                return item.DESIGNATION_GUID != DESIGNATION_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    DesignationsetupPage.prototype.CloseDesignationClick = function () {
        if (this.AddDesignationClicked == true) {
            this.AddDesignationClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    DesignationsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DesignationsetupPage');
    };
    DesignationsetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Name') == null) {
            localStorage.setItem('Prev_Name', null);
        }
        else {
            localStorage.removeItem("Prev_Name");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
    };
    DesignationsetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    DesignationsetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.designations = this.stores;
            return;
        }
        this.designations = this.filter({
            NAME: val
        });
    };
    DesignationsetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    DesignationsetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_designation_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_designation_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.designations = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    DesignationsetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Designationform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update------------------------------------------------- 
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_Name = "";
            if (localStorage.getItem('Prev_Name') != null) {
                strPrev_Name = localStorage.getItem('Prev_Name').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_Name || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Designation is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------
                this.Update();
            }
        }
    };
    DesignationsetupPage.prototype.SetEntityForAdd = function () {
        this.designation_entry.DESIGNATION_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.designation_entry.CREATION_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.designation_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.designation_entry.CREATION_USER_GUID = 'sva';
        }
        this.designation_entry.UPDATE_TS = new Date().toISOString();
        this.designation_entry.UPDATE_USER_GUID = "";
    };
    DesignationsetupPage.prototype.SetEntityForUpdate = function () {
        this.designation_entry.DESIGNATION_GUID = this.designation_details.DESIGNATION_GUID;
        this.designation_entry.CREATION_TS = this.designation_details.CREATION_TS;
        this.designation_entry.CREATION_USER_GUID = this.designation_details.CREATION_USER_GUID;
        this.designation_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.designation_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.designation_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    DesignationsetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.designation_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        this.designation_entry.DESCRIPTION = this.titlecasePipe.transform(this.DESCRIPTION_ngModel_Add.trim());
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.designation_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.designation_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    DesignationsetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Name");
        localStorage.removeItem("Prev_TenantGuid");
    };
    DesignationsetupPage.prototype.Insert = function () {
        var _this = this;
        this.designationsetupservice.save(this.designation_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Designation Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DesignationsetupPage.prototype.Update = function () {
        var _this = this;
        this.designationsetupservice.update(this.designation_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Designation updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DesignationsetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_designation?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_designation?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    DesignationsetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.Tenant_Add_ngModel = "";
    };
    DesignationsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-designationsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/designationsetup/designationsetup.html"*/'<!--\n  Generated template for the DesignationsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n\n  <ion-navbar  color="primary200">\n    <ion-title>{{ \'DESIGNATION_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>  \n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddDesignationClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n  \n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'DESIGNATION_NAME\' | translate }}</th>\n <!-- <th class="lgl1" style="display: none;">{{ \'DESIGNATION_DESCRIPTION\' | translate }}</th>\n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th> -->\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let designation of designations | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Title">{{designation.NAME}}</td>\n          <!-- <td class="lgl1" style="display: none;">{{designation.DESCRIPTION}}</td>\n          <td class="lgl1" *ngIf="AdminLogin">{{designation.TENANT_ACCOUNT_NAME}}</td> -->\n          <td class="lgl1 getHeader fColor"  reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(designation.DESIGNATION_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(designation.DESIGNATION_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add designation form start-->\n  <div class="blackcontainer" *ngIf="AddDesignationClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddDesignationClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ HeaderText }}</div>\n\n        <button class="btnR" (click)="CloseDesignationClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Designationform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'DESIGNATION_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the title of the designation\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item style="display: none;">\n            <ion-label stacked>{{ \'DESIGNATION_DESCRIPTION\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Designationform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add designation form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/designationsetup/designationsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_designationsetup_service__["a" /* DesignationSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_designationsetup_service__["a" /* DesignationSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], DesignationsetupPage);
    return DesignationsetupPage;
}());

//# sourceMappingURL=designationsetup.js.map

/***/ }),
/* 422 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DesignationSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_designationsetup_model__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var DesignationSetup_Service = /** @class */ (function () {
    function DesignationSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_designation';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    DesignationSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    DesignationSetup_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    DesignationSetup_Service.prototype.save = function (designation_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, designation_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DesignationSetup_Service.prototype.update = function (designation_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, designation_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DesignationSetup_Service.prototype.get_bank = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            //  	banks.push(BankSetup_Model.fromJson(bank));
            //  });
            return banks;
        }).catch(this.handleError);
    };
    ;
    DesignationSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.DESIGNATION_GUID;
        });
    };
    DesignationSetup_Service.prototype.remove_multiple = function (id, tablename) {
        var url_multiple = this.baseResource_Url + tablename + "?filter=(TENANT_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    DesignationSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var designation = __WEBPACK_IMPORTED_MODULE_3__models_designationsetup_model__["a" /* DesignationSetup_Model */].fromJson(result); //alert(JSON.stringify(designation)); 
            return designation;
        }).catch(this.handleError);
    };
    ;
    DesignationSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], DesignationSetup_Service);
    return DesignationSetup_Service;
}());

//# sourceMappingURL=designationsetup_service.js.map

/***/ }),
/* 423 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepartmentsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_departmentsetup_model__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_departmentsetup_service__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the DepartmentsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var DepartmentsetupPage = /** @class */ (function () {
    function DepartmentsetupPage(navCtrl, navParams, fb, http, departmentsetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.departmentsetupservice = departmentsetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.department_entry = new __WEBPACK_IMPORTED_MODULE_7__models_departmentsetup_model__["a" /* DepartmentSetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = "";
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.departments = [];
        this.AddDepartmentClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
            //-------------------------------------------------------
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.Departmentform = fb.group({
                    NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    DESCRIPTION: [null],
                });
            }
            else {
                this.Departmentform = fb.group({
                    NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    DESCRIPTION: [null],
                    TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                });
            }
        }
    }
    DepartmentsetupPage.prototype.AddDepartmentClick = function () {
        if (this.Edit_Form == false) {
            this.AddDepartmentClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    DepartmentsetupPage.prototype.EditClick = function (DEPARTMENT_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddDepartmentClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        this.departmentsetupservice
            .get(DEPARTMENT_GUID)
            .subscribe(function (data) {
            self.department_details = data;
            _this.Tenant_Add_ngModel = self.department_details.TENANT_GUID;
            _this.NAME_ngModel_Add = self.department_details.NAME;
            localStorage.setItem('Prev_Name', self.department_details.NAME);
            localStorage.setItem('Prev_TenantGuid', self.department_details.TENANT_GUID);
            _this.DESCRIPTION_ngModel_Add = self.department_details.DESCRIPTION;
            _this.loading.dismissAll();
        });
    };
    DepartmentsetupPage.prototype.DeleteClick = function (DEPARTMENT_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.departmentsetupservice.remove(DEPARTMENT_GUID)
                            .subscribe(function () {
                            self.departments = self.departments.filter(function (item) {
                                return item.DEPARTMENT_GUID != DEPARTMENT_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    DepartmentsetupPage.prototype.CloseDepartmentClick = function () {
        if (this.AddDepartmentClicked == true) {
            this.AddDepartmentClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    DepartmentsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DepartmentsetupPage');
    };
    DepartmentsetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Name') == null) {
            localStorage.setItem('Prev_Name', null);
        }
        else {
            localStorage.removeItem("Prev_Name");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
    };
    DepartmentsetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    DepartmentsetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.departments = this.stores;
            return;
        }
        this.departments = this.filter({
            NAME: val
        });
    };
    DepartmentsetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    DepartmentsetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_department_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_department_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.departments = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    DepartmentsetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Departmentform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update------------------------------------------------- 
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_Name = "";
            if (localStorage.getItem('Prev_Name') != null) {
                strPrev_Name = localStorage.getItem('Prev_Name').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_Name || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Department is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------
                this.Update();
            }
        }
    };
    DepartmentsetupPage.prototype.SetEntityForAdd = function () {
        this.department_entry.DEPARTMENT_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.department_entry.CREATION_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.department_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.department_entry.CREATION_USER_GUID = 'sva';
        }
        this.department_entry.UPDATE_TS = new Date().toISOString();
        this.department_entry.UPDATE_USER_GUID = "";
    };
    DepartmentsetupPage.prototype.SetEntityForUpdate = function () {
        this.department_entry.DEPARTMENT_GUID = this.department_details.DEPARTMENT_GUID;
        this.department_entry.CREATION_TS = this.department_details.CREATION_TS;
        this.department_entry.CREATION_USER_GUID = this.department_details.CREATION_USER_GUID;
        this.department_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.department_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.department_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    DepartmentsetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.department_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        this.department_entry.DESCRIPTION = this.titlecasePipe.transform(this.DESCRIPTION_ngModel_Add.trim());
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.department_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.department_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    DepartmentsetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Name");
        localStorage.removeItem("Prev_TenantGuid");
    };
    DepartmentsetupPage.prototype.Insert = function () {
        var _this = this;
        this.departmentsetupservice.save(this.department_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Department Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DepartmentsetupPage.prototype.Update = function () {
        var _this = this;
        this.departmentsetupservice.update(this.department_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Department updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DepartmentsetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_department?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_department?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    DepartmentsetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.Tenant_Add_ngModel = "";
    };
    DepartmentsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-departmentsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/departmentsetup/departmentsetup.html"*/'<!--\n  Generated template for the DepartmentsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar  color="primary200">\n    <ion-title>{{ \'DEPARTMENT_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>  \n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddDepartmentClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n  \n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'DEPARTMENT_CLAIM_TITLE\' | translate }}</th>\n    \n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let department of departments | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden] = "button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader"reshead="Department Name">{{department.NAME}}</td>\n          <td class="lgl1 getHeader" *ngIf="AdminLogin" reshead="Tenant Name">{{department.TENANT_ACCOUNT_NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(department.DEPARTMENT_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(department.DEPARTMENT_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add department form start-->\n  <div class="blackcontainer" *ngIf="AddDepartmentClicked"></div>\n  <div class="popup4" padding *ngIf="AddDepartmentClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW DEPARTMENT</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">UPDATE DEPARTMENT</div>\n\n        <button class="btnR" (click)="CloseDepartmentClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Departmentform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'DEPARTMENT_CLAIM_TITLE\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the tittle of department\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item style="display: none;">\n            <ion-label stacked>{{ \'DEPARTMENT_CLAIM_DESCRIPTION\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Departmentform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add department form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/departmentsetup/departmentsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_departmentsetup_service__["a" /* DepartmentSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_departmentsetup_service__["a" /* DepartmentSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], DepartmentsetupPage);
    return DepartmentsetupPage;
}());

//# sourceMappingURL=departmentsetup.js.map

/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepartmentSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_departmentsetup_model__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var DepartmentSetup_Service = /** @class */ (function () {
    function DepartmentSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    DepartmentSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    DepartmentSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    DepartmentSetup_Service.prototype.save = function (department_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(department_main));
        return this.httpService.http.post(this.baseResourceUrl, department_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DepartmentSetup_Service.prototype.update = function (department_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, department_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DepartmentSetup_Service.prototype.get_department = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    DepartmentSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.DEPARTMENT_GUID;
        });
    };
    DepartmentSetup_Service.prototype.remove_multiple = function (id, tablename) {
        var url_multiple = this.baseResource_Url + tablename + "?filter=(TENANT_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    DepartmentSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var claimtype = __WEBPACK_IMPORTED_MODULE_3__models_departmentsetup_model__["a" /* DepartmentSetup_Model */].fromJson(result);
            return claimtype;
        }).catch(this.handleError);
    };
    ;
    DepartmentSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], DepartmentSetup_Service);
    return DepartmentSetup_Service;
}());

//# sourceMappingURL=departmentsetup_service.js.map

/***/ }),
/* 425 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MileagesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_mileagesetup_model__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_mileagesetup_service__ = __webpack_require__(602);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { FormBuilder, FormGroup } from '@angular/forms';









/**
 * Generated class for the MileagesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var MileagesetupPage = /** @class */ (function () {
    function MileagesetupPage(navCtrl, navParams, fb, http, mileagesetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.mileagesetupservice = mileagesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.mileage_entry = new __WEBPACK_IMPORTED_MODULE_7__models_mileagesetup_model__["a" /* MileageSetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_mileage' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.mileages = [];
        //public mileages: any;
        this.AddMileageClicked = false;
        this.EditMileageClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
            //-------------------------------------------------------
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.Mileageform = fb.group({
                    CATEGORY: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    RATE_PER_UNIT: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    RATE_DATE: ["", __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    ACTIVATION_FLAG: [""],
                });
            }
            else {
                this.Mileageform = fb.group({
                    CATEGORY: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    RATE_PER_UNIT: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    RATE_DATE: ["", __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    ACTIVATION_FLAG: [""],
                    TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                });
            }
        }
    }
    MileagesetupPage.prototype.AddMileageClick = function () {
        if (this.Edit_Form == false) {
            this.AddMileageClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    MileagesetupPage.prototype.EditClick = function (MILEAGE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddMileageClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        this.mileagesetupservice
            .get(MILEAGE_GUID)
            .subscribe(function (data) {
            self.mileage_details = data;
            _this.Tenant_Add_ngModel = self.mileage_details.TENANT_GUID;
            _this.CATEGORY_ngModel_Add = self.mileage_details.CATEGORY;
            localStorage.setItem('Prev_Category', self.mileage_details.CATEGORY);
            localStorage.setItem('Prev_TenantGuid', self.mileage_details.TENANT_GUID);
            localStorage.setItem('Prev_RateDate', new Date(self.mileage_details.RATE_DATE).toISOString());
            _this.RATE_PER_UNIT_ngModel_Add = self.mileage_details.RATE_PER_UNIT.toFixed(2);
            _this.RATE_DATE_ngModel_Add = new Date(self.mileage_details.RATE_DATE).toISOString();
            if (self.mileage_details.ACTIVATION_FLAG == "1") {
                _this.ACTIVATION_FLAG_ngModel_Add = true;
            }
            else {
                _this.ACTIVATION_FLAG_ngModel_Add = false;
            }
            _this.loading.dismissAll();
        });
    };
    MileagesetupPage.prototype.DeleteClick = function (MILEAGE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.mileagesetupservice.remove(MILEAGE_GUID)
                            .subscribe(function () {
                            self.mileages = self.mileages.filter(function (item) {
                                return item.MILEAGE_GUID != MILEAGE_GUID;
                            });
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    MileagesetupPage.prototype.CloseMileageClick = function () {
        if (this.AddMileageClicked == true) {
            this.AddMileageClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    MileagesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MileagesetupPage');
    };
    MileagesetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Category') == null) {
            localStorage.setItem('Prev_Category', null);
        }
        else {
            localStorage.removeItem("Prev_Category");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
        if (localStorage.getItem('Prev_RateDate') == null) {
            localStorage.setItem('Prev_RateDate', null);
        }
        else {
            localStorage.removeItem("Prev_RateDate");
        }
    };
    MileagesetupPage.prototype.FillTenant = function () {
        var _this = this;
        //fill all the tenant details----------------------------
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    MileagesetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        //Display Grid---------------------------------------------
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_mileage_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_mileage_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.mileages = data.resource;
            _this.mileages.forEach(function (element) {
                element.RATE_DATE = '' + new Date(element.RATE_DATE.replace(/-/g, "/"));
            });
            _this.loading.dismissAll();
        });
    };
    MileagesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Mileageform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update------------------------------------------------- 
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //---------------------------------------------------
            var strPrev_Category = "";
            if (localStorage.getItem('Prev_Category') != null) {
                strPrev_Category = localStorage.getItem('Prev_Category').toUpperCase();
            }
            if (this.CATEGORY_ngModel_Add.trim().toUpperCase() != strPrev_Category || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid') || this.RATE_DATE_ngModel_Add != localStorage.getItem('Prev_RateDate')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Mileage is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------
                this.Update();
            }
        }
    };
    MileagesetupPage.prototype.SetEntityForAdd = function () {
        this.mileage_entry.MILEAGE_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.mileage_entry.CATEGORY = this.titlecasePipe.transform(this.CATEGORY_ngModel_Add.trim());
        this.mileage_entry.RATE_PER_UNIT = this.RATE_PER_UNIT_ngModel_Add.trim();
        this.mileage_entry.RATE_DATE = this.RATE_DATE_ngModel_Add.trim();
        this.mileage_entry.ACTIVATION_FLAG = this.ACTIVATION_FLAG_ngModel_Add;
        this.mileage_entry.CREATION_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.mileage_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.mileage_entry.CREATION_USER_GUID = 'sva';
        }
        this.mileage_entry.UPDATE_TS = new Date().toISOString();
        this.mileage_entry.UPDATE_USER_GUID = "";
    };
    MileagesetupPage.prototype.SetEntityForUpdate = function () {
        this.mileage_entry.MILEAGE_GUID = this.mileage_details.MILEAGE_GUID;
        if (this.mileage_entry.CATEGORY == null) {
            this.mileage_entry.CATEGORY = this.titlecasePipe.transform(this.CATEGORY_ngModel_Add.trim());
        }
        if (this.mileage_entry.RATE_PER_UNIT == null) {
            this.mileage_entry.RATE_PER_UNIT = this.RATE_PER_UNIT_ngModel_Add;
        }
        if (this.mileage_entry.RATE_DATE == null) {
            this.mileage_entry.RATE_DATE = this.RATE_DATE_ngModel_Add.trim();
        }
        if (this.mileage_entry.ACTIVATION_FLAG == null) {
            this.mileage_entry.ACTIVATION_FLAG = this.ACTIVATION_FLAG_ngModel_Add;
        }
        this.mileage_entry.CREATION_TS = this.mileage_details.CREATION_TS;
        this.mileage_entry.CREATION_USER_GUID = this.mileage_details.CREATION_USER_GUID;
        this.mileage_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.mileage_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.mileage_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    MileagesetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.mileage_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.mileage_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    MileagesetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Category");
        localStorage.removeItem("Prev_TenantGuid");
        localStorage.removeItem("Prev_RateDate");
    };
    MileagesetupPage.prototype.Insert = function () {
        var _this = this;
        this.mileagesetupservice.save(this.mileage_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Mileage Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    MileagesetupPage.prototype.Update = function () {
        var _this = this;
        this.mileagesetupservice.update(this.mileage_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Mileage updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    MileagesetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_mileage?filter=CATEGORY=" + this.CATEGORY_ngModel_Add.trim() + ' AND TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ' AND RATE_DATE=' + this.RATE_DATE_ngModel_Add + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_mileage?filter=CATEGORY=" + this.CATEGORY_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + ' AND RATE_DATE=' + this.RATE_DATE_ngModel_Add + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    MileagesetupPage.prototype.ClearControls = function () {
        this.CATEGORY_ngModel_Add = "";
        this.RATE_PER_UNIT_ngModel_Add = "";
        this.RATE_DATE_ngModel_Add = "";
        this.ACTIVATION_FLAG_ngModel_Add = false;
        this.Tenant_Add_ngModel = "";
    };
    MileagesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-mileagesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/mileagesetup/mileagesetup.html"*/'<!--\n  Generated template for the MileagesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'MILEAGE_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddMileageClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <!--For Display Grid -->\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'MILEAGE_CATEGORY\' | translate }}</th>\n          <th class="lgl1">{{ \'MILEAGE_PER_UNIT\' | translate }}</th>\n          <th class="lgl1">{{ \'MILEAGE_DATE\' | translate }}</th>\n          <th class="lgl1" style="width:85px">{{ \'MILEAGE_FLAG\' | translate }}</th>\n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let mileage of mileages | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index"\n          [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Category">{{mileage.CATEGORY}}</td>\n          <td class="lgl1 getHeader" reshead="Rate Per Unit">{{mileage.RATE_PER_UNIT | number : \'1.2-2\'}}</td>\n          <td class="lgl1 getHeader" reshead="Effective Date">{{mileage.RATE_DATE | date:\'dd/MM/yyyy\'}}</td>\n          <td class="lgl1 getHeader" reshead="Active Flag">\n            <ion-item>\n              <ion-toggle *ngIf="mileage.ACTIVATION_FLAG==1" checked=true></ion-toggle>\n              <ion-toggle *ngIf="mileage.ACTIVATION_FLAG==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n          <td class="lgl1 getHeader" *ngIf="AdminLogin" reshead="Tenant Name">{{mileage.TENANT_ACCOUNT_NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(mileage.MILEAGE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(mileage.MILEAGE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n  <!--Display Grid End-->\n\n  <!-- add mileage form start-->\n  <div class="blackcontainer" *ngIf="AddMileageClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddMileageClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW MILEAGE</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">UPDATE MILEAGE</div>\n        <button class="btnR" (click)="CloseMileageClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Mileageform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'MILEAGE_CATEGORY\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="CATEGORY" [(ngModel)]="CATEGORY_ngModel_Add" required placeholder="{{\'Please fill in the category of the mileage\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'MILEAGE_PER_UNIT\' | translate }}</ion-label>\n            <ion-input type="number" formControlName="RATE_PER_UNIT" [(ngModel)]="RATE_PER_UNIT_ngModel_Add" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/"\n              step="0.01" placeholder="{{\'Please fill in the unit of mileage\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'MILEAGE_DATE\' | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="RATE_DATE" [(ngModel)]="RATE_DATE_ngModel_Add"\n              placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'MILEAGE_FLAG\' | translate }}</ion-label>\n            <ion-toggle formControlName="ACTIVATION_FLAG" [(ngModel)]="ACTIVATION_FLAG_ngModel_Add"></ion-toggle>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Mileageform.valid" (click)="Save()">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add mileage form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/mileagesetup/mileagesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_mileagesetup_service__["a" /* MileageSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_mileagesetup_service__["a" /* MileageSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], MileagesetupPage);
    return MileagesetupPage;
}());

//# sourceMappingURL=mileagesetup.js.map

/***/ }),
/* 426 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MileageSetup_Model; });
var MileageSetup_Model = /** @class */ (function () {
    function MileageSetup_Model(MILEAGE_GUID, CATEGORY, RATE_PER_UNIT, RATE_DATE, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, TENANT_GUID, UPDATE_USER_GUID) {
        if (MILEAGE_GUID === void 0) { MILEAGE_GUID = null; }
        if (CATEGORY === void 0) { CATEGORY = null; }
        if (RATE_PER_UNIT === void 0) { RATE_PER_UNIT = null; }
        if (RATE_DATE === void 0) { RATE_DATE = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.MILEAGE_GUID = MILEAGE_GUID;
        this.CATEGORY = CATEGORY;
        this.RATE_PER_UNIT = RATE_PER_UNIT;
        this.RATE_DATE = RATE_DATE;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.TENANT_GUID = TENANT_GUID;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    MileageSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new MileageSetup_Model(json.MILEAGE_GUID, json.CATEGORY, json.RATE_PER_UNIT, json.RATE_DATE, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.TENANT_GUID, json.UPDATE_USER_GUID);
    };
    MileageSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            MILEAGE_GUID: this.MILEAGE_GUID,
            CATEGORY: this.CATEGORY,
            RATE_PER_UNIT: this.RATE_PER_UNIT,
            RATE_DATE: this.RATE_DATE,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            TENANT_GUID: this.TENANT_GUID,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return MileageSetup_Model;
}());

//# sourceMappingURL=mileagesetup_model.js.map

/***/ }),
/* 427 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymenttypesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_paymenttypesetup_model__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_paymenttypesetup_service__ = __webpack_require__(603);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the PaymenttypesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var PaymenttypesetupPage = /** @class */ (function () {
    function PaymenttypesetupPage(navCtrl, navParams, fb, http, paymenttypesetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.paymenttypesetupservice = paymenttypesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.Paymenttype_entry = new __WEBPACK_IMPORTED_MODULE_7__models_paymenttypesetup_model__["a" /* PaymentTypeSetup_Model */]();
        //paymenttype: PaymentTypeSetup_Model = new PaymentTypeSetup_Model();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_payment_type' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.paymenttypes = [];
        this.AddPaymentTypeClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
            //-------------------------------------------------------
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.Paymenttypeform = fb.group({
                    NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    DESCRIPTION: [null],
                });
            }
            else {
                this.Paymenttypeform = fb.group({
                    NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    DESCRIPTION: [null],
                    TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                });
            }
        }
    }
    PaymenttypesetupPage.prototype.AddPaymenttypeClick = function () {
        if (this.Edit_Form == false) {
            this.AddPaymentTypeClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    PaymenttypesetupPage.prototype.EditClick = function (PAYMENT_TYPE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddPaymentTypeClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        this.paymenttypesetupservice
            .get(PAYMENT_TYPE_GUID)
            .subscribe(function (data) {
            self.paymenttype_details = data;
            _this.Tenant_Add_ngModel = self.paymenttype_details.TENANT_GUID;
            _this.NAME_ngModel_Add = self.paymenttype_details.NAME;
            localStorage.setItem('Prev_Name', self.paymenttype_details.NAME);
            localStorage.setItem('Prev_TenantGuid', self.paymenttype_details.TENANT_GUID);
            _this.DESCRIPTION_ngModel_Add = self.paymenttype_details.DESCRIPTION;
            _this.loading.dismissAll();
        });
    };
    PaymenttypesetupPage.prototype.DeleteClick = function (PAYMENT_TYPE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.paymenttypesetupservice.remove(PAYMENT_TYPE_GUID)
                            .subscribe(function () {
                            self.paymenttypes = self.paymenttypes.filter(function (item) {
                                return item.PAYMENT_TYPE_GUID != PAYMENT_TYPE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    PaymenttypesetupPage.prototype.ClosePaymentTypeClick = function () {
        if (this.AddPaymentTypeClicked == true) {
            this.AddPaymentTypeClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    PaymenttypesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PaymenttypesetupPage');
    };
    PaymenttypesetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Name') == null) {
            localStorage.setItem('Prev_Name', null);
        }
        else {
            localStorage.removeItem("Prev_Name");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
    };
    PaymenttypesetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    PaymenttypesetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_payment_type_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_payment_type_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.paymenttypes = data.resource;
            _this.loading.dismissAll();
        });
    };
    PaymenttypesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Paymenttypeform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update------------------------------------------------- 
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_Name = "";
            if (localStorage.getItem('Prev_Name') != null) {
                strPrev_Name = localStorage.getItem('Prev_Name').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_Name || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Payment Type is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------
                this.Update();
            }
        }
    };
    PaymenttypesetupPage.prototype.SetEntityForAdd = function () {
        this.Paymenttype_entry.PAYMENT_TYPE_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.Paymenttype_entry.CREATION_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.Paymenttype_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.Paymenttype_entry.CREATION_USER_GUID = 'sva';
        }
        this.Paymenttype_entry.UPDATE_TS = new Date().toISOString();
        this.Paymenttype_entry.UPDATE_USER_GUID = "";
    };
    PaymenttypesetupPage.prototype.SetEntityForUpdate = function () {
        this.Paymenttype_entry.PAYMENT_TYPE_GUID = this.paymenttype_details.PAYMENT_TYPE_GUID;
        this.Paymenttype_entry.CREATION_TS = this.paymenttype_details.CREATION_TS;
        this.Paymenttype_entry.CREATION_USER_GUID = this.paymenttype_details.CREATION_USER_GUID;
        this.Paymenttype_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.Paymenttype_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.Paymenttype_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    PaymenttypesetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.Paymenttype_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        this.Paymenttype_entry.DESCRIPTION = this.titlecasePipe.transform(this.DESCRIPTION_ngModel_Add.trim());
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.Paymenttype_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.Paymenttype_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    PaymenttypesetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Name");
        localStorage.removeItem("Prev_TenantGuid");
    };
    PaymenttypesetupPage.prototype.Insert = function () {
        var _this = this;
        this.paymenttypesetupservice.save(this.Paymenttype_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Payment Type Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    PaymenttypesetupPage.prototype.Update = function () {
        var _this = this;
        this.paymenttypesetupservice.update(this.Paymenttype_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Payment Type updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    PaymenttypesetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_payment_type?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_payment_type?filter=NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    PaymenttypesetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.Tenant_Add_ngModel = "";
    };
    PaymenttypesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-paymenttypesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/paymenttypesetup/paymenttypesetup.html"*/'<!--\n  Generated template for the PaymenttypesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'PAYMENT_TYPE_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddPaymenttypeClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'PAYMENT_NAME\' | translate }}</th>\n\n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let paymenttype of paymenttypes | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Name">{{paymenttype.NAME}}</td>\n\n          <td class="lgl1 getHeader" *ngIf="AdminLogin" reshead="Tenant">{{paymenttype.TENANT_ACCOUNT_NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(paymenttype.PAYMENT_TYPE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(paymenttype.PAYMENT_TYPE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add paymenttype form start-->\n  <div class="blackcontainer" *ngIf="AddPaymentTypeClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddPaymentTypeClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW PAYMENT TYPE</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">UPDATE PAYMENT TYPE</div>\n\n        <button class="btnR" (click)="ClosePaymentTypeClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Paymenttypeform">\n\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'PAYMENT_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the payment\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item style="display: none;">\n            <ion-label stacked>{{ \'PAYMENT_DESCRIPTION\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Paymenttypeform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n  </div>\n  <!-- add paymenttype form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/paymenttypesetup/paymenttypesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_paymenttypesetup_service__["a" /* PaymentTypeSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_paymenttypesetup_service__["a" /* PaymentTypeSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], PaymenttypesetupPage);
    return PaymenttypesetupPage;
}());

//# sourceMappingURL=paymenttypesetup.js.map

/***/ }),
/* 428 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymentTypeSetup_Model; });
var PaymentTypeSetup_Model = /** @class */ (function () {
    function PaymentTypeSetup_Model(PAYMENT_TYPE_GUID, TENANT_GUID, NAME, DESCRIPTION, CREATION_USER_GUID, CREATION_TS, UPDATE_TS, UPDATE_USER_GUID) {
        if (PAYMENT_TYPE_GUID === void 0) { PAYMENT_TYPE_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.PAYMENT_TYPE_GUID = PAYMENT_TYPE_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.CREATION_TS = CREATION_TS;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    PaymentTypeSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new PaymentTypeSetup_Model(json.PAYMENT_TYPE_GUID, json.TENANT_GUID, json.NAME, json.DESCRIPTION, json.CREATION_USER_GUID, json.CREATION_TS, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    PaymentTypeSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            PAYMENT_TYPE_GUID: this.PAYMENT_TYPE_GUID,
            TENANT_GUID: this.TENANT_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            CREATION_TS: this.CREATION_TS,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return PaymentTypeSetup_Model;
}());

//# sourceMappingURL=paymenttypesetup_model.js.map

/***/ }),
/* 429 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QualificationsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_qualificationsetup_model__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_qualificationsetup_service__ = __webpack_require__(604);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the QualificationsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var QualificationsetupPage = /** @class */ (function () {
    function QualificationsetupPage(navCtrl, navParams, fb, http, qualificationsetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.qualificationsetupservice = qualificationsetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.Qualify_entry = new __WEBPACK_IMPORTED_MODULE_7__models_qualificationsetup_model__["a" /* QualificationSetup_Model */]();
        //qualificationsetup: QualificationSetup_Model = new QualificationSetup_Model();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_qualification_type' + '?order=TYPE_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.qualificationsetups = [];
        this.AddQualifyClicked = false;
        this.EditQualifyClicked = false;
        this.Exist_Record = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
            }
            //Clear localStorage value--------------------------------      
            this.ClearLocalStorage();
            //Display Grid---------------------------- 
            this.DisplayGrid();
            //Load the Form control---------------------------      
            this.Qualifyform = fb.group({
                TYPE_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                TYPE_DESC: [null],
            });
        }
    }
    QualificationsetupPage.prototype.AddQualifyClick = function () {
        if (this.Edit_Form == false) {
            this.AddQualifyClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.HeaderText = "REGISTER NEW QUALIFICATION";
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    QualificationsetupPage.prototype.EditClick = function (QUALIFICATION_TYPE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddQualifyClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE NEW QUALIFICATION";
        var self = this;
        this.qualificationsetupservice
            .get(QUALIFICATION_TYPE_GUID)
            .subscribe(function (data) {
            self.qualification_details = data;
            _this.TYPE_NAME_ngModel_Add = self.qualification_details.TYPE_NAME;
            localStorage.setItem('Prev_qu_Name', self.qualification_details.TYPE_NAME);
            _this.TYPE_DESC_ngModel_Add = self.qualification_details.TYPE_DESC;
            _this.loading.dismissAll();
        });
    };
    QualificationsetupPage.prototype.DeleteClick = function (QUALIFICATION_TYPE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.qualificationsetupservice.remove(QUALIFICATION_TYPE_GUID)
                            .subscribe(function () {
                            self.qualificationsetups = self.qualificationsetups.filter(function (item) {
                                return item.QUALIFICATION_TYPE_GUID != QUALIFICATION_TYPE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    QualificationsetupPage.prototype.CloseQualifyClick = function () {
        if (this.AddQualifyClicked == true) {
            this.AddQualifyClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    QualificationsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad QualificationsetupPage');
    };
    QualificationsetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_qu_Name') == null) {
            localStorage.setItem('Prev_qu_Name', null);
        }
        else {
            localStorage.removeItem("Prev_qu_Name");
        }
    };
    QualificationsetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.qualificationsetups = this.stores;
            return;
        }
        this.qualificationsetups = this.filter({
            TYPE_NAME: val
        });
    };
    QualificationsetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    QualificationsetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.qualificationsetups = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    QualificationsetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Qualifyform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_qu_Name = "";
            if (localStorage.getItem('Prev_qu_Name') != null) {
                strPrev_qu_Name = localStorage.getItem('Prev_qu_Name').toUpperCase();
            }
            if (this.TYPE_NAME_ngModel_Add.trim().toUpperCase() != strPrev_qu_Name) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Qualification is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update---------- 
                this.Update();
            }
        }
    };
    QualificationsetupPage.prototype.SetEntityForAdd = function () {
        this.Qualify_entry.QUALIFICATION_TYPE_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.Qualify_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        }
        else {
            this.Qualify_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        this.Qualify_entry.CREATION_TS = new Date().toISOString();
        this.Qualify_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.Qualify_entry.UPDATE_TS = new Date().toISOString();
        this.Qualify_entry.UPDATE_USER_GUID = "";
    };
    QualificationsetupPage.prototype.SetEntityForUpdate = function () {
        this.Qualify_entry.QUALIFICATION_TYPE_GUID = this.qualification_details.QUALIFICATION_TYPE_GUID;
        this.Qualify_entry.TENANT_GUID = this.qualification_details.TENANT_GUID;
        this.Qualify_entry.CREATION_TS = this.qualification_details.CREATION_TS;
        this.Qualify_entry.CREATION_USER_GUID = this.qualification_details.CREATION_USER_GUID;
        this.Qualify_entry.UPDATE_TS = new Date().toISOString();
        this.Qualify_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
    };
    QualificationsetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.Qualify_entry.TYPE_NAME = this.titlecasePipe.transform(this.TYPE_NAME_ngModel_Add.trim());
        this.Qualify_entry.TYPE_DESC = this.titlecasePipe.transform(this.TYPE_DESC_ngModel_Add.trim());
    };
    QualificationsetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_qu_Name");
    };
    QualificationsetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "main_qualification_type?filter=TYPE_NAME=" + this.TYPE_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    QualificationsetupPage.prototype.Insert = function () {
        var _this = this;
        this.qualificationsetupservice.save(this.Qualify_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Qualification Registered successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    QualificationsetupPage.prototype.Update = function () {
        var _this = this;
        this.qualificationsetupservice.update(this.Qualify_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Qualification Updated Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    QualificationsetupPage.prototype.ClearControls = function () {
        this.TYPE_NAME_ngModel_Add = "";
        this.TYPE_DESC_ngModel_Add = "";
    };
    QualificationsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-qualificationsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/qualificationsetup/qualificationsetup.html"*/'<!--\n  Generated template for the QualificationsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'QUALIFICATION_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>  \n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddQualifyClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'QUALIFICATION\' | translate }}</th>\n     \n\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let qualificationsetup of qualificationsetups | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Qualification">{{qualificationsetup.TYPE_NAME}}</td>\n       \n\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(qualificationsetup.QUALIFICATION_TYPE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(qualificationsetup.QUALIFICATION_TYPE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add Qualifyform start-->\n  <div class="blackcontainer" *ngIf="AddQualifyClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddQualifyClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{HeaderText}}</div>\n        \n        <button class="btnR" (click)="CloseQualifyClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Qualifyform">\n          <ion-item>\n            <ion-label stacked>{{ \'QUALIFICATION\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="TYPE_NAME" [(ngModel)]="TYPE_NAME_ngModel_Add" placeholder="{{\'Please fill in the qualification\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Qualifyform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Qualify form end-->\n  \n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/qualificationsetup/qualificationsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_qualificationsetup_service__["a" /* QualificationSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_qualificationsetup_service__["a" /* QualificationSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], QualificationsetupPage);
    return QualificationsetupPage;
}());

//# sourceMappingURL=qualificationsetup.js.map

/***/ }),
/* 430 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QualificationSetup_Model; });
var QualificationSetup_Model = /** @class */ (function () {
    function QualificationSetup_Model(QUALIFICATION_TYPE_GUID, TYPE_NAME, TYPE_DESC, TENANT_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (QUALIFICATION_TYPE_GUID === void 0) { QUALIFICATION_TYPE_GUID = null; }
        if (TYPE_NAME === void 0) { TYPE_NAME = null; }
        if (TYPE_DESC === void 0) { TYPE_DESC = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.QUALIFICATION_TYPE_GUID = QUALIFICATION_TYPE_GUID;
        this.TYPE_NAME = TYPE_NAME;
        this.TYPE_DESC = TYPE_DESC;
        this.TENANT_GUID = TENANT_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    QualificationSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new QualificationSetup_Model(json.QUALIFICATION_TYPE_GUID, json.TYPE_NAME, json.TYPE_DESC, json.TENANT_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    QualificationSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            QUALIFICATION_TYPE_GUID: this.QUALIFICATION_TYPE_GUID,
            TYPE_NAME: this.TYPE_NAME,
            TYPE_DESC: this.TYPE_DESC,
            TENANT_GUID: this.TENANT_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return QualificationSetup_Model;
}());

//# sourceMappingURL=qualificationsetup_model.js.map

/***/ }),
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserCertification_Model; });
var UserCertification_Model = /** @class */ (function () {
    function UserCertification_Model(certificate_guid, name, grade, passing_year, user_guid, creation_ts, creation_user_guid, update_ts, update_user_guid, attachment) {
        if (certificate_guid === void 0) { certificate_guid = null; }
        if (name === void 0) { name = null; }
        if (grade === void 0) { grade = null; }
        if (passing_year === void 0) { passing_year = null; }
        if (user_guid === void 0) { user_guid = null; }
        if (creation_ts === void 0) { creation_ts = null; }
        if (creation_user_guid === void 0) { creation_user_guid = null; }
        if (update_ts === void 0) { update_ts = null; }
        if (update_user_guid === void 0) { update_user_guid = null; }
        if (attachment === void 0) { attachment = null; }
        this.certificate_guid = certificate_guid;
        this.name = name;
        this.grade = grade;
        this.passing_year = passing_year;
        this.user_guid = user_guid;
        this.creation_ts = creation_ts;
        this.creation_user_guid = creation_user_guid;
        this.update_ts = update_ts;
        this.update_user_guid = update_user_guid;
        this.attachment = attachment;
    }
    UserCertification_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserCertification_Model(json.certificate_guid, json.name, json.grade, json.passing_year, json.user_guid, json.creation_ts, json.creation_user_guid, json.update_ts, json.update_user_guid, json.attachment);
    };
    UserCertification_Model.prototype.toJson = function (stringify) {
        var doc = {
            certificate_guid: this.certificate_guid,
            name: this.name,
            grade: this.grade,
            passing_year: this.passing_year,
            user_guid: this.user_guid,
            creation_ts: this.creation_ts,
            creation_user_guid: this.creation_user_guid,
            update_ts: this.update_ts,
            update_user_guid: this.update_user_guid,
            attachment: this.attachment
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserCertification_Model;
}());

//# sourceMappingURL=user_certification_model.js.map

/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserSpouse_Model; });
var UserSpouse_Model = /** @class */ (function () {
    function UserSpouse_Model(SPOUSE_GUID, NAME, ICNO, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, USER_GUID) {
        if (SPOUSE_GUID === void 0) { SPOUSE_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (ICNO === void 0) { ICNO = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        this.SPOUSE_GUID = SPOUSE_GUID;
        this.NAME = NAME;
        this.ICNO = ICNO;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.USER_GUID = USER_GUID;
    }
    UserSpouse_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserSpouse_Model(json.SPOUSE_GUID, json.NAME, json.ICNO, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.USER_GUID);
    };
    UserSpouse_Model.prototype.toJson = function (stringify) {
        var doc = {
            SPOUSE_GUID: this.SPOUSE_GUID,
            NAME: this.NAME,
            ICNO: this.ICNO,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            USER_GUID: this.USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserSpouse_Model;
}());

//# sourceMappingURL=user_spouse_model.js.map

/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserChildren_Model; });
var UserChildren_Model = /** @class */ (function () {
    function UserChildren_Model(CHILD_GUID, NAME, ICNO, GENDER, SPOUSE, USER_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (CHILD_GUID === void 0) { CHILD_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (ICNO === void 0) { ICNO = null; }
        if (GENDER === void 0) { GENDER = null; }
        if (SPOUSE === void 0) { SPOUSE = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.CHILD_GUID = CHILD_GUID;
        this.NAME = NAME;
        this.ICNO = ICNO;
        this.GENDER = GENDER;
        this.SPOUSE = SPOUSE;
        this.USER_GUID = USER_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    UserChildren_Model.fromJson = function (json) {
        if (!json)
            return;
        return new UserChildren_Model(json.CHILD_GUID, json.NAME, json.ICNO, json.GENDER, json.SPOUSE, json.USER_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    UserChildren_Model.prototype.toJson = function (stringify) {
        var doc = {
            CHILD_GUID: this.CHILD_GUID,
            NAME: this.NAME,
            ICNO: this.ICNO,
            GENDER: this.GENDER,
            SPOUSE: this.SPOUSE,
            USER_GUID: this.USER_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return UserChildren_Model;
}());

//# sourceMappingURL=user_children_model.js.map

/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocRegistrationPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_socmain_model__ = __webpack_require__(440);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_soc_project_model__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__models_soc_customer_model__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_soc_customer_location_model__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_socmain_service__ = __webpack_require__(441);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__models_tenant_main_model__ = __webpack_require__(442);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__models_view_soc_model__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















/**
 * Generated class for the SocRegistrationPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var SocRegistrationPage = /** @class */ (function () {
    function SocRegistrationPage(navCtrl, navParams, fb, http, socservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.socservice = socservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.soc_entry = new __WEBPACK_IMPORTED_MODULE_7__models_socmain_model__["a" /* SocMain_Model */]();
        this.project_entry = new __WEBPACK_IMPORTED_MODULE_8__models_soc_project_model__["a" /* SocProject_Model */]();
        this.customer_entry = new __WEBPACK_IMPORTED_MODULE_9__models_soc_customer_model__["a" /* SocCustomer_Model */]();
        this.customer_location_entry = new __WEBPACK_IMPORTED_MODULE_10__models_soc_customer_location_model__["a" /* SocCustomerLocation_Model */]();
        this.tenant_entry = new __WEBPACK_IMPORTED_MODULE_12__models_tenant_main_model__["a" /* Tenant_Main_Model */]();
        this.view_entry = new __WEBPACK_IMPORTED_MODULE_13__models_view_soc_model__["a" /* View_SOC_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/soc_main' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.socs = [];
        this.soc_main = [];
        this.soc_project = [];
        this.soc_customer = [];
        this.AddSocClicked = false;
        this.EditSocClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.CustomerLookupClicked = false;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        this.isReadonly = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------      
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
                this.LoadCustomers();
                //-------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Socform = fb.group({
                        soc: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        project_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        customer_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    });
                }
                else {
                    this.Socform = fb.group({
                        soc: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        project_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        customer_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        location_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\'\"\|\\s]+$')])],
                        // registration_no: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                        // address1: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                        // address2: [null],
                        // address3: [null],
                        // contact_person: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                        // contact_person_mobile_no: [null, Validators.compose([Validators.pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                        // contact_no1: [null, Validators.compose([Validators.pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                        // contact_no2: [null],
                        // email: [null, Validators.compose([Validators.pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), Validators.required])],
                        // division: [null],
                        TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    SocRegistrationPage.prototype.AddSocClick = function () {
        if (this.Edit_Form == false) {
            this.AddSocClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    SocRegistrationPage.prototype.CloseSocClick = function () {
        if (this.AddSocClicked == true) {
            this.AddSocClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    SocRegistrationPage.prototype.EditClick = function (id) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddSocClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        var SocEditUrl = this.baseResource_Url + "view_soc_edit?filter=(SOC_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(SocEditUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.soc_details_main = data["resource"];
            _this.Tenant_Add_ngModel = self.soc_details_main[0]["TENANT_GUID"];
            localStorage.setItem('PREV_TENANT_GUID', self.soc_details_main[0]["TENANT_GUID"]);
            _this.SOC_NO_ngModel_Add = self.soc_details_main[0]["SOC_NO"];
            localStorage.setItem('PREV_SOC_NO', self.soc_details_main[0]["SOC_NO"]);
            _this.PROJECT_NAME_ngModel_Add = self.soc_details_main[0]["PROJECT_NAME"];
            localStorage.setItem('PREV_PROJECT_NAME', self.soc_details_main[0]["PROJECT_NAME"]);
            _this.CUSTOMER_NAME_ngModel_Add = self.soc_details_main[0]["CUSTOMER_NAME"];
            localStorage.setItem('PREV_CUSTOMER_NAME', self.soc_details_main[0]["CUSTOMER_NAME"]);
            _this.Customer_GUID = _this.soc_details_main[0]["CUSTOMER_GUID"];
            // this.LOCATION_NAME_ngModel_Add = self.soc_details_main[0]["CUSTOMER_LOCATION_NAME"];
            // this.REGISTRATION_NO_ngModel_Add = self.soc_details_main[0]["REGISTRATION_NO"];
            // this.ADDRESS1_ngModel_Add = self.soc_details_main[0]["ADDRESS1"];
            // this.ADDRESS2_ngModel_Add = self.soc_details_main[0]["ADDRESS2"];
            // this.ADDRESS3_ngModel_Add = self.soc_details_main[0]["ADDRESS3"];
            // this.CONTACT_PERSON_ngModel_Add = self.soc_details_main[0]["CONTACT_PERSON"];
            // this.CONTACT_PERSON_MOBILE_NO_ngModel_Add = self.soc_details_main[0]["CONTACT_PERSON_MOBILE_NO"];
            // this.CONTACT_NO1_ngModel_Add = self.soc_details_main[0]["CONTACT_NO1"];
            // this.CONTACT_NO2_ngModel_Add = self.soc_details_main[0]["CONTACT_NO2"];
            // this.EMAIL_ngModel_Add = self.soc_details_main[0]["EMAIL"];
            // this.DIVISION_ngModel_Add = self.soc_details_main[0]["DIVISION"];
            _this.loading.dismissAll();
        });
    };
    SocRegistrationPage.prototype.DeleteClick = function (SOC_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        //before delete get id of main_project table, according to that id delete the record
                        var SocEditUrl = _this.baseResource_Url + "view_soc_edit?filter=(SOC_GUID=" + SOC_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                        _this.http.get(SocEditUrl)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            _this.soc_details_main = data["resource"];
                            //Remove from main_customer-----------------------
                            // this.socservice.remove_customer(self.soc_details_main[0]["CUSTOMER_GUID"])
                            //   .subscribe(() => {
                            //     self.socs = self.socs.filter((item) => {
                            //       return item.SOC_GUID != SOC_GUID;
                            //     });
                            //   });
                            //Remove from main_customer_location------------------------
                            // this.socservice.remove_customer_location(self.soc_details_main[0]["CUSTOMER_LOCATION_GUID"])
                            //   .subscribe(() => {
                            //     self.socs = self.socs.filter((item) => {
                            //       return item.SOC_GUID != SOC_GUID;
                            //     });
                            //   });
                            //Remove from main_project------------------------
                            _this.socservice.remove_project(self.soc_details_main[0]["PROJECT_GUID"])
                                .subscribe(function () {
                                self.socs = self.socs.filter(function (item) {
                                    return item.SOC_GUID != SOC_GUID;
                                });
                            });
                            //Remove from soc_main----------------------------
                            _this.socservice.remove_soc(SOC_GUID)
                                .subscribe(function () {
                                self.socs = self.socs.filter(function (item) {
                                    return item.SOC_GUID != SOC_GUID;
                                });
                            });
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    SocRegistrationPage.prototype.CustomerLookup = function () {
        this.CustomerLookupClicked = true;
    };
    SocRegistrationPage.prototype.CloseCustomerLookup = function () {
        if (this.CustomerLookupClicked == true) {
            this.CustomerLookupClicked = false;
        }
    };
    SocRegistrationPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SocRegistrationPage');
    };
    SocRegistrationPage.prototype.LoadCustomers = function () {
        var _this = this;
        var CustomerUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_customer' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')AND(ACTIVE_FLAG=A)&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(CustomerUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.storeCustomers = _this.customers = data["resource"];
            //this.loading.dismissAll();
        });
    };
    SocRegistrationPage.prototype.searchCustomer = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.storeCustomers;
            return;
        }
        this.customers = this.filterCustomer({
            NAME: val
        });
    };
    SocRegistrationPage.prototype.filterCustomer = function (params) {
        if (!params) {
            return this.storeCustomers;
        }
        return this.customers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    SocRegistrationPage.prototype.GetCustomer = function (guid, name) {
        this.CUSTOMER_NAME_ngModel_Add = name;
        this.Customer_GUID = guid;
        this.CloseCustomerLookup();
    };
    SocRegistrationPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('PREV_TENANT_GUID') == null) {
            localStorage.setItem('PREV_TENANT_GUID', null);
        }
        else {
            localStorage.removeItem("PREV_TENANT_GUID");
        }
        if (localStorage.getItem('PREV_SOC_NO') == null) {
            localStorage.setItem('PREV_SOC_NO', null);
        }
        else {
            localStorage.removeItem("PREV_SOC_NO");
        }
        if (localStorage.getItem('PREV_PROJECT_NAME') == null) {
            localStorage.setItem('PREV_PROJECT_NAME', null);
        }
        else {
            localStorage.removeItem("PREV_PROJECT_NAME");
        }
        if (localStorage.getItem('PREV_CUSTOMER_NAME') == null) {
            localStorage.setItem('PREV_CUSTOMER_NAME', null);
        }
        else {
            localStorage.removeItem("PREV_CUSTOMER_NAME");
        }
    };
    SocRegistrationPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    SocRegistrationPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.socs = this.stores;
            return;
        }
        this.socs = this.filter({
            soc: val,
            project_name: val,
            customer_name: val
        });
    };
    SocRegistrationPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    SocRegistrationPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_soc_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_soc_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.socs = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    SocRegistrationPage.prototype.Save = function () {
        //Save Customer----------------    
        //this.SaveCustomer();
        if (this.Customer_GUID != "") {
            this.SaveProject();
        }
        else {
            alert("Sorry.Please enter valid customer.");
        }
    };
    // SaveCustomer() {
    //   //for Save Set Entities-------------------------------------------------------------    
    //   if (this.Add_Form == true) {
    //     this.SetEntityForCustomerAdd();
    //   }
    //   //for Update Set Entities------------------------------------------------------------
    //   else {
    //     this.SetEntityForCustomerUpdate();
    //   }
    //   //Common Entities-------------------------------------------------------------------
    //   this.SetCommonEntityForCustomerAddUpdate();
    //   //Loader-------------------------------
    //   this.loading = this.loadingCtrl.create({
    //     content: 'Please Wait...',
    //   });
    //   this.loading.present();
    //   //-------------------------------------
    //   if (this.Tenant_Add_ngModel != localStorage.getItem('PREV_TENANT_GUID') || this.SOC_NO_ngModel_Add.trim().toUpperCase() != localStorage.getItem('PREV_SOC_NO').toUpperCase() || this.PROJECT_NAME_ngModel_Add.trim().toUpperCase() != localStorage.getItem('PREV_PROJECT_NAME').toUpperCase() || this.CUSTOMER_NAME_ngModel_Add.trim().toUpperCase() != localStorage.getItem('PREV_CUSTOMER_NAME').toUpperCase()) {
    //     let val = this.CheckDuplicate();
    //     val.then((res) => {
    //       if (res.toString() == "0") {
    //         //**************Save service if it is new details***************************
    //         if (this.Add_Form == true) {
    //           this.InsertCustomer();
    //         }
    //         //**************Update service if it is new details*************************
    //         else {
    //           this.UpdateCustomer();
    //         }
    //       }
    //       else {
    //         alert("The SOC is already Exist.");
    //         this.loading.dismissAll();
    //       }
    //     });
    //     val.catch((err) => {
    //       console.log(err);
    //     });
    //   }
    //   else {
    //     //Simple update----------------------------------------------------------
    //     this.UpdateCustomer();
    //   }
    // }
    // SetEntityForCustomerAdd() {
    //   //this.customer_entry.CUSTOMER_GUID = UUID.UUID();
    //   this.customer_entry.CUSTOMER_GUID = UUID.UUID();
    //   this.customer_entry.CREATION_TS = new Date().toISOString();
    //   this.customer_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
    //   this.customer_entry.UPDATE_TS = new Date().toISOString();
    //   this.customer_entry.UPDATE_USER_GUID = "";
    // }
    // SetEntityForCustomerUpdate() {
    //   this.customer_entry.CUSTOMER_GUID = this.soc_details_main[0]["CUSTOMER_GUID"];
    //   this.customer_entry.CREATION_TS = this.soc_details_main[0]["CREATION_TS"];
    //   this.customer_entry.CREATION_USER_GUID = this.soc_details_main[0]["CREATION_USER_GUID"];
    //   this.customer_entry.UPDATE_TS = new Date().toISOString();
    //   this.customer_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
    // }
    // SetCommonEntityForCustomerAddUpdate() {
    //   if (localStorage.getItem("g_USER_GUID") == "sva") {
    //     this.customer_entry.TENANT_GUID = this.Tenant_Add_ngModel.trim();
    //   }
    //   else {
    //     this.customer_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
    //   }
    //   this.customer_entry.NAME = this.titlecasePipe.transform(this.CUSTOMER_NAME_ngModel_Add.trim());
    // }
    // InsertCustomer() {
    //   this.socservice.save_customer(this.customer_entry)
    //     .subscribe((response) => {
    //       if (response.status == 200) {
    //         this.SaveCustomerLocation();
    //         //this.SaveProject();
    //       }
    //     });
    // }
    // UpdateCustomer() {
    //   this.socservice.update_customer(this.customer_entry)
    //     .subscribe((response) => {
    //       if (response.status == 200) {
    //         this.SaveProject();
    //       }
    //     });
    // }
    // SaveCustomerLocation() {
    //   //for Save Set Entities-------------------------------------------------------------
    //   if (this.Add_Form == true) {
    //     this.SetEntityForCustomerLocationAdd();
    //   }
    //   //for Update Set Entities------------------------------------------------------------
    //   else {
    //     this.SetEntityForCustomerLocationUpdate();
    //   }
    //   //Common Entities-------------------------------------------------------------------
    //   this.SetCommonEntityForCustomerLocationAddUpdate();
    //   //**************Save service if it is new details***************************
    //   if (this.Add_Form == true) {
    //     this.InsertCustomerLocation();
    //   }
    //   //**************Update service if it is new details*************************
    //   else {
    //     this.UpdateCustomerLocation();
    //   }
    // }
    // SetEntityForCustomerLocationAdd() {
    //   this.customer_location_entry.CUSTOMER_LOCATION_GUID = UUID.UUID();
    // }
    // SetEntityForCustomerLocationUpdate() {
    //   this.customer_location_entry.CUSTOMER_LOCATION_GUID = this.soc_details_main[0]["CUSTOMER_LOCATION_GUID"];
    // }
    // SetCommonEntityForCustomerLocationAddUpdate() {
    //   this.customer_location_entry.CUSTOMER_GUID = this.customer_entry.CUSTOMER_GUID;
    //   this.customer_location_entry.NAME = this.titlecasePipe.transform(this.LOCATION_NAME_ngModel_Add.trim());
    //   this.customer_location_entry.DESCRIPTION = "NA";
    //   this.customer_location_entry.REGISTRATION_NO = this.REGISTRATION_NO_ngModel_Add.trim();
    //   this.customer_location_entry.ADDRESS1 = this.titlecasePipe.transform(this.ADDRESS1_ngModel_Add.trim());
    //   this.customer_location_entry.ADDRESS2 = this.titlecasePipe.transform(this.ADDRESS2_ngModel_Add.trim());
    //   this.customer_location_entry.ADDRESS3 = this.titlecasePipe.transform(this.ADDRESS3_ngModel_Add.trim());
    //   this.customer_location_entry.CONTACT_PERSON = this.titlecasePipe.transform(this.CONTACT_PERSON_ngModel_Add.trim());
    //   this.customer_location_entry.CONTACT_PERSON_MOBILE_NO = this.CONTACT_PERSON_MOBILE_NO_ngModel_Add.trim();
    //   this.customer_location_entry.CONTACT_NO1 = this.CONTACT_NO1_ngModel_Add.trim();
    //   this.customer_location_entry.CONTACT_NO2 = this.CONTACT_NO2_ngModel_Add.trim();
    //   this.customer_location_entry.EMAIL = this.EMAIL_ngModel_Add.trim().toLowerCase();
    //   this.customer_location_entry.DIVISION = this.titlecasePipe.transform(this.DIVISION_ngModel_Add.trim());
    //   this.customer_location_entry.CREATION_TS = this.customer_entry.CREATION_TS;
    //   this.customer_location_entry.CREATION_USER_GUID = this.customer_entry.CREATION_USER_GUID;
    //   this.customer_location_entry.UPDATE_TS = this.customer_entry.UPDATE_TS;
    //   this.customer_location_entry.UPDATE_USER_GUID = this.customer_entry.UPDATE_USER_GUID
    // }
    // InsertCustomerLocation() {
    //   this.socservice.save_customer_location(this.customer_location_entry)
    //     .subscribe((response) => {
    //       if (response.status == 200) {
    //         this.SaveProject();
    //       }
    //     });
    // }
    // UpdateCustomerLocation() {
    //   this.socservice.update_customer_location(this.customer_location_entry)
    //     .subscribe((response) => {
    //       if (response.status == 200) {
    //         this.SaveProject();
    //       }
    //     });
    // }
    SocRegistrationPage.prototype.SaveProject = function () {
        var _this = this;
        //for Save Set Entities-------------------------------------------------------------
        if (this.Add_Form == true) {
            this.SetEntityForProjectAdd();
        }
        //for Update Set Entities------------------------------------------------------------
        else {
            this.SetEntityForProjectUpdate();
        }
        //Common Entities-------------------------------------------------------------------
        this.SetCommonEntityForProjectAddUpdate();
        //Loader-------------------------------
        this.loading = this.loadingCtrl.create({
            content: 'Please Wait...',
        });
        this.loading.present();
        //-------------------------------------
        var strPREV_SOC_NO = "";
        if (localStorage.getItem('PREV_SOC_NO') != null) {
            strPREV_SOC_NO = localStorage.getItem('PREV_SOC_NO').toUpperCase();
        }
        var strPREV_PROJECT_NAME = "";
        if (localStorage.getItem('PREV_PROJECT_NAME') != null) {
            strPREV_PROJECT_NAME = localStorage.getItem('PREV_PROJECT_NAME').toUpperCase();
        }
        var strPREV_CUSTOMER_NAME = "";
        if (localStorage.getItem('PREV_CUSTOMER_NAME') != null) {
            strPREV_CUSTOMER_NAME = localStorage.getItem('PREV_CUSTOMER_NAME').toUpperCase();
        }
        if (this.Tenant_Add_ngModel != localStorage.getItem('PREV_TENANT_GUID') || this.SOC_NO_ngModel_Add.trim().toUpperCase() != strPREV_SOC_NO || this.PROJECT_NAME_ngModel_Add.trim().toUpperCase() != strPREV_PROJECT_NAME || this.CUSTOMER_NAME_ngModel_Add.trim().toUpperCase() != strPREV_CUSTOMER_NAME) {
            var val = this.CheckDuplicate();
            val.then(function (res) {
                if (res.toString() == "0") {
                    //**************Save service if it is new details***************************
                    if (_this.Add_Form == true) {
                        _this.InsertProject();
                    }
                    //**************Update service if it is new details*************************
                    else {
                        _this.UpdateProject();
                    }
                }
                else {
                    alert("The SOC is already Exist.");
                    _this.loading.dismissAll();
                }
            });
            val.catch(function (err) {
                console.log(err);
            });
        }
        else {
            //Simple update----------------------------------------------------------
            this.UpdateProject();
        }
    };
    SocRegistrationPage.prototype.SetEntityForProjectAdd = function () {
        this.project_entry.PROJECT_GUID = __WEBPACK_IMPORTED_MODULE_15_angular2_uuid__["UUID"].UUID();
        this.project_entry.CREATION_TS = new Date().toISOString();
        this.project_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.project_entry.UPDATE_TS = new Date().toISOString();
        this.project_entry.UPDATE_USER_GUID = "";
        this.project_entry.ACTIVATION_FLAG = "1";
    };
    SocRegistrationPage.prototype.SetEntityForProjectUpdate = function () {
        this.project_entry.PROJECT_GUID = this.soc_details_main[0]["PROJECT_GUID"];
        this.project_entry.CREATION_TS = this.soc_details_main[0]["CREATION_TS"];
        this.project_entry.CREATION_USER_GUID = this.soc_details_main[0]["CREATION_USER_GUID"];
        this.project_entry.UPDATE_TS = new Date().toISOString();
        this.project_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.project_entry.ACTIVATION_FLAG = this.soc_details_main[0]["ACTIVATION_FLAG"];
    };
    SocRegistrationPage.prototype.SetCommonEntityForProjectAddUpdate = function () {
        this.project_entry.NAME = this.titlecasePipe.transform(this.PROJECT_NAME_ngModel_Add.trim());
        //this.project_entry.CUSTOMER_GUID = this.customer_entry.CUSTOMER_GUID;
        this.project_entry.CUSTOMER_GUID = this.Customer_GUID;
        this.project_entry.CUSTOMER_LOCATION_GUID = "NA";
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.project_entry.TENANT_GUID = this.Tenant_Add_ngModel.trim();
        }
        else {
            this.project_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        //this.project_entry.TENANT_GUID = this.customer_entry.TENANT_GUID;
        // this.project_entry.ACTIVATION_FLAG = "1";
        // this.project_entry.CREATION_TS = new Date().toISOString();
        // this.project_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        // this.project_entry.UPDATE_TS = new Date().toISOString();
        // this.project_entry.UPDATE_USER_GUID = "";
    };
    SocRegistrationPage.prototype.InsertProject = function () {
        var _this = this;
        this.socservice.save_project(this.project_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.SaveSOC();
            }
        });
    };
    SocRegistrationPage.prototype.UpdateProject = function () {
        var _this = this;
        this.socservice.update_project(this.project_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //alert('Project Updated successfully');
                _this.SaveSOC();
            }
        });
    };
    SocRegistrationPage.prototype.SaveSOC = function () {
        //for Save Set Entities-------------------------------------------------------------
        if (this.Add_Form == true) {
            this.SetEntityForSOCAdd();
        }
        //for Update Set Entities------------------------------------------------------------
        else {
            this.SetEntityForSOCUpdate();
        }
        //Common Entities-------------------------------------------------------------------
        this.SetCommonEntityForSOCAddUpdate();
        //**************Save service if it is new details***************************
        if (this.Add_Form == true) {
            this.InsertSOC();
        }
        //**************Update service if it is new details*************************
        else {
            this.UpdateSOC();
        }
    };
    SocRegistrationPage.prototype.SetEntityForSOCAdd = function () {
        this.soc_entry.SOC_GUID = __WEBPACK_IMPORTED_MODULE_15_angular2_uuid__["UUID"].UUID();
    };
    SocRegistrationPage.prototype.SetEntityForSOCUpdate = function () {
        this.soc_entry.SOC_GUID = this.soc_details_main[0]["SOC_GUID"];
    };
    SocRegistrationPage.prototype.SetCommonEntityForSOCAddUpdate = function () {
        this.soc_entry.SOC_NO = this.SOC_NO_ngModel_Add.trim();
        this.soc_entry.PROJECT_GUID = this.project_entry.PROJECT_GUID;
        this.soc_entry.TENANT_GUID = this.project_entry.TENANT_GUID;
        this.soc_entry.CREATION_TS = this.project_entry.CREATION_TS;
        this.soc_entry.CREATION_USER_GUID = this.project_entry.CREATION_USER_GUID;
        this.soc_entry.UPDATE_TS = this.project_entry.UPDATE_TS;
        this.soc_entry.UPDATE_USER_GUID = this.project_entry.UPDATE_USER_GUID;
    };
    SocRegistrationPage.prototype.InsertSOC = function () {
        var _this = this;
        this.socservice.save_main(this.soc_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('SOC Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageSOCValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    SocRegistrationPage.prototype.UpdateSOC = function () {
        var _this = this;
        this.socservice.update_soc(this.soc_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('SOC Updated successfully');
                //this.loading.dismissAll();
                //Remove all storage values-----------------------------------------            
                _this.RemoveStorageSOCValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    SocRegistrationPage.prototype.RemoveStorageSOCValues = function () {
        localStorage.removeItem("PREV_TENANT_GUID");
        localStorage.removeItem("PREV_SOC_NO");
        localStorage.removeItem("PREV_PROJECT_NAME");
        localStorage.removeItem("PREV_CUSTOMER_NAME");
    };
    SocRegistrationPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            // url = this.baseResource_Url + "view_soc_details?filter=TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ' AND soc=' + this.SOC_NO_ngModel_Add.trim() + ' AND project_name=' + this.PROJECT_NAME_ngModel_Add.trim() + ' AND customer_name=' + this.CUSTOMER_NAME_ngModel_Add.trim() + '&api_key=' + constants.DREAMFACTORY_API_KEY;
            url = this.baseResource_Url + "view_soc_details?filter=TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ' AND soc=' + this.SOC_NO_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "view_soc_details?filter=TENANT_GUID=" + this.Tenant_Add_ngModel + ' AND soc=' + this.SOC_NO_ngModel_Add.trim() + ' AND project_name=' + this.PROJECT_NAME_ngModel_Add.trim() + ' AND customer_name=' + this.CUSTOMER_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    SocRegistrationPage.prototype.Readonly = function () {
        return this.isReadonly = true;
    };
    SocRegistrationPage.prototype.ClearControls = function () {
        this.Tenant_Add_ngModel = "";
        this.SOC_NO_ngModel_Add = "";
        this.PROJECT_NAME_ngModel_Add = "";
        this.CUSTOMER_NAME_ngModel_Add = "";
        // this.LOCATION_NAME_ngModel_Add = "";
        // this.REGISTRATION_NO_ngModel_Add = "";
        // this.ADDRESS1_ngModel_Add = "";
        // this.ADDRESS2_ngModel_Add = "";
        // this.ADDRESS3_ngModel_Add = "";
        // this.CONTACT_PERSON_ngModel_Add = "";
        // this.CONTACT_PERSON_MOBILE_NO_ngModel_Add = "";
        // this.CONTACT_NO1_ngModel_Add = "";
        // this.CONTACT_NO2_ngModel_Add = "";
        // this.EMAIL_ngModel_Add = "";
        // this.DIVISION_ngModel_Add = "";
        this.Customer_GUID = "";
    };
    SocRegistrationPage.prototype.ProjectMainActivation = function (PROJECT_GUID, Activation_Flag) {
        var _this = this;
        //Here get all the customer details and update
        this.GetProjectDetails(PROJECT_GUID);
        var strTitle;
        if (Activation_Flag == true) {
            strTitle = "Do you want to deactivate ?";
        }
        else {
            strTitle = "Do you want to activate ?";
        }
        var alert = this.alertCtrl.create({
            title: 'Activation Confirmation',
            message: strTitle,
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                        // this.socs.ACTIVATION_FLAG = Activation_Flag;
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        if (Activation_Flag == true) {
                            _this.project_entry.ACTIVATION_FLAG = "0";
                        }
                        else {
                            _this.project_entry.ACTIVATION_FLAG = "1";
                        }
                        _this.socservice.update_project(_this.project_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    SocRegistrationPage.prototype.GetProjectDetails = function (PROJECT_GUID) {
        var _this = this;
        var ProjectActivationUrl = this.baseResource_Url + "main_project?filter=(PROJECT_GUID=" + PROJECT_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(ProjectActivationUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.soc_details_main = data["resource"];
            _this.SetEntityForProjectUpdate();
            _this.project_entry.NAME = _this.soc_details_main[0]["NAME"];
            _this.project_entry.CUSTOMER_GUID = _this.soc_details_main[0]["CUSTOMER_GUID"];
            _this.project_entry.CUSTOMER_LOCATION_GUID = _this.soc_details_main[0]["CUSTOMER_LOCATION_GUID"];
            _this.project_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        });
    };
    SocRegistrationPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-soc-registration',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/soc-registration/soc-registration.html"*/'<!--\n  Generated template for the SocRegistrationPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ "SOC_REGISTRATION_HEADING" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddSocClick()" [disabled]="button_Add_Disable" title="Add">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1" style="width:150px">{{ \'SOC_NUMBER\' | translate }}</th>\n          <th class="lgl1">{{ \'PROJECT_NAME\' | translate }}</th>\n          <th class="lgl1">{{ \'CUSTOMER_NAME\' | translate }}</th>\n          <th class="lgl1" *ngIf="AdminLogin">{{ \'Tenant\' | translate }}</th>\n          <th class="lgl1" style="width:85px">{{ \'Active Flag\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let soc of socs | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index"\n          [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Soc Number">{{soc.soc}}</td>\n          <td class="lgl1 getHeader" reshead="Project Name" text-wrap>{{soc.project_name}}</td>\n          <td class="lgl1 getHeader" reshead="Customer Name" text-wrap>{{soc.customer_name}}</td>\n          <td class="lgl1 getHeader" *ngIf="AdminLogin" reshead="Tenant">{{soc.TENANT_ACCOUNT_NAME}}</td>\n\n          <td class="lgl1 getHeader" reshead="Active Flag">\n            <ion-item>\n              <ion-toggle *ngIf="soc.ACTIVATION_FLAG==1" checked=true (ionChange)="ProjectMainActivation(soc.PROJECT_GUID, true)"></ion-toggle>\n              <ion-toggle *ngIf="soc.ACTIVATION_FLAG==0" checked=false (ionChange)="ProjectMainActivation(soc.PROJECT_GUID, false)"></ion-toggle>\n            </ion-item>\n          </td>\n\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <!-- <button ion-button item-end (click)="EditClick(soc.TENANT_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end (click)="DeleteClick(soc.TENANT_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button> -->\n\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(soc.SOC_GUID)" title="Edit">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(soc.SOC_GUID)" title="Delete" style="display: none;">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n  <div class="blackcontainer" *ngIf="AddSocClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddSocClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText" *ngIf="Add_Form">{{ "REGISTER_SOC" | translate }}</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">{{ "UPDATE_SOC" | translate }}</div>\n\n        <button class="btnR" (click)="CloseSocClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list class="scroll">\n        <form [formGroup]="Socform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{ "TENANT" | translate }}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "SOC_NUMBER" | translate }}</ion-label>\n            <ion-input type="text" formControlName="soc" [(ngModel)]="SOC_NO_ngModel_Add" placeholder="{{\'Please fill the soc no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "PROJECT_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="project_name" [(ngModel)]="PROJECT_NAME_ngModel_Add" placeholder="{{\'Please fill the project name\'}}"></ion-input>\n          </ion-item>\n\n          <!-- <ion-item>\n            <ion-label stacked>{{ \'CUSTOMER_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="customer_name" [(ngModel)]="CUSTOMER_NAME_ngModel_Add" placeholder="{{\'Please fill the project name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Location Name\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="location_name" [(ngModel)]="LOCATION_NAME_ngModel_Add" placeholder="{{\'Please fill the location name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Registration Number\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="registration_no" [(ngModel)]="REGISTRATION_NO_ngModel_Add" placeholder="{{\'Please fill the registration number\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Address 1\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="address1" [(ngModel)]="ADDRESS1_ngModel_Add" placeholder="{{\'Please fill the Address 1\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Address 2\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="address2" [(ngModel)]="ADDRESS2_ngModel_Add" placeholder="{{\'Please fill the Address 2\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Address 3\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="address3" [(ngModel)]="ADDRESS3_ngModel_Add" placeholder="{{\'Please fill Address 3\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Conctact Person\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="contact_person" [(ngModel)]="CONTACT_PERSON_ngModel_Add" placeholder="{{\'Please fill the contact person\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Contact Person Mobile No\' | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_person_mobile_no" [(ngModel)]="CONTACT_PERSON_MOBILE_NO_ngModel_Add" placeholder="{{\'Please fill the contact person mobile no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Contact No 1\' | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_no1" [(ngModel)]="CONTACT_NO1_ngModel_Add" placeholder="{{\'Please fill the contact no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Contact No 2\' | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_no2" [(ngModel)]="CONTACT_NO2_ngModel_Add" placeholder="{{\'Please fill the contact no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Email\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="email" [(ngModel)]="EMAIL_ngModel_Add" placeholder="{{\'Please fill the email\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'Division\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="division" [(ngModel)]="DIVISION_ngModel_Add" placeholder="{{\'Please fill the division\'}}"></ion-input>\n          </ion-item> -->\n\n          <ion-item>\n            <ion-label stacked> {{ "CUSTOMER_NAME_LABEL" | translate }} </ion-label>\n            <ion-input [(ngModel)]="CUSTOMER_NAME_ngModel_Add" type="text" formControlName="customer_name" placeholder=" {{ \'CUSTOMER_NAME_PLACE_HOLDER\' | translate }} "\n              [readonly]="Readonly()"></ion-input>\n            <button ion-button outline item-end icon-left (click)="CustomerLookup()">\n              <ion-icon name="eye"></ion-icon>\n              {{ "CUSTOMER LOOKUP" | translate }}\n            </button>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Socform.valid" (click)="Save()">{{ "SUBMIT" | translate }}</button>\n          </div>\n\n        </form>\n      </ion-list>\n    </ion-card>\n\n    <div class="blackcontainer" *ngIf="CustomerLookupClicked">\n    </div>\n    <div class="popup" padding *ngIf="CustomerLookupClicked">\n      <ion-card>\n        <ion-card-header class="icTitle headerColor-white ">\n          <div class="icHeaderText">{{ "CUSTOMER_NAME_LABEL" | translate }}</div>\n          <button class="btnR" (click)="CloseCustomerLookup()">\n            <ion-icon name="md-close"></ion-icon>\n          </button>\n        </ion-card-header>\n        <ion-searchbar [(ngModel)]="Travel_Customer_ngModel" (ionInput)="searchCustomer($event)" placeholder=\'{{ "CUSTOMER_NAME_PLACE_HOLDER" | translate }}\'></ion-searchbar>\n        <ion-list>\n          <ion-item-sliding *ngFor="let item of customers">\n            <button ion-item (click)="GetCustomer(item.CUSTOMER_GUID, item.NAME)">\n              <ion-label>{{item.NAME}}</ion-label>\n            </button>\n          </ion-item-sliding>\n        </ion-list>\n      </ion-card>\n    </div>\n\n  </div>\n  <!-- add Tenant form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/soc-registration/soc-registration.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_11__services_socmain_service__["a" /* SocMain_Service */], __WEBPACK_IMPORTED_MODULE_14__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_11__services_socmain_service__["a" /* SocMain_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], SocRegistrationPage);
    return SocRegistrationPage;
}());

//# sourceMappingURL=soc-registration.js.map

/***/ }),
/* 440 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocMain_Model; });
var SocMain_Model = /** @class */ (function () {
    function SocMain_Model(SOC_GUID, SOC_NO, PROJECT_GUID, TENANT_GUID, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (SOC_GUID === void 0) { SOC_GUID = null; }
        if (SOC_NO === void 0) { SOC_NO = null; }
        if (PROJECT_GUID === void 0) { PROJECT_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.SOC_GUID = SOC_GUID;
        this.SOC_NO = SOC_NO;
        this.PROJECT_GUID = PROJECT_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    SocMain_Model.fromJson = function (json) {
        if (!json)
            return;
        return new SocMain_Model(json.SOC_GUID, json.SOC_NO, json.PROJECT_GUID, json.TENANT_GUID, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    SocMain_Model.prototype.toJson = function (stringify) {
        var doc = {
            SOC_GUID: this.SOC_GUID,
            SOC_NO: this.SOC_NO,
            PROJECT_GUID: this.PROJECT_GUID,
            TENANT_GUID: this.TENANT_GUID,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return SocMain_Model;
}());

//# sourceMappingURL=socmain_model.js.map

/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocMain_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_soc_project_model__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_soc_customer_model__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__models_view_soc_model__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var SocMain_Service = /** @class */ (function () {
    function SocMain_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/soc_main';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_project';
        this.baseResourceUrl2 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_customer';
        this.baseResourceUrl3 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/soc_registration';
        this.baseResourceUrl4 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_customer_location';
    }
    ;
    SocMain_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_9_rxjs_Observable__["Observable"].throw(errMsg);
    };
    SocMain_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var socs = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return socs;
        }).catch(this.handleError);
    };
    ;
    SocMain_Service.prototype.save_main = function (soc_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, soc_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.save_project = function (soc_project) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl1, soc_project.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.save_customer = function (soc_customer) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl2, soc_customer.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.save_customer_location = function (soc_customer_location) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl4, soc_customer_location.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.update_soc = function (soc_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, soc_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.update_project = function (soc_project) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl1, soc_project.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.update_customer = function (soc_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl2, soc_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.update_customer_location = function (soc_customer_location) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl4, soc_customer_location.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SocMain_Service.prototype.edit_soc = function (view_soc) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        //console.log(JSON.stringify(view_soc));
        return this.httpService.http.patch(this.baseResourceUrl, view_soc.toJson(true), options)
            .map(function (response) {
            //console.log(this.baseResourceUrl2);
            return response;
        });
    };
    SocMain_Service.prototype.edit_customer = function (view_customer) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        console.log(JSON.stringify(view_customer));
        return this.httpService.http.patch(this.baseResourceUrl2, view_customer.toJson(true), options)
            .map(function (response) {
            //console.log(this.baseResourceUrl2);
            return response;
        });
    };
    SocMain_Service.prototype.edit_project = function (view_project) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        console.log(JSON.stringify(view_project));
        return this.httpService.http.patch(this.baseResourceUrl1, view_project.toJson(true), options)
            .map(function (response) {
            //console.log(this.baseResourceUrl2);
            return response;
        });
    };
    SocMain_Service.prototype.get_soc = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var socs = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return socs;
        }).catch(this.handleError);
    };
    ;
    SocMain_Service.prototype.remove_soc = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            // .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(this.baseResourceUrl + "?filter=(SOC_GUID=" + id + ')', { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.SOC_GUID;
        });
    };
    SocMain_Service.prototype.remove_customer = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            // .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(this.baseResourceUrl2 + "?filter=(CUSTOMER_GUID=" + id + ')', { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.CUSTOMER_GUID;
        });
    };
    SocMain_Service.prototype.remove_customer_location = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            // .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(this.baseResourceUrl4 + "?filter=(CUSTOMER_LOCATION_GUID=" + id + ')', { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.CUSTOMER_LOCATION_GUID;
        });
    };
    SocMain_Service.prototype.remove_project = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            // .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(this.baseResourceUrl1 + "?filter=(PROJECT_GUID=" + id + ')', { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PROJECT_GUID;
        });
    };
    SocMain_Service.prototype.get1 = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        alert('service edit1');
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        alert('service edit2');
        return this.httpService.http
            .get(this.baseResourceUrl3 + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var soc = __WEBPACK_IMPORTED_MODULE_5__models_view_soc_model__["a" /* View_SOC_Model */].fromJson(result);
            //alert('service edit3');
            return soc;
        }).catch(this.handleError);
    };
    ;
    SocMain_Service.prototype.get2 = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var soc_project = __WEBPACK_IMPORTED_MODULE_3__models_soc_project_model__["a" /* SocProject_Model */].fromJson(result);
            return soc_project;
        }).catch(this.handleError);
    };
    ;
    SocMain_Service.prototype.get3 = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var soc_customer = __WEBPACK_IMPORTED_MODULE_4__models_soc_customer_model__["a" /* SocCustomer_Model */].fromJson(result);
            return soc_customer;
        }).catch(this.handleError);
    };
    ;
    SocMain_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__base_http__["a" /* BaseHttpService */]])
    ], SocMain_Service);
    return SocMain_Service;
}());

//# sourceMappingURL=socmain_service.js.map

/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Tenant_Main_Model; });
var Tenant_Main_Model = /** @class */ (function () {
    function Tenant_Main_Model(TENANT_GUID, PARENT_TENANT_GUID, TENANT_ACCOUNT_NAME, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (PARENT_TENANT_GUID === void 0) { PARENT_TENANT_GUID = null; }
        if (TENANT_ACCOUNT_NAME === void 0) { TENANT_ACCOUNT_NAME = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.TENANT_GUID = TENANT_GUID;
        this.PARENT_TENANT_GUID = PARENT_TENANT_GUID;
        this.TENANT_ACCOUNT_NAME = TENANT_ACCOUNT_NAME;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    Tenant_Main_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Tenant_Main_Model(json.TENANT_GUID, json.PARENT_TENANT_GUID, json.TENANT_ACCOUNT_NAME, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    Tenant_Main_Model.prototype.toJson = function (stringify) {
        var doc = {
            TENANT_GUID: this.TENANT_GUID,
            PARENT_TENANT_GUID: this.PARENT_TENANT_GUID,
            TENANT_ACCOUNT_NAME: this.TENANT_ACCOUNT_NAME,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Tenant_Main_Model;
}());

//# sourceMappingURL=tenant_main_model.js.map

/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CountrysetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_countrysetup_model__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_countrysetup_service__ = __webpack_require__(614);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the CountrysetupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CountrysetupPage = /** @class */ (function () {
    function CountrysetupPage(navCtrl, navParams, fb, http, countrysetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.countrysetupservice = countrysetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.country_entry = new __WEBPACK_IMPORTED_MODULE_7__models_countrysetup_model__["a" /* CountrySetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_country' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.countries = [];
        this.AddCountryClicked = false;
        this.Exist_Record = false;
        // public CODE_ngModel_Add: any;
        //---------------------------------------------------------------------
        this.Add_Form = false;
        this.Edit_Form = false;
        this.HeaderText = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
            }
            //Clear localStorage value--------------------------------      
            this.ClearLocalStorage();
            //Display Grid---------------------------- 
            this.DisplayGrid();
            //----------------------------------------
            this.Countryform = fb.group({
                NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
            });
        }
    }
    CountrysetupPage.prototype.AddCountryClick = function () {
        if (this.Edit_Form == false) {
            this.AddCountryClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.HeaderText = "REGISTER NEW COUNTRY";
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    CountrysetupPage.prototype.EditClick = function (COUNTRY_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddCountryClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE COUNTRY";
        var self = this;
        this.countrysetupservice
            .get(COUNTRY_GUID)
            .subscribe(function (data) {
            self.country_details = data;
            _this.NAME_ngModel_Add = self.country_details.NAME;
            localStorage.setItem('Prev_country', self.country_details.NAME);
            _this.loading.dismissAll();
        });
    };
    CountrysetupPage.prototype.DeleteClick = function (COUNTRY_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.countrysetupservice.remove(COUNTRY_GUID)
                            .subscribe(function () {
                            self.countries = self.countries.filter(function (item) {
                                return item.COUNTRY_GUID != COUNTRY_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    CountrysetupPage.prototype.CloseCountryClick = function () {
        if (this.AddCountryClicked == true) {
            this.AddCountryClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    CountrysetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CountrysetupPage');
    };
    CountrysetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_country') == null) {
            localStorage.setItem('Prev_country', null);
        }
        else {
            localStorage.removeItem("Prev_country");
        }
    };
    CountrysetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.countries = data.resource;
            _this.loading.dismissAll();
        });
    };
    CountrysetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Countryform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_country = "";
            if (localStorage.getItem('Prev_country') != null) {
                strPrev_country = localStorage.getItem('Prev_country').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_country) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Country is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update---------- 
                this.Update();
            }
        }
    };
    CountrysetupPage.prototype.SetEntityForAdd = function () {
        this.country_entry.COUNTRY_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.country_entry.CREATION_TS = new Date().toISOString();
        this.country_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.country_entry.UPDATE_TS = new Date().toISOString();
        this.country_entry.UPDATE_USER_GUID = "";
    };
    CountrysetupPage.prototype.SetEntityForUpdate = function () {
        this.country_entry.COUNTRY_GUID = this.country_details.COUNTRY_GUID;
        this.country_entry.CREATION_TS = this.country_details.CREATION_TS;
        this.country_entry.CREATION_USER_GUID = this.country_details.CREATION_USER_GUID;
        this.country_entry.UPDATE_TS = new Date().toISOString();
        this.country_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
    };
    CountrysetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.country_entry.NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
    };
    CountrysetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_country");
    };
    CountrysetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "main_country?filter=NAME=" + this.NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    CountrysetupPage.prototype.Insert = function () {
        var _this = this;
        this.countrysetupservice.save(this.country_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Country Registered Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CountrysetupPage.prototype.Update = function () {
        var _this = this;
        this.countrysetupservice.update(this.country_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Country Updated Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CountrysetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
    };
    CountrysetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-countrysetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/countrysetup/countrysetup.html"*/'<!--\n  Generated template for the CountrysetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar  color="primary200">\n    <ion-title>{{ \'COUNTRY_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddCountryClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'COUNTRY_NAME\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let country of countries | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Country Name">{{country.NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(country.COUNTRY_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(country.COUNTRY_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add country form start-->\n  <div class="blackcontainer" *ngIf="AddCountryClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddCountryClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <!-- <div class="icHeaderText">REGISTER NEW COUNTRY</div> -->\n        <div class="icHeaderText">{{HeaderText}}</div>\n        <button class="btnR" (click)="CloseCountryClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Countryform">\n          <ion-item>\n            <ion-label stacked>{{ \'COUNTRY_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" required placeholder="{{\'Please fill country name\'}}"></ion-input>\n          </ion-item>\n          <!-- <ion-item>\n            <ion-label stacked>{{ \'Country Code\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="CODE" [(ngModel)]="CODE_ngModel_Add" required placeholder="{{\'Please fill country code\'}}"></ion-input>\n          </ion-item> -->\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Countryform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add country form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/countrysetup/countrysetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_countrysetup_service__["a" /* CountrySetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_countrysetup_service__["a" /* CountrySetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], CountrysetupPage);
    return CountrysetupPage;
}());

//# sourceMappingURL=countrysetup.js.map

/***/ }),
/* 444 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StatesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_statesetup_model__ = __webpack_require__(445);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_countrysetup_model__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_statesetup_service__ = __webpack_require__(615);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the StatesetupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var StatesetupPage = /** @class */ (function () {
    function StatesetupPage(navCtrl, navParams, fb, http, statesetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.statesetupservice = statesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.state_entry = new __WEBPACK_IMPORTED_MODULE_7__models_statesetup_model__["a" /* StateSetup_Model */]();
        this.country_entry = new __WEBPACK_IMPORTED_MODULE_8__models_countrysetup_model__["a" /* CountrySetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_state' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl_country = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_country' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResourceUrl_view = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_state' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.AddStateClicked = false;
        this.EditStateClicked = false;
        this.Exist_Record = false;
        //---------------------------------------------------------------------
        this.Add_Form = false;
        this.Edit_Form = false;
        this.HeaderText = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
            }
            //Clear localStorage value--------------------------------      
            this.ClearLocalStorage();
            //Bind Country-------------
            this.BindCountry();
            //Display Grid---------------------------- 
            this.DisplayGrid();
            //----------------------------------------
            this.Stateform = fb.group({
                NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                COUNTRY_GUID: ["", __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            });
        }
    }
    StatesetupPage.prototype.AddStateClick = function () {
        if (this.Edit_Form == false) {
            this.AddStateClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.HeaderText = "REGISTER NEW STATE";
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    StatesetupPage.prototype.EditClick = function (STATE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddStateClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE COUNTRY";
        var self = this;
        this.statesetupservice
            .get(STATE_GUID)
            .subscribe(function (data) {
            self.state_details = data;
            _this.STATE_NAME_ngModel_Add = self.state_details.NAME;
            localStorage.setItem('Previ_state', self.state_details.NAME);
            _this.COUNTRY_NAME_ngModel_Add = self.state_details.COUNTRY_GUID;
            _this.loading.dismissAll();
        });
    };
    StatesetupPage.prototype.DeleteClick = function (STATE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.statesetupservice.remove(STATE_GUID)
                            .subscribe(function () {
                            self.states = self.states.filter(function (item) {
                                return item.STATE_GUID != STATE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    StatesetupPage.prototype.CloseStateClick = function () {
        if (this.AddStateClicked == true) {
            this.AddStateClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    StatesetupPage.prototype.BindCountry = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl_country)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.countries = data["resource"];
        });
    };
    StatesetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Previ_state') == null) {
            localStorage.setItem('Previ_state', null);
        }
        else {
            localStorage.removeItem("Previ_state");
        }
    };
    StatesetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(this.baseResourceUrl_view)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.states = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    StatesetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.states = this.stores;
            return;
        }
        this.states = this.filter({
            STATE_NAME: val,
            COUNTRY_NAME: val
        });
    };
    StatesetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    StatesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Stateform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            // debugger;
            var strPrev_Value = "";
            if (localStorage.getItem('Previ_state') != null) {
                strPrev_Value = localStorage.getItem('Previ_state').toUpperCase();
            }
            if (this.STATE_NAME_ngModel_Add.trim().toUpperCase() != strPrev_Value) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The State is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update---------- 
                this.Update();
            }
        }
    };
    StatesetupPage.prototype.SetEntityForAdd = function () {
        this.state_entry.STATE_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
        this.state_entry.CREATION_TS = new Date().toISOString();
        this.state_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.state_entry.UPDATE_TS = new Date().toISOString();
        this.state_entry.UPDATE_USER_GUID = "";
    };
    StatesetupPage.prototype.SetEntityForUpdate = function () {
        this.state_entry.STATE_GUID = this.state_details.STATE_GUID;
        this.state_entry.CREATION_TS = this.state_details.CREATION_TS;
        this.state_entry.CREATION_USER_GUID = this.state_details.CREATION_USER_GUID;
        this.state_entry.UPDATE_TS = new Date().toISOString();
        this.state_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
    };
    StatesetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.state_entry.NAME = this.titlecasePipe.transform(this.STATE_NAME_ngModel_Add.trim());
        this.state_entry.COUNTRY_GUID = this.COUNTRY_NAME_ngModel_Add.trim();
    };
    StatesetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Previ_state");
    };
    StatesetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        // debugger;
        url = this.baseResource_Url + "main_state?filter=NAME=" + this.STATE_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    StatesetupPage.prototype.Insert = function () {
        var _this = this;
        this.statesetupservice.Save(this.state_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('State Registered Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    StatesetupPage.prototype.Update = function () {
        var _this = this;
        this.statesetupservice.Update(this.state_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('State Updated Successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    StatesetupPage.prototype.ClearControls = function () {
        this.STATE_NAME_ngModel_Add = "";
        this.COUNTRY_NAME_ngModel_Add = "";
    };
    StatesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-statesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/statesetup/statesetup.html"*/'<!--\n  Generated template for the StatesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'STATE_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddStateClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'STATE_NAME\' | translate }}</th>\n          <th class="lgl1">{{ \'COUNTRY_NAME\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let state of states | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <!-- <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td> -->\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="State Name">{{state.STATE_NAME}}</td>\n          <td class="lgl1 getHeader" reshead="Country Name">{{state.COUNTRY_NAME}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(state.STATE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(state.STATE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add country form start-->\n  <div class="blackcontainer" *ngIf="AddStateClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddStateClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{HeaderText}}</div>\n\n        <button class="btnR" (click)="CloseStateClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Stateform">\n\n          <ion-item>\n            <ion-label stacked>{{ \'STATE_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="STATE_NAME_ngModel_Add" required placeholder="{{\'Please fill in the state\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="text">\n            <ion-label stacked>{{ \'COUNTRY_NAME\' | translate }}</ion-label>\n            <ion-select formControlName="COUNTRY_GUID" [(ngModel)]="COUNTRY_NAME_ngModel_Add" placeholder="{{\'Please fill the country\'}}">\n              <ion-option *ngFor="let country of countries" [value]="country.COUNTRY_GUID">{{country.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Stateform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add country form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/statesetup/statesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_9__services_statesetup_service__["a" /* StateSetup_Service */], __WEBPACK_IMPORTED_MODULE_10__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_statesetup_service__["a" /* StateSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], StatesetupPage);
    return StatesetupPage;
}());

//# sourceMappingURL=statesetup.js.map

/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StateSetup_Model; });
var StateSetup_Model = /** @class */ (function () {
    function StateSetup_Model(STATE_GUID, NAME, COUNTRY_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (STATE_GUID === void 0) { STATE_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (COUNTRY_GUID === void 0) { COUNTRY_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.STATE_GUID = STATE_GUID;
        this.NAME = NAME;
        this.COUNTRY_GUID = COUNTRY_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    StateSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new StateSetup_Model(json.STATE_GUID, json.NAME, json.COUNTRY_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    StateSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            STATE_GUID: this.STATE_GUID,
            NAME: this.NAME,
            COUNTRY_GUID: this.COUNTRY_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return StateSetup_Model;
}());

//# sourceMappingURL=statesetup_model.js.map

/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImportExcelDataPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_soc_customer_model__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_soc_project_model__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_socmain_model__ = __webpack_require__(440);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__models_soc_customer_location_model__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_usersetup_info_model__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_usersetup_address_model__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__models_user_company_model__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_user_contact_model__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__models_user_qualification_model__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__models_user_role_model__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__models_main_attendance_model__ = __webpack_require__(616);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__models_device_raw_data_model__ = __webpack_require__(617);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__models_user_attendance_main_model__ = __webpack_require__(618);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__models_leave_raw_data_model__ = __webpack_require__(619);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_xlsx__ = __webpack_require__(288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_xlsx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_moment__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23_file_saver__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_23_file_saver__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
























/**
 * Generated class for the ImportExcelDataPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ImportExcelDataPage = /** @class */ (function () {
    // constructor(private apiMng: ApiManagerProvider, public datepipe: DatePipe, public navCtrl: NavController, public navParams: NavParams, public http: Http, private loadingCtrl: LoadingController) {
    function ImportExcelDataPage(apiMng, navCtrl, navParams, http, loadingCtrl) {
        this.apiMng = apiMng;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.loadingCtrl = loadingCtrl;
        // test_model: test_model = new test_model();  
        this.test_model = new __WEBPACK_IMPORTED_MODULE_3__models_soc_project_model__["a" /* SocProject_Model */]();
        // test_model: SocMain_Model = new SocMain_Model();
        this.SocCustomerLocation_Model = new __WEBPACK_IMPORTED_MODULE_5__models_soc_customer_location_model__["a" /* SocCustomerLocation_Model */]();
        this.UserMain_Model = new __WEBPACK_IMPORTED_MODULE_6__models_user_main_model__["a" /* UserMain_Model */]();
        this.chooseFile = false;
        // For main_customer
        this.chooseFile_main_customer = false;
        this.SocCustomer_Model = new __WEBPACK_IMPORTED_MODULE_2__models_soc_customer_model__["a" /* SocCustomer_Model */]();
        // For main_project
        this.chooseFile_incomingfile = false;
        // For main_customer_location
        this.chooseFile_main_customer_location = false;
        // For soc_main
        this.chooseFile_soc_main = false;
        this.SocMain_Model = new __WEBPACK_IMPORTED_MODULE_4__models_socmain_model__["a" /* SocMain_Model */]();
        // For user_main
        this.chooseFile_user_main = false;
        // For user_info
        this.chooseFile_user_info = false;
        this.UserInfo_Model = new __WEBPACK_IMPORTED_MODULE_7__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        // For user_address
        this.chooseFile_user_address = false;
        this.UserAddress_Model = new __WEBPACK_IMPORTED_MODULE_8__models_usersetup_address_model__["a" /* UserAddress_Model */]();
        // For user_company
        this.chooseFile_user_company = false;
        this.UserCompany_Model = new __WEBPACK_IMPORTED_MODULE_9__models_user_company_model__["a" /* UserCompany_Model */]();
        // For user_contact
        this.chooseFile_user_contact = false;
        this.UserContact_Model = new __WEBPACK_IMPORTED_MODULE_10__models_user_contact_model__["a" /* UserContact_Model */]();
        // For user_qualification
        this.chooseFile_user_qualification = false;
        this.UserQualification_Model = new __WEBPACK_IMPORTED_MODULE_11__models_user_qualification_model__["a" /* UserQualification_Model */]();
        // For user_role
        this.chooseFile_user_role = false;
        this.UserRole_Model = new __WEBPACK_IMPORTED_MODULE_12__models_user_role_model__["a" /* UserRole_Model */]();
        //  For main_attendance
        this.chooseFile_main_attendance = false;
        this.Main_Attendance_Model = new __WEBPACK_IMPORTED_MODULE_13__models_main_attendance_model__["a" /* Main_Attendance_Model */]();
        this.Device_Raw_Data_Model = new __WEBPACK_IMPORTED_MODULE_14__models_device_raw_data_model__["a" /* Device_Raw_Data_Model */]();
        this.attendance_Url = "";
        this.User_Attendance_Main_Model_List = [];
        this.User_Attendance_Main_Model = new __WEBPACK_IMPORTED_MODULE_15__models_user_attendance_main_model__["a" /* User_Attendance_Main_Model */]();
        // For user_role
        this.chooseFile_user_template = false;
        this.Main_Template_Model = new __WEBPACK_IMPORTED_MODULE_6__models_user_main_model__["a" /* UserMain_Model */]();
        this.Info_Template_Model = new __WEBPACK_IMPORTED_MODULE_7__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        this.Address_Template_Model = new __WEBPACK_IMPORTED_MODULE_8__models_usersetup_address_model__["a" /* UserAddress_Model */]();
        this.Company_Template_Model = new __WEBPACK_IMPORTED_MODULE_9__models_user_company_model__["a" /* UserCompany_Model */]();
        this.Contact_Template_Model = new __WEBPACK_IMPORTED_MODULE_10__models_user_contact_model__["a" /* UserContact_Model */]();
        this.Qualification_Template_Model = new __WEBPACK_IMPORTED_MODULE_11__models_user_qualification_model__["a" /* UserQualification_Model */]();
        this.Role_Template_Model = new __WEBPACK_IMPORTED_MODULE_12__models_user_role_model__["a" /* UserRole_Model */]();
        // User_template end
        // -------------------
        //Customer_template start
        this.chooseFile_customer_template = false;
        // project_template_Url: any;
        // soc_template_Url: any;
        this.Customer_Template_Model = new __WEBPACK_IMPORTED_MODULE_2__models_soc_customer_model__["a" /* SocCustomer_Model */]();
        this.CustomerLocation_Template_Model = new __WEBPACK_IMPORTED_MODULE_5__models_soc_customer_location_model__["a" /* SocCustomerLocation_Model */]();
        //code for inserting data into customer location end
        //Customer_template end
        // For SOC template start
        this.chooseFile_soc_template = false;
        this.Project_Template_Model = new __WEBPACK_IMPORTED_MODULE_3__models_soc_project_model__["a" /* SocProject_Model */]();
        this.SOC_Template_Model = new __WEBPACK_IMPORTED_MODULE_4__models_socmain_model__["a" /* SocMain_Model */]();
        this.download_file_name = "";
        this.TempArray = [];
        this.AttendanceArray = [];
        this.attendance_main_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_attendance_main?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        //  For main_attendance
        this.chooseFile_main_leave = false;
        this.Leave_Raw_Data_Model = new __WEBPACK_IMPORTED_MODULE_16__models_leave_raw_data_model__["a" /* Leave_Raw_Data_Model */]();
        this.Final_leave_data = [];
        this.leave_Url = "";
        this.ctr = 0;
        this.Get_Device_GUID();
    }
    ImportExcelDataPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ImportExcelDataPage');
    };
    //duplicate check for main_customer
    ImportExcelDataPage.prototype.duplicateCheck_mainCustomer = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_customer', 'filter=CUSTOMER_GUID=' + checkData.CUSTOMER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.SocCustomer_Model.CUSTOMER_GUID = checkData.CUSTOMER_GUID;
                _this.SocCustomer_Model.TENANT_GUID = checkData.TENANT_GUID;
                _this.SocCustomer_Model.NAME = checkData.NAME;
                _this.SocCustomer_Model.DESCRIPTION = checkData.DESCRIPTION;
                _this.SocCustomer_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.SocCustomer_Model.CREATION_USER_GUID = 'sva_test';
                _this.SocCustomer_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.SocCustomer_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_1 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.main_customer_Url, _this.SocCustomer_Model.toJson(true), options_1)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.main_customer = function (event) {
        this.chooseFile_main_customer = true;
        this.file_main_customer = event.target.files[0];
    };
    ImportExcelDataPage.prototype.main_customer_click = function () {
        var _this = this;
        this.main_customer_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_customer?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_main_customer = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_main_customer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.main_customer_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.main_customer_data);
            console.log(_this.main_customer_data.length);
            _this.main_customer_data.forEach(function (element) {
                _this.duplicateCheck_mainCustomer(element);
                // For main_customer
                // this.SocCustomer_Model.CUSTOMER_GUID = element.CUSTOMER_GUID;
                // this.SocCustomer_Model.TENANT_GUID = element.TENANT_GUID;
                // this.SocCustomer_Model.NAME = element.NAME;
                // this.SocCustomer_Model.DESCRIPTION = element.DESCRIPTION;
                // this.SocCustomer_Model.CREATION_TS = new Date().toISOString();;
                // this.SocCustomer_Model.CREATION_USER_GUID = 'sva_test';
                // this.SocCustomer_Model.UPDATE_TS = new Date().toISOString();;
                // this.SocCustomer_Model.UPDATE_USER_GUID = 'sva_test';
                // var queryHeaders = new Headers();
                // queryHeaders.append('Content-Type', 'application/json');
                // queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
                // let options = new RequestOptions({ headers: queryHeaders });
                // return new Promise((resolve, reject) => {
                //   this.http.post(this.main_customer_Url, this.SocCustomer_Model.toJson(true), options)
                //     .map((response) => {
                //       return response;
                //     }).subscribe((response) => {
                //       resolve(response.json());
                //     })
                // })
            });
        };
        fileReader.readAsArrayBuffer(this.file_main_customer);
    };
    //duplicate check for main_customer
    ImportExcelDataPage.prototype.duplicateCheck_mainProject = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_project', 'filter=CUSTOMER_GUID=' + checkData.CUSTOMER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.test_model.PROJECT_GUID = checkData.PROJECT_GUID;
                _this.test_model.NAME = checkData.NAME;
                _this.test_model.CUSTOMER_GUID = checkData.CUSTOMER_GUID;
                _this.test_model.CUSTOMER_LOCATION_GUID = checkData.CUSTOMER_LOCATION_GUID;
                _this.test_model.TENANT_GUID = checkData.TENANT_GUID;
                _this.test_model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
                _this.test_model.CREATION_TS = new Date().toISOString();
                ;
                _this.test_model.CREATION_USER_GUID = 'sva_test';
                _this.test_model.UPDATE_TS = new Date().toISOString();
                ;
                _this.test_model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_2 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.baseResourceurl_Excel, _this.test_model.toJson(true), options_2)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.incomingfile = function (event) {
        this.chooseFile_incomingfile = true;
        this.file = event.target.files[0];
    };
    ImportExcelDataPage.prototype.Upload = function () {
        var _this = this;
        //  debugger;
        //this.chooseFile = true;
        // this.baseResourceurl_Excel = constants.DREAMFACTORY_TABLE_URL + '/newtable?&api_key=' + constants.DREAMFACTORY_API_KEY;
        // this.baseResourceurl_Excel = constants.DREAMFACTORY_TABLE_URL + '/main_customer?&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResourceurl_Excel = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_project?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // this.baseResourceurl_Excel = constants.DREAMFACTORY_TABLE_URL + '/soc_main?&api_key=' + constants.DREAMFACTORY_API_KEY;
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.new_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.new_data);
            console.log(_this.new_data.length);
            // for(var i=0 ; i<=this.new_data.length ; i++)
            // {
            _this.new_data.forEach(function (element) {
                _this.duplicateCheck_mainProject(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file);
    };
    //duplicate check for main_customer_location
    ImportExcelDataPage.prototype.duplicateCheck_mainCustomerLocation = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_project', 'filter=CUSTOMER_GUID=' + checkData.CUSTOMER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.SocCustomerLocation_Model.CUSTOMER_GUID = checkData.CUSTOMER_GUID;
                _this.SocCustomerLocation_Model.CUSTOMER_LOCATION_GUID = checkData.CUSTOMER_LOCATION_GUID;
                _this.SocCustomerLocation_Model.NAME = checkData.NAME;
                _this.SocCustomerLocation_Model.DESCRIPTION = checkData.DESCRIPTION;
                _this.SocCustomerLocation_Model.REGISTRATION_NO = checkData.REGISTRATION_NO;
                _this.SocCustomerLocation_Model.ADDRESS1 = checkData.ADDRESS1;
                _this.SocCustomerLocation_Model.ADDRESS2 = checkData.ADDRESS2;
                _this.SocCustomerLocation_Model.ADDRESS3 = checkData.ADDRESS3;
                _this.SocCustomerLocation_Model.CONTACT_PERSON = checkData.CONTACT_PERSON;
                _this.SocCustomerLocation_Model.CONTACT_PERSON_MOBILE_NO = checkData.CONTACT_PERSON_MOBILE_NO;
                _this.SocCustomerLocation_Model.CONTACT_NO1 = checkData.CONTACT_NO1;
                _this.SocCustomerLocation_Model.CONTACT_NO2 = checkData.CONTACT_NO2;
                _this.SocCustomerLocation_Model.EMAIL = checkData.EMAIL;
                _this.SocCustomerLocation_Model.DIVISION = checkData.DIVISION;
                _this.SocCustomerLocation_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.SocCustomerLocation_Model.CREATION_USER_GUID = 'sva_test';
                _this.SocCustomerLocation_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.SocCustomerLocation_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_3 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.main_customer_location_Url, _this.SocCustomerLocation_Model.toJson(true), options_3)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.main_customer_location = function (event) {
        this.chooseFile_main_customer_location = true;
        this.file = event.target.files[0];
    };
    ImportExcelDataPage.prototype.main_customer_location_click = function () {
        var _this = this;
        this.main_customer_location_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_customer_location?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_main_customer_location = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_main_customer_location);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.main_customer_location_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.main_customer_location_data);
            console.log(_this.main_customer_location_data.length);
            _this.main_customer_location_data.forEach(function (element) {
                _this.duplicateCheck_mainCustomerLocation(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file);
    };
    //duplicate check for soc_main
    ImportExcelDataPage.prototype.duplicateCheck_SOCMain = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('soc_main', 'filter=PROJECT_GUID=' + checkData.CUSTOMER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.SocMain_Model.SOC_GUID = checkData.SOC_GUID;
                _this.SocMain_Model.SOC_NO = checkData.SOC_NO;
                _this.SocMain_Model.PROJECT_GUID = checkData.PROJECT_GUID;
                _this.SocMain_Model.TENANT_GUID = checkData.TENANT_GUID;
                _this.SocMain_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
                _this.SocMain_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.SocMain_Model.CREATION_USER_GUID = 'sva_test';
                _this.SocMain_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.SocMain_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_4 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.soc_main_Url, _this.SocMain_Model.toJson(true), options_4)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.soc_main = function (event) {
        this.chooseFile_soc_main = true;
        this.file_soc_main = event.target.files[0];
    };
    ImportExcelDataPage.prototype.soc_main_click = function () {
        var _this = this;
        this.soc_main_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/soc_main?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_main_customer = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_main_customer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.soc_main_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.soc_main_data);
            console.log(_this.soc_main_data.length);
            _this.soc_main_data.forEach(function (element) {
                _this.duplicateCheck_SOCMain(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_soc_main);
    };
    //duplicate check for user_main
    ImportExcelDataPage.prototype.duplicateCheck_userMain = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_main', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserMain_Model.USER_GUID = checkData.USER_GUID;
                _this.UserMain_Model.TENANT_GUID = checkData.TENANT_GUID;
                _this.UserMain_Model.STAFF_ID = checkData.STAFF_ID;
                _this.UserMain_Model.LOGIN_ID = checkData.LOGIN_ID;
                _this.UserMain_Model.PASSWORD = checkData.PASSWORD;
                _this.UserMain_Model.EMAIL = checkData.EMAIL;
                _this.UserMain_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
                _this.UserMain_Model.IS_TENANT_ADMIN = checkData.IS_TENANT_ADMIN;
                _this.UserMain_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserMain_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserMain_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserMain_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_5 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_main_Url, _this.UserMain_Model.toJson(true), options_5)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_main = function (event) {
        this.chooseFile_user_main = true;
        this.file_user_main = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_main_click = function () {
        var _this = this;
        this.user_main_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_main?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_main = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_main);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.main_customer_location_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.main_customer_location_data);
            console.log(_this.main_customer_location_data.length);
            _this.main_customer_location_data.forEach(function (element) {
                _this.duplicateCheck_userMain(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_main);
    };
    //duplicate check for user_info
    ImportExcelDataPage.prototype.duplicateCheck_userInfo = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_info', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserInfo_Model.USER_INFO_GUID = checkData.USER_INFO_GUID;
                _this.UserInfo_Model.USER_GUID = checkData.USER_GUID;
                _this.UserInfo_Model.FULLNAME = checkData.FULLNAME;
                _this.UserInfo_Model.NICKNAME = checkData.NICKNAME;
                _this.UserInfo_Model.SALUTATION = checkData.SALUTATION;
                _this.UserInfo_Model.MANAGER_USER_GUID = checkData.MANAGER_USER_GUID;
                _this.UserInfo_Model.PERSONAL_ID_TYPE = checkData.PERSONAL_ID_TYPE;
                _this.UserInfo_Model.PERSONAL_ID = checkData.PERSONAL_ID;
                _this.UserInfo_Model.DOB = checkData.DOB;
                _this.UserInfo_Model.GENDER = checkData.GENDER;
                _this.UserInfo_Model.JOIN_DATE = checkData.JOIN_DATE;
                _this.UserInfo_Model.MARITAL_STATUS = checkData.MARITAL_STATUS;
                _this.UserInfo_Model.BRANCH = checkData.BRANCH;
                _this.UserInfo_Model.EMPLOYEE_TYPE = checkData.EMPLOYEE_TYPE;
                _this.UserInfo_Model.APPROVER1 = checkData.APPROVER1;
                _this.UserInfo_Model.APPROVER2 = checkData.APPROVER2;
                _this.UserInfo_Model.EMPLOYEE_STATUS = checkData.EMPLOYEE_STATUS;
                _this.UserInfo_Model.DEPT_GUID = checkData.DEPT_GUID;
                _this.UserInfo_Model.DESIGNATION_GUID = checkData.DESIGNATION_GUID;
                _this.UserInfo_Model.RESIGNATION_DATE = checkData.RESIGNATION_DATE;
                _this.UserInfo_Model.TENANT_COMPANY_GUID = checkData.TENANT_COMPANY_GUID;
                _this.UserInfo_Model.CONFIRMATION_DATE = checkData.CONFIRMATION_DATE;
                _this.UserInfo_Model.TENANT_COMPANY_SITE_GUID = checkData.TENANT_COMPANY_SITE_GUID;
                _this.UserInfo_Model.EMG_CONTACT_NAME_1 = checkData.EMG_CONTACT_NAME_1;
                _this.UserInfo_Model.EMG_RELATIONSHIP_1 = checkData.EMG_RELATIONSHIP_1;
                _this.UserInfo_Model.EMG_CONTACT_NUMBER_1 = checkData.EMG_CONTACT_NUMBER_1;
                _this.UserInfo_Model.EMG_CONTACT_NAME_2 = checkData.EMG_CONTACT_NAME_2;
                _this.UserInfo_Model.EMG_RELATIONSHIP_2 = checkData.EMG_RELATIONSHIP_2;
                _this.UserInfo_Model.EMG_CONTACT_NUMBER_2 = checkData.EMG_CONTACT_NUMBER_2;
                _this.UserInfo_Model.PR_EPF_NUMBER = checkData.PR_EPF_NUMBER;
                _this.UserInfo_Model.PR_INCOMETAX_NUMBER = checkData.PR_INCOMETAX_NUMBER;
                _this.UserInfo_Model.BANK_GUID = checkData.BANK_GUID;
                _this.UserInfo_Model.PR_ACCOUNT_NUMBER = checkData.PR_ACCOUNT_NUMBER;
                _this.UserInfo_Model.ATTACHMENT_ID = checkData.ATTACHMENT_ID;
                _this.UserInfo_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserInfo_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserInfo_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserInfo_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_6 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_info_Url, _this.UserInfo_Model.toJson(true), options_6)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_info = function (event) {
        this.chooseFile_user_info = true;
        this.file_user_info = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_info_click = function () {
        var _this = this;
        this.user_info_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_info?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_info = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_info);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            //  var workbook = XLSX.read(bstr, { type: "binary" });
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary", cellDates: true, cellNF: false, cellText: false });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            //  this.main_customer_location_data = XLSX.utils.sheet_to_json(worksheet, { raw: true})
            _this.main_customer_location_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet);
            console.log(_this.main_customer_location_data);
            console.log(_this.main_customer_location_data.length);
            _this.main_customer_location_data.forEach(function (element) {
                _this.duplicateCheck_userInfo(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_info);
    };
    //duplicate check for user_address
    ImportExcelDataPage.prototype.duplicateCheck_userAddress = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_address', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserAddress_Model.USER_ADDRESS_GUID = checkData.USER_ADDRESS_GUID;
                _this.UserAddress_Model.USER_GUID = checkData.USER_GUID;
                _this.UserAddress_Model.ADDRESS_TYPE = checkData.ADDRESS_TYPE;
                _this.UserAddress_Model.USER_ADDRESS1 = checkData.USER_ADDRESS1;
                _this.UserAddress_Model.USER_ADDRESS2 = checkData.USER_ADDRESS2;
                _this.UserAddress_Model.USER_ADDRESS3 = checkData.USER_ADDRESS3;
                _this.UserAddress_Model.POST_CODE = checkData.POST_CODE;
                _this.UserAddress_Model.COUNTRY_GUID = checkData.COUNTRY_GUID;
                _this.UserAddress_Model.STATE_GUID = checkData.STATE_GUID;
                _this.UserAddress_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserAddress_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserAddress_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserAddress_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_7 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_address_Url, _this.UserAddress_Model.toJson(true), options_7)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_address = function (event) {
        this.chooseFile_user_address = true;
        this.file_user_address = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_address_click = function () {
        var _this = this;
        this.user_address_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_address?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_address = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_address);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_address_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_address_data);
            console.log(_this.user_address_data.length);
            _this.user_address_data.forEach(function (element) {
                _this.duplicateCheck_userAddress(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_address);
    };
    //duplicate check for user_address
    ImportExcelDataPage.prototype.duplicateCheck_userCompany = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_company', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserCompany_Model.USER_COMPANY_GUID = checkData.USER_COMPANY_GUID;
                _this.UserCompany_Model.USER_GUID = checkData.USER_GUID;
                _this.UserCompany_Model.TENANT_COMPANY_SITE_GUID = checkData.TENANT_COMPANY_SITE_GUID;
                _this.UserCompany_Model.COMPANY_CONTACT_NO = checkData.COMPANY_CONTACT_NO;
                _this.UserCompany_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserCompany_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserCompany_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserCompany_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_8 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_company_Url, _this.UserCompany_Model.toJson(true), options_8)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_company = function (event) {
        this.chooseFile_user_company = true;
        this.file_user_company = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_company_click = function () {
        var _this = this;
        this.user_company_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_company?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_company = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_company);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_company_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_company_data);
            console.log(_this.user_company_data.length);
            _this.user_company_data.forEach(function (element) {
                _this.duplicateCheck_userCompany(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_company);
    };
    //duplicate check for user_contact
    ImportExcelDataPage.prototype.duplicateCheck_userContact = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_contact', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserContact_Model.CONTACT_INFO_GUID = checkData.CONTACT_INFO_GUID;
                _this.UserContact_Model.USER_GUID = checkData.USER_GUID;
                _this.UserContact_Model.TYPE = checkData.TYPE;
                _this.UserContact_Model.CONTACT_NO = checkData.CONTACT_NO;
                _this.UserContact_Model.DESCRIPTION = checkData.DESCRIPTION;
                _this.UserContact_Model.REMARKS = checkData.REMARKS;
                _this.UserContact_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserContact_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserContact_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserContact_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_9 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_contact_Url, _this.UserContact_Model.toJson(true), options_9)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_contact = function (event) {
        this.chooseFile_user_contact = true;
        this.file_user_contact = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_contact_click = function () {
        var _this = this;
        this.user_contact_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_contact?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_contact = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_contact);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_contact_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_contact_data);
            console.log(_this.user_contact_data.length);
            _this.user_contact_data.forEach(function (element) {
                _this.duplicateCheck_userContact(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_contact);
    };
    //duplicate check for user_qualification
    ImportExcelDataPage.prototype.duplicateCheck_userQualification = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_qualification', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserQualification_Model.USER_QUALIFICATION_GUID = checkData.USER_QUALIFICATION_GUID;
                _this.UserQualification_Model.QUALIFICATION_GUID = checkData.QUALIFICATION_GUID;
                _this.UserQualification_Model.USER_GUID = checkData.USER_GUID;
                _this.UserQualification_Model.HIGHEST_QUALIFICATION = checkData.HIGHEST_QUALIFICATION;
                _this.UserQualification_Model.MAJOR = checkData.MAJOR;
                _this.UserQualification_Model.UNIVERSITY = checkData.UNIVERSITY;
                _this.UserQualification_Model.YEAR = checkData.YEAR;
                _this.UserQualification_Model.ATTACHMENT = checkData.ATTACHMENT;
                _this.UserQualification_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserQualification_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserQualification_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserQualification_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_10 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_qualification_Url, _this.UserQualification_Model.toJson(true), options_10)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_qualification = function (event) {
        this.chooseFile_user_qualification = true;
        this.file_user_qualification = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_qualification_click = function () {
        var _this = this;
        this.user_qualification_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_qualification?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_qualification = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_qualification);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_qualification_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_qualification_data);
            console.log(_this.user_qualification_data.length);
            _this.user_qualification_data.forEach(function (element) {
                _this.duplicateCheck_userQualification(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_qualification);
    };
    //duplicate check for user_role
    ImportExcelDataPage.prototype.duplicateCheck_userRole = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_role', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.UserRole_Model.USER_ROLE_GUID = checkData.USER_ROLE_GUID;
                _this.UserRole_Model.USER_GUID = checkData.USER_GUID;
                _this.UserRole_Model.ROLE_GUID = checkData.ROLE_GUID;
                _this.UserRole_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
                _this.UserRole_Model.CREATION_TS = new Date().toISOString();
                ;
                _this.UserRole_Model.CREATION_USER_GUID = 'sva_test';
                _this.UserRole_Model.UPDATE_TS = new Date().toISOString();
                ;
                _this.UserRole_Model.UPDATE_USER_GUID = 'sva_test';
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_11 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_role_Url, _this.UserRole_Model.toJson(true), options_11)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                return;
            }
        });
    };
    ImportExcelDataPage.prototype.user_role = function (event) {
        this.chooseFile_user_role = true;
        this.file_user_role = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_role_click = function () {
        var _this = this;
        this.user_role_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_role?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_role = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_role);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_role_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_role_data);
            console.log(_this.user_role_data.length);
            _this.user_role_data.forEach(function (element) {
                _this.duplicateCheck_userRole(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_role);
    };
    ImportExcelDataPage.prototype.main_attendance = function (event) {
        this.chooseFile_main_attendance = true;
        this.file_main_attendance = event.target.files[0];
    };
    ImportExcelDataPage.prototype.attendance_click = function () {
        var _this = this;
        this.attendance_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/device_raw_data?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_main_attendance = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_main_attendance);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            _this.attendance_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            _this.TempArray = _this.attendance_data.sort(function (n1, n2) { return n1.UserID - n2.UserID || +new Date(n1.Att_Time) - +new Date(n2.Att_Time); });
            _this.TempArray.forEach(function (element) {
                //Check duplicate & insert record to db---------------------------------
                _this.duplicateCheck_device_raw_data(element);
                //----------------------------------------------------------------------        
            });
            _this.Insert_Main_Attendance();
        };
        fileReader.readAsArrayBuffer(this.file_main_attendance);
    };
    ImportExcelDataPage.prototype.duplicateCheck_device_raw_data = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('device_raw_data', 'filter=(REF_NO=' + checkData.UserID.trim() + ') AND (DATA_ENTRY_TS=' + checkData.Att_Time + ')')
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                _this.Device_Raw_Data_Model.RAW_DATA_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                if (checkData.Dev_ID == "1") {
                    _this.Device_Raw_Data_Model.DEVICE_GUID = localStorage.getItem("Input_Device_GUID");
                }
                else {
                    _this.Device_Raw_Data_Model.DEVICE_GUID = localStorage.getItem("Output_Device_GUID");
                    ;
                }
                _this.Device_Raw_Data_Model.REF_NO = checkData.UserID;
                _this.Device_Raw_Data_Model.DATA_ENTRY_TS = checkData.Att_Time;
                _this.Device_Raw_Data_Model.CREATION_TS = new Date().toISOString();
                _this.Device_Raw_Data_Model.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                _this.Device_Raw_Data_Model.UPDATE_TS = new Date().toISOString();
                _this.Device_Raw_Data_Model.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_12 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.attendance_Url, _this.Device_Raw_Data_Model.toJson(true), options_12)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                        }
                        resolve(response.json());
                        _this.fileInputAttendance.nativeElement.value = '';
                        _this.chooseFile_main_attendance = false;
                    });
                });
            }
            else {
                _this.fileInputAttendance.nativeElement.value = '';
                _this.chooseFile_main_attendance = false;
                // return;
            }
        });
    };
    ImportExcelDataPage.prototype.Insert_Main_Attendance = function () {
        var _this = this;
        console.table(this.TempArray);
        this.User_Attendance_Main_Model_List = [];
        this.TempArray.forEach(function (element) {
            if (element.Dev_ID == "1") {
                _this.User_Attendance_Main_Model_List.push({ "USERID": element.UserID, "DATE": element.Att_Time.substring(0, 10), "INTIME": element.Att_Time, "OUTTIME": null });
            }
            else {
                if (_this.User_Attendance_Main_Model_List[_this.User_Attendance_Main_Model_List.length - 1]["OUTTIME"] == null) {
                    _this.User_Attendance_Main_Model_List[_this.User_Attendance_Main_Model_List.length - 1]["OUTTIME"] = element.Att_Time;
                }
                else {
                    _this.User_Attendance_Main_Model_List.push({ "USERID": element.UserID, "DATE": element.Att_Time.substring(0, 10), "INTIME": null, "OUTTIME": element.Att_Time });
                }
            }
        });
        console.log(this.User_Attendance_Main_Model_List);
        this.User_Attendance_Main_Model_List.forEach(function (element) {
            // let val = this.GetUser_Id(element.USERID);
            _this.User_Attendance_Main_Model.USER_ATTENDANCE_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
            // val.then((res) => {        
            //   this.User_Attendance_Main_Model.USER_GUID = res.toString();
            _this.User_Attendance_Main_Model.USER_GUID = element.USERID;
            _this.User_Attendance_Main_Model.ATTENDANCE_DATE = element.DATE;
            _this.User_Attendance_Main_Model.IN_TS = element.INTIME;
            _this.User_Attendance_Main_Model.OUT_TS = element.OUTTIME;
            _this.User_Attendance_Main_Model.WORKING_HOURS = null;
            _this.User_Attendance_Main_Model.OVERTIME_FLAG = null;
            _this.User_Attendance_Main_Model.CREATION_TS = new Date().toISOString();
            _this.User_Attendance_Main_Model.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.User_Attendance_Main_Model.UPDATE_TS = new Date().toISOString();
            _this.User_Attendance_Main_Model.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
            queryHeaders.append('Content-Type', 'application/json');
            queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
            var options = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
            return new Promise(function (resolve) {
                _this.http.post(_this.attendance_main_Url, _this.User_Attendance_Main_Model.toJson(true), options)
                    .map(function (response) {
                    return response;
                }).subscribe(function (response) {
                    resolve(response.json());
                });
            });
        });
    };
    ImportExcelDataPage.prototype.GetUser_Id = function (STAFF_ID) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('user_main', 'filter=STAFF_ID=' + STAFF_ID)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                _this.t_user = checkDataFromDB[0]["USER_GUID"];
                resolve(_this.t_user);
            });
        });
    };
    ImportExcelDataPage.prototype.GetBank_Id = function (checkData) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('main_bank', 'filter=NAME=' + checkData)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                console.log(checkDataFromDB);
                _this.Info_Template_Model.BANK_GUID = checkDataFromDB[0]["BANK_GUID"];
                console.log(_this.Info_Template_Model.BANK_GUID);
                _this.t_bank = checkDataFromDB[0]["BANK_GUID"];
                console.log(_this.t_bank);
                resolve(_this.t_bank);
            });
        });
    };
    ImportExcelDataPage.prototype.GetDesignation_Id = function (checkData) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('main_designation', 'filter=NAME=' + checkData)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                console.log(checkDataFromDB);
                _this.Info_Template_Model.DESIGNATION_GUID = checkDataFromDB[0]["DESIGNATION_GUID"];
                console.log(_this.Info_Template_Model.DESIGNATION_GUID);
                _this.t_designation = checkDataFromDB[0]["DESIGNATION_GUID"];
                console.log(_this.t_designation);
                resolve(_this.t_designation);
            });
        });
    };
    ImportExcelDataPage.prototype.GetDepartment_Id = function (checkData) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('main_department', 'filter=NAME=' + checkData)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                console.log(checkDataFromDB);
                _this.Info_Template_Model.DEPT_GUID = checkDataFromDB[0]["DEPARTMENT_GUID"];
                console.log(_this.Info_Template_Model.DESIGNATION_GUID);
                _this.t_department = checkDataFromDB[0]["DEPARTMENT_GUID"];
                console.log(_this.t_department);
                resolve(_this.t_department);
            });
        });
    };
    ImportExcelDataPage.prototype.GetQualification_Id = function (checkData) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('main_qualification_type', 'filter=TYPE_NAME=' + checkData)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                console.log(checkDataFromDB);
                _this.Qualification_Template_Model.HIGHEST_QUALIFICATION = checkDataFromDB[0]["QUALIFICATION_TYPE_GUID"];
                console.log(_this.Qualification_Template_Model.HIGHEST_QUALIFICATION);
                _this.t_qualification = checkDataFromDB[0]["QUALIFICATION_TYPE_GUID"];
                console.log(_this.t_qualification);
                resolve(_this.t_qualification);
            });
        });
    };
    ImportExcelDataPage.prototype.GetRole_Id = function (checkData) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.apiMng.getApiModel('main_role', 'filter=NAME=' + checkData)
                .map(function (response) {
                return response;
            })
                .subscribe(function (response) {
                var checkDataFromDB = response["resource"];
                console.log(checkDataFromDB);
                _this.Role_Template_Model.ROLE_GUID = checkDataFromDB[0]["ROLE_GUID"];
                console.log(_this.Role_Template_Model.ROLE_GUID);
                _this.t_role = checkDataFromDB[0]["ROLE_GUID"];
                console.log(_this.t_role);
                resolve(_this.t_role);
            });
        });
    };
    //duplicate check for user_main_template
    ImportExcelDataPage.prototype.duplicateCheck_user_main = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_main', 'filter=EMAIL=' + checkData.EMAIL)
            .subscribe(function (data) {
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            _this.Main_Template_Model.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
            _this.Main_Template_Model.STAFF_ID = checkData.STAFF_ID;
            _this.Main_Template_Model.LOGIN_ID = checkData.EMAIL;
            _this.Main_Template_Model.PASSWORD = checkData.PASSWORD;
            _this.Main_Template_Model.EMAIL = checkData.EMAIL;
            _this.Main_Template_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
            _this.Main_Template_Model.IS_TENANT_ADMIN = checkData.IS_TENANT_ADMIN;
            _this.Main_Template_Model.CREATION_TS = new Date().toISOString();
            _this.Main_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Main_Template_Model.UPDATE_TS = new Date().toISOString();
            _this.Main_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                alert('main inserting record');
                _this.Main_Template_Model.USER_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                //  localStorage.setItem('t_USER_GUID',  this.Main_Template_Model.USER_GUID);
                console.log(_this.Main_Template_Model);
                console.table(_this.Main_Template_Model);
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_13 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_main_template_Url, _this.Main_Template_Model.toJson(true), options_13)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_info(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Main_Template_Model.USER_GUID = checkDataFromDB[0]["USER_GUID"];
                alert('main updating record');
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_14 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.user_main_template_Url, _this.Main_Template_Model.toJson(true), options_14)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_info(checkData);
                        }
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //duplicate check for user_info_template
    ImportExcelDataPage.prototype.duplicateCheck_user_info = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_info', 'filter=FULLNAME=' + checkData.FULLNAME)
            .subscribe(function (data) {
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            _this.Info_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Info_Template_Model.FULLNAME = checkData.FULLNAME;
            _this.Info_Template_Model.NICKNAME = checkData.NICKNAME;
            _this.Info_Template_Model.SALUTATION = checkData.SALUTATION;
            _this.Info_Template_Model.MANAGER_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.Info_Template_Model.PERSONAL_ID_TYPE = checkData.PERSONAL_ID_TYPE;
            _this.Info_Template_Model.PERSONAL_ID = checkData.PERSONAL_ID;
            _this.Info_Template_Model.DOB = checkData.DOB;
            _this.Info_Template_Model.GENDER = (checkData.GENDER = "MALE" ? 1 : 0).toString();
            _this.Info_Template_Model.JOIN_DATE = checkData.JOIN_DATE;
            _this.Info_Template_Model.MARITAL_STATUS = (checkData.MARITAL_STATUS = "SINGLE" ? 0 : 1).toString();
            _this.Info_Template_Model.BRANCH = localStorage.getItem("g_TENANT_COMPANY_SITE_GUID");
            _this.Info_Template_Model.EMPLOYEE_TYPE = (checkData.EMPLOYEE_TYPE == "PERMANENT" ? 0 : (checkData.EMPLOYEE_TYPE == "CONTRACT" ? 1 : 2)).toString();
            _this.Info_Template_Model.APPROVER1 = checkData.APPROVER1;
            _this.Info_Template_Model.APPROVER2 = checkData.APPROVER2;
            _this.Info_Template_Model.EMPLOYEE_STATUS = (checkData.EMPLOYEE_STATUS == "PROBATION" ? 0 : (checkData.EMPLOYEE_STATUS == "CONFIRMED" ? 1 : 2)).toString();
            _this.Info_Template_Model.RESIGNATION_DATE = checkData.RESIGNATION_DATE;
            _this.Info_Template_Model.TENANT_COMPANY_GUID = localStorage.getItem("g_USER_GUID");
            _this.Info_Template_Model.CONFIRMATION_DATE = checkData.CONFIRMATION_DATE;
            _this.Info_Template_Model.TENANT_COMPANY_SITE_GUID = localStorage.getItem("g_USER_GUID");
            _this.Info_Template_Model.EMG_CONTACT_NAME_1 = checkData.EMG_CONTACT_NAME_1;
            _this.Info_Template_Model.EMG_RELATIONSHIP_1 = checkData.EMG_RELATIONSHIP_1;
            _this.Info_Template_Model.EMG_CONTACT_NUMBER_1 = checkData.EMG_CONTACT_NUMBER_1;
            _this.Info_Template_Model.EMG_CONTACT_NAME_2 = checkData.EMG_CONTACT_NAME_2;
            _this.Info_Template_Model.EMG_RELATIONSHIP_2 = checkData.EMG_RELATIONSHIP_2;
            _this.Info_Template_Model.EMG_CONTACT_NUMBER_2 = checkData.EMG_CONTACT_NUMBER_2;
            _this.Info_Template_Model.PR_EPF_NUMBER = checkData.PR_EPF_NUMBER;
            _this.Info_Template_Model.PR_INCOMETAX_NUMBER = checkData.PR_INCOMETAX_NUMBER;
            _this.Info_Template_Model.PR_ACCOUNT_NUMBER = checkData.PR_ACCOUNT_NUMBER;
            _this.Info_Template_Model.ATTACHMENT_ID = checkData.ATTACHMENT_ID;
            _this.Info_Template_Model.CREATION_TS = new Date().toISOString();
            _this.Info_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Info_Template_Model.UPDATE_TS = new Date().toISOString();
            _this.Info_Template_Model.UPDATE_USER_GUID = 'sva_test';
            var val = _this.GetBank_Id(checkData.BANK_NAME);
            val.then(function (res) {
                _this.Info_Template_Model.BANK_GUID = res.toString();
                var val = _this.GetDesignation_Id(checkData.DESIGNATION_NAME);
                val.then(function (res) {
                    _this.Info_Template_Model.DESIGNATION_GUID = res.toString();
                    var val = _this.GetDepartment_Id(checkData.DEPT_NAME);
                    val.then(function (res) {
                        _this.Info_Template_Model.DEPT_GUID = res.toString();
                        if (checkDataFromDB.length == 0) {
                            alert('info inserting record');
                            _this.Info_Template_Model.USER_INFO_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                            queryHeaders.append('Content-Type', 'application/json');
                            queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                            var options_15 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                            return new Promise(function (resolve) {
                                _this.http.post(_this.user_info_template_Url, _this.Info_Template_Model.toJson(true), options_15)
                                    .map(function (response) {
                                    return response;
                                }).subscribe(function (response) {
                                    if (response.status == 200) {
                                        console.log(_this.Info_Template_Model);
                                        _this.duplicateCheck_user_address(checkData);
                                    }
                                    resolve(response.json());
                                });
                            });
                        }
                        else {
                            _this.Info_Template_Model.USER_INFO_GUID = checkDataFromDB[0]["USER_INFO_GUID"];
                            alert('info updating record');
                            queryHeaders.append('Content-Type', 'application/json');
                            queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                            var options_16 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                            return new Promise(function (resolve) {
                                _this.http.patch(_this.user_info_template_Url, _this.Info_Template_Model.toJson(true), options_16)
                                    .map(function (response) {
                                    return response;
                                }).subscribe(function (response) {
                                    if (response.status == 200) {
                                        _this.duplicateCheck_user_address(checkData);
                                    }
                                    resolve(response.json());
                                });
                            });
                            // return
                        }
                    });
                });
            });
        });
    };
    //duplicate check for user_address_template
    ImportExcelDataPage.prototype.duplicateCheck_user_address = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_address', 'filter=USER_ADDRESS1=' + checkData.USER_ADDRESS1)
            .subscribe(function (data) {
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            // this.Address_Template_Model.USER_ADDRESS_GUID = checkData.USER_ADDRESS_GUID;
            _this.Address_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Address_Template_Model.ADDRESS_TYPE = checkData.ADDRESS_TYPE;
            _this.Address_Template_Model.USER_ADDRESS1 = checkData.USER_ADDRESS1;
            _this.Address_Template_Model.USER_ADDRESS2 = checkData.USER_ADDRESS2;
            _this.Address_Template_Model.USER_ADDRESS3 = checkData.USER_ADDRESS3;
            _this.Address_Template_Model.POST_CODE = checkData.POST_CODE;
            _this.Address_Template_Model.COUNTRY_GUID = checkData.COUNTRY_GUID;
            _this.Address_Template_Model.STATE_GUID = checkData.STATE_GUID;
            _this.Address_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Address_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Address_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Address_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                alert('addtess inserting record');
                _this.Address_Template_Model.USER_ADDRESS_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.Address_Template_Model);
                console.table(_this.Address_Template_Model);
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_17 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_address_template_Url, _this.Address_Template_Model.toJson(true), options_17)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_company(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Address_Template_Model.USER_ADDRESS_GUID = checkDataFromDB[0]["USER_ADDRESS_GUID"];
                alert('address updating record');
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_18 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.user_address_template_Url, _this.Address_Template_Model.toJson(true), options_18)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_company(checkData);
                        }
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //duplicate check for user_company_template
    ImportExcelDataPage.prototype.duplicateCheck_user_company = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_company', 'filter=COMPANY_CONTACT_NO=' + checkData.COMPANY_CONTACT_NO)
            .subscribe(function (data) {
            var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            // this.Company_Template_Model.USER_COMPANY_GUID = checkData.USER_COMPANY_GUID;
            _this.Company_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Company_Template_Model.TENANT_COMPANY_SITE_GUID = checkData.TENANT_COMPANY_SITE_GUID;
            _this.Company_Template_Model.COMPANY_CONTACT_NO = checkData.COMPANY_CONTACT_NO;
            _this.Company_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Company_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Company_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Company_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                alert('company inserting record');
                _this.Company_Template_Model.USER_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.Company_Template_Model);
                console.table(_this.Company_Template_Model);
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_19 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_company_template_Url, _this.Company_Template_Model.toJson(true), options_19)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_contact(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Company_Template_Model.USER_COMPANY_GUID = checkDataFromDB[0]["USER_COMPANY_GUID"];
                alert('company updating record');
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_20 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.user_company_template_Url, _this.Company_Template_Model.toJson(true), options_20)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_contact(checkData);
                        }
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //duplicate check for user_contact_template
    ImportExcelDataPage.prototype.duplicateCheck_user_contact = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_contact', 'filter=CONTACT_NO=' + checkData.CONTACT_NO)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            // this.Contact_Template_Model.CONTACT_INFO_GUID = checkData.CONTACT_INFO_GUID;
            _this.Contact_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Contact_Template_Model.TYPE = checkData.TYPE;
            _this.Contact_Template_Model.CONTACT_NO = checkData.CONTACT_NO;
            _this.Contact_Template_Model.DESCRIPTION = checkData.DESCRIPTION;
            _this.Contact_Template_Model.REMARKS = checkData.REMARKS;
            _this.Contact_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Contact_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Contact_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Contact_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                alert('contact inserting record');
                _this.Contact_Template_Model.CONTACT_INFO_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.Contact_Template_Model);
                console.table(_this.Contact_Template_Model);
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_21 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.user_contact_template_Url, _this.Contact_Template_Model.toJson(true), options_21)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_qualification(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Contact_Template_Model.CONTACT_INFO_GUID = checkDataFromDB[0]["CONTACT_INFO_GUID"];
                alert('contact updating record');
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_22 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.user_contact_template_Url, _this.Contact_Template_Model.toJson(true), options_22)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_user_qualification(checkData);
                        }
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //duplicate check for user_qualification_template
    ImportExcelDataPage.prototype.duplicateCheck_user_qualification = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_qualification', 'filter=MAJOR=' + checkData.MAJOR)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            _this.Qualification_Template_Model.QUALIFICATION_GUID = checkData.QUALIFICATION_GUID;
            _this.Qualification_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Qualification_Template_Model.MAJOR = checkData.MAJOR;
            _this.Qualification_Template_Model.UNIVERSITY = checkData.UNIVERSITY;
            _this.Qualification_Template_Model.YEAR = checkData.YEAR;
            _this.Qualification_Template_Model.ATTACHMENT = checkData.ATTACHMENT;
            _this.Qualification_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Qualification_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Qualification_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Qualification_Template_Model.UPDATE_USER_GUID = 'sva_test';
            var val = _this.GetQualification_Id(checkData.HIGHEST_QUALIFICATION);
            val.then(function (res) {
                _this.Qualification_Template_Model.HIGHEST_QUALIFICATION = res.toString();
                console.log(_this.t_qualification);
                console.log(_this.Qualification_Template_Model.HIGHEST_QUALIFICATION);
                if (checkDataFromDB.length == 0) {
                    alert('qualification inserting record');
                    _this.Qualification_Template_Model.USER_QUALIFICATION_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                    console.log(_this.Qualification_Template_Model);
                    console.table(_this.Qualification_Template_Model);
                    var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                    queryHeaders.append('Content-Type', 'application/json');
                    queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                    var options_23 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                    return new Promise(function (resolve) {
                        _this.http.post(_this.user_qualification_template_Url, _this.Qualification_Template_Model.toJson(true), options_23)
                            .map(function (response) {
                            return response;
                        }).subscribe(function (response) {
                            if (response.status == 200) {
                                _this.duplicateCheck_user_role(checkData);
                            }
                            resolve(response.json());
                        });
                    });
                }
                else {
                    _this.Qualification_Template_Model.USER_QUALIFICATION_GUID = checkDataFromDB[0]["USER_QUALIFICATION_GUID"];
                    alert('qualificationupdating  record');
                    var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                    queryHeaders.append('Content-Type', 'application/json');
                    queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                    var options_24 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                    return new Promise(function (resolve) {
                        _this.http.patch(_this.user_qualification_template_Url, _this.Qualification_Template_Model.toJson(true), options_24)
                            .map(function (response) {
                            return response;
                        }).subscribe(function (response) {
                            if (response.status == 200) {
                                _this.duplicateCheck_user_role(checkData);
                            }
                            resolve(response.json());
                        });
                    });
                    // return
                }
            });
        });
    };
    //duplicate check for user_role_template
    ImportExcelDataPage.prototype.duplicateCheck_user_role = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('user_role', 'filter=USER_GUID=' + checkData.USER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            // this.Role_Template_Model.USER_ROLE_GUID = checkData.USER_ROLE_GUID;
            _this.Role_Template_Model.USER_GUID = _this.Main_Template_Model.USER_GUID;
            _this.Role_Template_Model.ROLE_GUID = checkData.ROLE_GUID;
            _this.Role_Template_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
            _this.Role_Template_Model.CREATION_TS = new Date().toISOString();
            _this.Role_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Role_Template_Model.UPDATE_TS = new Date().toISOString();
            _this.Role_Template_Model.UPDATE_USER_GUID = 'sva_test';
            var val = _this.GetRole_Id(checkData.NAME);
            val.then(function (res) {
                _this.Role_Template_Model.ROLE_GUID = res.toString();
                console.log(_this.t_role);
                console.log(_this.Role_Template_Model.ROLE_GUID);
                if (checkDataFromDB.length == 0) {
                    alert('role inserting record');
                    _this.Role_Template_Model.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                    console.log(_this.Role_Template_Model);
                    console.table(_this.Role_Template_Model);
                    var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                    queryHeaders.append('Content-Type', 'application/json');
                    queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                    var options_25 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                    return new Promise(function (resolve) {
                        _this.http.post(_this.user_role_template_Url, _this.Role_Template_Model.toJson(true), options_25)
                            .map(function (response) {
                            return response;
                        }).subscribe(function (response) {
                            resolve(response.json());
                        });
                    });
                }
                else {
                    _this.Role_Template_Model.USER_ROLE_GUID = checkDataFromDB[0]["USER_ROLE_GUID"];
                    alert('role updating record');
                    var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                    queryHeaders.append('Content-Type', 'application/json');
                    queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                    var options_26 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                    return new Promise(function (resolve) {
                        _this.http.patch(_this.user_role_template_Url, _this.Role_Template_Model.toJson(true), options_26)
                            .map(function (response) {
                            return response;
                        }).subscribe(function (response) {
                            resolve(response.json());
                        });
                    });
                    // return
                }
            });
        });
    };
    ImportExcelDataPage.prototype.user_templa = function (event) {
        this.chooseFile_user_template = true;
        this.file_user_template = event.target.files[0];
    };
    ImportExcelDataPage.prototype.user_template_click = function () {
        var _this = this;
        this.user_main_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_main?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_info_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_info?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_address_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_address?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_company_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_company?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_contact_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_contact?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_qualification_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_qualification?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.user_role_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_role?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_user_template = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_user_template);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            // var workbook = XLSX.read(bstr, { type: "binary" });
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary", cellDates: true, cellNF: false, cellText: false });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.user_template_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.user_template_data);
            console.log(_this.user_template_data.length);
            _this.user_template_data.forEach(function (element) {
                if (element.STAFF_ID != "*")
                    _this.duplicateCheck_user_main(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_user_template);
        // localStorage.removeItem("t_USER_GUID");
    };
    ImportExcelDataPage.prototype.customer_templa = function (event) {
        this.chooseFile_customer_template = true;
        this.file_customer_template = event.target.files[0];
    };
    ImportExcelDataPage.prototype.customer_template_click = function () {
        var _this = this;
        this.customer_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_customer?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.customer_location_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_customer_location?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_customer_template = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_customer_template);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
            _this.customer_template_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.customer_template_data);
            console.log(_this.customer_template_data.length);
            _this.customer_template_data.forEach(function (element) {
                if (element.CustomerName != "*")
                    _this.duplicateCheck_customer(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_customer_template);
    };
    ImportExcelDataPage.prototype.duplicateCheck_customer = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_customer', 'filter=CUSTOMER_GUID=' + checkData.CUSTOMER_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            _this.Customer_Template_Model.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
            _this.Customer_Template_Model.NAME = checkData.CustomerName;
            _this.Customer_Template_Model.DESCRIPTION = checkData.DESCRIPTION;
            _this.Customer_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Customer_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Customer_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Customer_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                _this.Customer_Template_Model.CUSTOMER_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_27 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.customer_template_Url, _this.Customer_Template_Model.toJson(true), options_27)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_customer_location(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Customer_Template_Model.CUSTOMER_GUID = checkDataFromDB[0]["CUSTOMER_GUID"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_28 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.customer_template_Url, _this.Customer_Template_Model.toJson(true), options_28)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //code for inserting data into customer end
    //code for inserting data into customer location start
    ImportExcelDataPage.prototype.duplicateCheck_customer_location = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_customer_location', 'filter=CUSTOMER_LOCATION_GUID=' + checkData.CUSTOMER_LOCATION_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            _this.CustomerLocation_Template_Model.CUSTOMER_GUID = _this.Customer_Template_Model.CUSTOMER_GUID;
            _this.CustomerLocation_Template_Model.NAME = 'NA';
            _this.CustomerLocation_Template_Model.DESCRIPTION = checkData.DESCRIPTION;
            _this.CustomerLocation_Template_Model.REGISTRATION_NO = checkData.REGISTRATION_NO;
            _this.CustomerLocation_Template_Model.ADDRESS1 = checkData.ADDRESS1;
            _this.CustomerLocation_Template_Model.ADDRESS2 = checkData.ADDRESS2;
            _this.CustomerLocation_Template_Model.ADDRESS3 = checkData.ADDRESS3;
            _this.CustomerLocation_Template_Model.CONTACT_PERSON = checkData.CONTACT_PERSON;
            _this.CustomerLocation_Template_Model.CONTACT_PERSON_MOBILE_NO = checkData.CONTACT_PERSON_MOBILE_NO;
            _this.CustomerLocation_Template_Model.CONTACT_NO1 = checkData.CONTACT_NO1;
            _this.CustomerLocation_Template_Model.CONTACT_NO2 = checkData.CONTACT_NO2;
            _this.CustomerLocation_Template_Model.EMAIL = checkData.EMAIL;
            _this.CustomerLocation_Template_Model.DIVISION = checkData.DIVISION;
            _this.CustomerLocation_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.CustomerLocation_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.CustomerLocation_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.CustomerLocation_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                _this.CustomerLocation_Template_Model.CUSTOMER_LOCATION_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.CustomerLocation_Template_Model);
                console.table(_this.CustomerLocation_Template_Model);
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_29 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.customer_location_template_Url, _this.CustomerLocation_Template_Model.toJson(true), options_29)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.CustomerLocation_Template_Model.CUSTOMER_LOCATION_GUID = checkDataFromDB[0]["CUSTOMER_LOCATION_GUID"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_30 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.customer_location_template_Url, _this.CustomerLocation_Template_Model.toJson(true), options_30)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    ImportExcelDataPage.prototype.soc_templa = function (event) {
        this.chooseFile_soc_template = true;
        this.file_soc_template = event.target.files[0];
    };
    ImportExcelDataPage.prototype.soc_template_click = function () {
        var _this = this;
        this.project_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/main_project?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.soc_template_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/soc_main?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_soc_template = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_soc_template);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary" });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            _this.soc_template_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            console.log(_this.soc_template_data);
            console.log(_this.soc_template_data.length);
            _this.soc_template_data.forEach(function (element) {
                if (element.SOC_NO != "*")
                    _this.duplicateCheck_project(element);
            });
        };
        fileReader.readAsArrayBuffer(this.file_soc_template);
    };
    ImportExcelDataPage.prototype.duplicateCheck_project = function (checkData) {
        var _this = this;
        this.apiMng.getApiModel('main_project', 'filter=PROJECT_GUID=' + checkData.PROJECT_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            _this.Project_Template_Model.NAME = checkData.ProjectName;
            _this.Project_Template_Model.CUSTOMER_GUID = 'NA';
            _this.Project_Template_Model.CUSTOMER_LOCATION_GUID = 'NA';
            _this.Project_Template_Model.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
            _this.Project_Template_Model.ACTIVATION_FLAG = '1';
            _this.Project_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.Project_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.Project_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.Project_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                _this.Project_Template_Model.PROJECT_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.Project_Template_Model);
                console.table(_this.Project_Template_Model);
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_31 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.project_template_Url, _this.Project_Template_Model.toJson(true), options_31)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        if (response.status == 200) {
                            _this.duplicateCheck_soc(checkData);
                        }
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.Project_Template_Model.PROJECT_GUID = checkDataFromDB[0]["PROJECT_GUID"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_32 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.project_template_Url, _this.Project_Template_Model.toJson(true), options_32)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    //code for inserting data into project end
    //code for inserting data into soc start
    ImportExcelDataPage.prototype.duplicateCheck_soc = function (checkData) {
        var _this = this;
        console.table(checkData);
        console.log(checkData);
        this.apiMng.getApiModel('soc_main', 'filter=SOC_GUID=' + checkData.SOC_GUID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            console.log(checkDataFromDB);
            // this.SOC_Template_Model.SOC_GUID = checkData.SOC_GUID;
            _this.SOC_Template_Model.SOC_NO = checkData.SOC_NO;
            // this.SOC_Template_Model.PROJECT_GUID =  localStorage.getItem("t_PROJECT_GUID");
            _this.SOC_Template_Model.PROJECT_GUID = _this.Project_Template_Model.PROJECT_GUID;
            _this.SOC_Template_Model.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
            _this.SOC_Template_Model.ACTIVATION_FLAG = checkData.ACTIVATION_FLAG;
            _this.SOC_Template_Model.CREATION_TS = new Date().toISOString();
            ;
            _this.SOC_Template_Model.CREATION_USER_GUID = 'sva_test';
            _this.SOC_Template_Model.UPDATE_TS = new Date().toISOString();
            ;
            _this.SOC_Template_Model.UPDATE_USER_GUID = 'sva_test';
            if (checkDataFromDB.length == 0) {
                _this.SOC_Template_Model.SOC_GUID = __WEBPACK_IMPORTED_MODULE_20_angular2_uuid__["UUID"].UUID();
                console.log(_this.SOC_Template_Model);
                console.table(_this.SOC_Template_Model);
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_33 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.soc_template_Url, _this.SOC_Template_Model.toJson(true), options_33)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.SOC_Template_Model.SOC_GUID = checkDataFromDB[0]["SOC_GUID"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_34 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.soc_template_Url, _this.SOC_Template_Model.toJson(true), options_34)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
                // return
            }
        });
    };
    /**
     * TO FIX
     *
     * @returns {Observable<Blob>}
     * @memberof ImportExcelDataPage
     */
    ImportExcelDataPage.prototype.downloadFile_service_user = function () {
        var url = 'http://api.zen.com.my/api/v2/azurefs/Templates/user_template.xlsx' + this.download_file_name + '?api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var options = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ responseType: __WEBPACK_IMPORTED_MODULE_18__angular_http__["e" /* ResponseContentType */].Blob });
        console.log(url);
        return this.http.get(url, options)
            .map(function (res) { return res.blob(); });
    };
    ImportExcelDataPage.prototype.download_user = function () {
        var _this = this;
        this.downloadFile_service_user().subscribe(function (blob) {
            Object(__WEBPACK_IMPORTED_MODULE_23_file_saver__["saveAs"])(blob, _this.download_file_name);
        });
    };
    /**
     * TO FIX
     *
     * @returns {Observable<Blob>}
     * @memberof ImportExcelDataPage
     */
    ImportExcelDataPage.prototype.downloadFile_service_soc = function () {
        var url = 'http://api.zen.com.my/api/v2/azurefs/Templates/SOC.xlsx?api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var options = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ responseType: __WEBPACK_IMPORTED_MODULE_18__angular_http__["e" /* ResponseContentType */].Blob });
        console.log(url);
        return this.http.get(url, options)
            .map(function (res) { return res.blob(); });
    };
    ImportExcelDataPage.prototype.download_soc = function (soc) {
        this.downloadFile_service_soc().subscribe(function (blob) {
            Object(__WEBPACK_IMPORTED_MODULE_23_file_saver__["saveAs"])(blob, soc);
        });
    };
    /**
     * TO FIX
     *
     * @returns {Observable<Blob>}
     * @memberof ImportExcelDataPage
     */
    ImportExcelDataPage.prototype.downloadFile_service_customer = function () {
        var url = 'http://api.zen.com.my/api/v2/azurefs/Templates/Customer.xlsx' + this.download_file_name + '?api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var options = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ responseType: __WEBPACK_IMPORTED_MODULE_18__angular_http__["e" /* ResponseContentType */].Blob });
        console.log(url);
        return this.http.get(url, options)
            .map(function (res) { return res.blob(); });
    };
    ImportExcelDataPage.prototype.download_customer = function (customer) {
        this.downloadFile_service_customer().subscribe(function (blob) {
            Object(__WEBPACK_IMPORTED_MODULE_23_file_saver__["saveAs"])(blob, customer);
        });
    };
    ImportExcelDataPage.prototype.Get_Device_GUID = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + "/main_device?filter=(TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ') AND (ACTIVATION_FLAG=0)' + '&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.devices = data["resource"];
            for (var item in data["resource"]) {
                if (data["resource"][item]["ROLE"] == 1) {
                    localStorage.setItem("Input_Device_GUID", data["resource"][item]["DEVICE_GUID"]);
                }
                if (data["resource"][item]["ROLE"] == 2) {
                    localStorage.setItem("Output_Device_GUID", data["resource"][item]["DEVICE_GUID"]);
                }
            }
        });
    };
    ImportExcelDataPage.prototype.InsertAttRecord = function () {
        var _this = this;
        console.log(this.User_Attendance_Main_Model_List);
        this.apiMng.getApiModel('user_attendance_main', 'filter=(USER_GUID=' + this.User_Attendance_Main_Model.USER_GUID.trim() + ') AND (ATTENDANCE_DATE=' + this.User_Attendance_Main_Model.ATTENDANCE_DATE + ') AND (IN_TS=' + this.User_Attendance_Main_Model.IN_TS + ') AND (OUT_TS=' + this.User_Attendance_Main_Model.OUT_TS + ')')
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_35 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.post(_this.attendance_main_Url, _this.User_Attendance_Main_Model.toJson(true), options_35)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
            else {
                _this.User_Attendance_Main_Model.USER_ATTENDANCE_GUID = checkDataFromDB[0]["USER_ATTENDANCE_GUID"];
                var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                queryHeaders.append('Content-Type', 'application/json');
                queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                var options_36 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                return new Promise(function (resolve) {
                    _this.http.patch(_this.attendance_main_Url, _this.User_Attendance_Main_Model.toJson(true), options_36)
                        .map(function (response) {
                        return response;
                    }).subscribe(function (response) {
                        resolve(response.json());
                    });
                });
            }
        });
    };
    ImportExcelDataPage.prototype.main_leave = function (event) {
        this.chooseFile_main_leave = true;
        this.file_main_leave = event.target.files[0];
    };
    ImportExcelDataPage.prototype.LeaveUpload_click = function () {
        var _this = this;
        this.ctr = 0;
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        this.leave_Url = __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/user_leave_raw_data?&api_key=' + __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var fileReader = new FileReader();
        fileReader.onload = function () {
            _this.arrayBuffer_main_leave = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer_main_leave);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            // var workbook = XLSX.read(bstr, { type: "binary" });
            var workbook = __WEBPACK_IMPORTED_MODULE_19_xlsx__["read"](bstr, { type: "binary", cellDates: true, cellNF: false, cellText: false });
            // zero for first sheet
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            _this.main_leave_data = __WEBPACK_IMPORTED_MODULE_19_xlsx__["utils"].sheet_to_json(worksheet, { raw: true });
            _this.Final_leave_data = _this.main_leave_data.filter(function (thing, index, self) {
                return index === self.findIndex(function (t) { return (t.LEAVE_ID === thing.LEAVE_ID); });
            });
            _this.Final_leave_data.forEach(function (element) {
                //Check duplicate & insert record to db---------------------------------
                _this.duplicateCheck_leave_raw_data(element);
                //----------------------------------------------------------------------
            });
        };
        fileReader.readAsArrayBuffer(this.file_main_leave);
    };
    ImportExcelDataPage.prototype.duplicateCheck_leave_raw_data = function (checkData) {
        var _this = this;
        this.ctr = this.ctr + 1;
        this.apiMng.getApiModel('user_leave_raw_data', 'filter=LEAVE_ID=' + checkData.LEAVE_ID)
            .subscribe(function (data) {
            var checkDataFromDB = data["resource"];
            if (checkDataFromDB.length == 0) {
                if (checkData.TITLE.substring(0, 14) != "PUBLIC HOLIDAY") {
                    _this.Leave_Raw_Data_Model.STAFF_ID = checkData.STAFF_ID;
                    _this.Leave_Raw_Data_Model.TITLE = checkData.TITLE;
                    _this.Leave_Raw_Data_Model.START_DATE = __WEBPACK_IMPORTED_MODULE_22_moment___default()(checkData.START_DATE).format('YYYY-MM-DD');
                    _this.Leave_Raw_Data_Model.END_DATE = __WEBPACK_IMPORTED_MODULE_22_moment___default()(checkData.END_DATE).format('YYYY-MM-DD');
                    _this.Leave_Raw_Data_Model.LEAVE_ID = checkData.LEAVE_ID;
                    _this.Leave_Raw_Data_Model.HALF_DAY_DATE = checkData.HALF_DAY_DATE;
                    _this.Leave_Raw_Data_Model.SESSION = checkData.SESSION;
                    _this.Leave_Raw_Data_Model.CREATION_TS = new Date().toISOString();
                    _this.Leave_Raw_Data_Model.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.Leave_Raw_Data_Model.UPDATE_TS = new Date().toISOString();
                    _this.Leave_Raw_Data_Model.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    var queryHeaders = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["a" /* Headers */]();
                    queryHeaders.append('Content-Type', 'application/json');
                    queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_17__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
                    var options_37 = new __WEBPACK_IMPORTED_MODULE_18__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
                    return new Promise(function (resolve) {
                        _this.http.post(_this.leave_Url, _this.Leave_Raw_Data_Model.toJson(true), options_37)
                            .map(function (response) {
                            return response;
                        }).subscribe(function (response) {
                            resolve(response.json());
                            _this.fileInputLeave.nativeElement.value = '';
                            _this.chooseFile_main_leave = false;
                        });
                    });
                }
            }
            else {
                _this.fileInputLeave.nativeElement.value = '';
                _this.chooseFile_main_attendance = false;
                return;
            }
        });
        if (this.Final_leave_data.length == this.ctr) {
            this.fileInputLeave.nativeElement.value = '';
            this.chooseFile_main_attendance = false;
            this.loading.dismissAll();
            return;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInputAttendance'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], ImportExcelDataPage.prototype, "fileInputAttendance", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInputLeave'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], ImportExcelDataPage.prototype, "fileInputLeave", void 0);
    ImportExcelDataPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-import-excel-data',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/import-excel-data/import-excel-data.html"*/'<!--\n  Generated template for the ImportExcelDataPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <!-- hideBackButton="true" -->\n  <ion-navbar color="primary200">\n    <ion-title>{{ "IMPORT_DATA" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <div style="display: none;">\n    <div style="width:48%; display:inline-table !important;">\n      <div style="width:78%; display:inline-table !important;">\n        <ion-item>\n          <h3>Templates</h3>\n          <ion-select [(ngModel)]="Templates_ngModel" placeholder="{{\'Please select template\'}}">\n            <ion-option [value]="Bank">Bank</ion-option>\n            <ion-option [value]="Designation">Designation</ion-option>\n            <ion-option [value]="Department">Department</ion-option>\n            <ion-option [value]="Mileage">Mileage</ion-option>\n            <ion-option [value]="PaymentType">Payment Type</ion-option>\n            <ion-option [value]="Qualification">Qualification</ion-option>\n            <ion-option [value]="Customer">Customer</ion-option>\n            <ion-option [value]="SOC">SOC</ion-option>\n            <ion-option [value]="Country">Country</ion-option>\n            <ion-option [value]="State">State</ion-option>\n            <ion-option [value]="User_Templates">Templates</ion-option>\n          </ion-select>\n        </ion-item>\n      </div>\n      <div style="width:20%; display:inline-table !important;">\n        <ion-item>\n          <button ion-fab mini (click)="download()" title="Download templates">\n            <ion-icon name="download"></ion-icon>\n          </button>\n        </ion-item>\n      </div>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To main_customer</h3>\n        <input type="file" style="display: inline-block;" (change)="main_customer($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="main_customer_click()" [disabled]="!chooseFile_main_customer">Upload</button>\n      </ion-item>\n    </div>\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To main_project</h3>\n        <input type="file" style="display: inline-block;" (change)="incomingfile($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="Upload()" [disabled]="!chooseFile_incomingfile">Upload</button>\n      </ion-item>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To main_customer_location</h3>\n        <input type="file" style="display: inline-block;" (change)="main_customer_location($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="main_customer_location_click()" [disabled]="!chooseFile_main_customer_location">Upload</button>\n      </ion-item>\n    </div>\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To soc_main</h3>\n        <input type="file" style="display: inline-block;" (change)="soc_main($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="soc_main_click()" [disabled]="!chooseFile_soc_main">Upload</button>\n      </ion-item>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_main</h3>\n        <input type="file" style="display: inline-block;" (change)="user_main($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_main_click()" [disabled]="!chooseFile_user_main">Upload</button>\n      </ion-item>\n    </div>\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_info</h3>\n        <input type="file" style="display: inline-block;" (change)="user_info($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_info_click()" [disabled]="!chooseFile_user_info">Upload</button>\n      </ion-item>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_address</h3>\n        <input type="file" style="display: inline-block;" (change)="user_address($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_address_click()" [disabled]="!chooseFile_user_address">Upload</button>\n      </ion-item>\n    </div>\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_company</h3>\n        <input type="file" style="display: inline-block;" (change)="user_company($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_company_click()" [disabled]="!chooseFile_user_company">Upload</button>\n      </ion-item>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_contact</h3>\n        <input type="file" style="display: inline-block;" (change)="user_contact($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_contact_click()" [disabled]="!chooseFile_user_contact">Upload</button>\n      </ion-item>\n    </div>\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_qualification</h3>\n        <input type="file" style="display: inline-block;" (change)="user_qualification($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_qualification_click()" [disabled]="!chooseFile_user_qualification">Upload</button>\n      </ion-item>\n    </div>\n\n    <div style="width:48%; display:inline-table !important;">\n      <ion-item>\n        <h3>To user_role</h3>\n        <input type="file" style="display: inline-block;" (change)="user_role($event)" placeholder="Upload file" accept=".xlsx">\n        <button ion-button color="primary500" class="btn btn-info" (click)="user_role_click()" [disabled]="!chooseFile_user_role">Upload</button>\n      </ion-item>\n    </div>\n  </div>\n  <div style="width:48%; display:inline-table !important;">\n    <ion-item>\n      <h3>Attendance</h3>\n      <input type="file" #fileInputAttendance style="display: inline-block;" (change)="main_attendance($event)" placeholder="Upload file"\n        accept=".xlsx">\n      <button ion-button color="primary500" class="btn btn-info" (click)="attendance_click()" [disabled]="!chooseFile_main_attendance">Upload</button>\n      <button ion-button color="primary500" class="btn btn-info" (click)="Insert_User_Attendance()" style="display: none;">Migrate</button>\n    </ion-item>\n  </div>\n  <div style="width:48%; display:inline-table !important;">\n    <ion-item>\n      <h3>Leave Calender</h3>\n      <input type="file" #fileInputLeave style="display: inline-block;" (change)="main_leave($event)" placeholder="Upload file"\n        accept=".xlsx, .xls">\n      <button ion-button color="primary500" class="btn btn-info" (click)="LeaveUpload_click()" [disabled]="!chooseFile_main_leave">Upload</button>\n    </ion-item>\n  </div>\n\n  <!-- user_template -->\n  <div style="width:48%; display:inline-table !important;">\n    <ion-item>\n      <h3>User</h3>\n      <input type="file" style="display: inline-block;" (change)="user_templa($event)" placeholder="Upload file" accept=".xlsx">\n      <button ion-button color="primary500" class="btn btn-info" (click)="user_template_click()" [disabled]="!chooseFile_user_template">Upload</button>\n      <button ion-button color="primary500" class="btn btn-info" (click)="download_user()">Download Template</button>\n      <!-- [disabled]="!downloadFile_user_template" -->\n    </ion-item>\n  </div>\n\n   <!-- customer_template -->\n   <div style="width:48%; display:inline-table !important;">\n    <ion-item>\n      <h3>Customer</h3>\n      <input type="file" style="display: inline-block;" (change)="customer_templa($event)" placeholder="Upload file" accept=".xlsx">\n      <button ion-button color="primary500" class="btn btn-info" (click)="customer_template_click()" [disabled]="!chooseFile_customer_template">Upload</button>\n      <button ion-button color="primary500" class="btn btn-info" value="Bank" (click)="download_customer(\'Customer\')">Download Template</button>\n      <!-- [disabled]="!downloadFile_soc_template" -->\n    </ion-item>\n  </div>\n\n  <!-- soc_template -->\n  <div style="width:48%; display:inline-table !important;">\n    <ion-item>\n      <h3>SOC</h3>\n      <input type="file" style="display: inline-block;" (change)="soc_templa($event)" placeholder="Upload file" accept=".xlsx">\n      <button ion-button color="primary500" class="btn btn-info" (click)="soc_template_click()" [disabled]="!chooseFile_soc_template">Upload</button>\n      <button ion-button color="primary500" class="btn btn-info"  (click)="download_soc(\'SOooC\')">Download Template</button>\n      <!-- [disabled]="!downloadFile_soc_template" -->\n    </ion-item>\n  </div>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/import-excel-data/import-excel-data.html"*/,
            // providers: [DatePipe, DataTransfer]
            providers: []
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_21__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_18__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], ImportExcelDataPage);
    return ImportExcelDataPage;
}());

//# sourceMappingURL=import-excel-data.js.map

/***/ }),
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceSetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_devicesetup_model__ = __webpack_require__(448);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_devicesetup_service__ = __webpack_require__(620);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the DeviceSetupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DeviceSetupPage = /** @class */ (function () {
    function DeviceSetupPage(navCtrl, navParams, fb, http, devicesetupservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.devicesetupservice = devicesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.device_entry = new __WEBPACK_IMPORTED_MODULE_7__models_devicesetup_model__["a" /* DeviceSetup_Model */]();
        this.page = 1;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.devices = [];
        this.AddDeviceClicked = false;
        this.Exist_Record = false;
        //--------------------------------------------------------------------
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.HeaderText = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
                //-------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Deviceform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        ROLE: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                        STATUS: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    });
                }
                else {
                    this.Deviceform = fb.group({
                        NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        ROLE: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                        STATUS: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                        TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    DeviceSetupPage.prototype.AddDeviceClick = function () {
        if (this.Edit_Form == false) {
            this.AddDeviceClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
            this.HeaderText = "ADD NEW DEVICE";
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    DeviceSetupPage.prototype.CloseDeviceClick = function () {
        if (this.AddDeviceClicked == true) {
            this.AddDeviceClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    DeviceSetupPage.prototype.EditClick = function (DEVICE_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddDeviceClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.HeaderText = "UPDATE DEVICE";
        var self = this;
        this.devicesetupservice
            .get(DEVICE_GUID)
            .subscribe(function (data) {
            self.device_details = data;
            _this.Tenant_Add_ngModel = self.device_details.TENANT_GUID;
            _this.NAME_ngModel_Add = self.device_details.DEVICE_NAME;
            localStorage.setItem('Prev_Name', self.device_details.DEVICE_NAME);
            localStorage.setItem('Prev_TenantGuid', self.device_details.TENANT_GUID);
            _this.Role_ngModel = self.device_details.ROLE;
            _this.Status_ngModel = self.device_details.ACTIVATION_FLAG;
            _this.loading.dismissAll();
        });
    };
    DeviceSetupPage.prototype.DeleteClick = function (DEVICE_GUID) {
        // let alert = this.alertCtrl.create({
        //   title: 'Remove Confirmation',
        //   message: 'Are you sure to remove?',
        //   buttons: [
        //     {
        //       text: 'Cancel',
        //       role: 'cancel',
        //       handler: () => {
        //         console.log('Cancel clicked');
        //       }
        //     },
        //     {
        //       text: 'OK',
        //       handler: () => {
        //         console.log('OK clicked');
        //         var self = this;
        //         this.devicesetupservice.remove(DEVICE_GUID)
        //           .subscribe(() => {
        //             self.devices = self.devices.filter((item) => {
        //               return item.DEVICE_GUID != DEVICE_GUID
        //             });
        //           });
        //         //this.navCtrl.setRoot(this.navCtrl.getActive().component);
        //       }
        //     }
        //   ]
        // }); alert.present();
        var _this = this;
        var val = this.Check_Record_Exist(DEVICE_GUID);
        val.then(function (res) {
            if (res.toString() == "0") {
                var alert_1 = _this.alertCtrl.create({
                    title: 'Remove Confirmation',
                    message: 'Are you sure to remove?',
                    buttons: [
                        {
                            text: 'Cancel',
                            role: 'cancel',
                            handler: function () {
                                console.log('Cancel clicked');
                            }
                        },
                        {
                            text: 'OK',
                            handler: function () {
                                console.log('OK clicked');
                                var self = _this;
                                _this.devicesetupservice.remove(DEVICE_GUID)
                                    .subscribe(function () {
                                    self.devices = self.devices.filter(function (item) {
                                        return item.DEVICE_GUID != DEVICE_GUID;
                                    });
                                });
                                // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                            }
                        }
                    ]
                });
                alert_1.present();
                // ----------------------------------------------------------------------------
            }
            else {
                alert("Sorry, this device is already in use.");
            }
        });
        val.catch(function (err) {
            console.log(err);
        });
    };
    DeviceSetupPage.prototype.Check_Record_Exist = function (DEVICE_GUID) {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "device_raw_data?filter=DEVICE_GUID=" + DEVICE_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    DeviceSetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DeviceSetupPage');
    };
    DeviceSetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_Name') == null) {
            localStorage.setItem('Prev_Name', null);
        }
        else {
            localStorage.removeItem("Prev_Name");
        }
        if (localStorage.getItem('Prev_TenantGuid') == null) {
            localStorage.setItem('Prev_TenantGuid', null);
        }
        else {
            localStorage.removeItem("Prev_TenantGuid");
        }
    };
    DeviceSetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    DeviceSetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.devices = this.stores;
            return;
        }
        this.devices = this.filter({
            DEVICE_NAME: val,
            ROLE: val,
            ACTIVATION_FLAG: val,
        });
    };
    DeviceSetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    DeviceSetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_device' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_device' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.devices = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    DeviceSetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Deviceform.valid) {
            //for Save Set Entities-------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update------------------------------------------------- 
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_Name = "";
            if (localStorage.getItem('Prev_Name') != null) {
                strPrev_Name = localStorage.getItem('Prev_Name').toUpperCase();
            }
            if (this.NAME_ngModel_Add.trim().toUpperCase() != strPrev_Name || this.Tenant_Add_ngModel != localStorage.getItem('Prev_TenantGuid')) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-------------------------------------------------------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details*************************
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Device is already Exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------------------------------------------------------
                this.Update();
            }
        }
    };
    DeviceSetupPage.prototype.SetEntityForAdd = function () {
        this.device_entry.DEVICE_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
        this.device_entry.CREATION_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.device_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.device_entry.CREATION_USER_GUID = 'sva';
        }
        this.device_entry.UPDATE_TS = new Date().toISOString();
        this.device_entry.UPDATE_USER_GUID = "";
    };
    DeviceSetupPage.prototype.SetEntityForUpdate = function () {
        this.device_entry.DEVICE_GUID = this.device_details.DEVICE_GUID;
        this.device_entry.CREATION_TS = this.device_details.CREATION_TS;
        this.device_entry.CREATION_USER_GUID = this.device_details.CREATION_USER_GUID;
        this.device_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.device_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.device_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    DeviceSetupPage.prototype.SetCommonEntityForAddUpdate = function () {
        this.device_entry.DEVICE_NAME = this.titlecasePipe.transform(this.NAME_ngModel_Add.trim());
        this.device_entry.ROLE = this.Role_ngModel;
        this.device_entry.ACTIVATION_FLAG = this.Status_ngModel;
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.device_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.device_entry.TENANT_GUID = this.Tenant_Add_ngModel;
        }
    };
    DeviceSetupPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_Name");
        localStorage.removeItem("Prev_TenantGuid");
    };
    DeviceSetupPage.prototype.Insert = function () {
        var _this = this;
        this.devicesetupservice.save(this.device_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Device registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DeviceSetupPage.prototype.Update = function () {
        var _this = this;
        this.devicesetupservice.update(this.device_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Device updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    DeviceSetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_device?filter=DEVICE_NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_device?filter=DEVICE_NAME=" + this.NAME_ngModel_Add.trim() + ' AND TENANT_GUID=' + this.Tenant_Add_ngModel + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    DeviceSetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.Status_ngModel = "";
        this.Role_ngModel = "";
        this.Tenant_Add_ngModel = "";
    };
    DeviceSetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-device-setup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/device-setup/device-setup.html"*/'<!--\n  Generated template for the DeviceSetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'DEVICE_SETUP_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddDeviceClick()" [disabled]="button_Add_Disable">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'DEVICE_NAME\' | translate }}</th>\n          <th class="lgl1">{{ \'Role\' | translate }}</th>\n          <th class="lgl1">{{ \'Status\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:105px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let device of devices | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Title">{{device.DEVICE_NAME}}</td>\n          <td class="lgl1 getHeader" reshead="Title" *ngIf="device.ROLE==1">Input</td>\n          <td class="lgl1 getHeader" reshead="Title" *ngIf="device.ROLE==2">Output</td>\n          <td class="lgl1 getHeader" reshead="Title" *ngIf="device.ACTIVATION_FLAG==0">Active</td>\n          <td class="lgl1 getHeader" reshead="Title" *ngIf="device.ACTIVATION_FLAG==1">Inactive</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(device.DEVICE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(device.DEVICE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add device form start-->\n  <div class="blackcontainer" *ngIf="AddDeviceClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddDeviceClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ HeaderText }}</div>\n\n        <button class="btnR" (click)="CloseDeviceClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Deviceform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT"}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'DEVICE_NAME\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the device\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'ROLE\' | translate }}</ion-label>\n            <ion-select formControlName="ROLE" [(ngModel)]="Role_ngModel" placeholder="{{\'Please select role\'}}">\n              <ion-option [value]="1">Input</ion-option>\n              <ion-option [value]="2">Output</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ \'STATUS\' | translate }}</ion-label>\n            <ion-select formControlName="STATUS" [(ngModel)]="Status_ngModel" placeholder="{{\'Please select status\'}}">\n              <ion-option [value]="0">Active</ion-option>\n              <ion-option [value]="1">Inactive</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Deviceform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n\n    </ion-card>\n\n  </div>\n  <!-- add device form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/device-setup/device-setup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_devicesetup_service__["a" /* DeviceSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_devicesetup_service__["a" /* DeviceSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], DeviceSetupPage);
    return DeviceSetupPage;
}());

//# sourceMappingURL=device-setup.js.map

/***/ }),
/* 448 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceSetup_Model; });
var DeviceSetup_Model = /** @class */ (function () {
    function DeviceSetup_Model(DEVICE_GUID, DEVICE_NAME, ROLE, TENANT_GUID, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (DEVICE_GUID === void 0) { DEVICE_GUID = null; }
        if (DEVICE_NAME === void 0) { DEVICE_NAME = null; }
        if (ROLE === void 0) { ROLE = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.DEVICE_GUID = DEVICE_GUID;
        this.DEVICE_NAME = DEVICE_NAME;
        this.ROLE = ROLE;
        this.TENANT_GUID = TENANT_GUID;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    DeviceSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new DeviceSetup_Model(json.DEVICE_GUID, json.DEVICE_NAME, json.ROLE, json.TENANT_GUID, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    DeviceSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            DEVICE_GUID: this.DEVICE_GUID,
            DEVICE_NAME: this.DEVICE_NAME,
            ROLE: this.ROLE,
            TENANT_GUID: this.TENANT_GUID,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            DESCRIPTION: this.ROLE,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return DeviceSetup_Model;
}());

//# sourceMappingURL=devicesetup_model.js.map

/***/ }),
/* 449 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RolesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_rolesetup_model__ = __webpack_require__(450);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_rolesetup_service__ = __webpack_require__(621);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';









/**
 * Generated class for the RolesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var RolesetupPage = /** @class */ (function () {
    function RolesetupPage(navCtrl, navParams, fb, http, rolesetupservice, alertCtrl, loadingCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.rolesetupservice = rolesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.role_entry = new __WEBPACK_IMPORTED_MODULE_6__models_rolesetup_model__["a" /* RoleSetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.roles = [];
        this.AddRoleClicked = false;
        this.EditRoleClicked = false;
        this.Exist_Record = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__login_login__["a" /* LoginPage */]);
        }
        else {
            this.loading = this.loadingCtrl.create({
                content: 'Loading...',
            });
            this.loading.present();
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.roles = _this.stores = data.resource;
                _this.loading.dismissAll();
            });
            this.Roleform = fb.group({
                NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                DESCRIPTION: [null],
                ACTIVATION_FLAG: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                ADD_PERMISSON: [null],
                EDIT_PERMISSON: [null],
                DELETE_PERMISSON: [null],
                VIEW_PERMISSON: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                PRIORITYLEVEL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            });
        }
    }
    //---------------------------------------------------------------------
    RolesetupPage.prototype.AddRoleClick = function () {
        this.AddRoleClicked = true;
        this.ACTIVATION_FLAG_ngModel_Add = false;
        this.ClearControls();
    };
    RolesetupPage.prototype.EditClick = function (ROLE_GUID) {
        var _this = this;
        this.ClearControls();
        this.EditRoleClicked = true;
        var self = this;
        this.rolesetupservice
            .get(ROLE_GUID)
            .subscribe(function (data) {
            self.role_details = data;
            _this.NAME_ngModel_Edit = self.role_details.NAME;
            localStorage.setItem('Prev_Role_Name', self.role_details.NAME);
            _this.DESCRIPTION_ngModel_Edit = self.role_details.DESCRIPTION;
            if (self.role_details.ACTIVATION_FLAG == "1") {
                _this.ACTIVATION_FLAG_ngModel_Edit = true;
            }
            else {
                _this.ACTIVATION_FLAG_ngModel_Edit = false;
            }
            if (self.role_details.KEY_ADD == "1") {
                _this.ADD_ngModel_Edit = true;
            }
            else {
                _this.ADD_ngModel_Edit = false;
            }
            if (self.role_details.KEY_EDIT == "1") {
                _this.EDIT_ngModel_Edit = true;
            }
            else {
                _this.EDIT_ngModel_Edit = false;
            }
            if (self.role_details.KEY_DELETE == "1") {
                _this.DELETE_ngModel_Edit = true;
            }
            else {
                _this.DELETE_ngModel_Edit = false;
            }
            if (self.role_details.KEY_VIEW == "1") {
                _this.VIEW_ngModel_Edit = true;
            }
            else {
                _this.VIEW_ngModel_Edit = false;
            }
            _this.PRIORITYLEVEL_ngModel_Edit = self.role_details.ROLE_PRIORITY_LEVEL;
        });
    };
    RolesetupPage.prototype.DeleteClick = function (ROLE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.rolesetupservice.remove(ROLE_GUID)
                            .subscribe(function () {
                            self.roles = self.roles.filter(function (item) {
                                return item.ROLE_GUID != ROLE_GUID;
                            });
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    RolesetupPage.prototype.CloseRoleClick = function () {
        if (this.AddRoleClicked == true) {
            this.AddRoleClicked = false;
        }
        if (this.EditRoleClicked == true) {
            this.EditRoleClicked = false;
        }
    };
    RolesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad RolesetupPage');
    };
    RolesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Roleform.valid) {
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_role?filter=(NAME=" + this.NAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found.");
                    if (_this.Exist_Record == false) {
                        _this.role_entry.NAME = _this.NAME_ngModel_Add.trim();
                        _this.role_entry.DESCRIPTION = _this.DESCRIPTION_ngModel_Add.trim();
                        _this.role_entry.KEY_ADD = _this.ADD_ngModel_Add;
                        _this.role_entry.KEY_EDIT = _this.EDIT_ngModel_Add;
                        _this.role_entry.KEY_DELETE = _this.DELETE_ngModel_Add;
                        _this.role_entry.KEY_VIEW = _this.VIEW_ngModel_Add;
                        _this.role_entry.ACTIVATION_FLAG = _this.ACTIVATION_FLAG_ngModel_Add;
                        _this.role_entry.ROLE_PRIORITY_LEVEL = _this.PRIORITYLEVEL_ngModel_Add;
                        _this.role_entry.ROLE_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.role_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.role_entry.CREATION_TS = new Date().toISOString();
                        _this.role_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.role_entry.UPDATE_TS = new Date().toISOString();
                        _this.role_entry.UPDATE_USER_GUID = "";
                        _this.rolesetupservice.save(_this.role_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Role Registered successfully.');
                                //location.reload();
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("The Role is already Exist.");
                    _this.loading.dismissAll();
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    RolesetupPage.prototype.Update = function (ROLE_GUID) {
        var _this = this;
        if (this.Roleform.valid) {
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            if (this.role_entry.NAME == null) {
                this.role_entry.NAME = this.NAME_ngModel_Edit.trim();
            }
            if (this.role_entry.DESCRIPTION == null) {
                this.role_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Edit.trim();
            }
            if (this.role_entry.ACTIVATION_FLAG == null) {
                this.role_entry.ACTIVATION_FLAG = this.ACTIVATION_FLAG_ngModel_Edit;
            }
            this.role_entry.CREATION_TS = this.role_details.CREATION_TS;
            this.role_entry.CREATION_USER_GUID = this.role_details.CREATION_USER_GUID;
            this.role_entry.UPDATE_TS = this.role_details.UPDATE_TS;
            //this.role_entry.TENANT_GUID = UUID.UUID();
            this.role_entry.ROLE_GUID = ROLE_GUID;
            this.role_entry.UPDATE_TS = new Date().toISOString();
            this.role_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.role_entry.KEY_ADD = this.ADD_ngModel_Edit;
            this.role_entry.KEY_EDIT = this.EDIT_ngModel_Edit;
            this.role_entry.KEY_DELETE = this.DELETE_ngModel_Edit;
            this.role_entry.KEY_VIEW = this.VIEW_ngModel_Edit;
            this.role_entry.ROLE_PRIORITY_LEVEL = this.PRIORITYLEVEL_ngModel_Edit;
            if (this.NAME_ngModel_Edit.trim() != localStorage.getItem('Prev_Role_Name')) {
                var url = void 0;
                url = this.baseResource_Url + "main_role?filter=(NAME=" + this.NAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    console.log('Current Name : ' + _this.NAME_ngModel_Edit.trim() + ', Previous Name : ' + localStorage.getItem('Prev_Role_Name'));
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.role_entry.NAME = _this.NAME_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.rolesetupservice.update(_this.role_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Role is updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The Role is already Exist.");
                        _this.loading.dismissAll();
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.role_entry.NAME == null) {
                    this.role_entry.NAME = localStorage.getItem('Prev_Role_Name');
                }
                this.role_entry.NAME = this.NAME_ngModel_Edit.trim();
                //**************Update service if it is old details*************************
                this.rolesetupservice.update(this.role_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Role setup updated successfully');
                        //location.reload();
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    RolesetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.roles = this.stores;
            return;
        }
        this.roles = this.filter({
            NAME: val,
            DESCRIPTION: val
        });
    };
    RolesetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    RolesetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.ACTIVATION_FLAG_ngModel_Add = false;
        this.ADD_ngModel_Add = false;
        this.EDIT_ngModel_Add = false;
        this.DELETE_ngModel_Add = false;
        this.VIEW_ngModel_Add = false;
        this.PRIORITYLEVEL_ngModel_Add = "";
        this.NAME_ngModel_Edit = "";
        this.DESCRIPTION_ngModel_Edit = "";
        this.ACTIVATION_FLAG_ngModel_Edit = false;
        this.ADD_ngModel_Edit = false;
        this.EDIT_ngModel_Edit = false;
        this.DELETE_ngModel_Edit = false;
        this.VIEW_ngModel_Edit = false;
        this.PRIORITYLEVEL_ngModel_Edit = "";
    };
    RolesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-rolesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/rolesetup/rolesetup.html"*/'<!--\n  Generated template for the RolesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "ROLE_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddRoleClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Name</th>\n          <th class="lgl1">Description</th>\n          <th class="lgl1">Add</th>\n          <th class="lgl1">Edit</th>\n          <th class="lgl1">Delete</th>\n          <th class="lgl1">View</th>\n          <th class="lgl1">Active Flag</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let role of roles | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{role.NAME}}</td>\n          <td class="lgl1">{{role.DESCRIPTION}}</td>\n\n          <td class="lgl1">\n            <ion-item>\n              <ion-toggle class="yui" *ngIf="role.KEY_ADD==1" checked=true></ion-toggle>\n              <ion-toggle class="yui" *ngIf="role.KEY_ADD==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n          <td class="lgl1">\n            <ion-item>\n              <ion-toggle class="yui" *ngIf="role.KEY_EDIT==1" checked=true></ion-toggle>\n              <ion-toggle class="yui" *ngIf="role.KEY_EDIT==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n          <td class="lgl1">\n            <ion-item>\n              <ion-toggle class="yui" *ngIf="role.KEY_DELETE==1" checked=true></ion-toggle>\n              <ion-toggle class="yui" *ngIf="role.KEY_DELETE==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n          <td class="lgl1">\n            <ion-item>\n              <ion-toggle class="yui" *ngIf="role.KEY_VIEW==1" checked=true></ion-toggle>\n              <ion-toggle class="yui" *ngIf="role.KEY_VIEW==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n\n          <td class="lgl1">\n            <ion-item>\n              <ion-toggle class="yui" *ngIf="role.ACTIVATION_FLAG==1" checked=true></ion-toggle>\n              <ion-toggle class="yui" *ngIf="role.ACTIVATION_FLAG==0" checked=false></ion-toggle>\n            </ion-item>\n          </td>\n\n\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(role.ROLE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end (click)="DeleteClick(role.ROLE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n  <!-- add Roleform start-->\n  <div class="blackcontainer" *ngIf="AddRoleClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddRoleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_NEW_ROLE" | translate }}</div>\n        <button class="btnR" (click)="CloseRoleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Roleform">\n          <ion-item>\n            <ion-label stacked>{{ "NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the role\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ADD" | translate }}</ion-label>\n            <ion-toggle formControlName="ADD_PERMISSON" [(ngModel)]="ADD_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "EDIT" | translate }}</ion-label>\n            <ion-toggle formControlName="EDIT_PERMISSON" [(ngModel)]="EDIT_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DELETE" | translate }}</ion-label>\n            <ion-toggle formControlName="DELETE_PERMISSON" [(ngModel)]="DELETE_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "VIEW" | translate }}</ion-label>\n            <ion-toggle formControlName="VIEW_PERMISSON" [(ngModel)]="VIEW_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ACTIVE_FLAG" | translate }}</ion-label>\n            <ion-toggle formControlName="ACTIVATION_FLAG" [(ngModel)]="ACTIVATION_FLAG_ngModel_Add"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "PRIORITY_LEVEL" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PRIORITYLEVEL" [(ngModel)]="PRIORITYLEVEL_ngModel_Add" placeholder="{{\'Please fill in the priority level\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Roleform.valid" (click)="Save()">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Role form end-->\n\n  <!-- edit Role form start-->\n  <div class="blackcontainer" *ngIf="EditRoleClicked">\n  </div>\n  <div class="popup4" padding *ngIf="EditRoleClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">{{ "UPDATE_ROLE" | translate }}</div>\n        <button class="btnR" (click)="CloseRoleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Roleform">\n          <ion-item>\n\n            <ion-label stacked>{{ "NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Edit" [value]="NAME_ngModel"\n              placeholder="{{\'Please fill in the name in the role\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Edit" [value]="DESCRIPTION_ngModel"\n              placeholder="{{\'Please fill in the role\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ADD" | translate }}</ion-label>\n            <ion-toggle formControlName="ADD_PERMISSON" [(ngModel)]="ADD_ngModel_Edit"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "EDIT" | translate }}</ion-label>\n            <ion-toggle formControlName="EDIT_PERMISSON" [(ngModel)]="EDIT_ngModel_Edit"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DELETE" | translate }}</ion-label>\n            <ion-toggle formControlName="DELETE_PERMISSON" [(ngModel)]="DELETE_ngModel_Edit"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "VIEW" | translate }}</ion-label>\n            <ion-toggle formControlName="VIEW_PERMISSON" [(ngModel)]="VIEW_ngModel_Edit"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ACTIVE_FLAG" | translate }}</ion-label>\n\n            <ion-toggle formControlName="ACTIVATION_FLAG" [(ngModel)]="ACTIVATION_FLAG_ngModel_Edit"></ion-toggle>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "PRIORITY_LEVEL" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PRIORITYLEVEL" [(ngModel)]="PRIORITYLEVEL_ngModel_Edit" [value]="PRIORITYLEVEL_ngModel"\n              placeholder="{{\'Please fill in the priority level\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Roleform.valid" (click)="Update(role_details.ROLE_GUID)">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n  </div>\n  <!-- edit Role form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/rolesetup/rolesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_rolesetup_service__["a" /* RoleSetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_rolesetup_service__["a" /* RoleSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], RolesetupPage);
    return RolesetupPage;
}());

//# sourceMappingURL=rolesetup.js.map

/***/ }),
/* 450 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RoleSetup_Model; });
var RoleSetup_Model = /** @class */ (function () {
    function RoleSetup_Model(ROLE_GUID, NAME, DESCRIPTION, TENANT_GUID, ACTIVATION_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, KEY_ADD, KEY_EDIT, KEY_DELETE, KEY_VIEW, ROLE_PRIORITY_LEVEL) {
        if (ROLE_GUID === void 0) { ROLE_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (ACTIVATION_FLAG === void 0) { ACTIVATION_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (KEY_ADD === void 0) { KEY_ADD = null; }
        if (KEY_EDIT === void 0) { KEY_EDIT = null; }
        if (KEY_DELETE === void 0) { KEY_DELETE = null; }
        if (KEY_VIEW === void 0) { KEY_VIEW = null; }
        if (ROLE_PRIORITY_LEVEL === void 0) { ROLE_PRIORITY_LEVEL = null; }
        this.ROLE_GUID = ROLE_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.TENANT_GUID = TENANT_GUID;
        this.ACTIVATION_FLAG = ACTIVATION_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.KEY_ADD = KEY_ADD;
        this.KEY_EDIT = KEY_EDIT;
        this.KEY_DELETE = KEY_DELETE;
        this.KEY_VIEW = KEY_VIEW;
        this.ROLE_PRIORITY_LEVEL = ROLE_PRIORITY_LEVEL;
    }
    RoleSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new RoleSetup_Model(json.ROLE_GUID, json.NAME, json.DESCRIPTION, json.TENANT_GUID, json.ACTIVATION_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.KEY_ADD, json.KEY_EDIT, json.KEY_DELETE, json.KEY_VIEW, json.ROLE_PRIORITY_LEVEL);
    };
    RoleSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            ROLE_GUID: this.ROLE_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            TENANT_GUID: this.TENANT_GUID,
            ACTIVATION_FLAG: this.ACTIVATION_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            KEY_ADD: this.KEY_ADD,
            KEY_EDIT: this.KEY_EDIT,
            KEY_DELETE: this.KEY_DELETE,
            KEY_VIEW: this.KEY_VIEW,
            ROLE_PRIORITY_LEVEL: this.ROLE_PRIORITY_LEVEL
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return RoleSetup_Model;
}());

//# sourceMappingURL=rolesetup_model.js.map

/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RolemodulesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_rolemodulesetup_model__ = __webpack_require__(622);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_rolemodulesetup_service__ = __webpack_require__(623);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';








/**
 * Generated class for the RolemodulesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var RolemodulesetupPage = /** @class */ (function () {
    // AdminSetupDisplay: boolean = false;
    function RolemodulesetupPage(navCtrl, navParams, fb, http, rolemodulesetupservice, alertCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.rolemodulesetupservice = rolemodulesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.page = 1;
        //------------------------------------------
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        // baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_rolemodule' + '?order=ROLE_NAME&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_rolemodule' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.Module_Availble = [];
        this.Module_Assign = [];
        this.Module_Assign_Multiple = [];
        this.Role_Module = [];
        this.rolemodule = [];
        this.RoleModule_Entry = new __WEBPACK_IMPORTED_MODULE_8__models_rolemodulesetup_model__["a" /* RoleModuleSetup_Model */]();
        this.AddRoleModuleClicked = false;
        this.EditRoleModuleClicked = false;
        this.SetupDisplay = false;
        this.strSubModuleName = "";
        // if (localStorage.getItem("g_USER_GUID") == "sva") {
        //Display Grid------------------------------------
        this.DisplayGrid();
        //Bind Role----------------------------------------
        this.BindRole();
        this.BindSubModule();
        //Bind Main Module---------------------------------
        this.BindAvailbleModule();
        this.Rolemoduleform = fb.group({
            ROLENAME: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            SETUPSUBMODULE: null,
            ADMINSETUPSUBMODULE: null,
        });
        // }
        // else {
        //   alert("Sorry. This is for only Super Admin.");
        //   this.navCtrl.setRoot(LoginPage);
        // }
    }
    RolemodulesetupPage.prototype.AddRoleModuleClick = function () {
        this.AddRoleModuleClicked = true;
    };
    RolemodulesetupPage.prototype.CloseRoleModuleClick = function () {
        if (this.AddRoleModuleClicked == true) {
            this.AddRoleModuleClicked = false;
        }
        if (this.EditRoleModuleClicked == true) {
            this.EditRoleModuleClicked = false;
            this.modules = [];
            this.Module_Assign = [];
            this.BindAvailbleModule();
        }
    };
    RolemodulesetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        var Previous_ROLE_GUID;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            //Get the value and push it to new array----------------------------
            for (var itemA in data.resource) {
                if (Previous_ROLE_GUID != data.resource[itemA]["ROLE_GUID"]) {
                    var Main_Current_ROLE_Guid = data.resource[itemA]["ROLE_GUID"];
                    _this.strModuleName = "";
                    for (var itemB in data.resource) {
                        var Child_Current_ROLE_Guid = data.resource[itemB]["ROLE_GUID"];
                        if (Main_Current_ROLE_Guid == Child_Current_ROLE_Guid) {
                            if (_this.strModuleName != "" && _this.strModuleName != undefined) {
                                _this.strModuleName = _this.strModuleName + ', ' + data.resource[itemB]["MODULE_NAME"];
                            }
                            else {
                                _this.strModuleName = data.resource[itemB]["MODULE_NAME"];
                            }
                        }
                    }
                    _this.Role_Module.push({ ROLE_GUID: data.resource[itemA]["ROLE_GUID"], ROLE_NAME: data.resource[itemA]["ROLE_NAME"], MODULE_GUID: data.resource[itemA]["MODULE_GUID"], MODULE_NAME: _this.strModuleName, SUB_MODULE_NAME: data.resource[itemA]["SUB_MODULE"] });
                }
                Previous_ROLE_GUID = data.resource[itemA]["ROLE_GUID"];
            }
            _this.stores = _this.Role_Module;
            _this.loading.dismissAll();
        });
    };
    RolemodulesetupPage.prototype.GetRoleSubModule = function (ROLE_GUID) {
        var _this = this;
        this.strSubModuleName = "";
        var url_sub_module = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_role_submodule' + '?filter=(ROLE_GUID=' + ROLE_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url_sub_module)
                .map(function (res) { return res.json(); })
                .subscribe(function (data1) {
                result = data1["resource"];
                for (var item in data1.resource) {
                    if (_this.strSubModuleName != "" && _this.strSubModuleName != undefined) {
                        _this.strSubModuleName = _this.strSubModuleName + ', ' + data1.resource[item]["NAME"];
                    }
                    else {
                        _this.strSubModuleName = data1.resource[item]["NAME"];
                    }
                }
                // resolve(result);
                resolve(_this.strSubModuleName);
            });
        });
    };
    RolemodulesetupPage.prototype.DeleteRoleModule = function (ROLE_GUID) {
        var _this = this;
        this.rolemodulesetupservice.remove(ROLE_GUID)
            .subscribe(function () {
            _this.rolemodule = _this.rolemodule.filter(function (item) {
                return item.ROLE_GUID != ROLE_GUID;
            });
            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
            _this.Module_Assign_Multiple = [];
            if (_this.EditRoleModuleClicked == true) {
                //Insert------------------------------------------------------------ 
                for (var item in _this.Module_Assign) {
                    _this.RoleModule_Entry.ROLE_MODULE_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
                    _this.RoleModule_Entry.ROLE_GUID = _this.ROLENAME_ngModel_Edit;
                    _this.RoleModule_Entry.MODULE_GUID = _this.Module_Assign[item]["MODULE_GUID"];
                    // this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                    // this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                    _this.RoleModule_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.RoleModule_Entry.MODULE_SLNO = (parseInt(item) + 1).toString();
                    _this.RoleModule_Entry.MODULE_FLAG = "M";
                    _this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: _this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: _this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: _this.RoleModule_Entry.MODULE_GUID, CREATION_TS: _this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: _this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: _this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: _this.RoleModule_Entry.UPDATE_USER_GUID, MODULE_SLNO: _this.RoleModule_Entry.MODULE_SLNO, MODULE_FLAG: _this.RoleModule_Entry.MODULE_FLAG });
                }
                for (var _i = 0, _a = _this.SETUPSUBMODULE_ngModel_Edit; _i < _a.length; _i++) {
                    var SUBMODULE_GUID = _a[_i];
                    _this.RoleModule_Entry.ROLE_MODULE_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
                    _this.RoleModule_Entry.ROLE_GUID = _this.ROLENAME_ngModel_Edit;
                    _this.RoleModule_Entry.MODULE_GUID = SUBMODULE_GUID;
                    // this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                    // this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                    _this.RoleModule_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.RoleModule_Entry.MODULE_SLNO = (parseInt(item) + 1).toString();
                    _this.RoleModule_Entry.MODULE_FLAG = "S";
                    _this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: _this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: _this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: _this.RoleModule_Entry.MODULE_GUID, CREATION_TS: _this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: _this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: _this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: _this.RoleModule_Entry.UPDATE_USER_GUID, MODULE_SLNO: _this.RoleModule_Entry.MODULE_SLNO, MODULE_FLAG: _this.RoleModule_Entry.MODULE_FLAG });
                }
                _this.rolemodulesetupservice.save_multiple_recocrd(_this.Module_Assign_Multiple)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Role Module Updated successfully'); //this.loading.dismissAll();
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
            else {
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    RolemodulesetupPage.prototype.BindRole = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data.resource;
        });
    };
    RolemodulesetupPage.prototype.BindSubModule = function () {
        var _this = this;
        // let url: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/main_rolepage' + '?order=NAME&api_key=' + constants.DREAMFACTORY_API_KEY;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_get_submodule' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.setuppages = data.resource;
        });
    };
    RolemodulesetupPage.prototype.BindAvailbleModule = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_module' + '?filter=(MODULE_GUID!=69750787-6fca-65a6-d943-5b1c075874a3)&order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.modules = data.resource;
        });
    };
    RolemodulesetupPage.prototype.SelectFromAvailbleModule = function (e, SelectedModule) {
        if (e.checked == true) {
            this.Module_Assign.push({ MODULE_GUID: SelectedModule.MODULE_GUID, MODULE_NAME: SelectedModule.NAME });
            this.RemoveSelectionFromAvailbleModule(e, SelectedModule);
            //For display Submodule-----------
            if (SelectedModule.NAME == "Setup") {
                this.SetupDisplay = true;
            }
            // if(SelectedModule.NAME == "Admin Setup"){
            //   this.AdminSetupDisplay = true;
            // }
        }
    };
    RolemodulesetupPage.prototype.SelectAllAvailableModule = function () {
        //All the module should insert to AssignedModuleCheckbox--------------- 
        for (var item in this.modules) {
            this.Module_Assign.push({ MODULE_GUID: this.modules[item]["MODULE_GUID"], MODULE_NAME: this.modules[item]["NAME"] });
        }
        //Clear All the module From AvailableModuleCheckbox---------------    
        this.modules = [];
        //For display Submodule-----------
        this.SetupDisplay = true;
        // this.AdminSetupDisplay = true;
    };
    RolemodulesetupPage.prototype.RemoveSelectionFromAvailbleModule = function (e, SelectedModule) {
        if (e.checked == true) {
            var index = this.modules.indexOf(SelectedModule);
            if (index > -1) {
                this.modules.splice(index, 1);
            }
        }
    };
    RolemodulesetupPage.prototype.RemoveSelectionFromAssignedModule = function (e, SelectedModule) {
        if (e.checked == true) {
            var index = this.Module_Assign.indexOf(SelectedModule);
            if (index > -1) {
                this.Module_Assign.splice(index, 1);
                this.modules.push({ MODULE_GUID: SelectedModule.MODULE_GUID, NAME: SelectedModule.MODULE_NAME });
            }
            //For display Submodule-----------
            if (SelectedModule.MODULE_NAME == "Setup") {
                this.SetupDisplay = false;
            }
            // if(SelectedModule.MODULE_NAME == "Admin Setup"){
            //   this.AdminSetupDisplay = false;
            // }
        }
    };
    RolemodulesetupPage.prototype.SelectAllAssignedModule = function () {
        //All the module should insert to AvailbleModuleCheckbox--------------- 
        for (var item in this.Module_Assign) {
            this.modules.push({ MODULE_GUID: this.Module_Assign[item]["MODULE_GUID"], NAME: this.Module_Assign[item]["MODULE_NAME"] });
        }
        //Clear All the module From AvailableModuleCheckbox---------------    
        this.Module_Assign = [];
        //For display Submodule-----------
        this.SetupDisplay = false;
        // this.AdminSetupDisplay = false;
    };
    RolemodulesetupPage.prototype.Save_RoleModule = function () {
        var _this = this;
        if (this.Rolemoduleform.valid) {
            //Load the Controller--------------------------------
            // this.loading = this.loadingCtrl.create({
            //   content: 'Please wait...',
            // });
            // this.loading.present();
            //--------------------------------------------------
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "role_module?filter=(ROLE_GUID=" + this.ROLENAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    //Insert------------------------------------------------------------               
                    for (var item in _this.Module_Assign) {
                        _this.RoleModule_Entry.ROLE_MODULE_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
                        _this.RoleModule_Entry.ROLE_GUID = _this.ROLENAME_ngModel_Add;
                        _this.RoleModule_Entry.MODULE_GUID = _this.Module_Assign[item]["MODULE_GUID"];
                        _this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                        _this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                        _this.RoleModule_Entry.UPDATE_USER_GUID = "";
                        _this.RoleModule_Entry.MODULE_SLNO = (parseInt(item) + 1).toString();
                        _this.RoleModule_Entry.MODULE_FLAG = "M";
                        _this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: _this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: _this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: _this.RoleModule_Entry.MODULE_GUID, CREATION_TS: _this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: _this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: _this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: _this.RoleModule_Entry.UPDATE_USER_GUID, MODULE_SLNO: _this.RoleModule_Entry.MODULE_SLNO, MODULE_FLAG: _this.RoleModule_Entry.MODULE_FLAG });
                    }
                    for (var _i = 0, _a = _this.SETUPSUBMODULE_ngModel_Add; _i < _a.length; _i++) {
                        var SUBMODULE_GUID = _a[_i];
                        _this.RoleModule_Entry.ROLE_MODULE_GUID = __WEBPACK_IMPORTED_MODULE_7_angular2_uuid__["UUID"].UUID();
                        _this.RoleModule_Entry.ROLE_GUID = _this.ROLENAME_ngModel_Add;
                        _this.RoleModule_Entry.MODULE_GUID = SUBMODULE_GUID;
                        _this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                        _this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                        _this.RoleModule_Entry.UPDATE_USER_GUID = "";
                        _this.RoleModule_Entry.MODULE_SLNO = (parseInt(item) + 1).toString();
                        _this.RoleModule_Entry.MODULE_FLAG = "S";
                        _this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: _this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: _this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: _this.RoleModule_Entry.MODULE_GUID, CREATION_TS: _this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: _this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: _this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: _this.RoleModule_Entry.UPDATE_USER_GUID, MODULE_SLNO: _this.RoleModule_Entry.MODULE_SLNO, MODULE_FLAG: _this.RoleModule_Entry.MODULE_FLAG });
                    }
                    _this.rolemodulesetupservice.save_multiple_recocrd(_this.Module_Assign_Multiple)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            alert('Role Module Saved successfully');
                            // this.loading.dismissAll();
                            _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                        }
                    });
                }
                else {
                    console.log("Records found");
                    alert("The role already exist.");
                    // this.loading.dismissAll();
                }
            }, function (err) {
                console.log("ERROR!: ", err);
            });
        }
    };
    RolemodulesetupPage.prototype.Update_RoleModule = function () {
        var _this = this;
        if (this.Rolemoduleform.valid) {
            // //Load the Controller--------------------------------
            // this.loading = this.loadingCtrl.create({
            //   content: 'Please wait...',
            // });
            // this.loading.present();
            // //--------------------------------------------------
            //insert record--------------------------------------
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            if (this.ROLENAME_ngModel_Edit.trim() != localStorage.getItem('Prev_role_module_guid')) {
                var url = void 0;
                url = this.baseResource_Url + "role_module?filter=(ROLE_GUID=" + this.ROLENAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url, options)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    if (res.length == 0) {
                        //Delete all the records through role_guid--------------------------
                        _this.DeleteRoleModule(localStorage.getItem('Prev_role_module_guid'));
                        // this.Module_Assign_Multiple = [];
                        // //Insert------------------------------------------------------------ 
                        // for (var item in this.Module_Assign) {
                        //   this.RoleModule_Entry.ROLE_MODULE_GUID = UUID.UUID();
                        //   this.RoleModule_Entry.ROLE_GUID = this.ROLENAME_ngModel_Edit;
                        //   this.RoleModule_Entry.MODULE_GUID = this.Module_Assign[item]["MODULE_GUID"];
                        //   // this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                        //   // this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        //   this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                        //   this.RoleModule_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                        //   this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: this.RoleModule_Entry.MODULE_GUID, CREATION_TS: this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: this.RoleModule_Entry.UPDATE_USER_GUID });
                        // }
                        // this.rolemodulesetupservice.save_multiple_recocrd(this.Module_Assign_Multiple)
                        //   .subscribe((response) => {
                        //     if (response.status == 200) {
                        //       alert('Role Module Updated successfully'); //this.loading.dismissAll();
                        //       this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        //     }
                        //   });
                    }
                    else {
                        console.log("Records Found");
                        // this.loading.dismissAll();
                        alert("This role already exist.");
                    }
                }, function (err) {
                    console.log("ERROR!: ", err);
                    // this.loading.dismissAll();
                });
            }
            else {
                //Delete all the records through role_guid-----------
                this.DeleteRoleModule(localStorage.getItem('Prev_role_module_guid'));
                // this.Module_Assign_Multiple = [];
                //Insert------------------------------------------------------------
                // for (var itemA in this.Module_Assign) {
                //   this.RoleModule_Entry.ROLE_MODULE_GUID = UUID.UUID();
                //   this.RoleModule_Entry.ROLE_GUID = localStorage.getItem('Prev_role_module_guid');
                //   this.RoleModule_Entry.MODULE_GUID = this.Module_Assign[itemA]["MODULE_GUID"];
                //   this.RoleModule_Entry.CREATION_TS = new Date().toISOString();
                //   this.RoleModule_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                //   this.RoleModule_Entry.UPDATE_TS = new Date().toISOString();
                //   this.RoleModule_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                //   this.Module_Assign_Multiple.push({ ROLE_MODULE_GUID: this.RoleModule_Entry.ROLE_MODULE_GUID, ROLE_GUID: this.RoleModule_Entry.ROLE_GUID, MODULE_GUID: this.RoleModule_Entry.MODULE_GUID, CREATION_TS: this.RoleModule_Entry.CREATION_TS, CREATION_USER_GUID: this.RoleModule_Entry.CREATION_USER_GUID, UPDATE_TS: this.RoleModule_Entry.UPDATE_TS, UPDATE_USER_GUID: this.RoleModule_Entry.UPDATE_USER_GUID });
                // }
                // this.rolemodulesetupservice.save_multiple_recocrd(this.Module_Assign_Multiple)
                //   .subscribe((response) => {
                //     if (response.status == 200) {
                //       alert('Role Module Updated successfully');
                //       //this.loading.dismissAll();
                //       this.navCtrl.setRoot(this.navCtrl.getActive().component);
                //     }
                //   });
            }
        }
    };
    RolemodulesetupPage.prototype.EditClick = function (ROLE_GUID) {
        var _this = this;
        this.SetupDisplay = false;
        this.EditRoleModuleClicked = true;
        this.ROLENAME_ngModel_Edit = ROLE_GUID;
        localStorage.setItem('Prev_role_module_guid', ROLE_GUID);
        //Bind the Availble Checbox controls------------------------- 
        this.Module_Assign = [];
        //Bind the Assigned Check Box Controls----------------------- 
        this.Module_Assign = [];
        var role_assign_url = this.baseResource_Url + "vw_rolemodule?filter=(ROLE_GUID=" + ROLE_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        //Load the Controller--------------------------------
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        //--------------------------------------------------
        this.http
            .get(role_assign_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.Module_Assign_Edit = data.resource;
            for (var item in _this.Module_Assign_Edit) {
                _this.Module_Assign.push({ MODULE_GUID: _this.Module_Assign_Edit[item]["MODULE_GUID"], MODULE_NAME: _this.Module_Assign_Edit[item]["MODULE_NAME"] });
                //Bind the Availble Checbox controls--------------------
                for (var itemA in _this.modules) {
                    if (_this.modules[itemA]["MODULE_GUID"] == _this.Module_Assign_Edit[item]["MODULE_GUID"]) {
                        _this.modules.splice(itemA, 1);
                    }
                }
                //Bind all the data to model--------------------
                _this.RoleModule_Entry.CREATION_TS = _this.Module_Assign_Edit[item]["CREATION_TS"];
                _this.RoleModule_Entry.CREATION_USER_GUID = _this.Module_Assign_Edit[item]["CREATION_USER_GUID"];
                //Display submenu control------------------------
                if (_this.Module_Assign_Edit[item]["MODULE_NAME"] == "Setup") {
                    _this.SetupDisplay = true;
                }
            }
            _this.loading.dismissAll();
        });
        //Bind sub module controls--------------------
        var role_submodule_url = this.baseResource_Url + "view_role_submodule?filter=(ROLE_GUID=" + ROLE_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var CheckSubModule = [];
        this.http
            .get(role_submodule_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.SubModule_Edit = data.resource;
            for (var item in _this.SubModule_Edit) {
                CheckSubModule.push(_this.SubModule_Edit[item]["MODULE_GUID"]);
            }
            _this.SETUPSUBMODULE_ngModel_Edit = CheckSubModule;
            if (CheckSubModule.length > 0) {
                _this.SetupDisplay = true;
            }
        });
    };
    RolemodulesetupPage.prototype.DeleteClick = function (ROLE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.rolemodulesetupservice.remove(ROLE_GUID)
                            .subscribe(function () {
                            self.rolemodule = self.rolemodule.filter(function (item) {
                                return item.ROLE_GUID != ROLE_GUID;
                            });
                            _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    RolemodulesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad RolemodulesetupPage');
    };
    RolemodulesetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.Role_Module = this.stores;
            return;
        }
        this.Role_Module = this.filter({
            ROLE_NAME: val,
            MODULE_NAME: val
        });
    };
    RolemodulesetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    RolemodulesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-rolemodulesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/rolemodulesetup/rolemodulesetup.html"*/'<!--\n  Generated template for the RolemodulesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "ROLE_MODULE_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddRoleModuleClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Role Name</th>\n          <th class="lgl1">Module Name</th>\n          <th class="lgl1">Sub Module</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let rolemodule of Role_Module | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1"> {{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{rolemodule.ROLE_NAME}}</td>\n          <td class="lgl1" text-wrap>{{rolemodule.MODULE_NAME}}</td>\n          <td class="lgl1" text-wrap>{{rolemodule.SUB_MODULE_NAME}}</td>\n\n          <td class="lgl1 fColor">\n            <button ion-button item-end>\n              <ion-icon name="md-create" (click)="EditClick(rolemodule.ROLE_GUID)"></ion-icon>\n            </button>\n            <button ion-button item-end>\n              <ion-icon name="md-close" (click)="DeleteClick(rolemodule.ROLE_GUID)"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n  <!-- add role module form start-->\n  <div class="blackcontainer" *ngIf="AddRoleModuleClicked">\n  </div>\n  <div class="popscroll" style="top:100px;" padding *ngIf="AddRoleModuleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_ROLE_MODULE" | translate }}</div>\n        <button class="btnR" (click)="CloseRoleModuleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n\n        <form [formGroup]="Rolemoduleform">\n          <ion-item>\n            <ion-label stacked>{{ "ROLE" | translate }}</ion-label>\n            <ion-select formControlName="ROLENAME" [(ngModel)]="ROLENAME_ngModel_Add" placeholder="{{\'Select Role\'}}">\n              <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div style="width: 50%;display:inline-table !important;">\n            <ion-card class="cb5 contentHeight3">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start>{{"AVAILABLE_MODULES" | translate}}</ion-label>\n                  <button item-end ion-button color="primary" (click)="SelectAllAvailableModule()">\n                    <ion-icon name="ios-arrow-forward"></ion-icon>\n                  </button>\n                </ion-item>\n              </ion-row>\n              <div>\n                <ion-list>\n                  <ion-item *ngFor="let module of modules">\n                    <ion-label>{{module.NAME}}</ion-label>\n                    <ion-checkbox color="secondary" checked="false" (ionChange)="SelectFromAvailbleModule($event, module)"\n                      item-end></ion-checkbox>\n                  </ion-item>\n                </ion-list>\n              </div>\n            </ion-card>\n          </div>\n\n          <div style="width: 49%; display:inline-table !important;">\n            <ion-card>\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start>{{"ASSIGNED_MODULES" | translate}}</ion-label>\n                  <button item-end ion-button color="primary" (click)="SelectAllAssignedModule()">\n                    <ion-icon name="ios-arrow-back"></ion-icon>\n                  </button>\n                </ion-item>\n              </ion-row>\n              <div>\n                <ion-list>\n                  <ion-item *ngFor="let module_assigned of Module_Assign">\n                    <ion-label>{{module_assigned.MODULE_NAME}}</ion-label>\n                    <ion-checkbox color="secondary" checked="false" (ionChange)="RemoveSelectionFromAssignedModule($event,module_assigned)"\n                      item-end></ion-checkbox>\n                  </ion-item>\n                </ion-list>\n              </div>\n            </ion-card>\n          </div>\n\n          <div style="width: 100%;display:inline-table !important;">\n            <ion-card class="contentHeight3" *ngIf="SetupDisplay">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start><b>{{"SETUP SUB MODULES" | translate}}</b></ion-label>\n                </ion-item>\n              </ion-row>\n              <div>\n                <ion-item>\n                  <ion-label stacked>{{ "MODULE" | translate }}</ion-label>\n                  <ion-select formControlName="SETUPSUBMODULE" [(ngModel)]="SETUPSUBMODULE_ngModel_Add" placeholder="{{\'Select Module\'}}"\n                    multiple="true">\n                    <ion-option *ngFor="let setuppage of setuppages" [value]="setuppage.PAGE_GUID">{{setuppage.NAME}}</ion-option>\n                  </ion-select>\n                </ion-item>\n              </div>\n            </ion-card>\n          </div>\n\n          <!-- <div style="width: 100%;display:inline-table !important;">\n            <ion-card class="contentHeight3" *ngIf="AdminSetupDisplay">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start>{{"ADMIN SETUP SUB MODULES" | translate}}</ion-label>\n                </ion-item>\n              </ion-row>\n              <div>\n                <ion-item>\n                  <ion-label stacked>{{ "MODULE" | translate }}</ion-label>\n                  <ion-select formControlName="ADMINSETUPSUBMODULE" [(ngModel)]="ADMINSETUPSUBMODULE_ngModel_Add"\n                    placeholder="{{\'Select Module\'}}" multiple="true">\n                    <ion-option *ngFor="let adminsetuppage of adminsetuppages" [value]="adminsetuppage.PAGE_GUID">{{adminsetuppage.NAME}}</ion-option>\n                  </ion-select>\n                </ion-item>\n              </div>\n            </ion-card>\n          </div> -->\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Rolemoduleform.valid"\n              (click)="Save_RoleModule()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add role module form end-->\n\n  <!-- edit role module form start-->\n  <div class="blackcontainer" *ngIf="EditRoleModuleClicked">\n  </div>\n  <div class="popscroll" style="top:100px;" padding *ngIf="EditRoleModuleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{"UPDATE_ROLE_MODULE" | translate}}</div>\n        <button class="btnR" (click)="CloseRoleModuleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n\n        <form [formGroup]="Rolemoduleform">\n          <ion-item>\n            <ion-label stacked>{{ "ROLE" | translate }}</ion-label>\n            <ion-select formControlName="ROLENAME" [(ngModel)]="ROLENAME_ngModel_Edit" placeholder="{{\'Select Role\'}}">\n              <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n          <div style="width: 50%; display:inline-table !important;">\n            <ion-card class="cb5 contentHeight3">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start>{{"AVAILABLE_MODULES" | translate}}</ion-label>\n                  <button item-end ion-button color="primary" (click)="SelectAllAvailableModule()">\n                    <ion-icon name="ios-arrow-forward"></ion-icon>\n                  </button>\n                </ion-item>\n              </ion-row>\n\n              <ion-list>\n                <ion-item *ngFor="let module of modules">\n                  <ion-label>{{module.NAME}}</ion-label>\n                  <ion-checkbox color="secondary" checked="false" (ionChange)="SelectFromAvailbleModule($event, module)"\n                    item-end></ion-checkbox>\n                </ion-item>\n              </ion-list>\n\n            </ion-card>\n          </div>\n\n          <div style="width: 49%; display:inline-table !important;">\n            <ion-card class="cb5">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start>{{"ASSIGNED_MODULES" | translate}}</ion-label>\n                  <button item-end ion-button color="primary" (click)="SelectAllAssignedModule()">\n                    <ion-icon name="ios-arrow-back"></ion-icon>\n                  </button>\n                </ion-item>\n              </ion-row>\n\n              <ion-list>\n                <ion-item *ngFor="let module_assigned of Module_Assign">\n                  <ion-label>{{module_assigned.MODULE_NAME}}</ion-label>\n                  <ion-checkbox color="secondary" checked="false" (ionChange)="RemoveSelectionFromAssignedModule($event,module_assigned)"\n                    item-end></ion-checkbox>\n                </ion-item>\n              </ion-list>\n\n            </ion-card>\n          </div>\n\n          <div style="width: 100%;display:inline-table !important;">\n            <ion-card class="contentHeight3" *ngIf="SetupDisplay">\n              <ion-row>\n                <ion-item class="lgl1">\n                  <ion-label item-start><b>{{"SETUP SUB MODULES" | translate}}</b></ion-label>\n                </ion-item>\n              </ion-row>\n              <div>\n                <ion-item>\n                  <ion-label stacked>{{ "MODULE" | translate }}</ion-label>\n                  <ion-select formControlName="SETUPSUBMODULE" [(ngModel)]="SETUPSUBMODULE_ngModel_Edit" placeholder="{{\'Select Module\'}}"\n                    multiple="true">\n                    <ion-option *ngFor="let setuppage of setuppages" [value]="setuppage.PAGE_GUID">{{setuppage.NAME}}</ion-option>\n                  </ion-select>\n                </ion-item>\n              </div>\n            </ion-card>\n          </div>\n\n          <div class="btn">\n            <button ion-button [disabled]="!Rolemoduleform.valid" (click)="Update_RoleModule()">{{"SUBMIT" |\n              translate}}</button>\n          </div>\n        </form>\n\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- edit role module form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/rolemodulesetup/rolemodulesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_9__services_rolemodulesetup_service__["a" /* RoleModuleSetup_Service */], __WEBPACK_IMPORTED_MODULE_6__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_rolemodulesetup_service__["a" /* RoleModuleSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], RolemodulesetupPage);
    return RolemodulesetupPage;
}());

//# sourceMappingURL=rolemodulesetup.js.map

/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CustomerSetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_soc_customer_model__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_soc_customer_location_model__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_socmain_service__ = __webpack_require__(441);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_tenant_main_model__ = __webpack_require__(442);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__models_view_soc_model__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















/**
 * Generated class for the CustomerSetupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CustomerSetupPage = /** @class */ (function () {
    function CustomerSetupPage(navCtrl, navParams, fb, http, socservice, loadingCtrl, titlecasePipe, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.socservice = socservice;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.alertCtrl = alertCtrl;
        this.customer_entry = new __WEBPACK_IMPORTED_MODULE_7__models_soc_customer_model__["a" /* SocCustomer_Model */]();
        this.customer_location_entry = new __WEBPACK_IMPORTED_MODULE_8__models_soc_customer_location_model__["a" /* SocCustomerLocation_Model */]();
        this.tenant_entry = new __WEBPACK_IMPORTED_MODULE_10__models_tenant_main_model__["a" /* Tenant_Main_Model */]();
        this.view_entry = new __WEBPACK_IMPORTED_MODULE_11__models_view_soc_model__["a" /* View_SOC_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/soc_main' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.soc_customer = [];
        this.AddCustomerClicked = false;
        this.Exist_Record = false;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.TitleHeader = "";
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_14__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------      
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------
                this.FillTenant();
                //Display Grid---------------------------------------------
                this.DisplayGrid();
                //-------------------------------------------------------
                if (localStorage.getItem("g_USER_GUID") != "sva") {
                    this.Customerform = fb.group({
                        customer_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        location_name: [null],
                        registration_no: [null],
                        address1: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        address2: [null],
                        address3: [null],
                        contact_person: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        contact_person_mobile_no: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        contact_no1: [null],
                        contact_no2: [null],
                        email: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}')])],
                        division: [null],
                    });
                }
                else {
                    this.Customerform = fb.group({
                        customer_name: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                        location_name: [null],
                        registration_no: [null],
                        address1: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        address2: [null],
                        address3: [null],
                        contact_person: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        contact_person_mobile_no: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                        contact_no1: [null],
                        contact_no2: [null],
                        email: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}')])],
                        division: [null],
                        TENANT_NAME: [null],
                    });
                }
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    CustomerSetupPage.prototype.AddCustomerClick = function () {
        if (this.Edit_Form == false) {
            this.AddCustomerClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
            this.TitleHeader = "REGISTER NEW CUSTOMER";
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    CustomerSetupPage.prototype.EditClick = function (CUSTOMER_GUID, CUSTOMER_LOCATION_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddCustomerClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        this.TitleHeader = "UPDATE CUSTOMER";
        var self = this;
        var CustomerEditUrl = this.baseResource_Url + "view_customer_details?filter=(CUSTOMER_GUID=" + CUSTOMER_GUID + ')AND(CUSTOMER_LOCATION_GUID=' + CUSTOMER_LOCATION_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(CustomerEditUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.customer_details = data["resource"];
            _this.Tenant_Add_ngModel = self.customer_details[0]["TENANT_GUID"];
            localStorage.setItem('PREV_TENANT_GUID', self.customer_details[0]["TENANT_GUID"]);
            _this.CUSTOMER_NAME_ngModel_Add = self.customer_details[0]["CUSTOMER_NAME"];
            localStorage.setItem('PREV_CUSTOMER_NAME', self.customer_details[0]["CUSTOMER_NAME"]);
            _this.LOCATION_NAME_ngModel_Add = self.customer_details[0]["CUSTOMER_LOCATION_NAME"];
            _this.REGISTRATION_NO_ngModel_Add = self.customer_details[0]["REGISTRATION_NO"];
            _this.ADDRESS1_ngModel_Add = self.customer_details[0]["ADDRESS1"];
            _this.ADDRESS2_ngModel_Add = self.customer_details[0]["ADDRESS2"];
            _this.ADDRESS3_ngModel_Add = self.customer_details[0]["ADDRESS3"];
            _this.CONTACT_PERSON_ngModel_Add = self.customer_details[0]["CONTACT_PERSON"];
            _this.CONTACT_PERSON_MOBILE_NO_ngModel_Add = self.customer_details[0]["CONTACT_PERSON_MOBILE_NO"];
            _this.CONTACT_NO1_ngModel_Add = self.customer_details[0]["CONTACT_NO1"];
            _this.CONTACT_NO2_ngModel_Add = self.customer_details[0]["CONTACT_NO2"];
            _this.EMAIL_ngModel_Add = self.customer_details[0]["EMAIL"];
            _this.DIVISION_ngModel_Add = self.customer_details[0]["DIVISION"];
            _this.loading.dismissAll();
        });
    };
    CustomerSetupPage.prototype.DeleteClick = function (CUSTOMER_GUID, CUSTOMER_LOCATION_GUID) {
        var _this = this;
        //Check if any transcation made on this id or not. if not then delete.
        var val = this.Check_Transcation_Customer_Exist(CUSTOMER_GUID);
        val.then(function (res) {
            if (res.toString() == "0") {
                var alert_1 = _this.alertCtrl.create({
                    title: 'Remove Confirmation',
                    message: 'Are you sure to remove?',
                    buttons: [
                        {
                            text: 'Cancel',
                            role: 'cancel',
                            handler: function () {
                                console.log('Cancel clicked');
                            }
                        },
                        {
                            text: 'OK',
                            handler: function () {
                                console.log('OK clicked');
                                var self = _this;
                                //For Customer-----------------------------------
                                _this.socservice.remove_customer(CUSTOMER_GUID)
                                    .subscribe(function () {
                                    _this.stores = _this.customers;
                                    _this.stores = _this.stores.filter(function (item) {
                                        return item.CUSTOMER_GUID != CUSTOMER_GUID;
                                    });
                                });
                                //For Customer Location--------------------------
                                _this.socservice.remove_customer_location(CUSTOMER_LOCATION_GUID)
                                    .subscribe(function () {
                                    _this.stores = _this.customers;
                                    _this.stores = _this.stores.filter(function (item) {
                                        return item.CUSTOMER_LOCATION_GUID != CUSTOMER_LOCATION_GUID;
                                    });
                                });
                                //------------------------------------------------
                                // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                            }
                        }
                    ]
                });
                alert_1.present();
                // ----------------------------------------------------------------------------
            }
            else {
                alert("Sorry, this customer is already in transaction.");
            }
        });
        val.catch(function (err) {
            console.log(err);
        });
    };
    CustomerSetupPage.prototype.CloseCustomerClick = function () {
        if (this.AddCustomerClicked == true) {
            this.AddCustomerClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    CustomerSetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CustomerSetupPage');
    };
    CustomerSetupPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('PREV_TENANT_GUID') == null) {
            localStorage.setItem('PREV_TENANT_GUID', null);
        }
        else {
            localStorage.removeItem("PREV_TENANT_GUID");
        }
        if (localStorage.getItem('PREV_CUSTOMER_NAME') == null) {
            localStorage.setItem('PREV_CUSTOMER_NAME', null);
        }
        else {
            localStorage.removeItem("PREV_CUSTOMER_NAME");
        }
    };
    CustomerSetupPage.prototype.FillTenant = function () {
        var _this = this;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            var tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&' + this.Key_Param;
            this.http
                .get(tenantUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource;
            });
            this.AdminLogin = true;
        }
        else {
            this.AdminLogin = false;
        }
    };
    CustomerSetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.customers = this.stores;
            return;
        }
        this.customers = this.filter({
            CUSTOMER_NAME: val,
            CUSTOMER_LOCATION_NAME: val,
            EMAIL: val,
            CONTACT_PERSON_MOBILE_NO: val
        });
    };
    CustomerSetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    CustomerSetupPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_customer_details' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = true;
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_customer_details' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.AdminLogin = false;
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.customers = _this.stores = data.resource;
            _this.loading.dismissAll();
        });
    };
    CustomerSetupPage.prototype.Save = function () {
        //Save Customer----------------
        this.SaveCustomer();
    };
    CustomerSetupPage.prototype.SaveCustomer = function () {
        var _this = this;
        //for Save Set Entities-------------------------------------------------------------    
        if (this.Add_Form == true) {
            this.SetEntityForCustomerAdd();
        }
        //for Update Set Entities------------------------------------------------------------
        else {
            this.SetEntityForCustomerUpdate();
        }
        //Common Entities-------------------------------------------------------------------
        this.SetCommonEntityForCustomerAddUpdate();
        //Loader-------------------------------
        this.loading = this.loadingCtrl.create({
            content: 'Please Wait...',
        });
        this.loading.present();
        //-------------------------------------
        var strPREV_CUSTOMER_NAME = "";
        if (localStorage.getItem('PREV_CUSTOMER_NAME') != null) {
            strPREV_CUSTOMER_NAME = localStorage.getItem('PREV_CUSTOMER_NAME').toUpperCase();
        }
        if (this.Tenant_Add_ngModel != localStorage.getItem('PREV_TENANT_GUID') || this.CUSTOMER_NAME_ngModel_Add.trim().toUpperCase() != strPREV_CUSTOMER_NAME) {
            var val = this.CheckDuplicate();
            val.then(function (res) {
                if (res.toString() == "0") {
                    //**************Save service if it is new details***************************
                    if (_this.Add_Form == true) {
                        _this.InsertCustomer();
                    }
                    //**************Update service if it is new details*************************
                    else {
                        _this.UpdateCustomer();
                    }
                }
                else {
                    alert("The SOC is already Exist.");
                    _this.loading.dismissAll();
                }
            });
            val.catch(function (err) {
                console.log(err);
            });
        }
        else {
            //Simple update----------------------------------------------------------
            this.UpdateCustomer();
        }
    };
    CustomerSetupPage.prototype.SetEntityForCustomerAdd = function () {
        this.customer_entry.CUSTOMER_GUID = __WEBPACK_IMPORTED_MODULE_13_angular2_uuid__["UUID"].UUID();
        this.customer_entry.CREATION_TS = new Date().toISOString();
        this.customer_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.customer_entry.UPDATE_TS = new Date().toISOString();
        this.customer_entry.UPDATE_USER_GUID = "";
        this.customer_entry.ACTIVE_FLAG = "A";
    };
    CustomerSetupPage.prototype.SetEntityForCustomerUpdate = function () {
        this.customer_entry.CUSTOMER_GUID = this.customer_details[0]["CUSTOMER_GUID"];
        this.customer_entry.CREATION_TS = this.customer_details[0]["CREATION_TS"];
        this.customer_entry.CREATION_USER_GUID = this.customer_details[0]["CREATION_USER_GUID"];
        this.customer_entry.UPDATE_TS = new Date().toISOString();
        this.customer_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.customer_entry.ACTIVE_FLAG = this.customer_details[0]["ACTIVE_FLAG"];
    };
    CustomerSetupPage.prototype.SetCommonEntityForCustomerAddUpdate = function () {
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.customer_entry.TENANT_GUID = this.Tenant_Add_ngModel.trim();
        }
        else {
            this.customer_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        this.customer_entry.NAME = this.titlecasePipe.transform(this.CUSTOMER_NAME_ngModel_Add.trim());
    };
    CustomerSetupPage.prototype.InsertCustomer = function () {
        var _this = this;
        this.socservice.save_customer(this.customer_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.SaveCustomerLocation();
            }
        });
    };
    CustomerSetupPage.prototype.UpdateCustomer = function () {
        var _this = this;
        this.socservice.update_customer(this.customer_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                //this.UpdateCustomerLocation();
                _this.SaveCustomerLocation();
            }
        });
    };
    CustomerSetupPage.prototype.SaveCustomerLocation = function () {
        //for Save Set Entities-------------------------------------------------------------
        if (this.Add_Form == true) {
            this.SetEntityForCustomerLocationAdd();
        }
        //for Update Set Entities------------------------------------------------------------
        else {
            this.SetEntityForCustomerLocationUpdate();
        }
        //Common Entities-------------------------------------------------------------------
        this.SetCommonEntityForCustomerLocationAddUpdate();
        //**************Save service if it is new details***************************
        if (this.Add_Form == true) {
            this.InsertCustomerLocation();
        }
        //**************Update service if it is new details*************************
        else {
            this.UpdateCustomerLocation();
        }
    };
    CustomerSetupPage.prototype.SetEntityForCustomerLocationAdd = function () {
        this.customer_location_entry.CUSTOMER_LOCATION_GUID = __WEBPACK_IMPORTED_MODULE_13_angular2_uuid__["UUID"].UUID();
    };
    CustomerSetupPage.prototype.SetEntityForCustomerLocationUpdate = function () {
        this.customer_location_entry.CUSTOMER_LOCATION_GUID = this.customer_details[0]["CUSTOMER_LOCATION_GUID"];
    };
    CustomerSetupPage.prototype.SetCommonEntityForCustomerLocationAddUpdate = function () {
        this.customer_location_entry.CUSTOMER_GUID = this.customer_entry.CUSTOMER_GUID;
        if (this.LOCATION_NAME_ngModel_Add == undefined || this.LOCATION_NAME_ngModel_Add == "") {
            this.customer_location_entry.NAME = "NA";
        }
        else {
            this.customer_location_entry.NAME = this.titlecasePipe.transform(this.LOCATION_NAME_ngModel_Add.trim());
        }
        this.customer_location_entry.DESCRIPTION = "NA";
        this.customer_location_entry.REGISTRATION_NO = this.REGISTRATION_NO_ngModel_Add;
        this.customer_location_entry.ADDRESS1 = this.titlecasePipe.transform(this.ADDRESS1_ngModel_Add.trim());
        this.customer_location_entry.ADDRESS2 = this.titlecasePipe.transform(this.ADDRESS2_ngModel_Add);
        this.customer_location_entry.ADDRESS3 = this.titlecasePipe.transform(this.ADDRESS3_ngModel_Add);
        this.customer_location_entry.CONTACT_PERSON = this.titlecasePipe.transform(this.CONTACT_PERSON_ngModel_Add.trim());
        this.customer_location_entry.CONTACT_PERSON_MOBILE_NO = this.CONTACT_PERSON_MOBILE_NO_ngModel_Add.trim();
        this.customer_location_entry.CONTACT_NO1 = this.CONTACT_NO1_ngModel_Add;
        this.customer_location_entry.CONTACT_NO2 = this.CONTACT_NO2_ngModel_Add;
        this.customer_location_entry.EMAIL = this.EMAIL_ngModel_Add.trim().toLowerCase();
        this.customer_location_entry.DIVISION = this.titlecasePipe.transform(this.DIVISION_ngModel_Add);
        this.customer_location_entry.CREATION_TS = this.customer_entry.CREATION_TS;
        this.customer_location_entry.CREATION_USER_GUID = this.customer_entry.CREATION_USER_GUID;
        this.customer_location_entry.UPDATE_TS = this.customer_entry.UPDATE_TS;
        this.customer_location_entry.UPDATE_USER_GUID = this.customer_entry.UPDATE_USER_GUID;
    };
    CustomerSetupPage.prototype.InsertCustomerLocation = function () {
        var _this = this;
        this.socservice.save_customer_location(this.customer_location_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Customer Registered successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageCustomerValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CustomerSetupPage.prototype.UpdateCustomerLocation = function () {
        var _this = this;
        this.socservice.update_customer_location(this.customer_location_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Customer updated successfully');
                //Remove all storage values-----------------------------------------
                _this.RemoveStorageCustomerValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    CustomerSetupPage.prototype.RemoveStorageCustomerValues = function () {
        localStorage.removeItem("PREV_TENANT_GUID");
        localStorage.removeItem("PREV_CUSTOMER_NAME");
    };
    CustomerSetupPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = this.baseResource_Url + "main_customer?filter=TENANT_GUID=" + localStorage.getItem("g_TENANT_GUID") + ' AND NAME=' + this.CUSTOMER_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = this.baseResource_Url + "main_customer?filter=TENANT_GUID=" + this.Tenant_Add_ngModel + ' AND NAME=' + this.CUSTOMER_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    CustomerSetupPage.prototype.Check_Transcation_Customer_Exist = function (CUSTOMER_GUID) {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "main_claim_request?filter=CUSTOMER_GUID=" + CUSTOMER_GUID + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    CustomerSetupPage.prototype.CustomerActivation = function (CUSTOMER_GUID, Activation_Flag) {
        var _this = this;
        //Here get all the customer details and update
        this.GetCustomerDetails(CUSTOMER_GUID);
        var strTitle;
        if (Activation_Flag == true) {
            strTitle = "Do you want to deactivate ?";
        }
        else {
            strTitle = "Do you want to activate ?";
        }
        var alert = this.alertCtrl.create({
            title: 'Activation Confirmation',
            message: strTitle,
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                        _this.customers.ACTIVE_FLAG = Activation_Flag;
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        if (Activation_Flag == true) {
                            _this.customers.ACTIVE_FLAG = false;
                            _this.customer_entry.ACTIVE_FLAG = "D";
                        }
                        else {
                            _this.customers.ACTIVE_FLAG = true;
                            _this.customer_entry.ACTIVE_FLAG = "A";
                        }
                        _this.socservice.update_customer(_this.customer_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    CustomerSetupPage.prototype.GetCustomerDetails = function (CUSTOMER_GUID) {
        var _this = this;
        var CustomerActivationUrl = this.baseResource_Url + "main_customer?filter=(CUSTOMER_GUID=" + CUSTOMER_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(CustomerActivationUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.customer_details = data["resource"];
            _this.SetEntityForCustomerUpdate();
            _this.customer_entry.NAME = _this.customer_details[0]["NAME"];
            _this.customer_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        });
    };
    CustomerSetupPage.prototype.ClearControls = function () {
        this.Tenant_Add_ngModel = "";
        this.CUSTOMER_NAME_ngModel_Add = "";
        this.LOCATION_NAME_ngModel_Add = "";
        this.REGISTRATION_NO_ngModel_Add = "";
        this.ADDRESS1_ngModel_Add = "";
        this.ADDRESS2_ngModel_Add = "";
        this.ADDRESS3_ngModel_Add = "";
        this.CONTACT_PERSON_ngModel_Add = "";
        this.CONTACT_PERSON_MOBILE_NO_ngModel_Add = "";
        this.CONTACT_NO1_ngModel_Add = "";
        this.CONTACT_NO2_ngModel_Add = "";
        this.EMAIL_ngModel_Add = "";
        this.DIVISION_ngModel_Add = "";
    };
    CustomerSetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-customer-setup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/customer-setup/customer-setup.html"*/'<!--\n  Generated template for the CustomerSetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "CUSTOMER_REGISTRATION" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddCustomerClick()" [disabled]="button_Add_Disable" title="Add">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">{{ \'NO\' | translate }}</th>\n          <th class="lgl1">{{ \'Name\' | translate }}</th>\n          <!-- <th class="lgl1">{{ \'Location\' | translate }}</th> -->\n          <th class="lgl1">{{ \'Email\' | translate }}</th>\n          <th class="lgl1">{{ \'Mobile No\' | translate }}</th>\n          <!-- style="width:120px"         -->\n          <th class="lgl1" style="width:90px" >{{ \'Active Flag\' | translate }}</th>\n          <th class="lgl1 tblBrRight" style="width:60px" >{{ \'ACTION\' | translate }}</th>\n          <!-- style="width:80px" -->\n        </tr>\n\n        <tr class="col7" *ngFor="let customer of customers | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index"\n          [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Name" text-wrap>{{customer.CUSTOMER_NAME}}</td>\n          <!-- <td class="lgl1" text-wrap>{{customer.CUSTOMER_LOCATION_NAME}}</td> -->\n          <td class="lgl1 getHeader" reshead="Email." text-wrap>{{customer.EMAIL}}</td>\n          <td class="lgl1 getHeader" reshead="Mobile No." text-wrap>{{customer.CONTACT_PERSON_MOBILE_NO}}</td>\n          <td class="lgl1 getHeader" reshead="Active Flag">\n            <ion-item>\n              <ion-toggle *ngIf="customer.ACTIVE_FLAG==\'A\'" checked=true (ionChange)="CustomerActivation(customer.CUSTOMER_GUID, true)"></ion-toggle>\n              <ion-toggle *ngIf="customer.ACTIVE_FLAG==\'D\'" checked=false (ionChange)="CustomerActivation(customer.CUSTOMER_GUID, false)"></ion-toggle>\n            </ion-item>\n          </td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(customer.CUSTOMER_GUID, customer.CUSTOMER_LOCATION_GUID)"\n              title="Edit">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(customer.CUSTOMER_GUID, customer.CUSTOMER_LOCATION_GUID)"\n              title="Delete" style="display: none;">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <div class="blackcontainer" *ngIf="AddCustomerClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddCustomerClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <!-- <div class="icHeaderText" *ngIf="Add_Form">REGISTER NEW CUSTOMER</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">UPDATE CUSTOMER</div> -->\n\n        <div class="icHeaderText">{{TitleHeader}}</div>\n\n        <button class="btnR" (click)="CloseCustomerClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list class="scroll">\n        <form [formGroup]="Customerform">\n          <ion-item *ngIf="AdminLogin">\n            <ion-label stacked>{{"TENANT" | translate}}</ion-label>\n            <ion-select formControlName="TENANT_NAME" [(ngModel)]="Tenant_Add_ngModel" placeholder="{{\'Please fill the Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" value="{{tenant.TENANT_GUID}}">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked><span style="color: red">*</span>{{ "CUSTOMER_SETUP_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="customer_name" [(ngModel)]="CUSTOMER_NAME_ngModel_Add" placeholder="{{\'Please fill the project name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "CUSTOMER_EMAIL" | translate }}</ion-label>\n            <ion-input type="text" formControlName="email" [(ngModel)]="EMAIL_ngModel_Add" placeholder="{{\'Please fill the email\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "CUSTOMER_MOBILE_NO" | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_person_mobile_no" [(ngModel)]="CONTACT_PERSON_MOBILE_NO_ngModel_Add"\n              placeholder="{{\'Please fill the contact person mobile no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "CONTACT_PERSON" | translate }}</ion-label>\n            <ion-input type="text" formControlName="contact_person" [(ngModel)]="CONTACT_PERSON_ngModel_Add"\n              placeholder="{{\'Please fill the contact person\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item style="display: none">\n            <ion-label stacked>{{ "LOCATION_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="location_name" [(ngModel)]="LOCATION_NAME_ngModel_Add" placeholder="{{\'Please fill the location name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "REG_NO" | translate }}</ion-label>\n            <ion-input type="text" formControlName="registration_no" [(ngModel)]="REGISTRATION_NO_ngModel_Add"\n              placeholder="{{\'Please fill the registration number\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ADDRESS 1" | translate }}</ion-label>\n            <ion-input type="text" formControlName="address1" [(ngModel)]="ADDRESS1_ngModel_Add" placeholder="{{\'Please fill the Address 1\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ADDRESS 2" | translate }}</ion-label>\n            <ion-input type="text" formControlName="address2" [(ngModel)]="ADDRESS2_ngModel_Add" placeholder="{{\'Please fill the Address 2\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "ADDRESS 3" | translate }}</ion-label>\n            <ion-input type="text" formControlName="address3" [(ngModel)]="ADDRESS3_ngModel_Add" placeholder="{{\'Please fill Address 3\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "CONTACT 1" | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_no1" [(ngModel)]="CONTACT_NO1_ngModel_Add" placeholder="{{\'Please fill the contact no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "CONTACT 2" | translate }}</ion-label>\n            <ion-input type="number" formControlName="contact_no2" [(ngModel)]="CONTACT_NO2_ngModel_Add" placeholder="{{\'Please fill the contact no\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item style="display: none">\n            <ion-label stacked>{{ "DIVISION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="division" [(ngModel)]="DIVISION_ngModel_Add" placeholder="{{\'Please fill the division\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Customerform.valid" (click)="Save()">{{ "SUBMIT_BUTTON" | translate }}</button>\n          </div>\n\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/customer-setup/customer-setup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_9__services_socmain_service__["a" /* SocMain_Service */], __WEBPACK_IMPORTED_MODULE_12__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_socmain_service__["a" /* SocMain_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], CustomerSetupPage);
    return CustomerSetupPage;
}());

//# sourceMappingURL=customer-setup.js.map

/***/ }),
/* 453 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SettingsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_settings_model__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_settings_service__ = __webpack_require__(454);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the SettingsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var SettingsPage = /** @class */ (function () {
    function SettingsPage(fb, navCtrl, navParams, http, httpService, settingservice, alertCtrl, GlobalFunction, loadingCtrl, titlecasePipe) {
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.httpService = httpService;
        this.settingservice = settingservice;
        this.alertCtrl = alertCtrl;
        this.GlobalFunction = GlobalFunction;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.AdminLogin = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.AddSettingsClicked = false;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        this.setting_details = new __WEBPACK_IMPORTED_MODULE_7__models_settings_model__["a" /* Settings_Model */]();
        this.setting_entry = new __WEBPACK_IMPORTED_MODULE_7__models_settings_model__["a" /* Settings_Model */]();
        this.setting_detail = [];
        this.settings = [];
        this.page = 1;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
                //Clear localStorage value--------------------------------      
                this.ClearLocalStorage();
                //fill all the tenant details----------------------------      
                // this.FillTenant();
                //Display Grid---------------------------------------------      
                this.DisplayGrid();
                //----------------------------------------------------------
                this.Settingsform = fb.group({
                    KEY_NAME: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                    KEY_VALUE: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                });
            }
            else {
                alert('Sorry, you are not authorized for the action. authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
        }
    }
    SettingsPage.prototype.AddSettingsClick = function () {
        if (this.Edit_Form == false) {
            this.AddSettingsClicked = true;
            this.Add_Form = true;
            this.Edit_Form = false;
            this.ClearControls();
        }
        else {
            alert('Sorry. You are in Edit Mode.');
        }
    };
    SettingsPage.prototype.CloseSettingssClick = function () {
        if (this.AddSettingsClicked == true) {
            this.AddSettingsClicked = false;
            this.Add_Form = true;
            this.Edit_Form = false;
        }
    };
    SettingsPage.prototype.EditClick = function (PERMISSION_KEY_GUID) {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.ClearControls();
        this.AddSettingsClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var self = this;
        this.settingservice
            .get(PERMISSION_KEY_GUID)
            .subscribe(function (data) {
            self.setting_details_new = data;
            _this.KEY_NAME_ngModel_Add = self.setting_details_new.KEY_NAME;
            _this.KEY_VALUE_ngModel_Add = self.setting_details_new.KEY_VALUE;
            localStorage.setItem('Prev_KEY_NAME', self.setting_details_new.KEY_NAME);
            _this.loading.dismissAll();
        });
    };
    SettingsPage.prototype.DeleteClick = function (PERMISSION_KEY_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.settingservice.remove(PERMISSION_KEY_GUID, "permission_keys")
                            .subscribe(function () {
                            self.settings = self.settings.filter(function (item) {
                                return item.PERMISSION_KEY_GUID != PERMISSION_KEY_GUID;
                            });
                        });
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                        _this.DisplayGrid();
                    }
                }
            ]
        });
        alert.present();
    };
    SettingsPage.prototype.DisplayGrid = function () {
        var _this = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        var view_url = "";
        view_url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys' + '?order=KEY_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(view_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.setting_details_new = _this.settings = data.resource;
            _this.loading.dismissAll();
        });
    };
    SettingsPage.prototype.ClearControls = function () {
        this.KEY_NAME_ngModel_Add = "";
        this.KEY_VALUE_ngModel_Add = "";
    };
    SettingsPage.prototype.ClearLocalStorage = function () {
        if (localStorage.getItem('Prev_KEY_NAME') == null) {
            localStorage.setItem('Prev_KEY_NAME', null);
        }
        else {
            localStorage.removeItem("Prev_KEY_NAME");
        }
    };
    SettingsPage.prototype.Save = function () {
        var _this = this;
        if (this.Settingsform.valid) {
            //for Save Set Entities------------------------------------------------------------------------
            if (this.Add_Form == true) {
                this.SetEntityForAdd();
            }
            //for Update Set Entities----------------------------------------------------------------------
            else {
                this.SetEntityForUpdate();
            }
            //Common Entitity For Insert/Update-----------------    
            this.SetCommonEntityForAddUpdate();
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var strPrev_KEY_NAME = "";
            if (localStorage.getItem('Prev_KEY_NAME') != null) {
                strPrev_KEY_NAME = localStorage.getItem('Prev_KEY_NAME').toUpperCase();
            }
            if (this.KEY_NAME_ngModel_Add.trim().toUpperCase() != strPrev_KEY_NAME) {
                var val = this.CheckDuplicate();
                val.then(function (res) {
                    if (res.toString() == "0") {
                        //---Insert or Update-----------
                        if (_this.Add_Form == true) {
                            //**************Save service if it is new details***************************              
                            _this.Insert();
                            //**************************************************************************
                        }
                        else {
                            //**************Update service if it is new details*************************              
                            _this.Update();
                            //**************************************************************************
                        }
                    }
                    else {
                        alert("The Keyname is already exist.");
                        _this.loading.dismissAll();
                    }
                });
                val.catch(function (err) {
                    console.log(err);
                });
            }
            else {
                //Simple update----------        
                this.Update();
            }
        }
    };
    SettingsPage.prototype.SetEntityForAdd = function () {
        if (this.Add_Form == true) {
            this.setting_entry.PERMISSION_KEY_GUID = __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID();
            this.setting_entry.CREATION_TS = new Date().toISOString();
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                this.setting_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            }
            else {
                this.setting_entry.CREATION_USER_GUID = 'sva';
            }
            this.setting_entry.UPDATE_TS = new Date().toISOString();
            this.setting_entry.UPDATE_USER_GUID = "";
        }
    };
    SettingsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SettingsPage');
    };
    SettingsPage.prototype.SetEntityForUpdate = function () {
        this.setting_entry.PERMISSION_KEY_GUID = this.setting_details_new.PERMISSION_KEY_GUID;
        this.setting_entry.CREATION_TS = this.setting_details_new.CREATION_TS;
        this.setting_entry.CREATION_USER_GUID = this.setting_details_new.CREATION_USER_GUID;
        this.setting_entry.UPDATE_TS = new Date().toISOString();
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.setting_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        }
        else {
            this.setting_entry.UPDATE_USER_GUID = 'sva';
        }
    };
    SettingsPage.prototype.SetCommonEntityForAddUpdate = function () {
        // this.setting_entry.KEY_NAME = this.titlecasePipe.transform(this.KEY_NAME_ngModel_Add.trim());
        // this.setting_entry.KEY_VALUE = this.titlecasePipe.transform(this.KEY_VALUE_ngModel_Add.trim());
        this.setting_entry.KEY_NAME = this.KEY_NAME_ngModel_Add.trim();
        this.setting_entry.KEY_VALUE = this.KEY_VALUE_ngModel_Add.trim();
        this.setting_entry.SHIFT_GUID = null;
        this.setting_entry.DEVICE_GUID = null;
        this.setting_entry.ROLE_GUID = null;
        this.setting_entry.COMPANY_GUID = null;
        this.setting_entry.DEPT_GUID = null;
        this.setting_entry.USER_GUID = null;
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            this.setting_entry.TENANT_COMPANY_GUID = localStorage.getItem("g_TENANT_COMPANY_GUID");
            this.setting_entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem("g_TENANT_COMPANY_SITE_GUID");
            this.setting_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
        }
        else {
            this.setting_entry.TENANT_GUID = null;
            this.setting_entry.TENANT_COMPANY_GUID = null;
            this.setting_entry.TENANT_COMPANY_SITE_GUID = null;
        }
    };
    SettingsPage.prototype.RemoveStorageValues = function () {
        localStorage.removeItem("Prev_KEY_NAME");
    };
    SettingsPage.prototype.Insert = function () {
        var _this = this;
        this.settingservice.save(this.setting_entry, "permission_keys")
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Setting Key registered successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    SettingsPage.prototype.Update = function () {
        var _this = this;
        this.settingservice.update(this.setting_entry, "permission_keys")
            .subscribe(function (response) {
            if (response.status == 200) {
                alert('Setting Key updated successfully');
                //Remove all storage values-----------------------------------------          
                _this.RemoveStorageValues();
                //------------------------------------------------------------------
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    SettingsPage.prototype.CheckDuplicate = function () {
        var _this = this;
        var url = "";
        url = this.baseResource_Url + "permission_keys?filter=KEY_NAME=" + this.KEY_NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var result;
        return new Promise(function (resolve) {
            _this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                result = data["resource"];
                resolve(result.length);
            });
        });
    };
    SettingsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-settings',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/settings/settings.html"*/'<!--\n  Generated template for the SettingsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "SETTINGS" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddSettingsClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:90px">No.</th>\n          <th class="lgl1">{{ \'Key Name\' | translate }}</th>\n          <th class="lgl1">{{ \'Key Value\' | translate }}</th>          \n          <th class="lgl1 tblBrRight" style="width:90px">{{ \'ACTION\' | translate }}</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let setting_details of setting_details_new | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index" [hidden]="button_View_Disable">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Key Name">{{setting_details.KEY_NAME}}</td>\n          <td class="lgl1 getHeader" reshead="Key Value">{{setting_details.KEY_VALUE}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end [disabled]="button_Edit_Disable" (click)="EditClick(setting_details.PERMISSION_KEY_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="button_Delete_Disable" (click)="DeleteClick(setting_details.PERMISSION_KEY_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add Settings form start-->\n  <div class="blackcontainer" *ngIf="AddSettingsClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddSettingsClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText" *ngIf="Add_Form">{{ "REGISTER_NEW_SETTINGS" | translate }}</div>\n        <div class="icHeaderText" *ngIf="Edit_Form">{{ "UPDATE_SETTINGS" | translate }}</div>\n\n        <button class="btnR" (click)="CloseSettingssClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Settingsform">          \n          <ion-item>\n            <ion-label stacked>{{ "KEY_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="KEY_NAME" [(ngModel)]="KEY_NAME_ngModel_Add" placeholder="{{\'Please fill in the key name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "KEY_VALUE" | translate }}</ion-label>\n            <ion-input type="text" formControlName="KEY_VALUE" [(ngModel)]="KEY_VALUE_ngModel_Add" placeholder="{{\'Please fill in the key value\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Settingsform.valid" (click)="Save()">{{"SUBMIT"\n              | translate}}</button>  \n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add settings form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/settings/settings.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_settings_service__["a" /* Settings_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__["a" /* GlobalFunction */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8__services_settings_service__["a" /* Settings_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_11__shared_GlobalFunction__["a" /* GlobalFunction */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], SettingsPage);
    return SettingsPage;
}());

//# sourceMappingURL=settings.js.map

/***/ }),
/* 454 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Settings_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_settings_model__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var Settings_Service = /** @class */ (function () {
    function Settings_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    Settings_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    // query(params?: URLSearchParams): Observable<Settings_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             let banks: Array<Settings_Model> = [];
    //             return banks;
    //         }).catch(this.handleError);
    // };
    Settings_Service.prototype.save = function (Settings_main, Table_Name) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResource_Url + Table_Name, Settings_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    Settings_Service.prototype.update = function (Settings_main, Table_Name) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResource_Url + Table_Name, Settings_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    Settings_Service.prototype.remove = function (id, Table_Name) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResource_Url + Table_Name + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PERMISSION_KEY_GUID;
        });
    };
    Settings_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var bank = __WEBPACK_IMPORTED_MODULE_3__models_settings_model__["a" /* Settings_Model */].fromJson(result);
            return bank;
        }).catch(this.handleError);
    };
    ;
    Settings_Service.prototype.GetExistingRecord = function (KEY_NAME) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var url;
        url = "http://api.zen.com.my/api/v2/zcs/_table/permission_keys?filter=(KEY_NAME=" + KEY_NAME + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
        return this.httpService.http
            .get(url, options)
            .map(function (response) {
            var result = response.json();
            var bank = __WEBPACK_IMPORTED_MODULE_3__models_settings_model__["a" /* Settings_Model */].fromJson(result);
            alert("In GetExist" + JSON.stringify(result));
            return bank;
        }).catch(this.handleError);
    };
    ;
    Settings_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], Settings_Service);
    return Settings_Service;
}());

//# sourceMappingURL=settings_service.js.map

/***/ }),
/* 455 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanysettingsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_settings_model__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_settings_service__ = __webpack_require__(454);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












// import { Item } from 'ionic-angular/components/item/item';
// import { Flags } from '@ionic-native/file';
/**
 * Generated class for the CompanysettingsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CompanysettingsPage = /** @class */ (function () {
    function CompanysettingsPage(navCtrl, navParams, fb, http, settingservice, alertCtrl, loadingCtrl, titlecasePipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.settingservice = settingservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.titlecasePipe = titlecasePipe;
        this.button_Add_Disable = false;
        this.button_Edit_Disable = false;
        this.button_Delete_Disable = false;
        this.button_View_Disable = false;
        this.SettingsModel = [];
        this.Settings_Entry = new __WEBPACK_IMPORTED_MODULE_7__models_settings_model__["a" /* Settings_Model */]();
        this.Add_Form = true;
        this.isVisibleToSVA = false;
        this.KeyNameValue = [];
        this.blnDataInsert = false;
        this.blnDataUpdate = false;
        this.chooseFile = false;
        this.newImage = true;
        this.ImageUploadValidation = false;
        this.isImage = false;
        this.selectedImage = null;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, you are not logged in. Please login.');
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.button_Add_Disable = false;
            this.button_Edit_Disable = false;
            this.button_Delete_Disable = false;
            this.button_View_Disable = false;
            if (localStorage.getItem("g_USER_GUID") != "sva") {
                //Get the role for this page------------------------------        
                if (localStorage.getItem("g_KEY_ADD") == "0") {
                    this.button_Add_Disable = true;
                }
                if (localStorage.getItem("g_KEY_EDIT") == "0") {
                    this.button_Edit_Disable = true;
                }
                if (localStorage.getItem("g_KEY_DELETE") == "0") {
                    this.button_Delete_Disable = true;
                }
                if (localStorage.getItem("g_KEY_VIEW") == "0") {
                    this.button_View_Disable = true;
                }
            }
            this.Bind_Country();
            this.Bind_PaymentType();
            this.BindControls();
            localStorage.removeItem("default_payment_type");
            this.BindProfiles();
            this.CompanySettingsform = fb.group({
                DateFormat: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                // Currency: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                Currency: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                // EmailLogo: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                Country: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                MaxClaimAmt: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                MinClaimAmt: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                ClaimCutOffDate: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                YearStartMonth: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                YearEndMonth: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                ApprovalCutoffDate: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                PaymentType: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                Language: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
                avatar1: null,
                avatar: null,
                EmailSchedule: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                EmailTime: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                Version: null,
                DefaultProfile: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                DraftNotification: null,
                Timezone: null,
            });
            this.VisibleControls();
        }
    }
    CompanysettingsPage.prototype.Bind_Country = function () {
        var _this = this;
        var url = "";
        url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_country' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.Countrys = data.resource;
        });
    };
    CompanysettingsPage.prototype.Bind_PaymentType = function () {
        var _this = this;
        var url = "";
        url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_payment_type' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_payment_type' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.PaymentTypes = data.resource;
        });
    };
    CompanysettingsPage.prototype.BindProfiles = function () {
        var _this = this;
        var url = "";
        url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_profile' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&order=PROFILE_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_profile' + '?order=PROFILE_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.Profiles = data.resource;
        });
    };
    CompanysettingsPage.prototype.BindControls = function () {
        var _this = this;
        this.Add_Form = true;
        this.KeyNameValue = [];
        var url = "";
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys' + '?filter=(CREATION_USER_GUID=' + localStorage.getItem('g_USER_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys' + '?filter=(TENANT_GUID=' + localStorage.getItem('g_TENANT_GUID') + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.FormControls = data.resource;
            for (var item in _this.FormControls) {
                _this.KeyNameValue.push({ PERMISSION_KEY_GUID: _this.FormControls[item]["PERMISSION_KEY_GUID"], KEY_NAME: _this.FormControls[item]["KEY_NAME"], KEY_VALUE: _this.FormControls[item]["KEY_VALUE"] });
                if (_this.FormControls[item]["KEY_NAME"] == "date_format") {
                    _this.DateFormat_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "default_currency") {
                    _this.Currency_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                // if (this.FormControls[item]["KEY_NAME"] == "email_logo") { this.EmailLogo_ngModel = this.FormControls[item]["KEY_VALUE"]; }
                _this.isImage = true;
                if (_this.FormControls[item]["KEY_NAME"] == "email_logo") {
                    _this.EmailImage = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + _this.FormControls[item]["KEY_VALUE"] + '?api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                    _this.imageGUID = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "default_country") {
                    var charNo = _this.FormControls[item]["KEY_VALUE"].indexOf(",");
                    var curKeyNameValue = _this.FormControls[item]["KEY_VALUE"].substring(0, charNo);
                    localStorage.setItem("temp_country_code", _this.FormControls[item]["KEY_VALUE"].substr(charNo + 1, (_this.FormControls[item]["KEY_VALUE"].length) - charNo));
                    // this.Country_ngModel = this.FormControls[item]["KEY_VALUE"];
                    _this.Country_ngModel = curKeyNameValue;
                }
                if (_this.FormControls[item]["KEY_NAME"] == "max_claim_amt") {
                    _this.MaxClaimAmt_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "min_claim_amt") {
                    _this.MinClaimAmt_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "claim_cutoff_date") {
                    _this.ClaimCuttoffDate_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "month_start") {
                    _this.YearStartMonth_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "month_end") {
                    _this.YearEndMonth_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "approval_cutoff_date") {
                    _this.ApprovalCutoffDate_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "default_payment_type") {
                    var charNo_1 = _this.FormControls[item]["KEY_VALUE"].indexOf(",");
                    var curKeyNameValue_1 = _this.FormControls[item]["KEY_VALUE"].substring(0, charNo_1);
                    // this.PaymentType_ngModel = this.FormControls[item]["KEY_VALUE"];          
                    _this.PaymentType_ngModel = curKeyNameValue_1;
                }
                if (_this.FormControls[item]["KEY_NAME"] == "default_language") {
                    _this.Language_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "email_schedule") {
                    // this.Email_Schedule_ngModel = this.FormControls[item]["KEY_VALUE"]; 
                    _this.Email_Schedule_ngModel = _this.FormControls[item]["KEY_VALUE"].split(",");
                }
                if (_this.FormControls[item]["KEY_NAME"] == "email_time") {
                    _this.Email_Time_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "version") {
                    _this.Version_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "profile_guid") {
                    _this.Profile_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                if (_this.FormControls[item]["KEY_NAME"] == "draft_notification") {
                    if (_this.FormControls[item]["KEY_VALUE"] == "1") {
                        _this.DraftNotification_ngModel = true;
                    }
                    else {
                        _this.DraftNotification_ngModel = false;
                    }
                }
                if (_this.FormControls[item]["KEY_NAME"] == "default_time_zone") {
                    _this.Timezone_ngModel = _this.FormControls[item]["KEY_VALUE"];
                }
                _this.Add_Form = false;
            }
        });
        //For Tenant Admin version should display from sva creation_guid
        if (localStorage.getItem("g_USER_GUID") != "sva") {
            url = __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/permission_keys' + '?filter=(CREATION_USER_GUID=sva)&api_key=' + __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http
                .get(url)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.FormControls = data.resource;
                for (var item in _this.FormControls) {
                    if (_this.FormControls[item]["KEY_NAME"] == "version") {
                        _this.Version_ngModel = _this.FormControls[item]["KEY_VALUE"];
                    }
                }
            });
        }
    };
    CompanysettingsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CompanysettingsPage');
    };
    CompanysettingsPage.prototype.Save = function (formValues) {
        var _this = this;
        if (this.Add_Form == true) {
            this.KeyNameValue = [];
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "date_format", KEY_VALUE: formValues.DateFormat.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "default_currency", KEY_VALUE: formValues.Currency.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "email_logo", KEY_VALUE: this.imageGUID });
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "default_country", KEY_VALUE: formValues.Country.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "default_country", KEY_VALUE: formValues.Country.trim() + ',' + this.CountryCodes[0]["alpha2Code"] });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "max_claim_amt", KEY_VALUE: formValues.MaxClaimAmt.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "min_claim_amt", KEY_VALUE: formValues.MinClaimAmt.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "claim_cutoff_date", KEY_VALUE: formValues.ClaimCutOffDate.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "month_start", KEY_VALUE: formValues.YearStartMonth.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "month_end", KEY_VALUE: formValues.YearEndMonth.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "approval_cutoff_date", KEY_VALUE: formValues.ApprovalCutoffDate.trim() });
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "default_payment_type", KEY_VALUE: formValues.PaymentType.trim() });
            for (var item in this.PaymentTypes) {
                if (this.PaymentTypes[item]["PAYMENT_TYPE_GUID"] == formValues.PaymentType.trim()) {
                    this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "default_payment_type", KEY_VALUE: formValues.PaymentType.trim() + ',' + this.PaymentTypes[item]["NAME"] });
                }
            }
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "default_language", KEY_VALUE: formValues.Language.trim() });
            var ctr = 0;
            var scheduler_val = "";
            for (var _i = 0, _a = this.Email_Schedule_ngModel; _i < _a.length; _i++) {
                var ScheduleVal = _a[_i];
                if (this.Email_Schedule_ngModel.length > 1) {
                    if (ctr == 0) {
                        scheduler_val = ScheduleVal;
                    }
                    else {
                        scheduler_val = scheduler_val + ',' + ScheduleVal;
                    }
                }
                else {
                    scheduler_val = ScheduleVal;
                }
                ctr = ctr + 1;
            }
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "email_schedule", KEY_VALUE: formValues.EmailSchedule.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "email_schedule", KEY_VALUE: scheduler_val });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "email_time", KEY_VALUE: formValues.EmailTime.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "version", KEY_VALUE: formValues.Version.trim() });
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "profile_guid", KEY_VALUE: formValues.DefaultProfile.trim() });
            if (formValues.DraftNotification == true) {
                this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "draft_notification", KEY_VALUE: "1" });
            }
            else {
                this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "draft_notification", KEY_VALUE: "0" });
            }
            this.KeyNameValue.push({ PERMISSION_KEY_GUID: __WEBPACK_IMPORTED_MODULE_10_angular2_uuid__["UUID"].UUID(), KEY_NAME: "default_time_zone", KEY_VALUE: formValues.Timezone.trim() });
            this.Settings_Entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.Settings_Entry.CREATION_TS = new Date().toISOString();
            this.Settings_Entry.UPDATE_TS = new Date().toISOString();
            this.Settings_Entry.UPDATE_USER_GUID = null;
        }
        else {
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "version", KEY_VALUE: formValues.Version.trim() });
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "profile_guid", KEY_VALUE: formValues.DefaultProfile.trim() });
            // if(formValues.DraftNotification == true){
            //   this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "draft_notification", KEY_VALUE: "1" });
            // }
            // else{
            //   this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "draft_notification", KEY_VALUE: "0" });
            // }
            // this.KeyNameValue.push({ PERMISSION_KEY_GUID: UUID.UUID(), KEY_NAME: "default_time_zone", KEY_VALUE: formValues.Timezone.trim() });
            this.KeyNameValue.forEach(function (element) {
                if (element.KEY_NAME == "date_format") {
                    element.KEY_VALUE = formValues.DateFormat.trim();
                }
                if (element.KEY_NAME == "default_currency") {
                    element.KEY_VALUE = formValues.Currency.trim();
                }
                if (element.KEY_NAME == "email_logo") {
                    element.KEY_VALUE = _this.imageGUID;
                }
                // if (element.KEY_NAME == "default_country") { element.KEY_VALUE = formValues.Country.trim() + ',' + this.CountryCodes[0]["alpha2Code"]; }
                if (element.KEY_NAME == "default_country") {
                    for (var item in _this.Countrys) {
                        if (_this.Countrys[item]["COUNTRY_GUID"] == formValues.Country.trim()) {
                            if (_this.CountryCodes != undefined) {
                                if (element.KEY_NAME == "default_country") {
                                    element.KEY_VALUE = formValues.Country.trim() + ',' + _this.CountryCodes[0]["alpha2Code"];
                                }
                            }
                            else {
                                if (element.KEY_NAME == "default_country") {
                                    element.KEY_VALUE = formValues.Country.trim() + ',' + localStorage.getItem("temp_country_code");
                                }
                            }
                        }
                    }
                }
                if (element.KEY_NAME == "max_claim_amt") {
                    element.KEY_VALUE = formValues.MaxClaimAmt.trim();
                }
                if (element.KEY_NAME == "min_claim_amt") {
                    element.KEY_VALUE = formValues.MinClaimAmt.trim();
                }
                if (element.KEY_NAME == "claim_cutoff_date") {
                    element.KEY_VALUE = formValues.ClaimCutOffDate.trim();
                }
                if (element.KEY_NAME == "month_start") {
                    element.KEY_VALUE = formValues.YearStartMonth.trim();
                }
                if (element.KEY_NAME == "month_end") {
                    element.KEY_VALUE = formValues.YearEndMonth.trim();
                }
                if (element.KEY_NAME == "approval_cutoff_date") {
                    element.KEY_VALUE = formValues.ApprovalCutoffDate.trim();
                }
                // if (element.KEY_NAME == "default_payment_type") { element.KEY_VALUE = formValues.PaymentType.trim(); }
                if (element.KEY_NAME == "default_payment_type") {
                    for (var item in _this.PaymentTypes) {
                        if (_this.PaymentTypes[item]["PAYMENT_TYPE_GUID"] == formValues.PaymentType.trim()) {
                            if (element.KEY_NAME == "default_payment_type") {
                                element.KEY_VALUE = formValues.PaymentType.trim() + ',' + _this.PaymentTypes[item]["NAME"];
                            }
                        }
                    }
                }
                if (element.KEY_NAME == "default_language") {
                    element.KEY_VALUE = formValues.Language.trim();
                }
                if (element.KEY_NAME == "email_schedule") {
                    var ctr = 0;
                    for (var _i = 0, _a = _this.Email_Schedule_ngModel; _i < _a.length; _i++) {
                        var ScheduleVal = _a[_i];
                        if (_this.Email_Schedule_ngModel.length > 1) {
                            if (ctr == 0) {
                                element.KEY_VALUE = ScheduleVal;
                            }
                            else {
                                element.KEY_VALUE = element.KEY_VALUE + ',' + ScheduleVal;
                            }
                        }
                        else {
                            element.KEY_VALUE = ScheduleVal;
                        }
                        ctr = ctr + 1;
                    }
                    // element.KEY_VALUE = formValues.EmailSchedule.trim(); 
                }
                if (element.KEY_NAME == "email_time") {
                    element.KEY_VALUE = formValues.EmailTime.trim();
                }
                if (element.KEY_NAME == "version") {
                    element.KEY_VALUE = formValues.Version.trim();
                }
                if (element.KEY_NAME == "profile_guid") {
                    element.KEY_VALUE = formValues.DefaultProfile.trim();
                }
                if (formValues.DraftNotification == true) {
                    if (element.KEY_NAME == "draft_notification") {
                        element.KEY_VALUE = "1";
                    }
                }
                else {
                    if (element.KEY_NAME == "draft_notification") {
                        element.KEY_VALUE = "0";
                    }
                }
                if (element.KEY_NAME == "default_time_zone") {
                    element.KEY_VALUE = formValues.Timezone.trim();
                }
                _this.Settings_Entry.CREATION_USER_GUID = _this.FormControls[0]["CREATION_USER_GUID"];
                _this.Settings_Entry.CREATION_TS = _this.FormControls[0]["CREATION_TS"];
                _this.Settings_Entry.UPDATE_TS = new Date().toISOString();
                _this.Settings_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            });
        }
        this.KeyNameValue.forEach(function (element) {
            _this.Settings_Entry.PERMISSION_KEY_GUID = element.PERMISSION_KEY_GUID;
            _this.Settings_Entry.KEY_NAME = element.KEY_NAME;
            _this.Settings_Entry.KEY_VALUE = element.KEY_VALUE;
            _this.Settings_Entry.SHIFT_GUID = null;
            _this.Settings_Entry.DEVICE_GUID = null;
            _this.Settings_Entry.ROLE_GUID = null;
            _this.Settings_Entry.COMPANY_GUID = null;
            _this.Settings_Entry.DEPT_GUID = null;
            _this.Settings_Entry.USER_GUID = null;
            _this.Settings_Entry.TENANT_COMPANY_GUID = localStorage.getItem("g_TENANT_COMPANY_GUID");
            _this.Settings_Entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem("g_TENANT_COMPANY_SITE_GUID");
            _this.Settings_Entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
            if (_this.Add_Form == true) {
                _this.settingservice.save(_this.Settings_Entry, "permission_keys")
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        _this.blnDataInsert = true;
                        _this.blnDataUpdate = false;
                    }
                });
            }
            else {
                _this.settingservice.update(_this.Settings_Entry, "permission_keys")
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        _this.blnDataUpdate = true;
                        _this.blnDataInsert = false;
                    }
                });
                // if (this.Settings_Entry.KEY_NAME == "default_time_zone") {
                //   this.settingservice.save(this.Settings_Entry, "permission_keys")
                //     .subscribe((response) => {
                //       if (response.status == 200) {
                //         this.blnDataInsert = true; this.blnDataUpdate = false;
                //       }
                //     });
                // }
            }
        });
        // if (this.blnDataInsert == true) {
        alert('Submitted successfully');
        // }
        // if (this.blnDataUpdate == true) {
        //   alert('Updated successfully');
        // }
        this.BindControls();
        this.navCtrl.setRoot(this.navCtrl.getActive().component);
    };
    CompanysettingsPage.prototype.EmailImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.CompanySettingsform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.EmailImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = false;
        this.saveIm();
    };
    CompanysettingsPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg' || file_1.type === 'image/png')
                this.isImage = true;
            else
                this.isImage = false;
            this.CompanySettingsform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.CompanySettingsform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
    };
    CompanysettingsPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            _this.imageGUID = _this.uniqueName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    CompanysettingsPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.CompanySettingsform.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    CompanysettingsPage.prototype.onCountrySelect = function () {
        var _this = this;
        for (var item in this.Countrys) {
            if (this.Countrys[item]["COUNTRY_GUID"] == this.Country_ngModel) {
                var url = "https://restcountries.eu/rest/v2/name/" + this.Countrys[item]["NAME"] + "?fullText=true";
                this.http
                    .get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.CountryCodes = data;
                    _this.Currency_ngModel = _this.CountryCodes[0]["currencies"][0]["symbol"];
                    _this.Timezone_ngModel = _this.CountryCodes[0]["timezones"].toString().substr(3, 6);
                });
            }
        }
    };
    CompanysettingsPage.prototype.VisibleControls = function () {
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.isVisibleToSVA = true;
        }
        else {
            this.isVisibleToSVA = false;
        }
    };
    CompanysettingsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-companysettings',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/companysettings/companysettings.html"*/'<!--\n  Generated template for the CompanysettingsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="primary200">\n    <ion-title>{{ \'Company Settings\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n  <!-- add company settings form start-->\n\n\n\n  <ion-list>\n    <form [formGroup]="CompanySettingsform">\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Date Format\' | translate }}</ion-label>\n        <ion-input type="text" formControlName="DateFormat" [(ngModel)]="DateFormat_ngModel" required placeholder="{{\'Please fill date format\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item class="text">\n        <ion-label stacked>\n          <span style="color:red">*</span>{{ \'Default Country\' | translate }}</ion-label>\n        <ion-select formControlName="Country" [(ngModel)]="Country_ngModel" placeholder="{{\'Please fill country\'}}"\n          (ionChange)="onCountrySelect($event)">\n          <ion-option *ngFor="let Country of Countrys" [value]="Country.COUNTRY_GUID">{{Country.NAME}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Default Currency\' | translate }}</ion-label>\n        <ion-input type="text" formControlName="Currency" [(ngModel)]="Currency_ngModel" required placeholder="{{\'Pleae fill default currency\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label id="email_image" stacked>{{ \'Email Logo\' | translate }}</ion-label>\n        <ion-input type="file" id="avatar1" (change)="EmailImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n      </ion-item>\n      <div *ngIf="isImage">\n        <img src="{{EmailImage}}" style="width: 20%">\n      </div>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Max Claim Amount\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="MaxClaimAmt" [(ngModel)]="MaxClaimAmt_ngModel" required placeholder="{{\'Please fill max claim amount\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Min Claim Amount\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="MinClaimAmt" [(ngModel)]="MinClaimAmt_ngModel" required placeholder="{{\'Please fill min claim amount\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Claim Cut-off date\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="ClaimCutOffDate" [(ngModel)]="ClaimCuttoffDate_ngModel" required\n          placeholder="{{\'Please fill Claim Cutoff date\'}}"></ion-input>\n        <!-- <ion-select formControlName="ClaimCutOffDate" [(ngModel)]="ClaimCuttoffDate_ngModel" placeholder="{{\'Please select Claim Cutoff date\'}}">\n                <ion-option [value]="0">1</ion-option>\n                <ion-option [value]="1">2</ion-option>\n                <ion-option [value]="2">3</ion-option>\n                <ion-option [value]="0">4</ion-option>\n                <ion-option [value]="1">5</ion-option>\n                <ion-option [value]="2">6</ion-option>\n                <ion-option [value]="0">7</ion-option>\n                <ion-option [value]="1">8</ion-option>\n                <ion-option [value]="2">9</ion-option>\n                <ion-option [value]="0">10</ion-option>\n                <ion-option [value]="1">11</ion-option>\n                <ion-option [value]="2">12</ion-option>\n                <ion-option [value]="0">13</ion-option>\n                <ion-option [value]="1">14</ion-option>\n                <ion-option [value]="2">15</ion-option>\n                <ion-option [value]="0">16</ion-option>\n                <ion-option [value]="1">17</ion-option>\n                <ion-option [value]="2">18</ion-option>\n                <ion-option [value]="0">19</ion-option>\n                <ion-option [value]="1">20</ion-option>\n                <ion-option [value]="2">21</ion-option>\n                <ion-option [value]="0">22</ion-option>\n                <ion-option [value]="1">23</ion-option>\n                <ion-option [value]="2">24</ion-option>\n                <ion-option [value]="0">25</ion-option>\n                <ion-option [value]="1">26</ion-option>\n                <ion-option [value]="2">27</ion-option>\n                <ion-option [value]="2">28</ion-option>\n              </ion-select> -->\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Financial Year Start Month\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="YearStartMonth" [(ngModel)]="YearStartMonth_ngModel" required\n          placeholder="{{\'Please fill financial year start month\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Financial Year End Month\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="YearEndMonth" [(ngModel)]="YearEndMonth_ngModel" required placeholder="{{\'Please fill financial year start month\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Approval cut-off date\' | translate }}</ion-label>\n        <ion-input type="number" formControlName="ApprovalCutoffDate" [(ngModel)]="ApprovalCutoffDate_ngModel" required\n          placeholder="{{\'Approval cut-off date\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Default Payment Type\' | translate }}</ion-label>\n        <ion-select formControlName="PaymentType" [(ngModel)]="PaymentType_ngModel" placeholder="{{\'Please select payment type\'}}">\n          <ion-option *ngFor="let PaymentType of PaymentTypes" [value]="PaymentType.PAYMENT_TYPE_GUID">{{PaymentType.NAME}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Default Language\' | translate }}</ion-label>\n        <ion-input type="text" formControlName="Language" [(ngModel)]="Language_ngModel" required placeholder="{{\'Please fill language\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Default Profile\' | translate }}</ion-label>\n        <ion-select formControlName="DefaultProfile" [(ngModel)]="Profile_ngModel" placeholder="{{\'Please select profile\'}}">\n          <ion-option *ngFor="let Profile of Profiles" [value]="Profile.MAIN_PROFILE_GUID">{{Profile.PROFILE_NAME}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item class="fuha">\n        <ion-label stacked><span style="color:red">*</span>{{ \'Email Schedule\' | translate }}</ion-label>\n        <ion-select formControlName="EmailSchedule" [(ngModel)]="Email_Schedule_ngModel" placeholder="{{\'Please select\'}}"\n          multiple="true">\n          <!-- <ion-option [value]="Daily">Daily</ion-option>\n                <ion-option [value]="Weekly">Weekly</ion-option>\n                <ion-option [value]="Monthly">Monthly</ion-option> -->\n\n          <ion-option [value]="1">1</ion-option>\n          <ion-option [value]="2">2</ion-option>\n          <ion-option [value]="3">3</ion-option>\n          <ion-option [value]="4">4</ion-option>\n          <ion-option [value]="5">5</ion-option>\n          <ion-option [value]="6">6</ion-option>\n          <ion-option [value]="7">7</ion-option>\n          <ion-option [value]="8">8</ion-option>\n          <ion-option [value]="9">9</ion-option>\n          <ion-option [value]="10">10</ion-option>\n          <ion-option [value]="11">11</ion-option>\n          <ion-option [value]="12">12</ion-option>\n          <ion-option [value]="13">13</ion-option>\n          <ion-option [value]="14">14</ion-option>\n          <ion-option [value]="15">15</ion-option>\n          <ion-option [value]="16">16</ion-option>\n          <ion-option [value]="17">17</ion-option>\n          <ion-option [value]="18">18</ion-option>\n          <ion-option [value]="19">19</ion-option>\n          <ion-option [value]="20">20</ion-option>\n          <ion-option [value]="21">21</ion-option>\n          <ion-option [value]="22">22</ion-option>\n          <ion-option [value]="23">23</ion-option>\n          <ion-option [value]="24">24</ion-option>\n          <ion-option [value]="25">25</ion-option>\n          <ion-option [value]="26">26</ion-option>\n          <ion-option [value]="27">27</ion-option>\n          <ion-option [value]="28">28</ion-option>\n          <ion-option [value]="29">29</ion-option>\n          <ion-option [value]="30">30</ion-option>\n          <ion-option [value]="31">31</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item class="fuha2">\n        <ion-label stacked><span style="color:red">*</span>{{ \'Schedule Time\' | translate }}</ion-label>\n        <ion-datetime minuteValues="0,5,10,15,20,25,30,35,40,45,50,55" formControlName="EmailTime" [(ngModel)]="Email_Time_ngModel"\n          displayFormat="HH:mm"></ion-datetime>\n      </ion-item>\n\n      <ion-item class="fuha2">\n        <ion-label stacked>{{ \'Draft Notification\' | translate }}</ion-label>\n        <ion-checkbox formControlName="DraftNotification" [(ngModel)]="DraftNotification_ngModel"></ion-checkbox>\n      </ion-item>\n\n      <ion-item>\n        <ion-label stacked><span style="color:red">*</span>{{ \'Time zone\' | translate }}</ion-label>\n        <ion-input type="text" formControlName="Timezone" [(ngModel)]="Timezone_ngModel" required placeholder="{{\'Please fill timezone\'}}"></ion-input>\n      </ion-item>\n\n      <ion-item [hidden]="!isVisibleToSVA">\n        <ion-label stacked><span style="color:red">*</span>{{ \'Version\' | translate }}</ion-label>\n        <ion-input type="text" formControlName="Version" [(ngModel)]="Version_ngModel" required placeholder="{{\'Please fill version\'}}"></ion-input>\n      </ion-item>\n\n      <div class="btn">\n        <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!CompanySettingsform.valid"\n          (click)="Save(CompanySettingsform.value)">{{"SUBMIT" | translate}}</button>\n      </div>\n    </form>\n  </ion-list>\n\n\n\n  <!-- add company settings form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/companysettings/companysettings.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__services_settings_service__["a" /* Settings_Service */], __WEBPACK_IMPORTED_MODULE_9__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_settings_service__["a" /* Settings_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["k" /* TitleCasePipe */]])
    ], CompanysettingsPage);
    return CompanysettingsPage;
}());

//# sourceMappingURL=companysettings.js.map

/***/ }),
/* 456 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DbmaintenancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the DbmaintenancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DbmaintenancePage = /** @class */ (function () {
    function DbmaintenancePage(excelService, navCtrl, navParams, fb, http, alertCtrl, loadingCtrl) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.AdminLogin = false;
        this.FilterTables = [];
        this.SelectTable = [];
        this.SelectTenant = [];
        //Load Tenant
        this.LoadTenant();
        this.LoadTables();
        //Load Tables from db
        this.DBMaintenanceform = fb.group({
            TENANTNAME: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            TABLENAME: [""],
        });
    }
    DbmaintenancePage.prototype.LoadTenant = function () {
        var _this = this;
        var tenantUrl = "";
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            tenantUrl = this.baseResource_Url + 'tenant_main?order=TENANT_ACCOUNT_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            tenantUrl = this.baseResource_Url + 'tenant_main?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&order=TENANT_ACCOUNT_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        // if (localStorage.getItem("g_USER_GUID") == "sva") {      
        this.http
            .get(tenantUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenants = data.resource;
        });
        this.AdminLogin = true;
        // }
        // else {
        //   this.AdminLogin = false;
        // }
    };
    DbmaintenancePage.prototype.LoadTables = function () {
        var _this = this;
        var TableUrl = "";
        TableUrl = "http://api.zen.com.my/api/v2/zcs/_table?api_key=" + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(TableUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tables = data.resource;
            for (var item in _this.tables) {
                var charNo = _this.tables[item]["name"].indexOf(".");
                var curName = _this.tables[item]["name"].substring(0, charNo);
                if (curName != "bitnami_dreamfactory" && curName != "cloud_services_db_dev" && curName != "esawitdb") {
                    // this.FilterTables.push({ name: this.tables[item]["name"].substr(charNo + 1, (this.tables[item]["name"].length) - charNo) });
                    _this.FilterTables.push({ name: _this.tables[item]["name"] });
                }
            }
        });
    };
    DbmaintenancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DbmaintenancePage');
    };
    DbmaintenancePage.prototype.checkAllCheckBoxes = function (event) {
        // alert(event);
        if (event.checked == true) {
            this.selectAll = true;
            this.SelectTable = [];
            for (var item in this.tables) {
                this.SelectTable.push({ Table_Name: this.tables[item]["name"] });
            }
        }
        else {
            this.selectAll = false;
        }
    };
    DbmaintenancePage.prototype.SelectTableItem = function (e, SelectedTable) {
        if (e.checked == true) {
            var index = this.FilterTables.indexOf(SelectedTable);
            if (index > -1) {
                this.SelectTable.push({ Table_Name: SelectedTable.name });
            }
        }
        else {
            for (var item in this.SelectTable) {
                if (this.SelectTable[item]["Table_Name"] == SelectedTable.name) {
                    this.SelectTable.splice(Number(item), 1);
                }
            }
        }
    };
    DbmaintenancePage.prototype.SelectTenantItem = function (e, SelectTenant) {
        if (e.checked == true) {
            var index = this.tenants.indexOf(SelectTenant);
            if (index > -1) {
                this.SelectTenant.push({ TENANT_ACCOUNT_NAME: this.tenants.TENANT_ACCOUNT_NAME });
            }
        }
        else {
            for (var item in this.SelectTenant) {
                if (this.SelectTenant[item]["TENANT_ACCOUNT_NAME"] == SelectTenant.TENANT_ACCOUNT_NAME) {
                    this.SelectTenant.splice(Number(item), 1);
                }
            }
        }
    };
    DbmaintenancePage.prototype.ExportToExcel = function (evt) {
        var _this = this;
        var _loop_1 = function () {
            var TableName = this_1.SelectTable[item]["Table_Name"];
            var TableUrl = "";
            var TempTableData;
            TableUrl = "http://api.zen.com.my/api/v2/zcs/_table/" + TableName + "?filter=(TENANT_GUID=" + this_1.TENANTNAME_ngModel + ")&api_key=" + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this_1.http
                .get(TableUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                TempTableData = data.resource;
                _this.excelService.exportAsExcelFile(TempTableData, TableName);
            });
        };
        var this_1 = this;
        for (var item in this.SelectTable) {
            _loop_1();
        }
    };
    DbmaintenancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-dbmaintenance',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/dbmaintenance/dbmaintenance.html"*/'<!--\n  Generated template for the DbmaintenancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "DATABASE_MAINTENANCE" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <form [formGroup]="DBMaintenanceform">\n    <div style="width: 50%;display:inline-table !important;">\n      <ion-card class="cb5 contentHeight3">\n        <ion-row>\n          <ion-item class="lgl1">\n            <ion-label item-start>{{"TENANT_NAME" | translate}}</ion-label>        \n            <ion-select formControlName="TENANTNAME" [(ngModel)]="TENANTNAME_ngModel" placeholder="{{\'Select Tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" [value]="tenant.TENANT_GUID">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>    \n          </ion-item>\n        </ion-row>\n        <!-- <div>\n          <ion-list>\n            <ion-item *ngFor="let tenant of tenants">\n              <ion-label>{{tenant.TENANT_ACCOUNT_NAME}}</ion-label>\n              <ion-checkbox color="secondary" checked="false" item-end (ionChange)="SelectTenantItem($event, tenant)"></ion-checkbox>\n            </ion-item>\n          </ion-list>\n        </div> -->\n      </ion-card>\n    </div>\n\n    <div style="width: 49%; height: 200px; display:inline-table !important;">\n      <ion-card>\n        <ion-row>\n          <ion-item class="lgl1">\n            <ion-label item-start>{{"TABLE NAME" | translate}}<input type="checkbox" id="1" formControlName="TABLENAME" [(ngModel)]="Table_ngModel" (change)="checkAllCheckBoxes($event)"></ion-label>\n            <!-- <ion-checkbox color="secondary" item-end (click)="checkAllCheckBoxes($event)"></ion-checkbox> -->\n            \n          </ion-item>\n        </ion-row>\n        <div>\n          <ion-list>\n            <ion-item *ngFor="let table of FilterTables">\n              <ion-label>{{table.name}}</ion-label>\n              <ion-checkbox color="secondary" [checked]="selectAll" item-end (ionChange)="SelectTableItem($event, table)"></ion-checkbox>\n            </ion-item>\n          </ion-list>\n        </div>\n      </ion-card>\n    </div>\n\n    <div class="btn">\n      <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!DBMaintenanceform.valid" (click)="ExportToExcel($event)">{{"DOWNLOAD" | translate}}</button>\n    </div>\n  </form>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/dbmaintenance/dbmaintenance.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_6__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], DbmaintenancePage);
    return DbmaintenancePage;
}());

//# sourceMappingURL=dbmaintenance.js.map

/***/ }),
/* 457 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ApprovalProfilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__models_approval_profile_model__ = __webpack_require__(624);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_main_profile_model__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_api_manager_provider__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ApprovalProfilePage = /** @class */ (function () {
    function ApprovalProfilePage(fb, navCtrl, navParams, api) {
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.approvedClicked = true;
        this.rejectedClicked = true;
        this.AddProfileClicked = false;
        this.AddLevelClicked = false;
        this.AddLevel_1_Clicked = false;
        this.addPlusClicked = true;
        this.addMinusClicked = false;
        this.Approver_name_ngModel = "directManager";
        this.Approved_Condition_ngModel = "false";
        this.Rejected_Condition_ngModel = "false";
        this.users_list = [];
        this.Temp_Data = [];
        this.approvalRef = new __WEBPACK_IMPORTED_MODULE_5__models_approval_profile_model__["a" /* approval_profile_model */]();
        this.profileRef = new __WEBPACK_IMPORTED_MODULE_6__models_main_profile_model__["a" /* Main_Profile_Model */]();
        this.isDirectManager = true;
        // this.optimizeProvider.CheckSessionOut();
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.ProfileForm = fb.group({
            'Level_Id': [null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required])],
            'Approver': [null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required])],
            'Approver_Value': [],
            'Approved_Condition': [],
            'Approved_Level': [],
            'Rejected_Condition': [],
            'Rejected_Level': [],
            'profile_name': [null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required])],
        });
        this.LoadUsers();
    }
    ApprovalProfilePage.prototype.LoadUsers = function () {
        var _this = this;
        this.api.getApiModel('view_get_tenant_admin', 'filter=(TENANT_GUID=' + this.TenantGUID + ')')
            .subscribe(function (data) {
            _this.users_list = data["resource"];
        });
    };
    ApprovalProfilePage.prototype.Approver_Changed = function (value) {
        if (value === 'keytype')
            this.isDirectManager = false;
        else
            this.isDirectManager = true;
        this.approver_selected = value;
    };
    ApprovalProfilePage.prototype.Approved_Level_Change = function (value) {
        if (value = "false") {
            this.approvedClicked = !this.approvedClicked;
        }
        this.Buttons_SetVisible();
    };
    ApprovalProfilePage.prototype.Rejected_Level_Change = function (value) {
        if (value = "false") {
            this.rejectedClicked = !this.rejectedClicked;
        }
        this.Buttons_SetVisible();
    };
    ApprovalProfilePage.prototype.Buttons_SetVisible = function () {
        if (this.Approved_Condition_ngModel == "false" && this.Rejected_Condition_ngModel == "false") {
            this.addPlusClicked = true;
        }
        else {
            this.addPlusClicked = true;
        }
        if (this.Level_Id_ngModel == 3) {
            this.SaveButton = true;
            this.addPlusClicked = false;
        }
    };
    ApprovalProfilePage.prototype.CreateProfile = function () {
        this.AddProfileClicked = true;
        this.Buttons_SetVisible();
        this.ClearControls();
        this.Level_Id_ngModel = "";
        this.Temp_Data = [];
    };
    ApprovalProfilePage.prototype.ClearControls = function () {
        this.Approver_Value_ngModel = "";
        this.Rejected_Level_ngModel = "";
        this.Approved_Level_ngModel = "";
        this.Approver_name_ngModel = "directManager";
        this.Approved_Condition_ngModel = "false";
        this.Rejected_Condition_ngModel = "false";
        this.AddLevelClicked = true;
    };
    ApprovalProfilePage.prototype.save = function () {
        var json_Finaldata = '"-id": "' + this.Level_Id_ngModel.toString() +
            '", "approver": {"-' + this.Approver_name_ngModel.toString() + '" :  "userGUID", "#text": "' + this.Approver_Value_ngModel.toString() +
            '" }, "conditions": { "condition": [ { "-status": "rejected", "nextlevel": { "-final": "' + this.Rejected_Condition_ngModel + '",' +
            ' "#text": "' + this.Rejected_Level_ngModel +
            '" } }, { "-status": "approved", "nextlevel": { "-final": "' + this.Approved_Condition_ngModel +
            '", "#text": " " } } ] }';
        var final_data = JSON.stringify('{' + json_Finaldata + '}');
        var re = /\\/gi;
        final_data = final_data.replace(re, '');
        var re1 = /""/gi;
        final_data = final_data.replace(re1, '"');
        var re2 = /}"/gi;
        final_data = final_data.replace(re2, '}');
        var re3 = /"{/gi;
        final_data = final_data.replace(re3, '{');
        this.Temp_Data.push(final_data + '] } } }');
        console.log(final_data);
        console.log(this.Temp_Data);
        this.profileRef.MAIN_PROFILE_GUID = __WEBPACK_IMPORTED_MODULE_2_angular2_uuid__["UUID"].UUID();
        this.profileRef.PROFILE_NAME = this.profile_name_ngmodel.toString();
        this.profileRef.PROFILE_JSON = this.Temp_Data.toString();
        this.profileRef.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_2_angular2_uuid__["UUID"].UUID();
        this.profileRef.TENANT_SITE_GUID = __WEBPACK_IMPORTED_MODULE_2_angular2_uuid__["UUID"].UUID();
        this.profileRef.CREATION_TS = this.api.CreateTimestamp();
        this.profileRef.UPDATE_TS = this.api.CreateTimestamp();
        this.profileRef.CREATION_USER_GUID = "1";
        this.profileRef.UPDATE_USER_GUID = "1";
        this.api.postData('main_profile', this.profileRef.toJson(true)).subscribe(function (response) {
            //var postClaimRef = response.json();
            // console.log(
            //   postClaimRef["resource"][0].CLAIM_REQUEST_DETAIL_GUID);
        });
        alert('Profile successfully created');
    };
    ApprovalProfilePage.prototype.AddLevel = function () {
        var firstLevel = '"1';
        if (this.Level_Id_ngModel.toString() != '1')
            firstLevel = ' "userGUID", "#text": "';
        var jsondata = '"-id": "' + this.Level_Id_ngModel.toString() +
            '", "approver": {"-' + this.Approver_name_ngModel.toString() + '" : ' + firstLevel + this.Approver_Value_ngModel.toString() +
            '" }, "conditions": { "condition": [ { "-status": "rejected", "nextlevel": { "-final": "' + this.Rejected_Condition_ngModel + '",' +
            ' "#text": "' + this.Rejected_Level_ngModel +
            '" } }, { "-status": "approved", "nextlevel": { "-final": "' + this.Approved_Condition_ngModel +
            '", "#text": "' + this.Approved_Level_ngModel + '" } } ] }';
        var data = JSON.stringify(jsondata);
        var re = /\\/gi;
        data = data.replace(re, '');
        var re1 = /""/gi;
        data = data.replace(re1, '"');
        var re2 = /}"/gi;
        data = data.replace(re2, '}');
        if (this.Level_Id_ngModel == 1) {
            this.Temp_Data.push('{ "profile": { "levels": { "level": [ {' + data + '}');
        }
        else {
            this.Temp_Data = this.Temp_Data.concat('{' + data + '}');
        }
        console.log(this.Temp_Data);
        this.ClearControls();
        this.Level_Id_ngModel = (parseInt(this.Level_Id_ngModel) + 1).toString();
        this.Buttons_SetVisible();
    };
    ApprovalProfilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-approval-profile',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/approval-profile/approval-profile.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>Profile Setup</ion-title>\n    <ion-buttons ion-button end>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <button color="primary500" ion-button (click)="CreateProfile()">\n    <ion-icon ios="ios-add-circle" md="md-add-circle"></ion-icon>\n    <p> Create Profile</p>\n  </button>\n\n  <div *ngIf="AddProfileClicked">\n    <form [formGroup]="ProfileForm">\n      <ion-item>\n        <ion-label color="primary" fixed>Profile Name: </ion-label>\n        <ion-input formControlName="profile_name" [(ngModel)]="profile_name_ngmodel" type="text" placeholder=\'Enter Profile Name\'></ion-input>\n      </ion-item>\n      <ion-list>\n        <ion-item>\n          <ion-label color="primary" fixed>Level : </ion-label>\n          <ion-input formControlName="Level_Id" [(ngModel)]="Level_Id_ngModel" type="number" placeholder=\'Enter Level Number\'></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-label color="primary" fixed>Approver :</ion-label>\n\n          <ion-select formControlName="Approver" [(ngModel)]="Approver_name_ngModel" (ionChange)="Approver_Changed(Approver_name_ngModel)"\n            fixed>\n            <ion-option value="directManager" selected="true">Direct Manager </ion-option>\n            <ion-option value="keytype">Specific user</ion-option>\n          </ion-select>\n        </ion-item>\n        <!-- <ion-item *ngIf="!isDirectManager">\n                    <ion-input formControlName="Approver_Value" [(ngModel)]="Approver_Value_ngModel" placeholder="Enter Approver Value"></ion-input>\n                </ion-item> -->\n        <ion-item *ngIf="!isDirectManager">\n          <ion-select formControlName="Approver_Value" [(ngModel)]="Approver_Value_ngModel" placeholder="Please select User.">\n            <ion-option *ngFor="let user of users_list" [value]="user.USER_GUID">{{user.FULLNAME }}</ion-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="primary">Conditions</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label color="primary">Status : Rejected </ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label color="primary">Next Level : Final </ion-label>\n          <ion-select formControlName="Rejected_Condition" [(ngModel)]="Rejected_Condition_ngModel" (ionChange)="Rejected_Level_Change(Rejected_Condition_ngModel)">\n            <ion-option value="true">True</ion-option>\n            <ion-option value="false">False</ion-option>\n          </ion-select>\n        </ion-item>\n        <ion-item *ngIf="rejectedClicked">\n          <ion-label color="primary">Level :</ion-label>\n          <ion-input formControlName="Rejected_Level" [(ngModel)]="Rejected_Level_ngModel" placeholder="Enter Rejected Level"></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-label color="primary">Status : Approved </ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label color="primary">Next Level : Final </ion-label>\n          <ion-select formControlName="Approved_Condition" [(ngModel)]="Approved_Condition_ngModel" (ionChange)="Approved_Level_Change(Approved_Condition_ngModel)">\n            <ion-option value="true">True</ion-option>\n            <ion-option value="false">False</ion-option>\n          </ion-select>\n        </ion-item>\n        <ion-item *ngIf="approvedClicked">\n          <ion-label color="primary">Level :</ion-label>\n          <ion-input formControlName="Approved_Level" [(ngModel)]="Approved_Level_ngModel" placeholder="Enter Approved Level "></ion-input>\n        </ion-item>\n        <ion-fab right>\n          <a *ngIf="addPlusClicked" (click)="AddLevel()">\n            <ion-icon ios="ios-add-circle" md="md-add-circle"></ion-icon>\n            <!-- <ion-icon *ngIf="addMinusClicked" ios="ios-remove-circle" md="md-remove-circle"></ion-icon> -->\n            Add Level\n          </a>\n        </ion-fab>\n      </ion-list>\n    </form>\n    <ion-item *ngIf="SaveButton">\n      <button (click)=\'save()\' ion-button style="width:100px;" color="primary500">SAVE</button>\n      <!-- <button class="formBtnCircle" type="submit" ion-button block>{{ \'SUBMIT_BUTTON\' | translate }}</button> -->\n    </ion-item>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/approval-profile/approval-profile.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_7__providers_api_manager_provider__["a" /* ApiManagerProvider */]])
    ], ApprovalProfilePage);
    return ApprovalProfilePage;
}());

//# sourceMappingURL=approval-profile.js.map

/***/ }),
/* 458 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantMainSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_tenantmainsetup_model__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








;
var TenantMainSetup_Service = /** @class */ (function () {
    function TenantMainSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/tenant_main';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    TenantMainSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead   
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    TenantMainSetup_Service.prototype.save = function (tenant_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(tenant_main));
        return this.httpService.http.post(this.baseResourceUrl, tenant_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantMainSetup_Service.prototype.update = function (tenant_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, tenant_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    TenantMainSetup_Service.prototype.get_tenant = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            return branches;
        }).catch(this.handleError);
    };
    ;
    TenantMainSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.TENANT_COMPANY_SITE_GUID;
        });
    };
    TenantMainSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var tenanttype = __WEBPACK_IMPORTED_MODULE_3__models_tenantmainsetup_model__["a" /* TenantMainSetup_Model */].fromJson(result);
            return tenanttype;
        }).catch(this.handleError);
    };
    ;
    TenantMainSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], TenantMainSetup_Service);
    return TenantMainSetup_Service;
}());

//# sourceMappingURL=tenantmainsetup_service.js.map

/***/ }),
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SignupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tabs_tabs__ = __webpack_require__(470);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SignupPage = /** @class */ (function () {
    function SignupPage(navCtrl, userData) {
        this.navCtrl = navCtrl;
        this.userData = userData;
        this.signup = {};
        this.submitted = false;
    }
    SignupPage.prototype.onSignup = function (form) {
        this.submitted = true;
        if (form.valid) {
            this.userData.signup(this.signup.username);
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__tabs_tabs__["a" /* TabsPage */]);
        }
    };
    SignupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-user',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/signup/signup.html"*/'﻿<ion-header>\n\n</ion-header>\n\n<ion-content>\n\n	<!-- <div class="logo">\n		<img src="assets/img/Untitled-2.png" alt="Ionic Logo">\n	</div>\n	<p style="text-align:center !important;"><b>Please create your login credentials</b></p>\n	<form #signupForm="ngForm" novalidate >\n		<ion-list no-lines >\n			<ion-item style="background:#f8f9fa">\n				<ion-label floating color="primary">Username</ion-label>\n				<ion-input [(ngModel)]="signup.username" name="username" type="text" #username="ngModel" required>\n				</ion-input>\n			</ion-item>\n			<p ion-text [hidden]="username.valid || submitted == false" color="danger" padding-left>\n				Username is required\n			</p>\n\n			<ion-item style="background:#f8f9fa"> \n				<ion-label floating color="primary">Password</ion-label>\n				<ion-input [(ngModel)]="signup.password" name="password" type="password" #password="ngModel" required>\n				</ion-input>\n			</ion-item>\n			<p ion-text [hidden]="password.valid || submitted == false" color="danger" padding-left>\n				Password is required\n			</p>\n		</ion-list>\n\n		<div padding>\n			<button ion-button (click)="onSignup(signupForm)" type="submit" block>Create</button>\n		</div>\n	</form> -->\n\n\n	<ion-card class="nofu">\n\n			<ion-card-content>\n					<!-- <img style="max-width:116px;max-height:42pt;"src="assets/img/Untitled-4.png"/>  -->\n					\n				<h1 style="margin-left:10pt;">{{ "CREATE_ACCOUNT" | translate }}</h1>\n				<p></p>\n				<p></p>\n				<h2 style="margin-left:10pt;">{{ "CONTINUE_ECLAIM" | translate }}</h2>\n				<br/>\n				<form #signupForm="ngForm" novalidate>\n					<ion-list no-lines>\n						<ion-item>\n	\n							<ion-label floating color="primary">{{ "USER_NAME_LABEL" | translate }}</ion-label>\n							<ion-input [(ngModel)]="signup.username" name="username" type="text" #username="ngModel" required>\n								</ion-input>\n							\n						</ion-item>\n						<p ion-text [hidden]="username.valid || submitted == false" color="danger" padding-left>\n							{{ "USER_NAME_REQUIRED" | translate }}\n						</p>\n	\n						<ion-item>\n							<ion-label floating color="primary">{{ "S_PASSWORD" | translate }}</ion-label>\n							<ion-input [(ngModel)]="signup.password" name="password" type="password" #password="ngModel" required>\n								</ion-input>\n	\n						</ion-item>\n						<p ion-text [hidden]="password.valid || submitted == false" color="danger" padding-left>\n							{{ "PASSWORD_REQUIRED" | translate }}\n						</p>\n					</ion-list>\n					\n					<div class="btn">\n						<button color="primary500" ion-button block  (click)="onSignup(signupForm)" type="submit">{{ "CREATE" | translate }}</button>\n	\n	\n					</div>\n			\n	\n	\n				</form>\n			</ion-card-content>\n		</ion-card>\n	\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/signup/signup.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_data__["a" /* UserData */]])
    ], SignupPage);
    return SignupPage;
}());

//# sourceMappingURL=signup.js.map

/***/ }),
/* 470 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TabsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__claimapprovertasklist_claimapprovertasklist__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dashboard_dashboard__ = __webpack_require__(108);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var TabsPage = /** @class */ (function () {
    function TabsPage(navParams) {
        // this.mySelectedIndex = navParams.data.tabIndex || 0;
        this.tabs = [
            // { title: "HOME", root: SpeakerListPage, icon: "apps" },
            // { title: "SETUP", root: SetupPage, icon: "settings" },
            // { title: "ADMIN SETUP", root: AdminsetupPage, icon: "settings" },
            // { title: "APPROVER TASK", root: ClaimapprovertasklistPage, icon: "checkbox-outline" },
            { title: "DASHBOARD", root: __WEBPACK_IMPORTED_MODULE_4__dashboard_dashboard__["a" /* DashboardPage */], icon: "apps" },
            { title: "MY CLAIM LIST", root: __WEBPACK_IMPORTED_MODULE_3__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */], icon: "settings" },
            { title: "APPROVER TASK", root: __WEBPACK_IMPORTED_MODULE_2__claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */], icon: "checkbox-outline" },
        ];
        // this.tabs = navParams.data;
        // this.tabs = navParams.get('Menu_Array');
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    TabsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/tabs/tabs.html"*/'﻿<ion-tabs [selectedIndex]="mySelectedIndex">\n  <!-- <ion-tab [root]="tab1Root" tabTitle="HOME" tabIcon="apps"></ion-tab>\n  <ion-tab [root]="tab2Root" tabTitle="SETUP" tabIcon="settings"></ion-tab>\n  <ion-tab [root]="tab3Root" tabTitle="ADMIN SETUP" tabIcon="settings"></ion-tab>\n  <ion-tab [root]="tab4Root" tabTitle="APPROVER TASK" tabIcon="checkbox-outline"></ion-tab>   -->\n  <ion-tab *ngFor=" let tab of tabs" [root]="tab.root" [tabTitle]="tab.title" [tabIcon]="tab.icon"></ion-tab>\n</ion-tabs>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/tabs/tabs.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], TabsPage);
    return TabsPage;
}());

//# sourceMappingURL=tabs.js.map

/***/ }),
/* 471 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddTollPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__models_claim_request_detail_model__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AddTollPage = /** @class */ (function () {
    function AddTollPage(numberPipe, fb, api, loadingCtrl, translate, http, navCtrl, navParams, viewCtrl) {
        this.numberPipe = numberPipe;
        this.api = api;
        this.loadingCtrl = loadingCtrl;
        this.translate = translate;
        this.http = http;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.lastImage = null;
        this.ImageUploadValidation = false;
        this.chooseFile = false;
        this.currency = localStorage.getItem("cs_default_currency");
        this.imageOptional = false;
        this.isFormEdit = false;
        this.stringToSplit = "";
        this.tempUserSplit1 = "";
        this.tempUserSplit2 = "";
        this.tempUserSplit3 = "";
        this.imageURLEdit = null;
        this.isImage = false;
        this.newImage = true;
        this.TenantGUID = localStorage.getItem('g_TENANT_GUID');
        this.LoadPayments();
        this.LoadAllowanceDetails();
        this.DetailsForm = fb.group({
            avatar1: null,
            avatar: null
        });
        // this.LoadPayments();
        // this.LoadAllowanceDetails();
    }
    AddTollPage.prototype.getCurrency = function (amount) {
        //amount=amount.split(",").join("");
        amount = Number(amount);
        if (amount > 99999) {
            alert('Amount should not exceed RM 99,999.00.');
            this.Amount = null;
            this.claimAmount = 0;
        }
        else {
            this.claimAmount = amount;
            this.Amount = this.numberPipe.transform(amount, '1.2-2');
        }
    };
    // getCurrency(amount: number) {
    //   this.Amount = this.numberPipe.transform(amount, '1.2-2');
    // }
    AddTollPage.prototype.onAllowanceSelect = function (allowance) {
        this.Amount = allowance.ALLOWANCE_AMOUNT;
        this.claimAmount = allowance.ALLOWANCE_AMOUNT;
    };
    AddTollPage.prototype.CloseAddTollPage = function () {
        this.viewCtrl.dismiss();
    };
    AddTollPage.prototype.LoadPayments = function () {
        var _this = this;
        this.api.getApiModel('main_payment_type', 'filter=TENANT_GUID=' + this.TenantGUID)
            .subscribe(function (data) {
            _this.paymentTypes = data["resource"];
            // this.PayType=this.paymentTypes.filter(s=>s.NAME==localStorage.getItem("cs_default_payment_type"))[0].PAYMENT_TYPE_GUID;
            var paymentType = _this.paymentTypes.filter(function (s) { return s.NAME == localStorage.getItem("cs_default_payment_type"); })[0];
            _this.PayType = paymentType.PAYMENT_TYPE_GUID;
            _this.onPaySelect(paymentType);
            //    if (paymentType.REQUIRE_ATTACHMENT === 0) {
            //     this.ImageUploadValidation = true;
            //   }
            //   else
            //     this.ImageUploadValidation = false;
        });
    };
    AddTollPage.prototype.onPaySelect = function (payBy) {
        if (payBy.REQUIRE_ATTACHMENT === 0) {
            this.imageOptional = true;
        }
        else
            this.imageOptional = false;
    };
    AddTollPage.prototype.Save = function (isMA) {
        var _this = this;
        if (isMA) {
            if (this.MA_SELECT === 'NA' || this.MA_SELECT === undefined) {
                alert('Please select meal allowance.');
                return;
            }
            // if (this.Description === undefined) {
            //   alert('Please enter valid description.')
            //   return;
            // }
        }
        else {
            if (this.claimAmount === undefined || this.claimAmount <= 0 || this.claimAmount === null) {
                alert('Please enter valid Amount.');
                return;
            }
        }
        if (this.ClaimDetailGuid === undefined || this.ClaimDetailGuid === null) {
            // alert(imageID)
            var claimReqRef = new __WEBPACK_IMPORTED_MODULE_9__models_claim_request_detail_model__["a" /* ClaimRequestDetailModel */]();
            claimReqRef.CLAIM_REQUEST_DETAIL_GUID = __WEBPACK_IMPORTED_MODULE_5_angular2_uuid__["UUID"].UUID();
            claimReqRef.CLAIM_REQUEST_GUID = this.ClaimMainGUID;
            claimReqRef.CLAIM_METHOD_GUID = this.ClaimMethodGUID;
            claimReqRef.PAYMENT_TYPE_GUID = this.PayType === undefined ? 'f74c3366-0437-51ec-91cc-d3fad23b061c' : this.PayType;
            // 2a543cd5-0177-a1d0-5482-48b52ec2100f
            claimReqRef.AMOUNT = this.claimAmount + '';
            claimReqRef.DESCRIPTION = this.Description;
            claimReqRef.CREATION_TS = this.api.CreateTimestamp();
            claimReqRef.UPDATE_TS = this.api.CreateTimestamp();
            claimReqRef.ATTACHMENT_ID = this.imageGUID;
            this.api.postData('claim_request_detail', claimReqRef.toJson(true)).subscribe(function (response) {
                alert('Your ' + _this.ClaimMethodName + ' details submitted successfully.');
                _this.navCtrl.pop();
            });
        }
        else {
            this.api.getApiModel('claim_request_detail', 'filter=CLAIM_REQUEST_DETAIL_GUID=' + this.ClaimDetailGuid)
                .subscribe(function (data) {
                _this.claimDetailsData = data;
                _this.claimDetailsData["resource"][0].PAYMENT_TYPE_GUID = _this.PayType === undefined ? 'f74c3366-0437-51ec-91cc-d3fad23b061c' : _this.PayType;
                _this.claimDetailsData["resource"][0].AMOUNT = _this.claimAmount;
                _this.claimDetailsData["resource"][0].DESCRIPTION = _this.Description;
                _this.claimDetailsData["resource"][0].UPDATE_TS = _this.api.CreateTimestamp();
                _this.claimDetailsData["resource"][0].ATTACHMENT_ID = (_this.imageGUID !== undefined || _this.imageGUID !== null) ? _this.imageGUID : _this.claimDetailsData["resource"][0].ATTACHMENT_ID;
                _this.api.updateApiModel('claim_request_detail', _this.claimDetailsData, false).subscribe(function () { return alert('Your ' + _this.ClaimMethodName + ' details are updated successfully.'); });
                _this.navCtrl.pop();
            });
        }
    };
    AddTollPage.prototype.LoadAllowanceDetails = function () {
        var _this = this;
        this.api.getApiModel('main_allowance').subscribe(function (res) {
            _this.allowanceList = res['resource'];
        });
    };
    AddTollPage.prototype.ngOnInit = function () {
        // this.ClaimMainGUID = this.navParams.get('MainClaim');
        // this.ClaimMainGUID = localStorage.getItem("g_CR_GUID");
        this.ClaimMainGUID = this.navParams.get("MainClaim");
        this.ClaimMethodGUID = this.navParams.get('ClaimMethod');
        this.ClaimMethodName = this.navParams.get('ClaimMethodName');
        this.ClaimDetailGuid = this.navParams.get('ClaimReqDetailGuid');
        if (this.ClaimDetailGuid !== null && this.ClaimDetailGuid !== undefined) 
        // && this.ClaimDetailGuid!==undefined
        {
            this.GetClaimDetailsByGuid();
            this.isFormEdit = true;
        }
    };
    AddTollPage.prototype.GetClaimDetailsByGuid = function () {
        var _this = this;
        this.api.getApiModel('view_claim_details', 'filter=CLAIM_REQUEST_DETAIL_GUID=' + this.ClaimDetailGuid).subscribe(function (res) {
            _this.claimDetailsData = res['resource'];
            _this.PayType = _this.claimDetailsData[0].PAYMENT_TYPE_GUID;
            _this.onPaySelect(_this.claimDetailsData[0]);
            if (_this.claimDetailsData[0].CLAIM_METHOD === 'MealAllowance') {
                _this.LoadAllowanceDetails();
                _this.allowanceList.forEach(function (element) {
                    if (element.ALLOWANCE_AMOUNT === _this.claimDetailsData[0].AMOUNT) {
                        _this.MA_SELECT = element.ALLOWANCE_NAME + ' - ' + element.ALLOWANCE_AMOUNT;
                        console.log(_this.MA_SELECT);
                    }
                });
            }
            _this.Amount = _this.numberPipe.transform(_this.claimDetailsData[0].AMOUNT, '1.2-2');
            _this.claimAmount = _this.claimDetailsData[0].AMOUNT;
            if (_this.claimDetailsData[0].ATTACHMENT_ID !== null)
                _this.imageURLEdit = _this.api.getImageUrl(_this.claimDetailsData[0].ATTACHMENT_ID);
            // this.imageURLEdit = this.claimDetailsData[0].ATTACHMENT_ID
            // this.ImageUploadValidation=false;
            _this.ImageUploadValidation = true;
            //this.chooseFile = false;
            _this.Description = _this.claimDetailsData[0].DESCRIPTION;
        });
    };
    AddTollPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            if (file_1.type === 'image/jpeg')
                this.isImage = true;
            else
                this.isImage = false;
            this.DetailsForm.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.DetailsForm.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
        this.chooseFile = true;
    };
    AddTollPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.DetailsForm.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = true;
        this.saveIm();
    };
    AddTollPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            _this.imageGUID = _this.uniqueName;
            _this.chooseFile = false;
        });
    };
    AddTollPage.prototype.clearFile = function () {
        this.DetailsForm.get('avatar').setValue(null);
        this.fileInput.nativeElement.value = '';
    };
    AddTollPage.prototype.UploadImage = function () {
        var _this = this;
        // if (this.DetailsType === 'Toll') {
        //   this.CloudFilePath = 'eclaim/toll/'
        // }
        // else if (this.DetailsType === 'Parking') {
        //   this.CloudFilePath = 'eclaim/parking/'
        // }
        this.CloudFilePath = 'eclaim/';
        // this.loading = true;
        this.uniqueName = new Date().toISOString() + this.uploadFileName;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...',
        });
        this.loading.present();
        return new Promise(function (resolve) {
            // this.http.post('http://api.zen.com.my/api/v2/azurefs/' + this.CloudFilePath + this.uploadFileName, this.DetailsForm.get('avatar').value, options)
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uniqueName, _this.DetailsForm.get('avatar').value, options)
                .map(function (response) {
                _this.loading.dismissAll();
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    AddTollPage.prototype.CloseDisplayImage = function () {
        this.displayImage = false;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddTollPage.prototype, "fileInput", void 0);
    AddTollPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-toll',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/add-toll/add-toll.html"*/'<ion-header>\n    <ion-navbar color="primary200">\n       \n        <ion-title>\n          <div *ngIf="ClaimMethodName == \'Parking\'">{{ \'ADD_PARKING_HEADING\' | translate }}</div>\n          <div *ngIf="ClaimMethodName == \'Toll\'">{{ \'ADD_TOLL_HEADING\' | translate }}</div>\n          <div *ngIf="ClaimMethodName == \'Accommodation\'">{{ \'ADD_Accommodation_HEADING\' | translate }}</div>\n          <div *ngIf="ClaimMethodName == \'Meal Allowance\'">{{ \'ADD_MEAL_ALLOWANCE_HEADING\' | translate }}</div>\n    \n        </ion-title>\n      </ion-navbar>  \n</ion-header>\n\n<ion-content class="login-content" padding>\n    <form [formGroup]="DetailsForm" >\n      \n            <ion-list>\n              <ion-item *ngIf="ClaimMethodName != \'Accommodation\' && ClaimMethodName != \'Meal Allowance\'"  class="fuha">\n                <ion-label floating color="primary500"> <span style="color:red">*</span> {{ \'PAY_BY_LABEL\' | translate }}</ion-label>\n                <ion-select  [ngModelOptions]="{standalone: true}" [(ngModel)]="PayType" placeholder="Cash">\n                   \n                  <ion-option *ngFor="let item of paymentTypes" (ionSelect)="onPaySelect(item)" value={{item.PAYMENT_TYPE_GUID}} >{{ item.NAME}}</ion-option>\n                </ion-select>\n              </ion-item>\n\n              <ion-item *ngIf="ClaimMethodName === \'Meal Allowance\'"  class="fuha">\n                <ion-label floating color="primary500">{{ "MEAL_ALLOWANCE_LABEL" | translate }}</ion-label>\n                <ion-select [ngModelOptions]="{standalone: true}" [(ngModel)]="MA_SELECT">\n                    <ion-option value="NA">NA</ion-option>\n                  <ion-option *ngFor="let allowance of allowanceList" (ionSelect)="onAllowanceSelect(allowance)">{{allowance.ALLOWANCE_NAME}} -{{currency}} {{allowance.ALLOWANCE_AMOUNT | number:\'1.2-2\'}} </ion-option>\n                </ion-select>\n              </ion-item>           \n\n            <ion-item *ngIf="ClaimMethodName !== \'Meal Allowance\'" class="fuha">\n              <p>Optional for Touch \'n Go</p>\n              <ion-label floating color="primary500"> <span style="color:red">*</span> {{ \'AMOUNT_LABEL\' | translate  }}{{ currency }}</ion-label>\n              <ion-input (change)=\'getCurrency($event.target.value)\' [ngModelOptions]="{standalone: true}" \n              [(ngModel)]="Amount" type="text"></ion-input>\n            </ion-item>           \n\n            <ion-item>\n              <ion-label floating color="primary500">{{ \'DESCRIPTION_LABEL\' | translate }}</ion-label>\n              <ion-input [ngModelOptions]="{standalone: true}" [(ngModel)]="Description"></ion-input>\n            </ion-item>\n           \n\n            <!-- <div class="form-group">          \n              <input type="file" id="avatar" (change)="onFileChange($event)" #fileInput>\n              <button type="button" class="btn btn-sm btn-default" (click)="clearFile()">clear file</button>\n            </div> -->\n\n            <!-- this -->\n            <!-- <ion-item *ngIf="ClaimMethodName != \'Meal Allowance\'">\n              <input type="file" id="avatar" (change)="onFileChange($event)" #fileInput>\n              <button ion-button type="primary"  (click)="saveIm()" [disabled]= "!chooseFile">upload image</button>             \n            </ion-item> -->\n\n            <ion-item *ngIf="ClaimMethodName != \'Meal Allowance\'"> \n\n                <ion-label>Attachment :</ion-label> \n                <!-- <img style="width: 50%" height="100%" src={{imageURLEdit}} *ngIf="imageURLEdit!==null">      -->\n              <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n              <!-- <button *ngIf="ClaimMethodName != \'Meal Allowance\'" ion-button item-end color="primary500"  (click)="saveIm()" [disabled]= "!chooseFile">Upload image</button> -->\n            \n              <!-- <button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file</button> -->\n              <!-- <button ion-button type="button"  (click)="saveIm()" [disabled]= "!chooseFile">upload image</button>    -->\n              <!-- <ion-button ion-button type="button" (click)="clearFile(\'avatar1\')">clear file> </ion-button> -->\n          </ion-item>\n          <!-- <div *ngIf="newImage  && ClaimMethodName != \'Meal Allowance\'">\n          <img style="width: 25%" height="50%" src={{imageURLEdit}} *ngIf="imageURLEdit!==null">    \n          </div> -->\n\n          <div *ngIf= "isImage">\n            <img src="{{ProfileImage}}" style="width: 20%">\n          </div>\n\n          <div *ngIf="imageURLEdit!==null">\n            <!-- <button ion-button outline item-start icon-left  (click)="DisplayImage(imageURLEdit)" >\n                View Receipt\n                </button> -->\n                <a href={{imageURLEdit}} target=\'_blank\'>View Receipt</a> \n              </div>\n\n        <!-- <button *ngIf="ClaimMethodName != \'Meal Allowance\'" ion-button type="button" (click)="clearFile(\'avatar1\')">clear file</button> -->\n\n         \n\n          <!-- <ion-item>\n            <button (click)=\'save()\' [disabled]="DetailsForm.invalid || loading" ion-button round style="width:100px;">{{ \'SUBMIT\'  }}</button>\n          </ion-item> -->\n          <div class="btn" *ngIf="ClaimMethodName != \'Meal Allowance\'">\n              <!-- *ngIf="ClaimMethodName === \'Meal Allowance\'" -->              \n              <!-- <button ion-button color="primary" (click)=\'Save(false)\'>{{ "SUBMIT_BUTTON" | translate }}</button> -->\n              <button *ngIf="imageOptional" ion-button color="primary" (click)=\'Save(false)\'>{{ "SUBMIT_BUTTON" | translate }}</button>\n              <button *ngIf="!imageOptional" ion-button color="primary" (click)=\'Save(false)\' [disabled]="!ImageUploadValidation">{{ "SUBMIT_BUTTON" | translate }}</button>\n              <!-- [disabled]="!ImageUploadValidation" -->\n            </div>\n\n            <div class="btn" *ngIf="ClaimMethodName === \'Meal Allowance\'">\n              <button ion-button color="primary" (click)=\'Save(true)\'>{{ "SUBMIT_BUTTON" | translate }}</button>\n            </div>\n\n            <div class="popup2" padding *ngIf="displayImage">\n              <ion-card>\n                <ion-card-header class="icTitle headerColor-white ">\n                  <div class="icHeaderText">Receipt</div>\n                  <button class="btnR" (click)="CloseDisplayImage()">\n                    <ion-icon name="md-close"></ion-icon>\n                  </button>\n                </ion-card-header>\n                <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null  && isImage">\n                <a href={{imageURL}} *ngIf="!isImage" target = _blank>VIEW</a>\n          \n                <!-- <img style="width: 50%" height="100%" src={{imageURL}} *ngIf="imageURL!==null"> -->\n              </ion-card>\n            </div>\n\n        </ion-list>\n            </form>  \n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/add-toll/add-toll.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_8__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_6__angular_common__["e" /* DecimalPipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__angular_common__["e" /* DecimalPipe */], __WEBPACK_IMPORTED_MODULE_7__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */]])
    ], AddTollPage);
    return AddTollPage;
}());

//# sourceMappingURL=add-toll.component.js.map

/***/ }),
/* 472 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConferenceData; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_travel_claim_travel_claim_component__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ConferenceData = /** @class */ (function () {
    function ConferenceData(http, user, app) {
        this.http = http;
        this.user = user;
        this.navCtrl = app.getActiveNav();
    }
    ConferenceData.prototype.load = function () {
        if (this.data) {
            return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of(this.data);
        }
        else {
            return this.http.get('assets/data/data.json')
                .map(this.processData, this);
        }
    };
    ConferenceData.prototype.processData = function (data) {
        var _this = this;
        // just some good 'ol JS fun with objects and arrays
        // build up the data by linking speakers to sessions
        this.data = data.json();
        this.data.tracks = [];
        // loop through each day in the schedule
        this.data.schedule.forEach(function (day) {
            // loop through each timeline group in the day
            day.groups.forEach(function (group) {
                // loop through each session in the timeline group
                group.sessions.forEach(function (session) {
                    session.speakers = [];
                    if (session.speakerNames) {
                        session.speakerNames.forEach(function (speakerName) {
                            var speaker = _this.data.speakers.find(function (s) { return s.name === speakerName; });
                            if (speaker) {
                                session.speakers.push(speaker);
                                speaker.sessions = speaker.sessions || [];
                                speaker.sessions.push(session);
                            }
                        });
                    }
                    if (session.tracks) {
                        session.tracks.forEach(function (track) {
                            if (_this.data.tracks.indexOf(track) < 0) {
                                _this.data.tracks.push(track);
                            }
                        });
                    }
                });
            });
        });
        return this.data;
    };
    ConferenceData.prototype.getTimeline = function (dayIndex, queryText, excludeTracks, segment) {
        var _this = this;
        if (queryText === void 0) { queryText = ''; }
        if (excludeTracks === void 0) { excludeTracks = []; }
        if (segment === void 0) { segment = 'all'; }
        return this.load().map(function (data) {
            var day = data.schedule[dayIndex];
            day.shownSessions = 0;
            queryText = queryText.toLowerCase().replace(/,|\.|-/g, ' ');
            var queryWords = queryText.split(' ').filter(function (w) { return !!w.trim().length; });
            day.groups.forEach(function (group) {
                group.hide = true;
                group.sessions.forEach(function (session) {
                    // check if this session should show or not
                    _this.filterSession(session, queryWords, excludeTracks, segment);
                    if (!session.hide) {
                        // if this session is not hidden then this group should show
                        group.hide = false;
                        day.shownSessions++;
                    }
                });
            });
            return day;
        });
    };
    ConferenceData.prototype.filterSession = function (session, queryWords, excludeTracks, segment) {
        var matchesQueryText = false;
        if (queryWords.length) {
            // of any query word is in the session name than it passes the query test
            queryWords.forEach(function (queryWord) {
                if (session.name.toLowerCase().indexOf(queryWord) > -1) {
                    matchesQueryText = true;
                }
            });
        }
        else {
            // if there are no query words then this session passes the query test
            matchesQueryText = true;
        }
        // if any of the sessions tracks are not in the
        // exclude tracks then this session passes the track test
        var matchesTracks = false;
        session.tracks.forEach(function (trackName) {
            if (excludeTracks.indexOf(trackName) === -1) {
                matchesTracks = true;
            }
        });
        // if the segement is 'favorites', but session is not a user favorite
        // then this session does not pass the segment test
        var matchesSegment = false;
        if (segment === 'favorites') {
            if (this.user.hasFavorite(session.name)) {
                matchesSegment = true;
            }
        }
        else {
            matchesSegment = true;
        }
        // all tests must be true if it should not be hidden
        session.hide = !(matchesQueryText && matchesTracks && matchesSegment);
    };
    ConferenceData.prototype.getSpeakers = function () {
        return this.load().map(function (data) {
            return data.speakers.sort(function (a, b) {
                var aName = a.name.split(' ').pop();
                var bName = b.name.split(' ').pop();
                return aName.localeCompare(bName);
            });
        });
    };
    ConferenceData.prototype.getTracks = function () {
        return this.load().map(function (data) {
            return data.tracks.sort();
        });
    };
    ConferenceData.prototype.getMap = function () {
        return this.load().map(function (data) {
            return data.map;
        });
    };
    ConferenceData.prototype.pushTravelClaim = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */]);
    };
    ConferenceData = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__user_data__["a" /* UserData */], __WEBPACK_IMPORTED_MODULE_4_ionic_angular__["c" /* App */]])
    ], ConferenceData);
    return ConferenceData;
}());

//# sourceMappingURL=conference-data.js.map

/***/ }),
/* 473 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalClaimViewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__medicalclaim_medicalclaim__ = __webpack_require__(474);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__ = __webpack_require__(28);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var MedicalClaimViewPage = /** @class */ (function () {
    function MedicalClaimViewPage(profileMngProvider, api, api1, http, platform, translate, navCtrl, navParams) {
        this.profileMngProvider = profileMngProvider;
        this.api = api;
        this.api1 = api1;
        this.http = http;
        this.translate = translate;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.totalClaimAmount = 0;
        this.isRemarksAccepted = false;
        // isAccepted(event: any) {
        //   if (event.checked) {
        //     this.ToggleNgModel = true
        //   }
        // }
        // emailUrl: string = 'http://api.zen.com.my/api/v2/emailnotificationtest?api_key=' + constants.DREAMFACTORY_API_KEY;
        // sendEmail() {
        //   let name: string; let email: string
        //   name = 'shabbeer'; email = 'shabbeer@zen.com.my'
        //   var queryHeaders = new Headers();
        //   queryHeaders.append('Content-Type', 'application/json');
        //   queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        //   queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
        //   let options = new RequestOptions({ headers: queryHeaders });
        //   let body = {
        //     "template": "",
        //     "template_id": 0,
        //     "to": [
        //       {
        //         "name": name,
        //         "email": email
        //       }
        //     ],
        //     "cc": [
        //       {
        //         "name": name,
        //         "email": email
        //       }
        //     ],
        //     "bcc": [
        //       {
        //         "name": name,
        //         "email": email
        //       }
        //     ],
        //     "subject": "Test",
        //     "body_text": "",
        //     "body_html": '<HTML><HEAD> <META name=GENERATOR content="MSHTML 10.00.9200.17606"></HEAD> <BODY> <DIV style="FONT-FAMILY: Century Gothic"> <DIV style="MIN-WIDTH: 500px"><BR> <DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"><IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png"></DIV> <DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c"> <DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px"><B><I>Notification</I></B></DIV></DIV><BR> <DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear [%Variable: @Employee%]<BR><BR>Your&nbsp;[%Variable: @LeaveType%] application has been forwarded to your superior for approval.  <H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px"><BR><B>Leave Details :</B><BR></H1> <TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto"> <TBODY> <TR> <TD style="TEXT-ALIGN: left">EMPLOYEE</TD> <TD style="PADDING-BOTTOM: 6px; PADDING-TOP: 6px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px">:</TD> <TD colSpan=2>[%Variable: @Employee%]</TD></TR> <TR> <TD>START DATE</TD> <TD>:</TD> <TD style="TEXT-ALIGN: left" colSpan=2>[%Variable: @StartDate%]</TD></TR> <TR> <TD style="TEXT-ALIGN: left">END DATE </TD> <TD>:</TD> <TD style="TEXT-ALIGN: left" colSpan=2>[%Variable: @EndDate%]</TD></TR> <TR> <TD style="TEXT-ALIGN: left">APPLIED DATE</TD> <TD style="PADDING-BOTTOM: 6px; PADDING-TOP: 6px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px">:</TD> <TD colSpan=2>[%Variable: @AppliedDate%]</TD></TR> <TR> <TD style="TEXT-ALIGN: left">DAYS</TD> <TD>:</TD> <TD style="TEXT-ALIGN: left">[%Variable: @NoOfDays%] </TD> <TD style="TEXT-ALIGN: left">[%Variable: @HalfDay%]</TD></TR></TR> <TR> <TD>LEAVE TYPE</TD> <TD>:</TD> <TD style="TEXT-ALIGN: left" colSpan=2>[%Variable: @LeaveType%]</TD></TR> <TR> <TD style="TEXT-ALIG: left">REASON</TD> <TD>: </TD> <TD style="TEXT-ALIGN: left" colSpan=2>[%Current Item:Reason%]</TD></TR></TBODY></TABLE><BR> <DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV></DIV></DIV></DIV></BODY></HTML>',
        //     "from_name": "Ajay DAV",
        //     "from_email": "ajay1591ani@gmail.com",
        //     "reply_to_name": "",
        //     "reply_to_email": ""
        //   };
        //   this.http.post(this.emailUrl, body, options)
        //     .map(res => res.json())
        //     .subscribe(data => {
        //       // this.result= data["resource"];
        //       alert(JSON.stringify(data));
        //     });
        // }
        // SubmitAction() {
        //   if (this.ToggleNgModel) {
        //     // || this.Remarks_NgModel.toString().length < 25
        //     let claimHistoryRef: ClaimWorkFlowHistory_Model = new ClaimWorkFlowHistory_Model();
        //     claimHistoryRef.CLAIM_WFH_GUID = UUID.UUID();
        //     claimHistoryRef.CLAIM_REQUEST_GUID = this.claimRequestGUID;
        //     claimHistoryRef.REMARKS = this.Remarks_NgModel;
        //     claimHistoryRef.STATUS = 'Pending';
        //     claimHistoryRef.USER_GUID = this.Approver_GUID;
        //     console.table(claimHistoryRef);     
        //     this.api.postData('claim_work_flow_history', claimHistoryRef.toJson(true)).subscribe((response) => {
        //       var postClaimMain = response.json();
        //       this.sendEmail();
        //       // this.ClaimRequestMain = postClaimMain["resource"][0].CLAIM_REQUEST_GUID;
        //       // this.MainClaimSaved = true;
        //       alert('History Saved.')
        //     })
        //   }
        //   else {
        //     if (this.Remarks_NgModel === undefined) {
        //       alert('Please input valid Remarks');
        //     }
        //     let claimHistoryRef: ClaimWorkFlowHistory_Model = new ClaimWorkFlowHistory_Model();
        //     claimHistoryRef.CLAIM_WFH_GUID = UUID.UUID();
        //     claimHistoryRef.CLAIM_REQUEST_GUID = this.claimRequestGUID;
        //     claimHistoryRef.REMARKS = this.Remarks_NgModel;
        //     claimHistoryRef.STATUS = 'Pending';
        //     claimHistoryRef.USER_GUID = this.Approver_GUID;
        //     console.table(claimHistoryRef)
        //     this.api.postData('claim_work_flow_history', claimHistoryRef.toJson(true)).subscribe((response) => {
        //       var postClaimMain = response.json();
        //       this.sendEmail();
        //       // this.ClaimRequestMain = postClaimMain["resource"][0].CLAIM_REQUEST_GUID;
        //       // this.MainClaimSaved = true;
        //       alert('History Saved.')
        //     })
        //   }
        // }
        // LoadMainClaim() {    
        //   console.log(Services.getUrl('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID))
        //   this.http
        //     .get(Services.getUrl('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID))
        //     .map(res => res.json())
        //     .subscribe(data => {
        //       this.claimRequestData = data["resource"];
        //       this.claimRequestData.forEach(element => {
        //         this.totalClaimAmount = element.MILEAGE_AMOUNT;
        //         console.log(this.totalClaimAmount)
        //       }); 
        //       //this.totalClaimAmount += this.tollParkAmount ;
        //     }
        //     );
        // }
        // EditClaim() {
        //   // this.navCtrl.push(TravelclaimPage, {
        //     // this.navCtrl.push(EntertainmentclaimPage, {
        //       this.navCtrl.push(MedicalclaimPage, {
        //     isFormEdit: 'true',
        //     //cr_GUID: '2253e352-2c87-81fa-8cba-a4fddf0189f3'
        //     cr_GUID: this.claimRequestGUID
        //   });
        // }
        //---------------------Language module start---------------------//
        this.translateToMalayClicked = false;
        this.translateToEnglishClicked = true;
        this.translateToEnglish();
        this.translate.setDefaultLang('en'); //Fallback language
        platform.ready().then(function () {
        });
        this.claimRequestGUID = this.navParams.get("cr_GUID");
        this.Approver_GUID = this.navParams.get("approver_GUID");
        //this.userGUID = localStorage.getItem('g_USER_GUID');
        this.level = navParams.get('level_no');
        this.LoadMainClaim();
    }
    MedicalClaimViewPage.prototype.isAccepted = function (val) {
        this.isRemarksAccepted = val === 'Accepted' ? true : false;
        alert('Claim ' + val);
    };
    MedicalClaimViewPage.prototype.LoadMainClaim = function () {
        var _this = this;
        this.api.getApiModel('view_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID).subscribe(function (res) {
            _this.claimRequestData = res['resource'];
            _this.claimRequestData.forEach(function (element) {
                _this.totalClaimAmount = element.MILEAGE_AMOUNT;
            });
        });
    };
    MedicalClaimViewPage.prototype.SubmitAction = function () {
        if (!this.isRemarksAccepted) {
            if (this.Remarks_NgModel === undefined) {
                alert('Please input valid Remarks');
                return;
            }
        }
        this.profileMngProvider.ProcessProfileMng(this.Remarks_NgModel, this.Approver_GUID, this.level, this.claimRequestGUID, this.isRemarksAccepted, 1);
    };
    MedicalClaimViewPage.prototype.EditClaim = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__medicalclaim_medicalclaim__["a" /* MedicalclaimPage */], {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    MedicalClaimViewPage.prototype.translateToEnglish = function () {
        this.translate.use('en');
        this.translateToMalayClicked = !this.translateToMalayClicked;
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
    };
    MedicalClaimViewPage.prototype.translateToMalay = function () {
        this.translate.use('ms');
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
        this.translateToMalayClicked = !this.translateToMalayClicked;
    };
    MedicalClaimViewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medical-claim-view',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/medical-claim-view/medical-claim-view.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle>\n        <ion-icon name="menu"></ion-icon>\n    </button>\n\n    <div class="headerInfo">\n        <ion-fab top right>\n            <button ion-fab mini class="btnClear">\n                <ion-icon name="settings"></ion-icon>\n            </button>\n            <ion-fab-list class="settingBtnFab" side="left">\n                <button ion-fab color="primary" [class.menuHide]="translateToMalayClicked" (click)="translateToMalay()">ML</button>\n            </ion-fab-list>\n            <ion-fab-list class="settingBtnFab" side="bottom">\n                <button ion-fab color="primary" [class.menuHide]="translateToEnglishClicked" (click)="translateToEnglish()">ENG</button>\n            </ion-fab-list>\n        </ion-fab>\n    </div>\n    <ion-title>{{ \'MEDICAL_CLAIM_HEADING\' | translate }}</ion-title>\n</ion-navbar>\n</ion-header>\n\n\n<ion-content padding  *ngFor="let claim of claimRequestData">\n    <ion-item>\n        <ion-label>Medical Claim View </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "CLAIM_APPLIED_DATE_LABEL" | translate }} </ion-label>\n        <ion-label> {{ claim.CREATION_TS |date }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "TRAVEL_DATE_LABEL" | translate }} </ion-label>\n        <ion-label> {{ claim.TRAVEL_DATE | date }} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "TOTAL_CLAIM_AMOUNT_LABEL" | translate }} </ion-label>\n        <ion-label> {{ totalClaimAmount | currency:\'MYR\':\'symbol-narrow\':\'1.2-2\'}} </ion-label>\n    </ion-item>\n    <ion-item>\n        <ion-label> {{ "STATUS_LABEL" | translate }} </ion-label>\n        <ion-label> {{ claim.STATUS }} </ion-label>\n    </ion-item> \n    <ion-item>\n        <ion-label> {{ "STAGE_LABEL" | translate }} </ion-label>\n        <ion-label> {{ claim.STAGE }} </ion-label>\n    </ion-item>\n\n    <ion-item>\n        <!-- <ion-toggle [(ngModel)]="ToggleNgModel" (ionChange)="isAccepted($event)" checked="false"></ion-toggle>\n        <ion-label *ngIf="isRemarksAccepted">Accepted</ion-label>\n        <ion-label *ngIf="!isRemarksAccepted">Rejected</ion-label> -->\n\n        <ion-label> {{ "REMARKS_LABEL" | translate }} </ion-label>\n        <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n        <button ion-button outline item-start (click)="isAccepted(\'Accepted\')">\n            {{ "ACCEPT_BUTTON" | translate }} </button>\n        <button ion-button outline item-start (click)="isAccepted(\'Rejected\')">\n            {{ "REJECT_BUTTON" | translate }} </button>\n    </ion-item>\n \n        <!-- <ion-item>\n            <ion-toggle [(ngModel)]="ToggleNgModel" (ionChange)="isAccepted($event)" checked="false"></ion-toggle>\n            <ion-label *ngIf="isRemarksAccepted">Accepted</ion-label>\n            <ion-label *ngIf="!isRemarksAccepted">Rejected</ion-label>\n            <ion-label> {{ "REMARKS_LABEL" | translate }} </ion-label>\n            <ion-input type="text" [(ngModel)]="Remarks_NgModel" placeholder=" {{ \'REMARKS_PLACE_HOLDER\' | translate }} "></ion-input>\n        </ion-item> -->\n           <ion-item>\n        <button ion-button outline item-start icon-left (click)="SubmitAction()">\n            <ion-icon name="eye"></ion-icon>\n            {{ "SUBMIT_ACTION_BUTTON" | translate }} </button>\n    </ion-item>\n    <ion-item>\n        <button ion-button outline item-end icon-left (click)="EditClaim()">\n            {{ "EDIT_LABEL" | translate }} </button>\n    </ion-item>\n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/medical-claim-view/medical-claim-view.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_6__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_4__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], MedicalClaimViewPage);
    return MedicalClaimViewPage;
}());

//# sourceMappingURL=medical-claim-view.js.map

/***/ }),
/* 474 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalclaimPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_medicalclaim_service__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__models_image_upload_model__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_profile_manager_provider__ = __webpack_require__(28);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { MasterClaim_Model } from '../../models/masterclaim_model';








var MedicalclaimPage = /** @class */ (function () {
    function MedicalclaimPage(profileMng, navCtrl, viewCtrl, navParams, api, translate, fb, http, actionSheetCtrl, toastCtrl) {
        this.profileMng = profileMng;
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.api = api;
        this.translate = translate;
        this.http = http;
        this.actionSheetCtrl = actionSheetCtrl;
        this.toastCtrl = toastCtrl;
        this.loading = false;
        this.validDate = new Date().toISOString();
        this.isCustomer = false;
        this.MainClaimSaved = false;
        /********FORM EDIT VARIABLES***********/
        this.isFormEdit = false;
        //---------------------Language module start---------------------//
        this.translateToMalayClicked = false;
        this.translateToEnglishClicked = true;
        this.Medicalform = fb.group({
            avatar: null,
            travel_date: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            description: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            //  vehicleType: ['', Validators.required],
            claim_amount: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
            attachment_GUID: ''
        });
        //this.readProfile();   
    }
    MedicalclaimPage.prototype.ngOnInit = function () {
        this.userGUID = localStorage.getItem('g_USER_GUID');
        this.isFormEdit = this.navParams.get('isFormEdit');
        this.claimRequestGUID = this.navParams.get('cr_GUID'); //dynamic
        //this.claimRequestGUID = 'aa124ed8-5c2d-4c39-d3bd-066857c45617';
        if (this.isFormEdit)
            this.GetDataforEdit();
    };
    MedicalclaimPage.prototype.GetDataforEdit = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_11__Services__["a" /* Services */].getUrl('main_claim_request', 'filter=CLAIM_REQUEST_GUID=' + this.claimRequestGUID))
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimRequestData = data["resource"];
            console.log(_this.claimRequestData);
            // if (this.claimRequestData[0].SOC_GUID === null) {
            //   this.claimFor = 'customer'
            //   this.storeCustomers.forEach(element => {
            //     if (element.CUSTOMER_GUID === this.claimRequestData[0].CUSTOMER_GUID) {
            //       this.Customer_Lookup_ngModel = element.NAME
            //     }
            //   });
            // }
            // else {
            //   this.claimFor = 'project'
            //   this.storeProjects.forEach(element => {
            //     if (element.SOC_GUID === this.claimRequestData[0].SOC_GUID) {
            //       this.Project_Lookup_ngModel = element.project_name
            //       this.Travel_SOC_No_ngModel = element.soc
            //     }
            //   });
            // }
            //this.Medical_Date_ngModel = this.claimRequestData[0].TRAVEL_DATE;
            _this.Medical_Date_ngModel = new Date(_this.claimRequestData[0].TRAVEL_DATE).toISOString();
            // this.travelAmount = this.claimRequestData[0].MILEAGE_AMOUNT;
            _this.Medical_Amount_ngModel = _this.claimRequestData[0].MILEAGE_AMOUNT;
            _this.Medical_Description_ngModel = _this.claimRequestData[0].DESCRIPTION;
            // this.vehicles.forEach(element => {
            //   if (element.MILEAGE_GUID === this.claimRequestData[0].MILEAGE_GUID) {
            //     this.Travel_Mode_ngModel = element.CATEGORY
            //   }
            // });        
        });
    };
    MedicalclaimPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            this.Medicalform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Medicalform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
    };
    MedicalclaimPage.prototype.onSubmit = function () {
        var _this = this;
        this.loading = true;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        this.http.post('http://api.zen.com.my/api/v2/azurefs/' + this.uploadFileName, this.Medicalform.get('avatar').value, options)
            .map(function (response) {
            return response;
        }).subscribe(function (response) {
            alert(response.status);
        });
        setTimeout(function () {
            alert('done');
            _this.loading = false;
        }, 1000);
    };
    MedicalclaimPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function (resJson) {
            console.table(resJson);
            var imageResult = _this.SaveImageinDB();
            imageResult.then(function () {
                // result.then((res) => {
            });
        });
        // setTimeout(() => {
        //   this.loading = false;
        // }, 1000);
    };
    MedicalclaimPage.prototype.SaveImageinDB = function () {
        var _this = this;
        var objImage = new __WEBPACK_IMPORTED_MODULE_12__models_image_upload_model__["a" /* ImageUpload_model */]();
        objImage.Image_Guid = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
        objImage.IMAGE_URL = this.CloudFilePath + this.uploadFileName;
        objImage.CREATION_TS = new Date().toISOString();
        objImage.Update_Ts = new Date().toISOString();
        return new Promise(function (resolve) {
            _this.api.postData('main_images', objImage.toJson(true)).subscribe(function () {
                // let res = response.json();
                // let imageGUID = res["resource"][0].Image_Guid;     
                resolve(objImage.toJson());
            });
        });
    };
    MedicalclaimPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        this.loading = true;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_6__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        console.log(this.CloudFilePath);
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + _this.uploadFileName, _this.Medicalform.get('avatar').value, options)
                .map(function (response) {
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    MedicalclaimPage.prototype.translateToEnglish = function () {
        this.translate.use('en');
        this.translateToMalayClicked = !this.translateToMalayClicked;
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
    };
    MedicalclaimPage.prototype.translateToMalay = function () {
        this.translate.use('ms');
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
        this.translateToMalayClicked = !this.translateToMalayClicked;
    };
    //---------------------Language module end---------------------//
    MedicalclaimPage.prototype.clearFile = function () {
        this.Medicalform.get('avatar').setValue(null);
        this.fileInput.nativeElement.value = '';
    };
    MedicalclaimPage.prototype.onAllowanceSelect = function (allowance) {
        this.allowanceGUID = allowance.ALLOWANCE_GUID;
    };
    MedicalclaimPage.prototype.submitAction = function (imageGUID, formValues) {
        formValues.claimTypeGUID = '40dbaf56-98e4-77b9-df95-85ec232ff714';
        formValues.meal_allowance = this.allowanceGUID;
        formValues.attachment_GUID = imageGUID;
        this.travelAmount = formValues.claim_amount;
        // formValues.soc_no = this.isCustomer ? this.Customer_GUID : this.Soc_GUID;
        this.profileMng.save(formValues, this.travelAmount, this.isCustomer);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], MedicalclaimPage.prototype, "fileInput", void 0);
    MedicalclaimPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medicalclaim',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/medicalclaim/medicalclaim.html"*/'<ion-header>\n  <ion-navbar color="primary500">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>       \n\n\n    <ion-title>{{ \'MEDICAL_CLAIM_HEADING\' | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n\n  <form [formGroup]="Medicalform">\n\n    <ion-item>\n      <ion-label color="primary500" stacked>{{ "MEDICAL_DATE_LABEL" | translate }}</ion-label>\n      <ion-datetime displayFormat="DD/MM/YYYY" formControlName="travel_date" [(ngModel)]="Medical_Date_ngModel" max={{validDate}} placeholder="{{ \'DATE_PLACE_HOLDER\' | translate }}"></ion-datetime>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="primary500" stacked> {{ "CLAIM_AMOUNT_LABEL" | translate }} {{ "CURRENCY_NAME_LABEL" | translate }}</ion-label>\n      <ion-input type="number" formControlName="claim_amount" [(ngModel)]="Medical_Amount_ngModel" placeholder=" {{ \'CLAIM_AMOUNT_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="primary500" stacked> {{ "DESCRIPTION_LABEL" | translate }} </ion-label>\n      <ion-input type="text" formControlName="description" [(ngModel)]="Medical_Description_ngModel" placeholder=" {{ \'DESCRIPTION_PLACE_HOLDER\' | translate }} "></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <input type="file" id="avatar" (change)="onFileChange($event)" #fileInput>\n      <button ion-button type="button" (click)="clearFile()">clear file</button>\n    </ion-item>\n\n    <div class="btn">\n      <button ion-button (click)=\'saveIm(Medicalform.value)\' [disabled]="Medicalform.invalid || loading">{{ \'SUBMIT\' }}</button>\n    </div>\n\n\n  </form>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/medicalclaim/medicalclaim.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_medicalclaim_service__["a" /* MedicalClaim_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_10__ionic_native_file_transfer__["a" /* FileTransfer */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_13__providers_profile_manager_provider__["a" /* ProfileManagerProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_11__Services__["a" /* Services */], __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], MedicalclaimPage);
    return MedicalclaimPage;
}());

//# sourceMappingURL=medicalclaim.js.map

/***/ }),
/* 475 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subsciptionsetup_subsciptionsetup__ = __webpack_require__(476);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tenantsetup_tenantsetup__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__translate_translate__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__permission_permission__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pagesetup_pagesetup__ = __webpack_require__(481);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modulesetup_modulesetup__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__submodulesetup_submodulesetup__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__claimhistory_claimhistory__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__profile_setup_profile_setup_component__ = __webpack_require__(488);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__approver_task_list_approver_task_list__ = __webpack_require__(489);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__claimapprovertasklist_claimapprovertasklist__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__claimtasklist_claimtasklist__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__claim_report_claim_report__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__user_user__ = __webpack_require__(173);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















// import { SettingsPage } from '../settings/settings';

/**
 * Generated class for the AdminsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var AdminsetupPage = /** @class */ (function () {
    function AdminsetupPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    AdminsetupPage.prototype.goToSubscriptionsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__subsciptionsetup_subsciptionsetup__["a" /* SubsciptionsetupPage */]);
    };
    AdminsetupPage.prototype.goToTenantsetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__tenantsetup_tenantsetup__["a" /* TenantsetupPage */]);
    };
    AdminsetupPage.prototype.goToTranslate = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__translate_translate__["a" /* TranslatePage */]);
    };
    AdminsetupPage.prototype.goToPermission = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__permission_permission__["a" /* PermissionPage */]);
    };
    // goToRolesetup() {
    //   this.navCtrl.push(RolesetupPage)
    // }
    // goToRoleModulesetup() {
    //   this.navCtrl.push(RolemodulesetupPage)
    // }
    AdminsetupPage.prototype.goToPagesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__pagesetup_pagesetup__["a" /* PagesetupPage */]);
    };
    AdminsetupPage.prototype.goToModulesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__modulesetup_modulesetup__["a" /* ModulesetupPage */]);
    };
    AdminsetupPage.prototype.goToUser = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__user_user__["a" /* UserPage */]);
    };
    AdminsetupPage.prototype.goToSubModulesetup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__submodulesetup_submodulesetup__["a" /* SubmodulesetupPage */]);
    };
    AdminsetupPage.prototype.goToClaimHistory = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__claimhistory_claimhistory__["a" /* ClaimhistoryPage */]);
    };
    AdminsetupPage.prototype.goApproverTaskList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__approver_task_list_approver_task_list__["a" /* ApproverTaskListPage */]);
    };
    AdminsetupPage.prototype.goToClaimRequetList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */], {
            claimRefGuid: 'null'
        });
    };
    AdminsetupPage.prototype.goToClaimTaskList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__claimtasklist_claimtasklist__["a" /* ClaimtasklistPage */]);
    };
    AdminsetupPage.prototype.goToUserClaimList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_14__userclaimslist_userclaimslist__["a" /* UserclaimslistPage */]);
    };
    AdminsetupPage.prototype.goToProfile = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__profile_setup_profile_setup_component__["a" /* ProfileSetupPage */]);
    };
    AdminsetupPage.prototype.goToClaimReport = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_15__claim_report_claim_report__["a" /* ClaimReportPage */]);
    };
    // goToSettings() {
    //   this.navCtrl.push(SettingsPage);
    // }
    AdminsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AdminsetupPage');
    };
    AdminsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-adminsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/adminsetup/adminsetup.html"*/'<!--\n  Generated template for the AdminsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>Admin Setup</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding style="background: #eeeeee;">\n  <ion-card class="round1" (click)="goToSubscriptionsetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="card" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Subscription\n    </ion-card-content>\n  </ion-card>\n\n\n\n  <ion-card class="round1" (click)="goToTenantsetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="people" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Tenant\n    </ion-card-content>\n  </ion-card>\n  <!-- \n  <ion-card class="round1" (click)="goToTranslate()">\n    <ion-card-header class="icon">\n      <ion-icon name="md-quote" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n     Language\n    </ion-card-content>\n  </ion-card> -->\n\n  <ion-card class="round1" (click)="goToPermission()">\n    <ion-card-header class="icon">\n      <ion-icon name="md-cog" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Permission\n    </ion-card-content>\n  </ion-card>\n\n\n  <ion-card class="round1" (click)="goToPagesetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="md-git-merge" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Page Setup\n    </ion-card-content>\n  </ion-card>\n\n  <!-- <ion-card class="round1" (click)="goToRolesetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="git-network" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Role\n    </ion-card-content>\n  </ion-card> -->\n\n  <ion-card class="round1" (click)="goToModulesetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="git-compare" color="primary" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Module Setup\n    </ion-card-content>\n  </ion-card>\n\n  <!-- <ion-card class="round1" (click)="goToRoleModulesetup()">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-git-network" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Role Module Setup\n    </ion-card-content>\n  </ion-card>   -->\n\n  <!-- <ion-card class="round1" (click)="goToClaimHistory()">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-list-box-outline" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n     Claim History\n    </ion-card-content>\n  </ion-card> -->\n\n  <!-- <ion-card class="round1" (click)="goToClaimRequetList()">\n    <ion-card-header class="icon">\n      <ion-icon name="md-checkbox-outline" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n     APPROVER TASK LIST\n    </ion-card-content>\n  </ion-card> -->\n\n\n\n\n  <!-- <ion-card class="round1" (click)="goToClaimRequetList()">\n    <ion-card-header class="icon">\n      <ion-icon name="ios-checkbox-outline" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n     SUPERIOR TASK LIST\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class="round1" (click)="goToClaimTaskList()">\n      <ion-card-header class="icon">\n        <ion-icon name="md-clipboard" class="iconf"></ion-icon>\n      </ion-card-header>\n      <ion-card-content class="Subtitle">\n       ADMIN TASK LIST\n      </ion-card-content>\n    </ion-card> -->\n\n  <!-- <ion-card class="round1" (click)="goToUserClaimList()">\n      <ion-card-header class="icon">\n        <ion-icon name="ios-clipboard-outline" class="iconf"></ion-icon>\n      </ion-card-header>\n      <ion-card-content class="Subtitle">\n      User Claim List\n      </ion-card-content>\n    </ion-card> -->\n\n\n  <ion-card class="round1" (click)="goToClaimReport()">\n    <ion-card-header class="icon">\n      <ion-icon name="podium" color="secondary400" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Claim Report\n    </ion-card-content>\n  </ion-card>\n\n\n  <ion-card class="round1" (click)="goToProfile()">\n    <ion-card-header class="icon">\n      <ion-icon name="basket" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Profile Setup\n    </ion-card-content>\n  </ion-card>\n\n  <!-- <ion-card class="round1" (click)="goToSettings()">\n    <ion-card-header class="icon">\n      <ion-icon name="settings" color="primary500" class="iconf"></ion-icon>\n    </ion-card-header>\n    <ion-card-content class="Subtitle">\n      Settings\n    </ion-card-content>\n  </ion-card> -->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/adminsetup/adminsetup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], AdminsetupPage);
    return AdminsetupPage;
}());

//# sourceMappingURL=adminsetup.js.map

/***/ }),
/* 476 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubsciptionsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_subsciptionsetup_model__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_subsciptionsetup_service__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';








/**
 * Generated class for the SubsciptionsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var SubsciptionsetupPage = /** @class */ (function () {
    function SubsciptionsetupPage(navCtrl, navParams, fb, http, subscriptionsetupservice, alertCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.subscriptionsetupservice = subscriptionsetupservice;
        this.alertCtrl = alertCtrl;
        this.Subscription_entry = new __WEBPACK_IMPORTED_MODULE_6__models_subsciptionsetup_model__["a" /* SubsciptionSetup_Model */]();
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_subscription' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.subscriptions = [];
        this.AddSubscriptionClicked = false;
        this.EditSubscriptionClicked = false;
        this.Exist_Record = false;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.subscriptions = data.resource;
            console.table(_this.subscriptions);
        });
        this.Subscriptionform = fb.group({
            //PLAN_NAME: ["", Validators.required],
            //PLAN_NAME: [null, Validators.compose([Validators.pattern('[a-zA-Z0-9][a-zA-Z0-9 ]+'), Validators.required])],
            PLAN_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //DURATION: ["", Validators.required],
            DURATION: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            //NAME: [null, Validators.compose([Validators.pattern('[a-zA-Z][a-zA-Z0-9 ]+'), Validators.required])], 
            //RATE: [null, Validators.compose([Validators.pattern('^[a-zA-Z][a-zA-Z0-9\\s]+$'), Validators.required])],
            //RATE: ["", Validators.required],
            //RATE: [null, Validators.compose([Validators.pattern('[a-zA-Z0-9][a-zA-Z0-9 ]+'), Validators.required])],
            RATE: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            EFFECTIVE_DATE: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            //DESCRIPTION: ["", Validators.required],
            //DESCRIPTION: [null, Validators.compose([Validators.pattern('[a-zA-Z0-9][a-zA-Z0-9 ]+'), Validators.required])],
            DESCRIPTION: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            ACTIVE_FLAG: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
        });
    }
    //---------------------------------------------------------------------
    SubsciptionsetupPage.prototype.AddSubscriptionClick = function () {
        this.ClearControls();
        this.AddSubscriptionClicked = true;
        this.ACTIVE_FLAG_ngModel_Add = false;
        this.EFFECTIVE_DATE_ngModel_Add = "";
    };
    SubsciptionsetupPage.prototype.EditClick = function (SUBSCRIPTION_GUID) {
        var _this = this;
        this.ClearControls();
        this.EditSubscriptionClicked = true;
        var self = this;
        this.subscriptionsetupservice
            .get(SUBSCRIPTION_GUID)
            .subscribe(function (data) {
            self.subscription_details = data;
            _this.PLAN_NAME_ngModel_Edit = self.subscription_details.PLAN_NAME;
            localStorage.setItem('Prev_sub_Name', self.subscription_details.PLAN_NAME);
            _this.DURATION_ngModel_Edit = self.subscription_details.DURATION;
            _this.RATE_ngModel_Edit = self.subscription_details.RATE;
            _this.EFFECTIVE_DATE_ngModel_Edit = new Date(self.subscription_details.EFFECTIVE_DATE).toISOString();
            _this.DESCRIPTION_ngModel_Edit = self.subscription_details.DESCRIPTION;
            if (self.subscription_details.ACTIVE_FLAG == "1") {
                _this.ACTIVE_FLAG_ngModel_Edit = true;
            }
            else {
                _this.ACTIVE_FLAG_ngModel_Edit = false;
            }
        });
    };
    SubsciptionsetupPage.prototype.DeleteClick = function (SUBSCRIPTION_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.subscriptionsetupservice.remove(SUBSCRIPTION_GUID)
                            .subscribe(function () {
                            self.subscriptions = self.subscriptions.filter(function (item) {
                                return item.SUBSCRIPTION_GUID != SUBSCRIPTION_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    SubsciptionsetupPage.prototype.CloseSubscriptionClick = function () {
        if (this.AddSubscriptionClicked == true) {
            this.AddSubscriptionClicked = false;
        }
        if (this.EditSubscriptionClicked == true) {
            this.EditSubscriptionClicked = false;
        }
    };
    SubsciptionsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SubsciptionsetupPage');
    };
    SubsciptionsetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Subscriptionform.valid) {
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_subscription?filter=(PLAN_NAME=" + this.PLAN_NAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.Subscription_entry.PLAN_NAME = _this.PLAN_NAME_ngModel_Add.trim();
                        _this.Subscription_entry.DURATION = _this.DURATION_ngModel_Add.trim();
                        _this.Subscription_entry.RATE = _this.RATE_ngModel_Add.trim();
                        _this.Subscription_entry.EFFECTIVE_DATE = _this.EFFECTIVE_DATE_ngModel_Add;
                        _this.Subscription_entry.DESCRIPTION = _this.DESCRIPTION_ngModel_Add.trim();
                        _this.Subscription_entry.ACTIVE_FLAG = _this.ACTIVE_FLAG_ngModel_Add;
                        _this.Subscription_entry.SUBSCRIPTION_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.Subscription_entry.CREATION_TS = new Date().toISOString();
                        _this.Subscription_entry.CREATION_USER_GUID = "1";
                        _this.Subscription_entry.UPDATE_TS = new Date().toISOString();
                        _this.Subscription_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.Subscription_entry.UPDATE_USER_GUID = "";
                        //this.mileage_entry.ACTIVATION_FLAG = boolean;
                        _this.subscriptionsetupservice.save(_this.Subscription_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Subscription Registered successfully');
                                //location.reload();
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("The Subscription is already Exist.");
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    SubsciptionsetupPage.prototype.getSubscriptionList = function () {
        var self = this;
        var params = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["f" /* URLSearchParams */]();
        self.subscriptionsetupservice.get_subscription(params)
            .subscribe(function (subscriptions) {
            self.subscriptions = subscriptions;
        });
    };
    SubsciptionsetupPage.prototype.Update = function (SUBSCRIPTION_GUID) {
        var _this = this;
        if (this.Subscriptionform.valid) {
            if (this.Subscription_entry.PLAN_NAME == null) {
                this.Subscription_entry.PLAN_NAME = this.PLAN_NAME_ngModel_Edit.trim();
            }
            if (this.Subscription_entry.DURATION == null) {
                this.Subscription_entry.DURATION = this.DURATION_ngModel_Edit.trim();
            }
            if (this.Subscription_entry.RATE == null) {
                this.Subscription_entry.RATE = this.RATE_ngModel_Edit.trim();
            }
            if (this.Subscription_entry.EFFECTIVE_DATE == null) {
                this.Subscription_entry.EFFECTIVE_DATE = this.EFFECTIVE_DATE_ngModel_Edit;
            }
            if (this.Subscription_entry.DESCRIPTION == null) {
                this.Subscription_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Edit.trim();
            }
            if (this.Subscription_entry.ACTIVE_FLAG == null) {
                this.Subscription_entry.ACTIVE_FLAG = this.ACTIVE_FLAG_ngModel_Edit;
            }
            this.Subscription_entry.CREATION_TS = this.subscription_details.CREATION_TS;
            this.Subscription_entry.CREATION_USER_GUID = this.subscription_details.CREATION_USER_GUID;
            this.Subscription_entry.UPDATE_TS = this.subscription_details.UPDATE_TS;
            this.Subscription_entry.SUBSCRIPTION_GUID = SUBSCRIPTION_GUID;
            this.Subscription_entry.UPDATE_TS = new Date().toISOString();
            this.Subscription_entry.UPDATE_USER_GUID = '1';
            //debugger;
            if (this.PLAN_NAME_ngModel_Edit.trim() != localStorage.getItem('Prev_sub_Name')) {
                var url = void 0;
                url = this.baseResource_Url + "main_subscription?filter=(PLAN_NAME=" + this.PLAN_NAME_ngModel_Edit + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    console.log('Current Name : ' + _this.PLAN_NAME_ngModel_Edit.trim() + ', Previous Name : ' + localStorage.getItem('Prev_sub_Name'));
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.Subscription_entry.PLAN_NAME = _this.PLAN_NAME_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.subscriptionsetupservice.update(_this.Subscription_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Subscription updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The Subscription is already Exist. ");
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.Subscription_entry.PLAN_NAME == null) {
                    this.Subscription_entry.PLAN_NAME = localStorage.getItem('Prev_sub_Name');
                }
                this.Subscription_entry.PLAN_NAME = this.PLAN_NAME_ngModel_Edit.trim();
                //**************Update service if it is old details************************
                this.subscriptionsetupservice.update(this.Subscription_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Subscription updated successfully');
                        //location.reload();
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    SubsciptionsetupPage.prototype.ClearControls = function () {
        this.PLAN_NAME_ngModel_Add = "";
        this.DURATION_ngModel_Add = "";
        this.RATE_ngModel_Add = "";
        this.EFFECTIVE_DATE_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.ACTIVE_FLAG_ngModel_Add = false;
        this.PLAN_NAME_ngModel_Edit = "";
        this.DURATION_ngModel_Edit = "";
        this.RATE_ngModel_Edit = "";
        this.EFFECTIVE_DATE_ngModel_Edit = "";
        this.DESCRIPTION_ngModel_Edit = "";
        this.ACTIVE_FLAG_ngModel_Edit = false;
    };
    SubsciptionsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-subsciptionsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/subsciptionsetup/subsciptionsetup.html"*/'<!--\n  Generated template for the SubsciptionsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "SUBSCRIPTION_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddSubscriptionClick()"><ion-icon name="add"></ion-icon></button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Plan Name</th>\n          <th class="lgl1">Duration</th>\n          <th class="lgl1">Rate</th>\n          <th class="lgl1">Effective Date</th>\n          <th class="lgl1">Description</th>\n          <th class="lgl1" style="width:95px">Active Flag</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let subscription of subscriptions | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' } ; let i=index">\n          <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Plan Name">{{subscription.PLAN_NAME}}</td>\n          <td class="lgl1 getHeader" reshead="Duration">{{subscription.DURATION}}</td>\n          <td class="lgl1 getHeader" reshead="Rate">{{subscription.RATE}}</td>\n          <td class="lgl1 getHeader" reshead="Effective Date">{{subscription.EFFECTIVE_DATE}}</td>\n          <td class="lgl1 getHeader" reshead="Description">{{subscription.DESCRIPTION}}</td>\n          <td class="lgl1 getHeader" reshead="Active Flag">\n            <ion-item>\n                <ion-toggle  *ngIf="subscription.ACTIVE_FLAG==1" checked=true></ion-toggle>\n            <ion-toggle  *ngIf="subscription.ACTIVE_FLAG==0" checked=false></ion-toggle>\n            </ion-item>\n          \n          </td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end (click)="EditClick(subscription.SUBSCRIPTION_GUID)"><ion-icon name="md-create"></ion-icon></button>\n            <button ion-button item-end (click)="DeleteClick(subscription.SUBSCRIPTION_GUID)"><ion-icon name="md-close"></ion-icon></button>\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n\n\n\n  <!-- add Subscription form start-->\n  <div class="blackcontainer" *ngIf="AddSubscriptionClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddSubscriptionClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_SUBSCRIPTION" | translate }}</div>\n        <button class="btnR" (click)="CloseSubscriptionClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list class="scroll">\n        <form [formGroup]="Subscriptionform">\n          <ion-item>\n            <ion-label stacked>{{ "PLAN_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PLAN_NAME" [(ngModel)]="PLAN_NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DURATION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DURATION" [(ngModel)]="DURATION_ngModel_Add" placeholder="{{\'Please fill in the duration of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "RATE" | translate }}</ion-label>\n            <ion-input type="text" formControlName="RATE" [(ngModel)]="RATE_ngModel_Add" placeholder="{{\'Please fill in the rate of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "EFFECTIVE_DATE" | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="EFFECTIVE_DATE" [(ngModel)]="EFFECTIVE_DATE_ngModel_Add" placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "S_ACTIVE_FLAG" | translate }}</ion-label>\n            <ion-toggle formControlName="ACTIVE_FLAG" [(ngModel)]="ACTIVE_FLAG_ngModel_Add"></ion-toggle>\n            <!-- <ion-select formControlName="subscriptionname" [(ngModel)]="Subscriptionform.fullname"  placeholder="{{\'Please select the active flag\'}}">\n                 <ion-option value="0">ACTIVE</ion-option>\n              <ion-option value="1">INACTIVE</ion-option>\n          \n            </ion-select> -->\n          </ion-item>\n\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Subscriptionform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Subscription form end-->\n\n\n  <!-- edit subscription form start-->\n  <div class="blackcontainer" *ngIf="EditSubscriptionClicked">\n  </div>\n  <div class="popup" padding *ngIf="EditSubscriptionClicked">\n\n    <ion-card class="cm">\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "EDIT_SUBSCRIPTION" | translate }}</div>\n        <button class="btnR" (click)="CloseSubscriptionClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list class="scroll">\n        <form [formGroup]="Subscriptionform">\n          <ion-item>\n            <ion-label stacked>{{ "PLAN_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PLAN_NAME" [(ngModel)]="PLAN_NAME_ngModel_Edit" placeholder="{{\'Please fill in the name of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DURATION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DURATION" [(ngModel)]="DURATION_ngModel_Edit" placeholder="{{\'Please fill in the duration of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "RATE" | translate }}</ion-label>\n            <ion-input type="text" formControlName="RATE" [(ngModel)]="RATE_ngModel_Edit" placeholder="{{\'Please fill in the rate of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "EFFECTIVE_DATE" | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="EFFECTIVE_DATE" [(ngModel)]="EFFECTIVE_DATE_ngModel_Edit" placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "S_DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Edit" placeholder="{{\'Please fill in the description of the plan\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "S_ACTIVE_FLAG" | translate }}</ion-label>\n            <ion-toggle formControlName="ACTIVE_FLAG" [(ngModel)]="ACTIVE_FLAG_ngModel_Edit"></ion-toggle>\n            <!-- <ion-select formControlName="subscriptionname" [(ngModel)]="Subscriptionform.fullname"  placeholder="{{\'Please select the active flag\'}}">\n                 <ion-option value="0">ACTIVE</ion-option>\n              <ion-option value="1">INACTIVE</ion-option>\n          \n            </ion-select> -->\n          </ion-item>\n\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="!Update(subscription_details.SUBSCRIPTION_GUID)">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/subsciptionsetup/subsciptionsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_subsciptionsetup_service__["a" /* SubsciptionSetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_subsciptionsetup_service__["a" /* SubsciptionSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], SubsciptionsetupPage);
    return SubsciptionsetupPage;
}());

// if (this.Subscriptionform.valid) {
//         let headers = new Headers();
//         headers.append('Content-Type', 'application/json');
//         let options = new RequestOptions({ headers: headers });
//         let url: string;
//         url = "http://api.zen.com.my/api/v2/zcs/_table/main_subscription?filter=(PLAN_NAME=" + this.Subscription_entry.PLAN_NAME + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
//         this.http.get(url, options)
//           .map(res => res.json())
//           .subscribe(
//           data => {
//             let res = data["resource"];
//             if (res.length == 0) {
//               console.log("No records Found");
//               if (this.Exist_Record == false) {
//     if (this.Subscriptionform.valid) {
//}
// else {
//   console.log("Records Found");
//   alert("The Subscription is already Added.")
// }
// },
// err => {
//   this.Exist_Record = false;
//   console.log("ERROR!: ", err);
// }
// );
// }
// }
// }
//# sourceMappingURL=subsciptionsetup.js.map

/***/ }),
/* 477 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubsciptionSetup_Model; });
var SubsciptionSetup_Model = /** @class */ (function () {
    function SubsciptionSetup_Model(SUBSCRIPTION_GUID, PLAN_NAME, DURATION, RATE, EFFECTIVE_DATE, DESCRIPTION, ACTIVE_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, TENANT_GUID, UPDATE_USER_GUID) {
        if (SUBSCRIPTION_GUID === void 0) { SUBSCRIPTION_GUID = null; }
        if (PLAN_NAME === void 0) { PLAN_NAME = null; }
        if (DURATION === void 0) { DURATION = null; }
        if (RATE === void 0) { RATE = null; }
        if (EFFECTIVE_DATE === void 0) { EFFECTIVE_DATE = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (ACTIVE_FLAG === void 0) { ACTIVE_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.SUBSCRIPTION_GUID = SUBSCRIPTION_GUID;
        this.PLAN_NAME = PLAN_NAME;
        this.DURATION = DURATION;
        this.RATE = RATE;
        this.EFFECTIVE_DATE = EFFECTIVE_DATE;
        this.DESCRIPTION = DESCRIPTION;
        this.ACTIVE_FLAG = ACTIVE_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.TENANT_GUID = TENANT_GUID;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    SubsciptionSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new SubsciptionSetup_Model(json.SUBSCRIPTION_GUID, json.PLAN_NAME, json.DURATION, json.RATE, json.EFFECTIVE_DATE, json.DESCRIPTION, json.ACTIVE_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.TENANT_GUID, json.UPDATE_USER_GUID);
    };
    SubsciptionSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            SUBSCRIPTION_GUID: this.SUBSCRIPTION_GUID,
            PLAN_NAME: this.PLAN_NAME,
            DURATION: this.DURATION,
            RATE: this.RATE,
            EFFECTIVE_DATE: this.EFFECTIVE_DATE,
            DESCRIPTION: this.DESCRIPTION,
            ACTIVE_FLAG: this.ACTIVE_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            TENANT_GUID: this.TENANT_GUID,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return SubsciptionSetup_Model;
}());

//# sourceMappingURL=subsciptionsetup_model.js.map

/***/ }),
/* 478 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TenantsetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_crypto_js__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shared_GlobalFunction__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_tenantmainsetup_model__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_tenantmainsetup_service__ = __webpack_require__(458);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_tenantcompanysetup_model__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_tenantcompanysetup_service__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__models_tenantcompanysitesetup_model__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__services_tenantcompanysitesetup_service__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__models_usersetup_info_model__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__models_user_contact_model__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__models_user_company_model__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__models_usersetup_address_model__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__models_user_role_model__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';






















/**
 * Generated class for the TenantsetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var TenantsetupPage = /** @class */ (function () {
    function TenantsetupPage(navCtrl, navParams, fb_tenant, fb_user, http, TenantMainSetupService, TenantCompanySetupService, tenantcompanysitesetupservice, userservice, alertCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.TenantMainSetupService = TenantMainSetupService;
        this.TenantCompanySetupService = TenantCompanySetupService;
        this.tenantcompanysitesetupservice = tenantcompanysitesetupservice;
        this.userservice = userservice;
        this.alertCtrl = alertCtrl;
        this.tenant_main_entry = new __WEBPACK_IMPORTED_MODULE_8__models_tenantmainsetup_model__["a" /* TenantMainSetup_Model */]();
        this.tenant_company_entry = new __WEBPACK_IMPORTED_MODULE_10__models_tenantcompanysetup_model__["a" /* TenantCompanySetup_Model */]();
        this.tenant_company_site_entry = new __WEBPACK_IMPORTED_MODULE_12__models_tenantcompanysitesetup_model__["a" /* TenantCompanySiteSetup_Model */]();
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_14__models_user_main_model__["a" /* UserMain_Model */]();
        this.userinfo_entry = new __WEBPACK_IMPORTED_MODULE_15__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        this.usercontact_entry = new __WEBPACK_IMPORTED_MODULE_16__models_user_contact_model__["a" /* UserContact_Model */]();
        this.usercompany_entry = new __WEBPACK_IMPORTED_MODULE_17__models_user_company_model__["a" /* UserCompany_Model */]();
        this.useraddress_entry = new __WEBPACK_IMPORTED_MODULE_18__models_usersetup_address_model__["a" /* UserAddress_Model */]();
        this.userrole_entry = new __WEBPACK_IMPORTED_MODULE_19__models_user_role_model__["a" /* UserRole_Model */]();
        this.page = 1;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/tenant_company_site' + '?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_tenantdetails' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl_tenantuser = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_tenantuser' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        //baseResourceUrl_tenantuser: string = constants.DREAMFACTORY_INSTANCE_URL + "/api/v2/zcs/_table/vw_tenantuser?filter=(TENANT_GUID=" + this.tenant_company_site_entry.SITE_NAME + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.tenants = [];
        //---------------------------------------------------------------------
        this.AddTUserClicked = false;
        this.AddTTUserClicked = false;
        this.AddTenantClicked = false;
        this.EditTenantClicked = false;
        this.Exist_Record = false;
        this.Add_Form = false;
        this.Edit_Form = false;
        this.Add_User_Form = false;
        this.Edit_User_Form = false;
        this.Global_Function = new __WEBPACK_IMPORTED_MODULE_7__shared_GlobalFunction__["a" /* GlobalFunction */](this.alertCtrl);
        this.baseResourceUrl2_URL = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            //--------------Clear all required storage------------------------
            localStorage.removeItem("PREV_TENANT_GUID");
            localStorage.removeItem("PREV_TENANT_COMPANY_GUID");
            localStorage.removeItem("PREV_TENANT_COMPANY_SITE_GUID");
            //----------------------------------------------------------------
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data.resource; //console.log(data.resource);
            });
            //Bind Role----------------------------------------
            this.BindRole();
            this.Tenantform = fb_tenant.group({
                TENANT_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                TENANT_COMPANY_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                COMPANY_SITE_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                REGISTRATION_NUM: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                ADDRESS1: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                ADDRESS2: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                ADDRESS3: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                CONTACT_NO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                EMAIL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                CONTACT_PERSON: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                CONTACT_PERSON_NO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                CONTACT_PERSON_EMAIL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                WEBSITE: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                ISHQ_FLAG: [null],
                ACTIVE_FLAG: [null],
            });
            this.TenantUSerform = fb_user.group({
                //-------------For Tenant User--------------------
                // TULOGINID: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                TULOGINID: [null],
                // TUPASSWORD: [null, Validators.compose([Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), Validators.required])],
                TUPASSWORD: [null],
                TUEMAIL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                TUSERROLE: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            });
        }
        else {
            alert("Sorry. This is for only Super Admin.");
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_23__login_login__["a" /* LoginPage */]);
        }
    }
    TenantsetupPage.prototype.onChange = function () {
        this.User_Loginid_ngModel_Add = this.User_Email_ngModel_Add;
    };
    TenantsetupPage.prototype.AddTenantClick = function () {
        this.AddTenantClicked = true;
        this.Add_Form = true;
        this.Edit_Form = false;
        this.ClearControls();
    };
    TenantsetupPage.prototype.AddTUserClick = function (TENANT_GUID, TENANT_COMPANY_GUID, TENANT_COMPANY_SITE_GUID) {
        var _this = this;
        this.AddTUserClicked = true;
        //----------------For tenant User---------------------------------------------------------
        this.baseResourceUrl_tenantuser = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/vw_tenantuser?filter=(TENANT_GUID=" + TENANT_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(this.baseResourceUrl_tenantuser)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenantusers = data.resource;
            _this.storeUsers = data["resource"];
            localStorage.setItem('PREV_TENANT_GUID', TENANT_GUID);
            localStorage.setItem('PREV_TENANT_COMPANY_GUID', TENANT_COMPANY_GUID);
            localStorage.setItem('PREV_TENANT_COMPANY_SITE_GUID', TENANT_COMPANY_SITE_GUID);
        });
        //----------------For Tenant User Address, Company, Info----------------------------------
        this.baseResourceUrl_tenantuser = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/vw_tenantdetails?filter=(TENANT_COMPANY_GUID=" + TENANT_COMPANY_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(this.baseResourceUrl_tenantuser)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenantuserdetails = data.resource; //console.log(this.tenantuserdetails[0]);
        });
        //----------------------------------------------------------------------------------------
    };
    TenantsetupPage.prototype.CloseTUserClick = function () {
        this.AddTUserClicked = false;
    };
    TenantsetupPage.prototype.AddTTUserClick = function () {
        this.ClearUserControls();
        this.AddTTUserClicked = true;
        this.Add_User_Form = true;
        this.Edit_User_Form = false;
        //alert(this.tenantusers.EMAIL);
        //Generate Password Encrypt-----------------
        var strPassword = this.Global_Function.Random();
        this.User_Password_ngModel_Add = __WEBPACK_IMPORTED_MODULE_6_crypto_js___default.a.SHA256(strPassword).toString(__WEBPACK_IMPORTED_MODULE_6_crypto_js___default.a.enc.Hex);
        alert(strPassword);
    };
    TenantsetupPage.prototype.CloseTTUserClick = function () {
        this.AddTTUserClicked = false;
        this.Add_User_Form = true;
        this.Edit_User_Form = false;
    };
    TenantsetupPage.prototype.EditClick = function (TENANT_COMPANY_SITE_GUID) {
        var _this = this;
        this.ClearControls();
        //this.EditTenantClicked = true;
        this.AddTenantClicked = true;
        this.Add_Form = false;
        this.Edit_Form = true;
        var url_tenant_edit = this.baseResource_Url + "view_tenant_edit?filter=(TENANT_COMPANY_SITE_GUID=" + TENANT_COMPANY_SITE_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(url_tenant_edit)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenant_details = data["resource"];
            _this.TENANT_NAME_ngModel_Add = _this.tenant_details[0]["TENANT_ACCOUNT_NAME"];
            _this.TENANT_COMPANY_NAME_ngModel_Add = _this.tenant_details[0]["TENANT_COMPANY_NAME"];
            _this.COMPANY_SITE_NAME_ngModel_Add = _this.tenant_details[0]["SITE_NAME"];
            _this.REGISTRATION_NUM_ngModel_Add = _this.tenant_details[0]["REGISTRATION_NO"];
            _this.ADDRESS1_ngModel_Add = _this.tenant_details[0]["ADDRESS"];
            _this.ADDRESS2_ngModel_Add = _this.tenant_details[0]["ADDRESS2"];
            _this.ADDRESS3_ngModel_Add = _this.tenant_details[0]["ADDRESS3"];
            _this.CONTACTNO_ngModel_Add = _this.tenant_details[0]["CONTACT_NO"];
            _this.EMAIL_ngModel_Add = _this.tenant_details[0]["EMAIL"];
            _this.CONTACT_PERSON_ngModel_Add = _this.tenant_details[0]["CONTACT_PERSON"];
            _this.CONTACT_PERSON_NO_ngModel_Add = _this.tenant_details[0]["CONTACT_PERSON_CONTACT_NO"];
            _this.CONTACT_PERSON_EMAIL_ngModel_Add = _this.tenant_details[0]["CONTACT_PERSON_EMAIL"];
            _this.WEBSITE_ngModel_Add = _this.tenant_details[0]["WEBSITE"];
            if (_this.tenant_details[0]["ACTIVATION_FLAG"] == "1") {
                _this.ACTIVE_FLAG_ngModel_Add = true;
            }
            else {
                _this.ACTIVE_FLAG_ngModel_Add = false;
            }
            if (_this.tenant_details[0]["ISHQ"] == "1") {
                _this.ISHQ_FLAG_ngModel_Add = true;
            }
            else {
                _this.ISHQ_FLAG_ngModel_Add = false;
            }
        });
    };
    TenantsetupPage.prototype.EditUserClick = function (USER_GUID) {
        var _this = this;
        this.ClearUserControls();
        this.AddTTUserClicked = true;
        this.Add_User_Form = false;
        this.Edit_User_Form = true;
        var url_tenant_user_edit = this.baseResource_Url + "view_tenant_user_edit?filter=(USER_GUID=" + USER_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(url_tenant_user_edit)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenant_user_details = data["resource"];
            if (_this.tenant_user_details.length > 0) {
                _this.User_Loginid_ngModel_Add = _this.tenant_user_details[0]["LOGIN_ID"];
                _this.User_Password_ngModel_Add = _this.tenant_user_details[0]["PASSWORD"];
                _this.User_Email_ngModel_Add = _this.tenant_user_details[0]["EMAIL"];
                _this.User_Role_ngModel_Add = _this.tenant_user_details[0]["ROLE_GUID"];
            }
        });
    };
    TenantsetupPage.prototype.DeleteClick = function (TENANT_COMPANY_SITE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.tenantcompanysitesetupservice.remove(TENANT_COMPANY_SITE_GUID)
                            .subscribe(function () {
                            self.tenants = self.tenants.filter(function (item) {
                                _this.tenantcompanysitesetupservice.remove(TENANT_COMPANY_SITE_GUID);
                                return item.TENANT_COMPANY_SITE_GUID != TENANT_COMPANY_SITE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    TenantsetupPage.prototype.DeleteUserClick = function () {
        alert('In Progress....');
    };
    TenantsetupPage.prototype.CloseTenantClick = function () {
        if (this.AddTenantClicked == true) {
            this.AddTenantClicked = false;
        }
        if (this.EditTenantClicked == true) {
            this.EditTenantClicked = false;
        }
        this.Add_Form = true;
        this.Edit_Form = false;
    };
    TenantsetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TenantsetupPage');
    };
    TenantsetupPage.prototype.BindRole = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data.resource;
        });
    };
    TenantsetupPage.prototype.Save_Tenant_Main = function () {
        var _this = this;
        if (this.Add_Form == true) {
            this.tenant_main_entry.TENANT_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.tenant_main_entry.PARENT_TENANT_GUID = "";
            this.tenant_main_entry.TENANT_ACCOUNT_NAME = this.TENANT_NAME_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_main_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_main_entry.ACTIVATION_FLAG = "0";
            }
            //this.tenant_main_entry.ACTIVATION_FLAG = this.ACTIVE_FLAG_ngModel_Add;
            this.tenant_main_entry.CREATION_TS = new Date().toISOString();
            this.tenant_main_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.tenant_main_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_main_entry.UPDATE_USER_GUID = "";
            this.TenantMainSetupService.save(this.tenant_main_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Main Registered successfully');
                    //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    _this.Save_Tenant_Company();
                }
            });
        }
        else {
            this.tenant_main_entry.TENANT_GUID = this.tenant_details[0]["TENANT_GUID"];
            this.tenant_main_entry.PARENT_TENANT_GUID = "";
            this.tenant_main_entry.TENANT_ACCOUNT_NAME = this.TENANT_NAME_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_main_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_main_entry.ACTIVATION_FLAG = "0";
            }
            this.tenant_main_entry.CREATION_TS = this.tenant_details[0]["CREATION_TS"];
            this.tenant_main_entry.CREATION_USER_GUID = this.tenant_details[0]["CREATION_USER_GUID"];
            this.tenant_main_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_main_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.TenantMainSetupService.update(this.tenant_main_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Main Registered successfully');
                    //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    _this.Save_Tenant_Company();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_Company = function () {
        var _this = this;
        if (this.Add_Form == true) {
            this.tenant_company_entry.TENANT_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.tenant_company_entry.TENANT_GUID = this.tenant_main_entry.TENANT_GUID;
            //localStorage.setItem('tenant_main_entry_TENANT_GUID', this.tenant_main_entry.TENANT_GUID);
            this.tenant_company_entry.NAME = this.TENANT_COMPANY_NAME_ngModel_Add.trim();
            this.tenant_company_entry.REGISTRATION_NO = this.REGISTRATION_NUM_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_company_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_company_entry.ACTIVATION_FLAG = "0";
            }
            this.tenant_company_entry.CREATION_TS = new Date().toISOString();
            this.tenant_company_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_company_entry.UPDATE_USER_GUID = "";
            this.TenantCompanySetupService.save(this.tenant_company_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Registered successfully');
                    _this.Save_Tenant_Company_Site();
                }
            });
        }
        else {
            this.tenant_company_entry.TENANT_COMPANY_GUID = this.tenant_details[0]["TENANT_COMPANY_GUID"];
            this.tenant_company_entry.TENANT_GUID = this.tenant_main_entry.TENANT_GUID;
            this.tenant_company_entry.NAME = this.TENANT_COMPANY_NAME_ngModel_Add.trim();
            this.tenant_company_entry.REGISTRATION_NO = this.REGISTRATION_NUM_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_company_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_company_entry.ACTIVATION_FLAG = "0";
            }
            this.tenant_company_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
            this.tenant_company_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
            this.tenant_company_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
            this.TenantCompanySetupService.update(this.tenant_company_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Registered successfully');
                    _this.Save_Tenant_Company_Site();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_Company_Site = function () {
        var _this = this;
        if (this.Add_Form == true) {
            //Check if any HQ is available for particular tenant, tenant_company, tenant_company_site
            this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
            this.tenant_company_site_entry.SITE_NAME = this.COMPANY_SITE_NAME_ngModel_Add.trim();
            this.tenant_company_site_entry.REGISTRATION_NUM = this.REGISTRATION_NUM_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS = this.ADDRESS1_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS2 = this.ADDRESS2_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS3 = this.ADDRESS3_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_NO = this.CONTACTNO_ngModel_Add.trim();
            this.tenant_company_site_entry.EMAIL = this.EMAIL_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_company_site_entry.ACTIVATION_FLAG = "0";
            }
            this.tenant_company_site_entry.CONTACT_PERSON = this.CONTACT_PERSON_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = this.CONTACT_PERSON_NO_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = this.CONTACT_PERSON_EMAIL_ngModel_Add.trim();
            this.tenant_company_site_entry.WEBSITE = this.WEBSITE_ngModel_Add.trim();
            this.tenant_company_site_entry.CREATION_TS = new Date().toISOString();
            this.tenant_company_site_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_company_site_entry.UPDATE_USER_GUID = "";
            if (this.ISHQ_FLAG_ngModel_Add == true) {
                this.tenant_company_site_entry.ISHQ = "1";
            }
            else {
                this.tenant_company_site_entry.ISHQ = "0";
            }
            this.tenantcompanysitesetupservice.save(this.tenant_company_site_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Site Registered successfully');
                    alert('Tenant Registered successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            });
        }
        else {
            this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = this.tenant_details[0]["TENANT_COMPANY_SITE_GUID"];
            this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_company_entry.TENANT_COMPANY_GUID;
            this.tenant_company_site_entry.SITE_NAME = this.COMPANY_SITE_NAME_ngModel_Add.trim();
            this.tenant_company_site_entry.REGISTRATION_NUM = this.REGISTRATION_NUM_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS = this.ADDRESS1_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS2 = this.ADDRESS2_ngModel_Add.trim();
            this.tenant_company_site_entry.ADDRESS3 = this.ADDRESS3_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_NO = this.CONTACTNO_ngModel_Add.trim();
            this.tenant_company_site_entry.EMAIL = this.EMAIL_ngModel_Add.trim();
            if (this.ACTIVE_FLAG_ngModel_Add == true) {
                this.tenant_company_site_entry.ACTIVATION_FLAG = "1";
            }
            else {
                this.tenant_company_site_entry.ACTIVATION_FLAG = "0";
            }
            this.tenant_company_site_entry.CONTACT_PERSON = this.CONTACT_PERSON_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = this.CONTACT_PERSON_NO_ngModel_Add.trim();
            this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = this.CONTACT_PERSON_EMAIL_ngModel_Add.trim();
            this.tenant_company_site_entry.WEBSITE = this.WEBSITE_ngModel_Add.trim();
            this.tenant_company_site_entry.CREATION_TS = this.tenant_main_entry.CREATION_TS;
            this.tenant_company_site_entry.CREATION_USER_GUID = this.tenant_main_entry.CREATION_USER_GUID;
            this.tenant_company_site_entry.UPDATE_TS = this.tenant_main_entry.UPDATE_TS;
            this.tenant_company_site_entry.UPDATE_USER_GUID = this.tenant_main_entry.UPDATE_USER_GUID;
            if (this.ISHQ_FLAG_ngModel_Add == true) {
                this.tenant_company_site_entry.ISHQ = "1";
            }
            else {
                this.tenant_company_site_entry.ISHQ = "0";
            }
            this.tenantcompanysitesetupservice.update(this.tenant_company_site_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('Tenant Company Site Registered successfully');
                    alert('Tenant update successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.usermain_entry.USER_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.usermain_entry.TENANT_GUID = localStorage.getItem('PREV_TENANT_GUID');
            this.usermain_entry.LOGIN_ID = this.User_Loginid_ngModel_Add.trim();
            this.usermain_entry.PASSWORD = this.User_Password_ngModel_Add.trim();
            this.usermain_entry.EMAIL = this.User_Email_ngModel_Add.trim();
            //this.usermain_entry. = this.User_Role_ngModel_Add.trim();
            this.usermain_entry.ACTIVATION_FLAG = 1;
            this.usermain_entry.CREATION_TS = new Date().toISOString();
            this.usermain_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usermain_entry.UPDATE_TS = new Date().toISOString();
            this.usermain_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_main(this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Info();
                }
            });
        }
        else {
            this.usermain_entry.USER_GUID = this.tenant_user_details[0]["USER_GUID"];
            this.usermain_entry.TENANT_GUID = localStorage.getItem('PREV_TENANT_GUID');
            this.usermain_entry.STAFF_ID = this.tenant_user_details[0]["STAFF_ID"];
            // this.usermain_entry.LOGIN_ID = this.User_Loginid_ngModel_Add.trim();
            // this.usermain_entry.PASSWORD = this.User_Password_ngModel_Add.trim();
            this.usermain_entry.LOGIN_ID = this.tenant_user_details[0]["LOGIN_ID"];
            this.usermain_entry.PASSWORD = this.tenant_user_details[0]["PASSWORD"];
            this.usermain_entry.EMAIL = this.User_Email_ngModel_Add.trim();
            this.usermain_entry.ACTIVATION_FLAG = 1;
            this.usermain_entry.CREATION_TS = this.tenant_user_details[0]["CREATION_TS"];
            this.usermain_entry.CREATION_USER_GUID = this.tenant_user_details[0]["CREATION_USER_GUID"];
            this.usermain_entry.UPDATE_TS = new Date().toISOString();
            this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usermain_entry.IS_TENANT_ADMIN = this.tenant_user_details[0]["IS_TENANT_ADMIN"];
            this.userservice.update_user_main(this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Info();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User_Info = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.userinfo_entry.FULLNAME = this.tenantuserdetails[0]["CONTACT_PERSON"];
            this.userinfo_entry.USER_INFO_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userinfo_entry.TENANT_COMPANY_GUID = localStorage.getItem('PREV_TENANT_COMPANY_GUID');
            this.userinfo_entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem('PREV_TENANT_COMPANY_SITE_GUID');
            this.userinfo_entry.CREATION_TS = new Date().toISOString();
            this.userinfo_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.userinfo_entry.UPDATE_TS = new Date().toISOString();
            this.userinfo_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_info(this.userinfo_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Address();
                }
            });
        }
        else {
            this.userinfo_entry.USER_INFO_GUID = this.tenant_user_details[0]["USER_INFO_GUID"];
            this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userinfo_entry.FULLNAME = this.tenant_user_details[0]["FULLNAME"];
            this.userinfo_entry.MANAGER_USER_GUID = this.tenant_user_details[0]["MANAGER_USER_GUID"];
            this.userinfo_entry.PERSONAL_ID_TYPE = this.tenant_user_details[0]["PERSONAL_ID_TYPE"];
            this.userinfo_entry.PERSONAL_ID = this.tenant_user_details[0]["PERSONAL_ID"];
            this.userinfo_entry.DOB = this.tenant_user_details[0]["DOB"];
            this.userinfo_entry.GENDER = this.tenant_user_details[0]["GENDER"];
            this.userinfo_entry.JOIN_DATE = this.tenant_user_details[0]["JOIN_DATE"];
            this.userinfo_entry.MARITAL_STATUS = this.tenant_user_details[0]["MARITAL_STATUS"];
            this.userinfo_entry.BRANCH = this.tenant_user_details[0]["BRANCH"];
            this.userinfo_entry.EMPLOYEE_TYPE = this.tenant_user_details[0]["EMPLOYEE_TYPE"];
            this.userinfo_entry.APPROVER1 = this.tenant_user_details[0]["APPROVER1"];
            this.userinfo_entry.APPROVER2 = this.tenant_user_details[0]["APPROVER2"];
            this.userinfo_entry.EMPLOYEE_STATUS = this.tenant_user_details[0]["EMPLOYEE_STATUS"];
            this.userinfo_entry.DEPT_GUID = this.tenant_user_details[0]["DEPT_GUID"];
            this.userinfo_entry.DESIGNATION_GUID = this.tenant_user_details[0]["DESIGNATION_GUID"];
            this.userinfo_entry.RESIGNATION_DATE = this.tenant_user_details[0]["RESIGNATION_DATE"];
            this.userinfo_entry.CONFIRMATION_DATE = this.tenant_user_details[0]["CONFIRMATION_DATE"];
            this.userinfo_entry.EMG_CONTACT_NAME_1 = this.tenant_user_details[0]["EMG_CONTACT_NAME_1"];
            this.userinfo_entry.EMG_RELATIONSHIP_1 = this.tenant_user_details[0]["EMG_RELATIONSHIP_1"];
            this.userinfo_entry.EMG_CONTACT_NUMBER_1 = this.tenant_user_details[0]["EMG_CONTACT_NUMBER_1"];
            this.userinfo_entry.EMG_CONTACT_NAME_2 = this.tenant_user_details[0]["EMG_CONTACT_NAME_2"];
            this.userinfo_entry.EMG_RELATIONSHIP_2 = this.tenant_user_details[0]["EMG_RELATIONSHIP_2"];
            this.userinfo_entry.EMG_CONTACT_NUMBER_2 = this.tenant_user_details[0]["EMG_CONTACT_NUMBER_2"];
            this.userinfo_entry.PR_EPF_NUMBER = this.tenant_user_details[0]["PR_EPF_NUMBER"];
            this.userinfo_entry.PR_INCOMETAX_NUMBER = this.tenant_user_details[0]["PR_INCOMETAX_NUMBER"];
            this.userinfo_entry.BANK_GUID = this.tenant_user_details[0]["BANK_GUID"];
            this.userinfo_entry.PR_ACCOUNT_NUMBER = this.tenant_user_details[0]["PR_ACCOUNT_NUMBER"];
            this.userinfo_entry.ATTACHMENT_ID = this.tenant_user_details[0]["ATTACHMENT_ID"];
            this.userinfo_entry.TENANT_COMPANY_GUID = localStorage.getItem('PREV_TENANT_COMPANY_GUID');
            this.userinfo_entry.TENANT_COMPANY_SITE_GUID = localStorage.getItem('PREV_TENANT_COMPANY_SITE_GUID');
            this.userinfo_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.userinfo_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
            this.userinfo_entry.UPDATE_TS = this.usermain_entry.UPDATE_TS;
            this.userinfo_entry.UPDATE_USER_GUID = this.usermain_entry.UPDATE_USER_GUID;
            this.userservice.update_user_info(this.userinfo_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Address();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User_Address = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.useraddress_entry.USER_ADDRESS1 = this.tenantuserdetails[0]["ADDRESS"];
            this.useraddress_entry.USER_ADDRESS2 = this.tenantuserdetails[0]["ADDRESS"];
            this.useraddress_entry.USER_ADDRESS3 = this.tenantuserdetails[0]["ADDRESS"];
            this.useraddress_entry.USER_ADDRESS_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.useraddress_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.useraddress_entry.CREATION_TS = new Date().toISOString();
            this.useraddress_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.useraddress_entry.UPDATE_TS = new Date().toISOString();
            this.useraddress_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_address(this.useraddress_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Contact();
                }
            });
        }
        else {
            this.useraddress_entry.USER_ADDRESS_GUID = this.tenant_user_details[0]["USER_ADDRESS_GUID"];
            this.useraddress_entry.ADDRESS_TYPE = this.tenant_user_details[0]["ADDRESS_TYPE"];
            this.useraddress_entry.USER_ADDRESS1 = this.tenant_user_details[0]["ADDRESS1"];
            this.useraddress_entry.USER_ADDRESS2 = this.tenant_user_details[0]["ADDRESS2"];
            this.useraddress_entry.USER_ADDRESS3 = this.tenant_user_details[0]["ADDRESS3"];
            this.useraddress_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.useraddress_entry.POST_CODE = this.tenant_user_details[0]["POST_CODE"];
            this.useraddress_entry.COUNTRY_GUID = this.tenant_user_details[0]["COUNTRY_GUID"];
            this.useraddress_entry.STATE_GUID = this.tenant_user_details[0]["STATE_GUID"];
            this.useraddress_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.useraddress_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
            this.useraddress_entry.UPDATE_TS = this.usermain_entry.UPDATE_TS;
            this.useraddress_entry.UPDATE_USER_GUID = this.usermain_entry.UPDATE_USER_GUID;
            this.userservice.update_user_address(this.useraddress_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Contact();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User_Contact = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.usercontact_entry.CONTACT_NO = this.tenantuserdetails[0]["CONTACT_NO"];
            this.usercontact_entry.CONTACT_INFO_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.usercontact_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.usercontact_entry.CREATION_TS = new Date().toISOString();
            this.usercontact_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usercontact_entry.UPDATE_TS = new Date().toISOString();
            this.usercontact_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_contact(this.usercontact_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Company();
                }
            });
        }
        else {
            this.usercontact_entry.TYPE = this.tenant_user_details[0]["TYPE"];
            this.usercontact_entry.DESCRIPTION = this.tenant_user_details[0]["DESCRIPTION"];
            this.usercontact_entry.REMARKS = this.tenant_user_details[0]["REMARKS"];
            this.usercontact_entry.CONTACT_NO = this.tenant_user_details[0]["CONTACT_NO"];
            this.usercontact_entry.CONTACT_INFO_GUID = this.tenant_user_details[0]["CONTACT_INFO_GUID"];
            this.usercontact_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.usercontact_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.usercontact_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
            this.usercontact_entry.UPDATE_TS = this.usermain_entry.UPDATE_TS;
            this.usercontact_entry.UPDATE_USER_GUID = this.usermain_entry.UPDATE_USER_GUID;
            this.userservice.update_user_contact(this.usercontact_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    _this.Save_Tenant_User_Company();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User_Company = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.usercompany_entry.COMPANY_CONTACT_NO = this.tenantuserdetails[0]["CONTACT_PERSON_CONTACT_NO"];
            this.usercompany_entry.USER_COMPANY_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.usercompany_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.usercompany_entry.CREATION_TS = new Date().toISOString();
            this.usercompany_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.usercompany_entry.UPDATE_TS = new Date().toISOString();
            this.usercompany_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_company(this.usercompany_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('Tenant User Registered successfully');
                    // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    _this.Save_Tenant_User_Role();
                }
            });
        }
        else {
            this.usercompany_entry.COMPANY_CONTACT_NO = this.tenant_user_details[0]["COMPANY_CONTACT_NO"];
            this.usercompany_entry.USER_COMPANY_GUID = this.tenant_user_details[0]["USER_COMPANY_GUID"];
            this.usercompany_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.usercompany_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.usercompany_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
            this.usercompany_entry.UPDATE_TS = this.usermain_entry.UPDATE_TS;
            this.usercompany_entry.UPDATE_USER_GUID = this.usermain_entry.UPDATE_USER_GUID;
            this.userservice.update_user_company(this.usercompany_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    // alert('Tenant User Registered successfully');
                    // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    _this.Save_Tenant_User_Role();
                }
            });
        }
    };
    TenantsetupPage.prototype.Save_Tenant_User_Role = function () {
        var _this = this;
        if (this.Add_User_Form == true) {
            this.userrole_entry.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_22_angular2_uuid__["UUID"].UUID();
            this.userrole_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userrole_entry.ROLE_GUID = this.User_Role_ngModel_Add.trim();
            this.userrole_entry.ACTIVATION_FLAG = "1";
            this.userrole_entry.CREATION_TS = new Date().toISOString();
            this.userrole_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.userrole_entry.UPDATE_TS = new Date().toISOString();
            this.userrole_entry.UPDATE_USER_GUID = "";
            this.userservice.save_user_role(this.userrole_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    alert('Tenant User Registered successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            });
        }
        else {
            this.userrole_entry.USER_ROLE_GUID = this.tenant_user_details[0]["USER_ROLE_GUID"];
            this.userrole_entry.USER_GUID = this.usermain_entry.USER_GUID;
            this.userrole_entry.ROLE_GUID = this.User_Role_ngModel_Add.trim();
            this.userrole_entry.ACTIVATION_FLAG = "1";
            this.userrole_entry.ROLE_FLAG = "MAIN";
            this.userrole_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
            this.userrole_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
            this.userrole_entry.UPDATE_TS = this.usermain_entry.UPDATE_TS;
            this.userrole_entry.UPDATE_USER_GUID = this.usermain_entry.UPDATE_USER_GUID;
            this.userservice.update_user_role(this.userrole_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    alert('Tenant User updated successfully');
                    _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                }
            });
        }
    };
    TenantsetupPage.prototype.Save = function () {
        if (this.Tenantform.valid) {
            //Validate existing tenant_name and tenant_company_name and tenant_compay_site_name
            //Insert Record for tenant_main------------------------------------------
            this.Save_Tenant_Main();
            //Insert Record for tenant company---------------------------------------
            //this.Save_Tenant_Company();
            //Insert Record for tenant company site----------------------------------
            //this.Save_Tenant_Company_Site();
            // let headers = new Headers();
            // headers.append('Content-Type', 'application/json');
            // let options = new RequestOptions({ headers: headers });
            // let url: string;
            // url = this.baseResource_Url + "tenant_company_site?filter=(SITE_NAME=" + this.tenant_company_site_entry.SITE_NAME + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
            // this.http.get(url, options)
            //   .map(res => res.json())
            //   .subscribe(
            //   data => {
            //     let res = data["resource"];
            //     if (res.length == 0) {
            //       console.log("No records Found");
            //       if (this.Exist_Record == false) {
            //         this.tenant_company_site_entry.SITE_NAME = this.COMPANY_SITE_NAME_ngModel_Add.trim();
            //         this.tenant_company_site_entry.REGISTRATION_NUM = this.REGISTRATION_NUM_ngModel_Add.trim();
            //         this.tenant_company_site_entry.ADDRESS = this.ADDRESS_ngModel_Add.trim();
            //         this.tenant_company_site_entry.EMAIL = this.EMAIL_ngModel_Add.trim();
            //         this.tenant_company_site_entry.CONTACT_NO = this.CONTACT_NO_ngModel_Add.trim();
            //         this.tenant_company_site_entry.WEBSITE = this.WEBSITE_ngModel_Add.trim();
            //         this.tenant_company_site_entry.CONTACT_PERSON = this.CONTACT_PERSON_ngModel_Add.trim();
            //         this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = this.CONTACT_PERSON_CONTACT_NO_ngModel_Add.trim();
            //         this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = this.CONTACT_PERSON_EMAIL_ngModel_Add.trim();
            //         this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = UUID.UUID();
            //         this.tenant_company_site_entry.TENANT_COMPANY_GUID = "298204b8-8c85-11e7-91cd-00155de7e742";
            //         this.tenant_company_site_entry.CREATION_TS = new Date().toISOString();
            //         this.tenant_company_site_entry.CREATION_USER_GUID = "1";
            //         this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
            //         this.tenant_company_site_entry.UPDATE_USER_GUID = "";
            //         this.tenantcompanysitesetupservice.save(this.tenant_company_site_entry)
            //           .subscribe((response) => {
            //             if (response.status == 200) {
            //               alert('Tenant Registered successfully');                    
            //               this.navCtrl.setRoot(this.navCtrl.getActive().component);
            //             }
            //           })
            //       }
            //     }
            //     else {
            //       console.log("Records Found");
            //       alert("The Tenant is already Exist.")
            //     }
            //   },
            //   err => {
            //     this.Exist_Record = false;
            //     console.log("ERROR!: ", err);
            //   });
        }
    };
    TenantsetupPage.prototype.getBankList = function () {
        var self = this;
        var params = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["f" /* URLSearchParams */]();
        self.tenantcompanysitesetupservice.get_tenant(params)
            .subscribe(function (tenants) {
            self.tenants = tenants;
        });
    };
    TenantsetupPage.prototype.Update = function (TENANT_COMPANY_SITE_GUID) {
        var _this = this;
        if (this.Tenantform.valid) {
            if (this.tenant_company_site_entry.SITE_NAME == null) {
                this.tenant_company_site_entry.SITE_NAME = this.SITE_NAME_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.REGISTRATION_NUM == null) {
                this.tenant_company_site_entry.REGISTRATION_NUM = this.REGISTRATION_NUM_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.ADDRESS == null) {
                this.tenant_company_site_entry.ADDRESS = this.ADDRESS_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.EMAIL == null) {
                this.tenant_company_site_entry.EMAIL = this.EMAIL_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.CONTACT_NO == null) {
                this.tenant_company_site_entry.CONTACT_NO = this.CONTACT_NO_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.WEBSITE == null) {
                this.tenant_company_site_entry.WEBSITE = this.WEBSITE_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.CONTACT_PERSON == null) {
                this.tenant_company_site_entry.CONTACT_PERSON = this.CONTACT_PERSON_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO == null) {
                this.tenant_company_site_entry.CONTACT_PERSON_CONTACT_NO = this.CONTACT_PERSON_CONTACT_NO_ngModel_Edit.trim();
            }
            if (this.tenant_company_site_entry.CONTACT_PERSON_EMAIL == null) {
                this.tenant_company_site_entry.CONTACT_PERSON_EMAIL = this.CONTACT_PERSON_EMAIL_ngModel_Edit.trim();
            }
            this.tenant_company_site_entry.CREATION_TS = this.tenant_details.CREATION_TS;
            this.tenant_company_site_entry.CREATION_USER_GUID = this.tenant_details.CREATION_USER_GUID;
            this.tenant_company_site_entry.UPDATE_TS = this.tenant_details.UPDATE_TS;
            this.tenant_company_site_entry.TENANT_COMPANY_GUID = this.tenant_details.TENANT_COMPANY_GUID;
            this.tenant_company_site_entry.TENANT_COMPANY_SITE_GUID = TENANT_COMPANY_SITE_GUID;
            this.tenant_company_site_entry.UPDATE_TS = new Date().toISOString();
            this.tenant_company_site_entry.UPDATE_USER_GUID = "";
            if (this.SITE_NAME_ngModel_Edit.trim() != localStorage.getItem('Prev_ten_Category')) {
                var url = void 0;
                url = this.baseResource_Url + "tenant_company_site?filter=(SITE_NAME=" + this.SITE_NAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    console.log('Current Name : ' + _this.SITE_NAME_ngModel_Edit.trim() + ', Previous Name : ' + localStorage.getItem('Prev_ten_Category'));
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.tenant_company_site_entry.SITE_NAME = _this.SITE_NAME_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.tenantcompanysitesetupservice.update(_this.tenant_company_site_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Tenant updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The Tenant is already Exist. ");
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.tenant_company_site_entry.SITE_NAME == null) {
                    this.tenant_company_site_entry.SITE_NAME = localStorage.getItem('Prev_ten_Category');
                }
                this.tenant_company_site_entry.SITE_NAME = this.SITE_NAME_ngModel_Edit.trim();
                //**************Update service if it is old details*************************
                this.tenantcompanysitesetupservice.update(this.tenant_company_site_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Tenant Type updated successfully');
                        //location.reload();
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    TenantsetupPage.prototype.ClearControls = function () {
        this.COMPANY_SITE_NAME_ngModel_Add = "";
        this.REGISTRATION_NUM_ngModel_Add = "";
        this.EMAIL_ngModel_Add = "";
        this.ADDRESS_ngModel_Add = "";
        this.EMAIL_ngModel_Add = "";
        this.CONTACT_NO_ngModel_Add = "";
        this.WEBSITE_ngModel_Add = "";
        this.CONTACT_PERSON_ngModel_Add = "";
        this.CONTACT_PERSON_CONTACT_NO_ngModel_Add = "";
        this.CONTACT_PERSON_EMAIL_ngModel_Add = "";
        this.SITE_NAME_ngModel_Edit = "";
        this.REGISTRATION_NUM_ngModel_Edit = "";
        this.EMAIL_ngModel_Edit = "";
        this.ADDRESS_ngModel_Edit = "";
        this.EMAIL_ngModel_Edit = "";
        this.CONTACT_NO_ngModel_Edit = "";
        this.WEBSITE_ngModel_Edit = "";
        this.CONTACT_PERSON_ngModel_Edit = "";
        this.CONTACT_PERSON_CONTACT_NO_ngModel_Edit = "";
        this.CONTACT_PERSON_EMAIL_ngModel_Edit = "";
        // this.ISHQ_FLAG_ngModel_Add = false;
        // this.ACTIVE_FLAG_ngModel_Add = false;
    };
    TenantsetupPage.prototype.ClearUserControls = function () {
        this.User_Loginid_ngModel_Add = "";
        this.User_Password_ngModel_Add = "";
        this.User_Email_ngModel_Add = "";
        this.User_Role_ngModel_Add = "";
    };
    TenantsetupPage.prototype.searchUser = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.tenantusers = this.storeUsers;
            return;
        }
        this.tenantusers = this.filterUser({
            LOGIN_ID: val,
            ROLENAME: val
        });
    };
    TenantsetupPage.prototype.filterUser = function (params) {
        if (!params) {
            return this.storeUsers;
        }
        return this.storeUsers.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    TenantsetupPage.prototype.AdminActivation = function (USER_GUID, Activation_Flag) {
        var _this = this;
        //Here get all the user details and update------------------------
        this.GetUserMain(USER_GUID);
        var strTitle;
        if (Activation_Flag == true) {
            strTitle = "Do you want to deactivate ?";
        }
        else {
            strTitle = "Do you want to activate ?";
        }
        var alert = this.alertCtrl.create({
            title: 'Activation Confirmation',
            message: strTitle,
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        if (Activation_Flag == true) {
                            _this.usermain_entry.IS_TENANT_ADMIN = "0";
                        }
                        else {
                            _this.usermain_entry.IS_TENANT_ADMIN = "1";
                        }
                        _this.userservice.update_user_main(_this.usermain_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    TenantsetupPage.prototype.GetUserMain = function (USER_GUID) {
        var _this = this;
        var UserActivationUrl = this.baseResourceUrl2_URL + "user_main?filter=(USER_GUID=" + USER_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http.get(UserActivationUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.view_user_details = data["resource"];
            _this.usermain_entry.USER_GUID = USER_GUID;
            _this.usermain_entry.TENANT_GUID = _this.view_user_details[0]["TENANT_GUID"];
            _this.usermain_entry.STAFF_ID = _this.view_user_details[0]["STAFF_ID"];
            _this.usermain_entry.LOGIN_ID = _this.view_user_details[0]["LOGIN_ID"];
            _this.usermain_entry.PASSWORD = _this.view_user_details[0]["PASSWORD"];
            _this.usermain_entry.EMAIL = _this.view_user_details[0]["EMAIL"];
            // this.usermain_entry.ACTIVATION_FLAG = 1;
            _this.usermain_entry.CREATION_TS = _this.view_user_details[0]["CREATION_TS"];
            _this.usermain_entry.CREATION_USER_GUID = _this.view_user_details[0]["CREATION_USER_GUID"];
            _this.usermain_entry.UPDATE_TS = new Date().toISOString();
            _this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.usermain_entry.IS_TENANT_ADMIN = _this.view_user_details[0]["IS_TENANT_ADMIN"];
        });
    };
    TenantsetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-tenantsetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/tenantsetup/tenantsetup.html"*/'<!--\n  Generated template for the TenantsetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar color="primary200">\n        <ion-title>{{ "TENANT_SETUP" | translate }}</ion-title>\n    </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-fab top right edge>\n        <button ion-fab mini (click)="AddTenantClick()">\n            <ion-icon name="add"></ion-icon>\n        </button>\n    </ion-fab>\n\n\n    <!-- \n    <div class="eClaimSubTitle">\n        <b>ACCOUNT DETAILS</b>\n    </div> -->\n    <ion-list>\n        <ion-item>\n            <table class="Tabler">\n                <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n                    <th class="lgl1">Tenant Account Name</th>\n                    <th class="lgl1">Tenant Company Name</th>\n                    <!-- <th class="lgl1">Effective Date</th> -->\n                    <th class="lgl1" style="width:95px">Active Flag</th>\n                    <th class="lgl1 tblBrRight" style="width:155px">Action</th>\n                </tr>\n\n                <tr class="col7" *ngFor="let tenant of tenants | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                    <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n                    <td class="lgl1">{{tenant.TENANT_ACCOUNT_NAME}}</td>\n                    <td class="lgl1">{{tenant.NAME}}</td>\n                    <!-- <td class="lgl1">23 - 4- 2222</td> -->\n\n                    <td class="lgl1">\n                        <ion-item>\n                            <ion-toggle *ngIf="tenant.ACTIVATION_FLAG==1" checked=true></ion-toggle>\n                            <ion-toggle *ngIf="tenant.ACTIVATION_FLAG==0" checked=false></ion-toggle>\n                        </ion-item>\n                    </td>\n\n                    <td class="lgl1 fColor">\n                        <button ion-button item-end (click)="EditClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-create"></ion-icon>\n                        </button>\n                        <button ion-button item-end (click)="DeleteClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                        <button ion-button item-end (click)="AddTUserClick(tenant.TENANT_GUID, tenant.TENANT_COMPANY_GUID, tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-person-add"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n            </table>\n            <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10"\n                directionLinks="true" autoHide="true">\n            </pagination-controls>\n        </ion-item>\n    </ion-list>\n    <!-- \n    <div class="eClaimSubTitle">\n        <b>HQ DETAILS</b>\n    </div>\n    <ion-list>\n        <ion-item>\n            <table class="Tabler">\n                <tr class="linedsg TColor">\n\n                    <th class="lgl1 tblBrLeft">ADDRESS</th>\n                    <th class="lgl1">EMAIL</th>\n                    <th class="lgl1">CONTACT NUMBER</th>\n                    <th class="lgl1">WEBSITE</th>\n\n                    <th class="lgl1 tblBrRight" style="width:90px">ACTION</th>\n\n                </tr>\n\n                <tr class="col7" *ngFor="let tenant of tenants; let i=index">\n\n                    <td class="lgl1">{{tenant.ADDRESS}}</td>\n                    <td class="lgl1">{{tenant.EMAIL}}</td>\n                    <td class="lgl1">{{tenant.CONTACT_NO}}</td>\n                    <td class="lgl1">{{tenant.WEBSITE}}</td>\n\n                    <td class="lgl1 fColor">\n                        <button ion-button item-end (click)="EditClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-create"></ion-icon>\n                        </button>\n                        <button ion-button item-end (click)="DeleteClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n\n\n            </table>\n        </ion-item>\n    </ion-list>\n\n\n    <div class="eClaimSubTitle">\n        <b>CONTACT DETAILS</b>\n    </div>\n    <ion-list>\n        <ion-item>\n            <table class="Tabler">\n                <tr class="linedsg TColor">\n\n                    <th class="lgl1 tblBrLeft">NAME</th>\n                    <th class="lgl1">CONTACT NUMBER</th>\n                    <th class="lgl1">EMAIL</th>\n                    <th class="lgl1 tblBrRight" style="width:90px">ACTION</th>\n\n                </tr>\n\n                <tr class="col7" *ngFor="let tenant of tenants; let i=index">\n\n                    <td class="lgl1">{{tenant.CONTACT_PERSON}}</td>\n                    <td class="lgl1">{{tenant.CONTACT_PERSON_CONTACT_NO}}</td>\n                    <td class="lgl1">{{tenant.CONTACT_PERSON_EMAIL}}</td>\n\n\n                    <td class="lgl1 fColor">\n                        <button ion-button item-end (click)="EditClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-create"></ion-icon>\n                        </button>\n                        <button ion-button item-end (click)="DeleteClick(tenant.TENANT_COMPANY_SITE_GUID)">\n                            <ion-icon name="md-close"></ion-icon>\n                        </button>\n                    </td>\n                </tr>\n\n\n            </table>\n        </ion-item>\n    </ion-list> -->\n\n\n\n    <!-- add Tenant form start-->\n    <div class="blackcontainer" *ngIf="AddTenantClicked"></div>\n    <div class="popup" padding *ngIf="AddTenantClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText" *ngIf="Add_Form">{{ "REGISTER_NEW_TENANT" | translate }}</div>\n                <div class="icHeaderText" *ngIf="Edit_Form">{{ "UPDATE_TENANT" | translate }}</div>\n\n                <button class="btnR" (click)="CloseTenantClick()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list class="scroll">\n                <form [formGroup]="Tenantform">\n\n                    <div class="eClaimSubTitle1">\n                        <b>{{ "ACCOUNT_DETAILS" | translate }}</b>\n                    </div>\n                    <ion-item>\n\n                        <ion-label stacked>{{ "NAME" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="TENANT_NAME" [(ngModel)]="TENANT_NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the tenant\'}}"></ion-input>\n\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "EFFECTIVE_DATE" | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item>\n\n                        <ion-label stacked>{{ "COMPANY_NAME" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="TENANT_COMPANY_NAME" [(ngModel)]="TENANT_COMPANY_NAME_ngModel_Add" placeholder="{{\'Please fill in the company name of the tenant\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "SITE_NAME" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="COMPANY_SITE_NAME" [(ngModel)]="COMPANY_SITE_NAME_ngModel_Add" placeholder="{{\'Please fill in the site name of the company\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "REGISTRATION_NO" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="REGISTRATION_NUM" [(ngModel)]="REGISTRATION_NUM_ngModel_Add" placeholder="{{\'Please fill registration no\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "ADDRESS_1" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="ADDRESS1" [(ngModel)]="ADDRESS1_ngModel_Add" placeholder="{{\'Please fill in the Address 1\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "ADDRESS_2" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="ADDRESS2" [(ngModel)]="ADDRESS2_ngModel_Add" placeholder="{{\'Please fill in the Address 2\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "ADDRESS_3" | translate }}{{"Address 3"}}</ion-label>\n                        <ion-input type="text" formControlName="ADDRESS3" [(ngModel)]="ADDRESS3_ngModel_Add" placeholder="{{\'Please fill in the Address 3\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "CONTACT_NO" | translate }}</ion-label>\n                        <ion-input type="number" formControlName="CONTACT_NO" type="number" [(ngModel)]="CONTACTNO_ngModel_Add" placeholder="{{\'Please fill contact No\'}}"></ion-input>\n\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "EMAIL_ADDRESS" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="EMAIL" [(ngModel)]="EMAIL_ngModel_Add" placeholder="{{\'Please fill E-Mail\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n\n                        <ion-label stacked>{{ "CONTACT_PERSON" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="CONTACT_PERSON" [(ngModel)]="CONTACT_PERSON_ngModel_Add" placeholder="{{\'Please fill contact person\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "CUSTOMER_MOBILE_NO" | translate }}</ion-label>\n                        <ion-input type="number" formControlName="CONTACT_PERSON_NO" [(ngModel)]="CONTACT_PERSON_NO_ngModel_Add" placeholder="{{\'Please fill contact person No\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "CONTACT_PERSON_EMAIL" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="CONTACT_PERSON_EMAIL" [(ngModel)]="CONTACT_PERSON_EMAIL_ngModel_Add" placeholder="{{\'Please fill contact person email\'}}"></ion-input>\n\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "WEBSITE" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="WEBSITE" [(ngModel)]="WEBSITE_ngModel_Add" placeholder="{{\'Please fill website\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "IS_IT_HQ" | translate }}</ion-label>\n                        <ion-toggle formControlName="ISHQ_FLAG" [(ngModel)]="ISHQ_FLAG_ngModel_Add"></ion-toggle>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "ACTIVE_FLAG" | translate }}</ion-label>\n                        <ion-toggle formControlName="ACTIVE_FLAG" [(ngModel)]="ACTIVE_FLAG_ngModel_Add"></ion-toggle>\n                    </ion-item>\n\n                    <div class="btn">\n                        <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Tenantform.valid"\n                            (click)="Save()">{{"SUBMIT" | translate}}</button>\n                    </div>\n\n                </form>\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- add Tenant form end-->\n\n\n    <!-- edit Tenant form start-->\n    <div class="blackcontainer" *ngIf="EditTenantClicked">\n    </div>\n    <div class="popup" padding *ngIf="EditTenantClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n\n                <div class="icHeaderText">{{ "UPDATE_TENANT" | translate }}T</div>\n                <button class="btnR" (click)="CloseTenantClick()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list class="scroll">\n                <form [formGroup]="Tenantform">\n\n\n                    <ion-item>\n\n                        <ion-label stacked>{{ "NAME" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="COMPANY_SITE_NAME" [(ngModel)]="SITE_NAME_ngModel_Edit" placeholder="{{\'Please fill in the company name of the tenant\'}}"></ion-input>\n\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "EFFECTIVE_DATE" | translate }}</ion-label>\n                        <ion-datetime displayFormat="DD/MM/YYYY" placeholder="{{\'Please choose your effective date\'}}"></ion-datetime>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "ACTIVE_FLAG" | translate }}</ion-label>\n                        <ion-toggle></ion-toggle>\n\n                    </ion-item>\n\n                    <div class="btn">\n                        <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="!Update(tenant_details.TENANT_COMPANY_SITE_GUID)">{{"SUBMIT"\n                            | translate}}</button>\n                    </div>\n\n                </form>\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- edit Tenant form end-->\n\n\n    <!-- add TUser start-->\n    <div class="blackcontainer" *ngIf="AddTUserClicked">\n    </div>\n    <div class="popup1" padding *ngIf="AddTUserClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n                <div class="icHeaderText">{{ "ADD_USER" | translate }}</div>\n\n                <button class="btnR" (click)="CloseTUserClick()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n\n            </ion-card-header>\n            <ion-list class="scroll">\n                <ion-item>\n                    <button ion-button item-end>\n                        <ion-icon name="md-person-add" (click)="AddTTUserClick()"></ion-icon>\n                    </button>\n                </ion-item>\n                <ion-item>\n                    <ion-toolbar no-border-top color="primary200">\n                        <ion-searchbar [(ngModel)]="user_search_ngModel" (ionInput)="searchUser($event)" placeholder=\'Search\'></ion-searchbar>\n                    </ion-toolbar>\n                    <table class="Tabler">\n                        <tr class="linedsg TColor">\n                            <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n                            <!-- <th class="lgl1">Tenant GUID</th> -->\n                            <th class="lgl1">User Login ID</th>\n                            <!-- <th class="lgl1">Password</th> -->\n                            <!-- <th class="lgl1">Email</th> -->\n                            <th class="lgl1">User Role</th>\n                            <th class="lgl1">IsAdmin</th>\n                            <th class="lgl1 tblBrRight" style="width:90px">Action</th>\n\n                        </tr>\n\n                        <tr class="col7" *ngFor="let tenantuser of tenantusers; let i=index">\n                            <td class="lgl1">{{i+1}}</td>\n                            <!-- <td class="lgl1">{{tenantuser.TENANT_GUID}}</td> -->\n                            <td class="lgl1">{{tenantuser.LOGIN_ID}}</td>\n                            <!-- <td class="lgl1">{{tenantuser.PASSWORD}}</td> -->\n                            <!-- <td class="lgl1">{{tenantuser.EMAIL}}</td> -->\n                            <td class="lgl1">{{tenantuser.ROLENAME}}</td>\n                            <td class="lgl1">\n                                <ion-item>\n                                    <ion-toggle *ngIf="tenantuser.IS_TENANT_ADMIN==\'1\'" checked=true (ionChange)="AdminActivation(tenantuser.USER_GUID, true)"></ion-toggle>\n                                    <ion-toggle *ngIf="tenantuser.IS_TENANT_ADMIN==\'0\'" checked=false (ionChange)="AdminActivation(tenantuser.USER_GUID, false)"></ion-toggle>\n                                </ion-item>\n                            </td>\n                            <td class="lgl1 fColor">\n                                <button ion-button item-end (click)="EditUserClick(tenantuser.USER_GUID)">\n                                    <ion-icon name="md-create"></ion-icon>\n                                </button>\n                                <button ion-button item-end (click)="DeleteUserClick(tenantuser.USER_GUID)">\n                                    <ion-icon name="md-close"></ion-icon>\n                                </button>\n\n                            </td>\n                        </tr>\n\n\n                    </table>\n                </ion-item>\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- add TUser end-->\n\n\n    <!-- add tuser form start-->\n    <div class="blackcontainer" *ngIf="AddTTUserClicked">\n    </div>\n    <div class="popup" padding *ngIf="AddTTUserClicked">\n\n        <ion-card class="cm">\n            <ion-card-header class="icTitle headerColor-white ">\n\n                <div class="icHeaderText" *ngIf="Add_User_Form">{{ "ASSIGN_USER" | translate }}</div>\n                <div class="icHeaderText" *ngIf="Edit_User_Form">{{ "UPDATE_USER" | translate }}</div>\n\n                <button class="btnR" (click)="CloseTTUserClick()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n            </ion-card-header>\n            <ion-list class="scroll">\n                <form [formGroup]="TenantUSerform">\n                    <ion-item style="display: none">\n\n                        <ion-label stacked>{{ "USER_LOGIN" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="TULOGINID" [(ngModel)]="User_Loginid_ngModel_Add" placeholder="{{\'Please fill in the user login ID\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item style="display: none;">\n                        <ion-label stacked>{{ "PASSWORD_LABEL" | translate }}</ion-label>\n                        <ion-input type="password" formControlName="TUPASSWORD" [(ngModel)]="User_Password_ngModel_Add" placeholder="{{\'Please fill in the login password\'}}"></ion-input>\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label stacked>{{ "EMAIL" | translate }}</ion-label>\n                        <ion-input type="text" formControlName="TUEMAIL" [(ngModel)]="User_Email_ngModel_Add" placeholder="{{\'Please fill in the email of the user\'}}"\n                            (change)=\'onChange($event)\'></ion-input>\n\n\n                    </ion-item>\n\n                    <!-- <ion-item>\n                        <ion-label stacked>User Role</ion-label>\n                        <ion-input type="text" formControlName="TUSERROLE" [(ngModel)]="User_Role_ngModel_Add" placeholder="{{\'Please fill in the role of the user\'}}"></ion-input>\n                    </ion-item> -->\n\n                    <ion-item>\n                        <ion-label stacked>{{ "USER_ROLE" | translate }}</ion-label>\n                        <ion-select formControlName="TUSERROLE" [(ngModel)]="User_Role_ngModel_Add" placeholder="{{\'Please fill the Role\'}}">\n                            <ion-option *ngFor="let role of roles" value="{{role.ROLE_GUID}}">{{role.NAME}}</ion-option>\n                        </ion-select>\n                    </ion-item>\n\n\n                    <div class="btn">\n                        <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!TenantUSerform.valid"\n                            (click)="Save_Tenant_User()">{{"SUBMIT" | translate}}</button>\n                    </div>\n                </form>\n\n            </ion-list>\n        </ion-card>\n\n    </div>\n    <!-- add tuser form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/tenantsetup/tenantsetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_9__services_tenantmainsetup_service__["a" /* TenantMainSetup_Service */], __WEBPACK_IMPORTED_MODULE_11__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_13__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_20__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_21__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_tenantmainsetup_service__["a" /* TenantMainSetup_Service */], __WEBPACK_IMPORTED_MODULE_11__services_tenantcompanysetup_service__["a" /* TenantCompanySetup_Service */], __WEBPACK_IMPORTED_MODULE_13__services_tenantcompanysitesetup_service__["a" /* TenantCompanySiteSetup_Service */], __WEBPACK_IMPORTED_MODULE_20__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], TenantsetupPage);
    return TenantsetupPage;
}());

//# sourceMappingURL=tenantsetup.js.map

/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TranslatePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the TranslatePage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var TranslatePage = /** @class */ (function () {
    function TranslatePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    TranslatePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TranslatePage');
    };
    TranslatePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-translate',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/translate/translate.html"*/'<!--\n  Generated template for the TranslatePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary500">\n    <ion-title>{{ "LANGUAGE" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/translate/translate.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], TranslatePage);
    return TranslatePage;
}());

//# sourceMappingURL=translate.js.map

/***/ }),
/* 480 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PermissionPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_base_http__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { FormBuilder, FormGroup } from '@angular/forms';




// import { RoleSetup_Model } from '../../models/rolesetup_model';
// import { RoleSetup_Service } from '../../services/rolesetup_service';

/**
 * Generated class for the PermissionPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var PermissionPage = /** @class */ (function () {
    function PermissionPage(navCtrl, navParams, fb, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.AddPermissionClicked = false;
        this.EditPermissionClicked = false;
        this.page = 1;
        //Bind Tenant-------------------------------------
        this.BindTenant();
        //Bind Role----------------------------------------
        this.BindModule();
        this.Permissionform = fb.group({
            TENANTNAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            MODULES: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
        });
    }
    PermissionPage.prototype.AddPermissionClick = function () {
        this.AddPermissionClicked = true;
        //this.ClearControls();
    };
    PermissionPage.prototype.ClosePermissionClick = function () {
        if (this.AddPermissionClicked == true) {
            this.AddPermissionClicked = false;
        }
        if (this.EditPermissionClicked == true) {
            this.EditPermissionClicked = false;
        }
    };
    PermissionPage.prototype.BindModule = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_module' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.modules = data.resource;
        });
    };
    PermissionPage.prototype.BindTenant = function () {
        var _this = this;
        var url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/tenant_main' + '?order=TENANT_ACCOUNT_NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tenants = data.resource;
        });
    };
    PermissionPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PermissionPage');
    };
    PermissionPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-Permission',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/permission/permission.html"*/'<!--\n  Generated template for the PermissionPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "PERMISSION_SETTING" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddPermissionClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Tenant Name</th>\n          <th class="lgl1">Modules</th>\n          <th class="lgl1 tblBrRight" style="width:90px">Action</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let role of roles | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{role.NAME}}</td>\n          <td class="lgl1">{{role.MODULES}}</td>\n\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(role.ROLE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end (click)="DeleteClick(role.ROLE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n  <!-- add Roleform start-->\n  <div class="blackcontainer" *ngIf="AddPermissionClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddPermissionClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">REGISTER NEW PERMISSION</div>\n        <button class="btnR" (click)="ClosePermissionClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Permissionform">\n          <ion-item>\n            <ion-label stacked>{{ "PERMISSION_TENANT" | translate }}</ion-label>\n            <ion-select formControlName="TENANTNAME" [(ngModel)]="TENANTNAME_ngModel_Add" placeholder="{{\'Please select tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" [value]="tenant.TENANT_GUID">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MODULES" | translate }}</ion-label>\n            <ion-select formControlName="MODULES" [(ngModel)]="MODULES_ngModel_Add" placeholder="{{\'Please select module\'}}" multiple="true">\n              <ion-option *ngFor="let module of modules" [value]="module.MODULE_GUID">{{module.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Permissionform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Permission form end-->\n\n  <!-- edit Permission form start-->\n  <div class="blackcontainer" *ngIf="EditPermissionClicked">\n  </div>\n  <div class="popup" padding *ngIf="EditPermissionClicked">\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n        <div class="icHeaderText">UPDATE PERMISSION</div>\n        <button class="btnR" (click)="ClosePermissionClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n\n      <ion-list>\n        <form [formGroup]="Permissionform">\n          <ion-item>\n            <ion-label stacked>{{ "PERMISSION_TENANT" | translate }}</ion-label>\n            <ion-select formControlName="TENANTNAME" [(ngModel)]="TENANTNAME_ngModel_Edit" placeholder="{{\'Please select tenant\'}}">\n              <ion-option *ngFor="let tenant of tenants" [value]="tenant.TENANT_GUID">{{tenant.TENANT_ACCOUNT_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MODULES" | translate }}</ion-label>\n            <ion-select formControlName="MODULES" [(ngModel)]="MODULES_ngModel_Edit" placeholder="{{\'Please select module\'}}" multiple="true">\n              <ion-option *ngFor="let module of modules" [value]="module.MODULE_GUID">{{module.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="Update(role_details.ROLE_GUID)">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n  </div>\n  <!-- edit Permission form end-->\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/permission/permission.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_6__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */]])
    ], PermissionPage);
    return PermissionPage;
}());

//# sourceMappingURL=permission.js.map

/***/ }),
/* 481 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PagesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_pagesetup_model__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_pagesetup_service__ = __webpack_require__(677);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the PagesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var PagesetupPage = /** @class */ (function () {
    function PagesetupPage(navCtrl, navParams, fb, http, pagesetupservice, alertCtrl, loadingCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.pagesetupservice = pagesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.page_entry = new __WEBPACK_IMPORTED_MODULE_6__models_pagesetup_model__["a" /* PageSetup_Model */]();
        this.p = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_rolepage' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.pages = [];
        this.AddPageClicked = false;
        this.EditPageClicked = false;
        this.Exist_Record = false;
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__login_login__["a" /* LoginPage */]);
        }
        else {
            this.loading = this.loadingCtrl.create({
                content: 'Loading...',
            });
            this.loading.present();
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.pages = _this.stores = data.resource;
                _this.loading.dismissAll();
            });
            this.Pageform = fb.group({
                NAME: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                DESCRIPTION: [null],
                //URL: [null, Validators.compose([Validators.pattern('^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}$'), Validators.required])],          
                URL: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^(..\\/){0,1}[a-zA-Z0-9\\/\\-]+\\/[a-zA-Z]{2,50}[\\/]{0,1}$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                APPLICATION_PAGE: ["", __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
            });
        }
    }
    //---------------------------------------------------------------------
    PagesetupPage.prototype.AddPageClick = function () {
        this.ClearControls();
        this.AddPageClicked = true;
    };
    PagesetupPage.prototype.ClosePageClick = function () {
        if (this.AddPageClicked == true) {
            this.AddPageClicked = false;
        }
        if (this.EditPageClicked == true) {
            this.EditPageClicked = false;
        }
    };
    PagesetupPage.prototype.EditClick = function (PAGE_GUID) {
        var _this = this;
        //this.ClearControls();
        this.EditPageClicked = true;
        var self = this;
        this.pagesetupservice
            .get(PAGE_GUID)
            .subscribe(function (data) {
            self.page_details = data;
            _this.NAME_ngModel_Edit = self.page_details.NAME;
            localStorage.setItem('Prev_set_NAME', self.page_details.NAME);
            _this.DESCRIPTION_ngModel_Edit = self.page_details.DESCRIPTION;
            _this.URL_ngModel_Edit = self.page_details.URL;
            _this.APPLICATION_PAGE_ngModel_Edit = self.page_details.CODE_PAGE_NAME;
        });
    };
    PagesetupPage.prototype.DeleteClick = function (PAGE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.pagesetupservice.remove(PAGE_GUID)
                            .subscribe(function () {
                            self.pages = self.pages.filter(function (item) {
                                return item.PAGE_GUID != PAGE_GUID;
                            });
                        });
                        //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    PagesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PagesetupPage');
    };
    PagesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Pageform.valid) {
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_rolepage?filter=NAME=" + this.NAME_ngModel_Add.trim() + '&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.page_entry.NAME = _this.NAME_ngModel_Add.trim();
                        _this.page_entry.DESCRIPTION = _this.DESCRIPTION_ngModel_Add.trim();
                        _this.page_entry.URL = _this.URL_ngModel_Add.trim();
                        _this.page_entry.CODE_PAGE_NAME = _this.APPLICATION_PAGE_ngModel_Add.trim();
                        _this.page_entry.PAGE_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.page_entry.CREATION_TS = new Date().toISOString();
                        _this.page_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.page_entry.UPDATE_TS = new Date().toISOString();
                        _this.page_entry.UPDATE_USER_GUID = "";
                        _this.pagesetupservice.save(_this.page_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Pagesetup registered successfully.');
                                //location.reload();
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("The pagesetup is already exist.");
                    _this.loading.dismissAll();
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    PagesetupPage.prototype.Update = function (PAGE_GUID) {
        var _this = this;
        if (this.Pageform.valid) {
            if (this.page_entry.NAME == null) {
                this.page_entry.NAME = this.NAME_ngModel_Edit;
            }
            if (this.page_entry.DESCRIPTION == null) {
                this.page_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Edit;
            }
            if (this.page_entry.URL == null) {
                this.page_entry.URL = this.URL_ngModel_Edit;
            }
            if (this.page_entry.CODE_PAGE_NAME == null) {
                this.page_entry.CODE_PAGE_NAME = this.APPLICATION_PAGE_ngModel_Edit;
            }
            this.page_entry.CREATION_TS = this.page_details.CREATION_TS;
            this.page_entry.CREATION_USER_GUID = this.page_details.CREATION_USER_GUID;
            this.page_entry.PAGE_GUID = PAGE_GUID;
            this.page_entry.UPDATE_TS = new Date().toISOString();
            this.page_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            //Load the Controller--------------------------------
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            //--------------------------------------------------
            if (this.NAME_ngModel_Edit.trim().toUpperCase() != localStorage.getItem('Prev_set_NAME').toUpperCase()) {
                var url = void 0;
                url = this.baseResource_Url + "main_rolepage?filter=(NAME=" + this.NAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    // console.log('Current Name : ' + this.NAME_ngModel_Edit + ', Previous Name : ' + localStorage.getItem('Prev_set_NAME'));
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.page_entry.NAME = _this.NAME_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.pagesetupservice.update(_this.page_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Pagesetup updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The pagesetup is already Exist.");
                        _this.loading.dismissAll();
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.page_entry.NAME == null) {
                    this.page_entry.NAME = localStorage.getItem('Prev_set_NAME');
                }
                this.page_entry.NAME = this.NAME_ngModel_Edit.trim();
                //**************Update service if it is old details*************************
                this.pagesetupservice.update(this.page_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Page updated successfully');
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
                //  }
            }
        }
    };
    PagesetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.pages = this.stores;
            return;
        }
        this.pages = this.filter({
            NAME: val,
            DESCRIPTION: val,
            URL: val,
            CODE_PAGE_NAME: val
        });
    };
    PagesetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    PagesetupPage.prototype.ClearControls = function () {
        this.NAME_ngModel_Add = "";
        this.DESCRIPTION_ngModel_Add = "";
        this.URL_ngModel_Add = "";
    };
    PagesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-pagesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/pagesetup/pagesetup.html"*/'<!--\n  Generated template for the PagesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "PAGE_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddPageClick()"><ion-icon name="add"></ion-icon></button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Name</th>\n          <th class="lgl1">Description</th>\n          <th class="lgl1" >URL</th>\n          <th class="lgl1">Application Page Name</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let page of pages | paginate:{itemsPerPage: 10, currentPage:p, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (p - 1) + i+1 }}</td>\n          <td class="lgl1">{{page.NAME}}</td>\n          <td class="lgl1">{{page.DESCRIPTION}}</td>\n          <td class="lgl1" text-wrap>{{page.URL}}</td>\n          <td class="lgl1">{{page.CODE_PAGE_NAME}}</td>\n\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(page.PAGE_GUID)"><ion-icon name="md-create"></ion-icon></button>\n            <button ion-button item-end (click)="DeleteClick(page.PAGE_GUID)"><ion-icon name="md-close"></ion-icon></button>\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="p=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n  <!-- add Pageform start-->\n  <div class="blackcontainer" *ngIf="AddPageClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddPageClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_NEW_PAGE" | translate }}</div>\n        <button class="btnR" (click)="ClosePageClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list>\n\n          <form [formGroup]="Pageform">\n          <ion-item>\n            <ion-label stacked>{{ "NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the page\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "URL" | translate }}{{"URL"}}</ion-label>\n            <ion-input type="text" formControlName="URL" [(ngModel)]="URL_ngModel_Add" placeholder="{{\'Please fill in the URL of the page\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"Application Page"}}</ion-label>\n            <ion-input type="text" formControlName="APPLICATION_PAGE" [(ngModel)]="APPLICATION_PAGE_ngModel_Add" placeholder="{{\'Please fill in the application page\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Pageform.valid" (click)="Save()">{{"SUBMIT" | translate}}</button>\n          </div>\n          </form>\n\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Page form end-->\n\n\n   <!-- Edit page form start-->\n   <div class="blackcontainer" *ngIf="EditPageClicked">\n  </div>\n  <div class="popup4" padding *ngIf="EditPageClicked">\n\n      <ion-card>\n          <ion-card-header class="icTitle headerColor-white ">\n\n              <div class="icHeaderText">UPDATE PAGE</div>\n              <button class="btnR" (click)="ClosePageClick()">\n        <ion-icon name="md-close"></ion-icon> \n      </button>\n          </ion-card-header>\n          <ion-list>\n              <form [formGroup]="Pageform">\n                  <ion-item>\n                      <ion-label stacked>{{"Name"}}</ion-label>\n                      <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Edit" placeholder="{{\'Please fill in the name of the page\'}}"></ion-input>\n                  </ion-item>\n\n                  <ion-item>\n                      <ion-label stacked>{{"Description"}}</ion-label>\n                      <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Edit" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n                  </ion-item>\n\n                  <ion-item>\n                      <ion-label stacked>{{"URL"}}</ion-label>\n                      <ion-input type="text" formControlName="URL" [(ngModel)]="URL_ngModel_Edit" placeholder="{{\'Please fill in the URL of the page\'}}"></ion-input>\n                  </ion-item>\n\n                  <ion-item>\n                    <ion-label stacked>{{"Application Page"}}</ion-label>\n                    <ion-input type="text" formControlName="APPLICATION_PAGE" [(ngModel)]="APPLICATION_PAGE_ngModel_Edit" placeholder="{{\'Please fill in the application page\'}}"></ion-input>\n                  </ion-item>\n\n                  <div class="btn">\n                      <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Pageform.valid" (click)="!Update(page_details.PAGE_GUID)">{{"SUBMIT" | translate}}</button></div>\n              </form>\n          </ion-list>\n      </ion-card>\n\n  </div>\n  <!-- Edit page form end-->\n  \n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/pagesetup/pagesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_pagesetup_service__["a" /* PageSetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_pagesetup_service__["a" /* PageSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], PagesetupPage);
    return PagesetupPage;
}());

//# sourceMappingURL=pagesetup.js.map

/***/ }),
/* 482 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageSetup_Model; });
var PageSetup_Model = /** @class */ (function () {
    function PageSetup_Model(PAGE_GUID, NAME, DESCRIPTION, URL, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, CODE_PAGE_NAME) {
        if (PAGE_GUID === void 0) { PAGE_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (URL === void 0) { URL = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (CODE_PAGE_NAME === void 0) { CODE_PAGE_NAME = null; }
        this.PAGE_GUID = PAGE_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.URL = URL;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.CODE_PAGE_NAME = CODE_PAGE_NAME;
    }
    PageSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new PageSetup_Model(json.PAGE_GUID, json.NAME, json.DESCRIPTION, json.URL, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.CODE_PAGE_NAME);
    };
    PageSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            PAGE_GUID: this.PAGE_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            URL: this.URL,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            CODE_PAGE_NAME: this.CODE_PAGE_NAME
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return PageSetup_Model;
}());

//# sourceMappingURL=pagesetup_model.js.map

/***/ }),
/* 483 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModulesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_modulesetup_model__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_modulesetup_service__ = __webpack_require__(678);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_modulepagesetup_model__ = __webpack_require__(485);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_modulepagesetup_service__ = __webpack_require__(679);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the ModulesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var ModulesetupPage = /** @class */ (function () {
    function ModulesetupPage(navCtrl, navParams, fb, http, modulesetupservice, modulepagesetupservice, alertCtrl, loadingCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.modulesetupservice = modulesetupservice;
        this.modulepagesetupservice = modulepagesetupservice;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.module_entry = new __WEBPACK_IMPORTED_MODULE_6__models_modulesetup_model__["a" /* ModuleSetup_Model */]();
        this.modulepage_entry = new __WEBPACK_IMPORTED_MODULE_8__models_modulepagesetup_model__["a" /* ModulePageSetup_Model */]();
        this.bindModules = [];
        this.page = 1;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/main_module' + '?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_mainmodule' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_modulepage_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_mainmodulepage' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl_page = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_rolepage' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.PageUrl = "";
        this.modules = [];
        this.modulepages = [];
        this.AddModuleClicked = false;
        this.EditModuleClicked = false;
        this.Exist_Record = false;
        //---------------------------------------------------------------------
        this.Module_New = [];
        this.Module_Page_Multiple = [];
        this.strPage_Name = "";
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            this.loading = this.loadingCtrl.create({
                content: 'Loading...',
            });
            this.loading.present();
            //Bind Page Dropdownlist------------------
            this.GetPage();
            //Bind Front Grid-------------------------
            var Previous_MODULE_GUID;
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                for (var itemA in data.resource) {
                    if (Previous_MODULE_GUID != data.resource[itemA]["MODULE_GUID"]) {
                        var Main_Current_Module_Guid = data.resource[itemA]["MODULE_GUID"];
                        _this.strPage_Name = "";
                        for (var itemB in data.resource) {
                            var Child_Current_Module_Guid = data.resource[itemB]["MODULE_GUID"];
                            if (Main_Current_Module_Guid == Child_Current_Module_Guid) {
                                if (_this.strPage_Name != "" && _this.strPage_Name != undefined) {
                                    _this.strPage_Name = _this.strPage_Name + ', ' + data.resource[itemB]["PAGE_NAME"];
                                }
                                else {
                                    _this.strPage_Name = data.resource[itemB]["PAGE_NAME"];
                                }
                            }
                        }
                        _this.Module_New.push({ MODULE_GUID: data.resource[itemA]["MODULE_GUID"], MODULE_NAME: data.resource[itemA]["MOUDLE_NAME"], DESCRIPTION: data.resource[itemA]["DESCRIPTION"], PAGE_GUID: data.resource[itemA]["PAGE_GUID"], PAGE_NAME: _this.strPage_Name, MENU_HEADER: data.resource[itemA]["MENU_HEADER"], MENU_SL_NO: data.resource[itemA]["MENU_SL_NO"] });
                    }
                    Previous_MODULE_GUID = data.resource[itemA]["MODULE_GUID"];
                }
                _this.stores = _this.Module_New;
                _this.loading.dismissAll();
            });
            //----------------------------------------
            this.Moduleform = fb.group({
                //NAME: [null, Validators.required],
                NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
                DESCRIPTION: [null],
                PAGE: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                MENU_HEADER: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                MENU_ICON: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                MENU_SL_NO: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required]
            });
        }
        else {
            alert("Sorry. This is for only Super Admin.");
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__login_login__["a" /* LoginPage */]);
        }
    }
    ModulesetupPage.prototype.AddModuleClick = function () {
        this.AddModuleClicked = true;
    };
    ModulesetupPage.prototype.CloseModuleClick = function () {
        if (this.AddModuleClicked == true) {
            this.AddModuleClicked = false;
        }
        if (this.EditModuleClicked == true) {
            this.EditModuleClicked = false;
        }
    };
    ModulesetupPage.prototype.EditClick = function (MODULE_GUID) {
        var _this = this;
        //this.ClearControls();
        this.EditModuleClicked = true;
        var self = this;
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        //------------Bind Controls-------------------------------------- 
        this.modulesetupservice
            .get(MODULE_GUID)
            .subscribe(function (data) {
            self.module_details = data;
            _this.NAME_ngModel_Edit = self.module_details.NAME;
            localStorage.setItem('Prev_module_NAME', self.module_details.NAME);
            _this.DESCRIPTION_ngModel_Edit = self.module_details.DESCRIPTION;
            //this.PAGE_ngModel_Edit = self.module_details.PAGE_GUID; //console.log(self.module_details.PAGE_GUID);
            _this.Menu_Header_ngModel_Edit = self.module_details.MENU_HEADER;
            _this.Menu_Icon_ngModel_Edit = self.module_details.MENU_ICON;
            _this.SlNo_ngModel_Edit = self.module_details.MENU_SL_NO;
        });
        //-------------Bind Page Dropdownlist--------------------------
        var CheckModulePage = [];
        var url = this.baseResource_Url + "vw_mainmodulepage?filter=(MODULE_GUID=" + MODULE_GUID + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.modules = data.resource;
            _this.modulepages = data.resource;
            for (var itemA in _this.modulepages) {
                CheckModulePage.push(_this.modulepages[itemA]["PAGE_GUID"]);
            }
            _this.PAGE_ngModel_Edit = CheckModulePage;
            _this.loading.dismissAll();
        });
    };
    ModulesetupPage.prototype.DeleteClick = function (MODULE_GUID) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        //Remove details from main_module---------------------------
                        _this.modulesetupservice.remove(MODULE_GUID)
                            .subscribe(function () {
                            self.modules = self.modules.filter(function (item) {
                                return item.MODULE_GUID != MODULE_GUID;
                            });
                        });
                        //Remove page details from main_modulepage----------------
                        _this.DeleteModulePage(MODULE_GUID);
                        // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                }
            ]
        });
        alert.present();
    };
    ModulesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ModulesetupPage');
    };
    ModulesetupPage.prototype.GetPage = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl_page)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.pages = data["resource"];
        });
    };
    ModulesetupPage.prototype.Save = function () {
        var _this = this;
        if (this.Moduleform.valid) {
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_module?filter=(NAME=" + this.NAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.module_entry.NAME = _this.NAME_ngModel_Add.trim();
                        _this.module_entry.DESCRIPTION = _this.DESCRIPTION_ngModel_Add.trim();
                        _this.module_entry.PAGE_GUID = _this.PAGE_ngModel_Add[0];
                        _this.module_entry.MODULE_GUID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
                        _this.module_entry.CREATION_TS = new Date().toISOString();
                        _this.module_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
                        _this.module_entry.UPDATE_TS = new Date().toISOString();
                        _this.module_entry.UPDATE_USER_GUID = "";
                        _this.module_entry.MENU_HEADER = _this.Menu_Header_ngModel_Add;
                        _this.module_entry.MENU_ICON = _this.Menu_Icon_ngModel_Add;
                        _this.module_entry.MENU_SL_NO = _this.SlNo_ngModel_Add;
                        _this.modulesetupservice.save(_this.module_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.SaveModulePage(_this.module_entry.MODULE_GUID);
                                alert('Module Registered successfully');
                                //location.reload();
                                // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("This Module already Exist.");
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    ModulesetupPage.prototype.SaveModulePage = function (MODULE_GUID) {
        for (var _i = 0, _a = this.PAGE_ngModel_Add; _i < _a.length; _i++) {
            var PAGE_GUID = _a[_i];
            this.modulepage_entry.ID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
            this.modulepage_entry.MODULE_GUID = MODULE_GUID;
            this.modulepage_entry.PAGE_GUID = PAGE_GUID;
            this.modulepage_entry.CREATION_TS = this.module_entry.CREATION_TS;
            this.modulepage_entry.CREATION_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.modulepage_entry.UPDATE_TS = this.module_entry.UPDATE_TS;
            this.modulepage_entry.UPDATE_USER_GUID = "";
            this.modulepagesetupservice.save(this.modulepage_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                }
            });
        }
        this.navCtrl.setRoot(this.navCtrl.getActive().component);
    };
    ModulesetupPage.prototype.Update = function (MODULE_GUID) {
        var _this = this;
        if (this.Moduleform.valid) {
            if (this.module_entry.NAME == null) {
                this.module_entry.NAME = this.NAME_ngModel_Edit;
            }
            if (this.module_entry.DESCRIPTION == null) {
                this.module_entry.DESCRIPTION = this.DESCRIPTION_ngModel_Edit;
            }
            // if (this.module_entry.PAGE_GUID == null) { this.module_entry.PAGE_GUID = this.PAGE_ngModel_Edit; }
            this.module_entry.PAGE_GUID = this.PAGE_ngModel_Edit[0];
            this.module_entry.CREATION_TS = this.module_details.CREATION_TS;
            this.module_entry.CREATION_USER_GUID = this.module_details.CREATION_USER_GUID;
            this.module_entry.MODULE_GUID = MODULE_GUID;
            this.module_entry.UPDATE_TS = new Date().toISOString();
            this.module_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            this.module_entry.MENU_HEADER = this.Menu_Header_ngModel_Edit;
            this.module_entry.MENU_ICON = this.Menu_Icon_ngModel_Edit;
            this.module_entry.MENU_SL_NO = this.SlNo_ngModel_Edit;
            if (this.NAME_ngModel_Edit.trim() != localStorage.getItem('Prev_module_NAME')) {
                var url = void 0;
                url = this.baseResource_Url + "main_module?filter=(NAME=" + this.NAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    //console.log('Current Name : ' + this.NAME_ngModel_Edit + ', Previous Name : ' + localStorage.getItem('Prev_module_NAME'));
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.module_entry.NAME = _this.NAME_ngModel_Edit.trim();
                        //**************Update service if it is new details*************************
                        _this.modulesetupservice.update(_this.module_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                //-------Delete Module Pages---------------- 
                                _this.DeleteModulePage(_this.module_entry.MODULE_GUID);
                                //-------Update Module Pages----------------
                                //this.UpdateModulePage(this.module_entry.MODULE_GUID);
                                _this.UpdateModulePageMultiple(_this.module_entry.MODULE_GUID);
                                //------------------------------------------
                                // alert('Module updated successfully');
                                // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The Module is already Exist. ");
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.module_entry.NAME == null) {
                    this.module_entry.NAME = localStorage.getItem('Prev_module_NAME');
                }
                this.module_entry.NAME = this.NAME_ngModel_Edit.trim();
                //**************Update service if it is old details*************************
                this.modulesetupservice.update(this.module_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        //-------Delete Module Pages---------------- 
                        _this.DeleteModulePage(_this.module_entry.MODULE_GUID);
                        //-------Update Module Pages----------------
                        //this.UpdateModulePage(this.module_entry.MODULE_GUID);
                        // this.UpdateModulePageMultiple(this.module_entry.MODULE_GUID);
                        //------------------------------------------
                        // alert('Module updated successfully');
                        // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    ModulesetupPage.prototype.DeleteModulePage = function (MODULE_GUID) {
        var _this = this;
        this.modulepagesetupservice.remove(MODULE_GUID)
            .subscribe(function () {
            _this.modulepages = _this.modulepages.filter(function (item) {
                return item.MODULE_GUID != MODULE_GUID;
            });
            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
            if (_this.EditModuleClicked == true) {
                _this.UpdateModulePageMultiple(_this.module_entry.MODULE_GUID);
            }
            else {
                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
            }
        });
    };
    ModulesetupPage.prototype.UpdateModulePage = function (MODULE_GUID) {
        //console.table(this.PAGE_ngModel_Edit);
        for (var _i = 0, _a = this.PAGE_ngModel_Edit; _i < _a.length; _i++) {
            var PAGE_GUID = _a[_i];
            this.modulepage_entry.ID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
            this.modulepage_entry.MODULE_GUID = MODULE_GUID;
            this.modulepage_entry.PAGE_GUID = PAGE_GUID;
            this.modulepage_entry.CREATION_TS = this.module_entry.CREATION_TS;
            this.modulepage_entry.CREATION_USER_GUID = this.module_entry.CREATION_USER_GUID;
            this.modulepage_entry.UPDATE_TS = this.module_entry.UPDATE_TS;
            this.modulepage_entry.UPDATE_USER_GUID = this.module_entry.UPDATE_USER_GUID;
            this.modulepagesetupservice.save(this.modulepage_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('ID: ' + this.modulepage_entry.ID + ', ' + 'Module ID: ' + this.modulepage_entry.MODULE_GUID+ ', ' + 'PAGE ID: ' + this.modulepage_entry.PAGE_GUID);
                    //this.navCtrl.setRoot(this.navCtrl.getActive().component);
                }
            });
        }
        this.navCtrl.setRoot(this.navCtrl.getActive().component);
    };
    ModulesetupPage.prototype.UpdateModulePageMultiple = function (MODULE_GUID) {
        //console.table(this.PAGE_ngModel_Edit);    
        for (var _i = 0, _a = this.PAGE_ngModel_Edit; _i < _a.length; _i++) {
            var PAGE_GUID = _a[_i];
            this.modulepage_entry.ID = __WEBPACK_IMPORTED_MODULE_11_angular2_uuid__["UUID"].UUID();
            this.modulepage_entry.MODULE_GUID = MODULE_GUID;
            this.modulepage_entry.PAGE_GUID = PAGE_GUID;
            this.modulepage_entry.CREATION_TS = this.module_entry.CREATION_TS;
            this.modulepage_entry.CREATION_USER_GUID = this.module_entry.CREATION_USER_GUID;
            this.modulepage_entry.UPDATE_TS = this.module_entry.UPDATE_TS;
            this.modulepage_entry.UPDATE_USER_GUID = this.module_entry.UPDATE_USER_GUID;
            this.Module_Page_Multiple.push({ ID: this.modulepage_entry.ID, MODULE_GUID: this.modulepage_entry.MODULE_GUID, PAGE_GUID: this.modulepage_entry.PAGE_GUID, CREATION_USER_GUID: this.modulepage_entry.CREATION_USER_GUID, CREATION_TS: this.modulepage_entry.CREATION_TS, UPDATE_USER_GUID: this.modulepage_entry.UPDATE_USER_GUID, UPDATE_TS: this.modulepage_entry.UPDATE_TS });
        }
        //console.log(this.Module_Page_Multiple);
        this.modulepagesetupservice.save_multiple_recocrd(this.Module_Page_Multiple)
            .subscribe(function (response) {
            if (response.status == 200) {
            }
        });
        alert('Module updated successfully');
        this.navCtrl.setRoot(this.navCtrl.getActive().component);
    };
    ModulesetupPage.prototype.search = function (searchString) {
        var val = searchString.target.value;
        if (!val || !val.trim()) {
            this.Module_New = this.stores;
            return;
        }
        this.Module_New = this.filter({
            MODULE_NAME: val,
            DESCRIPTION: val,
            PAGE_NAME: val,
            MENU_HEADER: val
        });
    };
    ModulesetupPage.prototype.filter = function (params) {
        if (!params) {
            return this.stores;
        }
        return this.stores.filter(function (item) {
            for (var key in params) {
                var field = item[key];
                if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {
                    return item;
                }
                else if (field == params[key]) {
                    return item;
                }
            }
            return null;
        });
    };
    ModulesetupPage.prototype.DisplaySlNo = function () {
        var _this = this;
        var slno_details;
        var url = "";
        if (this.EditModuleClicked == true) {
            url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_module' + '?filter=(MENU_HEADER=' + this.Menu_Header_ngModel_Edit + ')&order=MENU_SL_NO DESC&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_module' + '?filter=(MENU_HEADER=' + this.Menu_Header_ngModel_Add + ')&order=MENU_SL_NO DESC&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            slno_details = data["resource"];
            if (slno_details.length == 0) {
                if (_this.EditModuleClicked == true) {
                    _this.SlNo_ngModel_Edit = "1";
                }
                else {
                    _this.SlNo_ngModel_Add = "1";
                }
            }
            else {
                if (slno_details[0]["MENU_SL_NO"] == undefined || slno_details[0]["MENU_SL_NO"] == null) {
                    if (_this.EditModuleClicked == true) {
                        _this.SlNo_ngModel_Edit = "1";
                    }
                    else {
                        _this.SlNo_ngModel_Add = "1";
                    }
                }
                else {
                    if (_this.EditModuleClicked == true) {
                        _this.SlNo_ngModel_Edit = parseInt(slno_details[0]["MENU_SL_NO"]) + 1;
                    }
                    else {
                        _this.SlNo_ngModel_Add = parseInt(slno_details[0]["MENU_SL_NO"]) + 1;
                    }
                }
            }
        });
    };
    ModulesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-modulesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/modulesetup/modulesetup.html"*/'<!--\n  Generated template for the ModulesetupPage page.\n \n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "MODULE_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="search_ngModel" (ionInput)="search($event)" placeholder=\'Search\'></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddModuleClick()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Module Name</th>\n          <th class="lgl1">Description</th>\n          <th class="lgl1">Page Name</th>\n          <th class="lgl1">Menu Header</th>\n          <th class="lgl1" style="width:105px">Menu Sl. No</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let module of Module_New | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{module.MODULE_NAME}}</td>\n          <td class="lgl1">{{module.DESCRIPTION}}</td>\n          <td class="lgl1" text-wrap>{{module.PAGE_NAME}}</td>\n          <td class="lgl1" text-wrap>{{module.MENU_HEADER}}</td>\n          <td class="lgl1" text-wrap>{{module.MENU_SL_NO}}</td>\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(module.MODULE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end>\n              <ion-icon name="md-close" (click)="DeleteClick(module.MODULE_GUID)"></ion-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true"\n        autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n  <!-- add MODULEFORM start-->\n  <div class="blackcontainer" *ngIf="AddModuleClicked">\n  </div>\n  <div class="popup4" padding *ngIf="AddModuleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_MODULE" | translate }}</div>\n        <button class="btnR" (click)="CloseModuleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Moduleform">\n          <ion-item>\n            <ion-label stacked>{{ "MODULE_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Add" placeholder="{{\'Please fill in the name of the module\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Add" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "PAGE_NAME" | translate }}</ion-label>\n            <ion-select formControlName="PAGE" [(ngModel)]="PAGE_ngModel_Add" placeholder="{{\'Please fill the Page\'}}"\n              multiple="true">\n              <ion-option *ngFor="let page of pages" [value]="page.PAGE_GUID">{{page.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MENU_HEADER" | translate }}</ion-label>\n            <ion-select formControlName="MENU_HEADER" [(ngModel)]="Menu_Header_ngModel_Add" placeholder="{{\'Please select menu header\'}}" (ionChange)="DisplaySlNo()" interface="popover">\n              <ion-option [value]="Dashboard">Dashboard</ion-option>\n              <ion-option [value]="Tasks">Tasks</ion-option>\n              <ion-option [value]="Claims">Claims</ion-option>\n              <ion-option [value]="Reports">Reports</ion-option>\n              <ion-option [value]="Account">Account</ion-option>\n              <ion-option [value]="Settings">Settings</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MENU_ICON" | translate }}</ion-label>\n            <ion-select formControlName="MENU_ICON" [(ngModel)]="Menu_Icon_ngModel_Add" placeholder="{{\'Please select menu icon\'}}" interface="popover">\n              <ion-option [value]="albums">albums</ion-option>\n              <ion-option [value]="apps">apps</ion-option>\n              <ion-option [value]="basket">basket</ion-option>\n              <ion-option [value]="cafe">cafe</ion-option>\n              <ion-option [value]="car">car</ion-option>\n              <ion-option [value]="checkbox_outline">checkbox-outline</ion-option>\n              <ion-option [value]="cog">cog</ion-option>\n              <ion-option [value]="ios_clipboard_outline">ios-clipboard-outline</ion-option>\n              <ion-option [value]="ios_list_box_outline">ios-list-box-outline</ion-option>\n              <ion-option [value]="ios_paper_outline">ios-paper-outline</ion-option>\n              <ion-option [value]="key">key</ion-option>\n              <ion-option [value]="log_in">log-in</ion-option>\n              <ion-option [value]="log_out">log-out</ion-option>\n              <ion-option [value]="man">man</ion-option>\n              <ion-option [value]="md_clipboard">md-clipboard</ion-option>\n              <ion-option [value]="md_list_box">md-list-box</ion-option>\n              <ion-option [value]="md_paper">md-paper</ion-option>\n              <ion-option [value]="person">person</ion-option>\n              <ion-option [value]="person-add">person-add</ion-option>\n              <ion-option [value]="print">print</ion-option>\n              <ion-option [value]="settings">settings</ion-option>\n              <ion-option [value]="stopwatch">stopwatch</ion-option>\n              <ion-option [value]="unlock">unlock</ion-option>\n            </ion-select>\n          </ion-item>  \n          \n          <ion-item>\n            <ion-label stacked>{{"Sl. No"}}</ion-label>\n            <ion-input type="text" formControlName="MENU_SL_NO" [(ngModel)]="SlNo_ngModel_Add" placeholder="{{\'Please fill in the sl no\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Moduleform.valid" (click)="Save()">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </form>\n\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add MODULEFORM form end-->\n\n\n  <!-- edit MODULEFORM start-->\n  <div class="blackcontainer" *ngIf="EditModuleClicked">\n  </div>\n  <div class="popup4" padding *ngIf="EditModuleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "UPDATE_MODULE" | translate }}</div>\n        <button class="btnR" (click)="CloseModuleClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Moduleform">\n          <ion-item>\n            <ion-label stacked>{{ "MODULE_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="NAME" [(ngModel)]="NAME_ngModel_Edit" placeholder="{{\'Please fill in the name of the module\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "DESCRIPTION" | translate }}</ion-label>\n            <ion-input type="text" formControlName="DESCRIPTION" [(ngModel)]="DESCRIPTION_ngModel_Edit" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "PAGE_NAME" | translate }}</ion-label>\n            <ion-select formControlName="PAGE" [(ngModel)]="PAGE_ngModel_Edit" placeholder="{{\'Please fill the Page\'}}"\n              multiple="true">\n              <ion-option *ngFor="let page of pages" [value]="page.PAGE_GUID">{{page.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MENU_HEADER" | translate }}</ion-label>\n            <ion-select formControlName="MENU_HEADER" [(ngModel)]="Menu_Header_ngModel_Edit" placeholder="{{\'Please select menu header\'}}" (ionChange)="DisplaySlNo()" interface="popover">\n              <ion-option [value]="Dashboard">Dashboard</ion-option>\n              <ion-option [value]="Tasks">Tasks</ion-option>\n              <ion-option [value]="Claims">Claims</ion-option>\n              <ion-option [value]="Reports">Reports</ion-option>\n              <ion-option [value]="Account">Account</ion-option>\n              <ion-option [value]="Settings">Settings</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{ "MENU_ICON" | translate }}</ion-label>\n            <ion-select formControlName="MENU_ICON" [(ngModel)]="Menu_Icon_ngModel_Edit" placeholder="{{\'Please select menu icon\'}}" interface="popover">\n              <ion-option [value]="albums">albums</ion-option>\n              <ion-option [value]="apps">apps</ion-option>\n              <ion-option [value]="basket">basket</ion-option>\n              <ion-option [value]="cafe">cafe</ion-option>\n              <ion-option [value]="car">car</ion-option>\n              <ion-option [value]="checkbox_outline">checkbox-outline</ion-option>\n              <ion-option [value]="cog">cog</ion-option>\n              <ion-option [value]="ios_clipboard_outline">ios-clipboard-outline</ion-option>\n              <ion-option [value]="ios_list_box_outline">ios-list-box-outline</ion-option>\n              <ion-option [value]="ios_paper_outline">ios-paper-outline</ion-option>\n              <ion-option [value]="key">key</ion-option>\n              <ion-option [value]="log_in">log-in</ion-option>\n              <ion-option [value]="log_out">log-out</ion-option>\n              <ion-option [value]="man">man</ion-option>\n              <ion-option [value]="md_clipboard">md-clipboard</ion-option>\n              <ion-option [value]="md_list_box">md-list-box</ion-option>\n              <ion-option [value]="md_paper">md-paper</ion-option>\n              <ion-option [value]="person">person</ion-option>\n              <ion-option [value]="person-add">person-add</ion-option>\n              <ion-option [value]="print">print</ion-option>\n              <ion-option [value]="settings">settings</ion-option>\n              <ion-option [value]="stopwatch">stopwatch</ion-option>\n              <ion-option [value]="unlock">unlock</ion-option>\n            </ion-select>\n          </ion-item>  \n          \n          <ion-item>\n            <ion-label stacked>{{"Sl. No"}}</ion-label>\n            <ion-input type="text" formControlName="MENU_SL_NO" [(ngModel)]="SlNo_ngModel_Edit" placeholder="{{\'Please fill in the sl no\'}}"></ion-input>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Moduleform.valid" (click)="Update(module_details.MODULE_GUID)">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </form>\n        <!-- [disabled]="!Moduleform.valid" -->\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- edit MODULEFORM form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/modulesetup/modulesetup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_modulesetup_service__["a" /* ModuleSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_modulepagesetup_service__["a" /* ModulePageSetup_Service */], __WEBPACK_IMPORTED_MODULE_10__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_7__services_modulesetup_service__["a" /* ModuleSetup_Service */], __WEBPACK_IMPORTED_MODULE_9__services_modulepagesetup_service__["a" /* ModulePageSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], ModulesetupPage);
    return ModulesetupPage;
}());

//# sourceMappingURL=modulesetup.js.map

/***/ }),
/* 484 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModuleSetup_Model; });
var ModuleSetup_Model = /** @class */ (function () {
    function ModuleSetup_Model(MODULE_GUID, NAME, DESCRIPTION, PAGE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, MENU_HEADER, MENU_ICON, MENU_SL_NO) {
        if (MODULE_GUID === void 0) { MODULE_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (PAGE_GUID === void 0) { PAGE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (MENU_HEADER === void 0) { MENU_HEADER = null; }
        if (MENU_ICON === void 0) { MENU_ICON = null; }
        if (MENU_SL_NO === void 0) { MENU_SL_NO = null; }
        this.MODULE_GUID = MODULE_GUID;
        this.NAME = NAME;
        this.DESCRIPTION = DESCRIPTION;
        this.PAGE_GUID = PAGE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.MENU_HEADER = MENU_HEADER;
        this.MENU_ICON = MENU_ICON;
        this.MENU_SL_NO = MENU_SL_NO;
    }
    ModuleSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new ModuleSetup_Model(json.MODULE_GUID, json.NAME, json.DESCRIPTION, json.PAGE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.MENU_HEADER, json.MENU_ICON, json.MENU_SL_NO);
    };
    ModuleSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            MODULE_GUID: this.MODULE_GUID,
            NAME: this.NAME,
            DESCRIPTION: this.DESCRIPTION,
            PAGE_GUID: this.PAGE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            MENU_HEADER: this.MENU_HEADER,
            MENU_ICON: this.MENU_ICON,
            MENU_SL_NO: this.MENU_SL_NO
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ModuleSetup_Model;
}());

//# sourceMappingURL=modulesetup_model.js.map

/***/ }),
/* 485 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModulePageSetup_Model; });
var ModulePageSetup_Model = /** @class */ (function () {
    function ModulePageSetup_Model(ID, MODULE_GUID, PAGE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (ID === void 0) { ID = null; }
        if (MODULE_GUID === void 0) { MODULE_GUID = null; }
        if (PAGE_GUID === void 0) { PAGE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.ID = ID;
        this.MODULE_GUID = MODULE_GUID;
        this.PAGE_GUID = PAGE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    ModulePageSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new ModulePageSetup_Model(json.ID, json.MODULE_GUID, json.PAGE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    ModulePageSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            ID: this.ID,
            MODULE_GUID: this.MODULE_GUID,
            PAGE_GUID: this.PAGE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ModulePageSetup_Model;
}());

//# sourceMappingURL=modulepagesetup_model.js.map

/***/ }),
/* 486 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubmodulesetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the SubmodulesetupPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var SubmodulesetupPage = /** @class */ (function () {
    function SubmodulesetupPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.AddSubModuleClicked = false;
    }
    SubmodulesetupPage.prototype.AddSubModuleClick = function () {
        this.AddSubModuleClicked = true;
    };
    SubmodulesetupPage.prototype.CloseSubModuleClick = function () {
        if (this.AddSubModuleClicked == true) {
            this.AddSubModuleClicked = false;
        }
    };
    SubmodulesetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SubmodulesetupPage');
    };
    SubmodulesetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-submodulesetup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/submodulesetup/submodulesetup.html"*/'<!--\n  Generated template for the SubmodulesetupPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>{{ "SUB_MODULE" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddSubModuleClick()"><ion-icon name="add"></ion-icon></button>\n  </ion-fab>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">NO.</th>\n          <th class="lgl1">MODULE NAME</th>\n          <th class="lgl1">SUB MODULE NAME</th>\n          <th class="lgl1">DESCRIPTION</th>\n          <th class="lgl1">URL</th>\n          <th class="lgl1 tblBrRight" style="width:105px">ACTION</th>\n\n        </tr>\n\n        <tr class="col7">\n          <td class="lgl1">1</td>\n          <td class="lgl1">MODULE NAME</td>\n          <td class="lgl1">SUB MODULE NAME</td>\n          <td class="lgl1">DESCRIPTION</td>\n          <td class="lgl1">ABC@GOL.COM</td>\n\n\n          <td class="lgl1 fColor">\n            <button ion-button item-end ><ion-icon name="md-create"></ion-icon></button>\n            <button ion-button item-end><ion-icon name="md-close"></ion-icon></button>\n          </td>\n        </tr>\n\n\n      </table>\n    </ion-item>\n  </ion-list>\n\n\n  <!-- add SUBMODULEFORM start-->\n  <div class="blackcontainer" *ngIf="AddSubModuleClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddSubModuleClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_MODULE" | translate}}</div>\n        <button class="btnR" (click)="CloseSubModuleClick()">\n          <ion-icon name="md-close"></ion-icon> \n        </button>\n      </ion-card-header>\n      <ion-list>\n\n          <ion-item>\n            <ion-label stacked>{{"S_MODULE_NAME" | translate}}</ion-label>\n            <ion-input type="text" placeholder="{{\'Please fill in the name of the module\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"SUB_MODULE_NAME" | translate}}</ion-label>\n            <ion-input type="text" placeholder="{{\'Please fill in the name of the submodule\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"S_DESCRIPTION" | translate}}</ion-label>\n            <ion-input type="text" placeholder="{{\'Please fill in the description\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label stacked>{{"URL" | translate}}</ion-label>\n            <ion-input type="text" placeholder="{{\'Please fill in the URL of the module\'}}"></ion-input>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1">SUBMIT</button>\n          </div>\n\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add SUBMODULEFORM form end-->\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/submodulesetup/submodulesetup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], SubmodulesetupPage);
    return SubmodulesetupPage;
}());

//# sourceMappingURL=submodulesetup.js.map

/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimhistoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Observable } from 'rxjs/Observable';
// import { Subject }    from 'rxjs/Subject';
// import { of }         from 'rxjs/observable/of';
// import {
//    debounceTime, distinctUntilChanged, switchMap
//  } from 'rxjs/operators';
// import { Response } from '@angular/http/src/static_response';
/**
 * Generated class for the ClaimhistoryPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var ClaimhistoryPage = /** @class */ (function () {
    function ClaimhistoryPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.role = "Validation";
    }
    ClaimhistoryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimhistoryPage');
    };
    ClaimhistoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimhistory',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimhistory/claimhistory.html"*/'<!--\n  Generated template for the ClaimhistoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<page-common-historylist *ngIf="role" [role]="role"></page-common-historylist>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claimhistory/claimhistory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], ClaimhistoryPage);
    return ClaimhistoryPage;
}());

//# sourceMappingURL=claimhistory.js.map

/***/ }),
/* 488 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfileSetupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__models_main_profile_model__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_profilesetup_services__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_GlobalFunction__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the ProfileSetupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ProfileSetupPage = /** @class */ (function () {
    //---------------------------------------------------------------------
    function ProfileSetupPage(fb, navCtrl, navParams, http, httpService, profilesetupservice, alertCtrl, GlobalFunction) {
        var _this = this;
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.httpService = httpService;
        this.profilesetupservice = profilesetupservice;
        this.alertCtrl = alertCtrl;
        this.GlobalFunction = GlobalFunction;
        this.profile_entry = new __WEBPACK_IMPORTED_MODULE_6__models_main_profile_model__["a" /* Main_Profile_Model */]();
        this.current_profileGUID = '';
        this.page = 1;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_profile' + '?api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.profile_details = [];
        this.AddProfileClicked = false;
        this.EditProfileClicked = false;
        this.Exist_Record = false;
        if (localStorage.getItem("g_USER_GUID") != null) {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/main_profile?order=PROFILE_NAME&api_key=" + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http
                .get(this.baseResourceUrl)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.profiles = data.resource;
            });
            this.Profileform = fb.group({
                PROFILE_NAME: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                PROFILE_XML: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required]
            });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
    }
    ProfileSetupPage.prototype.AddProfileClick = function () {
        this.AddProfileClicked = true;
        this.ClearControls();
    };
    ProfileSetupPage.prototype.CloseProfilesClick = function () {
        if (this.AddProfileClicked == true) {
            this.AddProfileClicked = false;
        }
        if (this.EditProfileClicked == true) {
            this.EditProfileClicked = false;
        }
    };
    ProfileSetupPage.prototype.EditClick = function (MAIN_PROFILE_GUID) {
        var _this = this;
        this.ClearControls();
        this.EditProfileClicked = true;
        this.current_profileGUID = MAIN_PROFILE_GUID;
        var self = this;
        this.profilesetupservice
            .get(MAIN_PROFILE_GUID)
            .subscribe(function (data) {
            self.profile_entry = data;
            _this.PROFILENAME_ngModel_Edit = self.profile_entry.PROFILE_NAME;
            _this.XML_ngModel_Edit = self.profile_entry.PROFILE_XML;
            localStorage.setItem('Prev_Name', self.profile_entry.PROFILE_NAME);
        });
    };
    ProfileSetupPage.prototype.DeleteClick = function (MAIN_PROFILE_GUID) {
        var _this = this;
        console.log(MAIN_PROFILE_GUID);
        var alert = this.alertCtrl.create({
            title: 'Remove Confirmation',
            message: 'Are you sure to remove?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        console.log('OK clicked');
                        var self = _this;
                        _this.profilesetupservice.remove(MAIN_PROFILE_GUID)
                            .subscribe(function () {
                            self.profile_details = self.profile_details.filter(function (item) {
                                return item.MAIN_PROFILE_GUID != MAIN_PROFILE_GUID;
                            });
                            _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ProfileSetupPage.prototype.Save_Profile = function () {
        var _this = this;
        if (this.Profileform.valid) {
            var headers = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* Headers */]();
            headers.append('Content-Type', 'application/json');
            var options = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* RequestOptions */]({ headers: headers });
            var url = void 0;
            url = this.baseResource_Url + "main_profile?filter=(PROFILE_NAME=" + this.PROFILENAME_ngModel_Add.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.http.get(url, options)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var res = data["resource"];
                if (res.length == 0) {
                    console.log("No records Found");
                    if (_this.Exist_Record == false) {
                        _this.profile_entry.PROFILE_NAME = _this.PROFILENAME_ngModel_Add.trim();
                        _this.profile_entry.PROFILE_XML = _this.XML_ngModel_Add.trim();
                        _this.profile_entry.MAIN_PROFILE_GUID = __WEBPACK_IMPORTED_MODULE_9_angular2_uuid__["UUID"].UUID();
                        _this.profile_entry.TENANT_GUID = localStorage.getItem("g_TENANT_GUID");
                        _this.profile_entry.TENANT_SITE_GUID = localStorage.getItem("g_TENANT_COMPANY_GUID");
                        _this.profile_entry.CREATION_TS = new Date().toISOString();
                        _this.profile_entry.CREATION_USER_GUID = '1';
                        _this.profile_entry.UPDATE_TS = new Date().toISOString();
                        _this.profile_entry.UPDATE_USER_GUID = "";
                        _this.profilesetupservice.save(_this.profile_entry)
                            .subscribe(function (response) {
                            console.log('hi');
                            if (response.status == 200) {
                                alert('Profile Registered successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                    }
                }
                else {
                    console.log("Records Found");
                    alert("The Profile is already Exist.");
                }
            }, function (err) {
                _this.Exist_Record = false;
                console.log("ERROR!: ", err);
            });
        }
    };
    ProfileSetupPage.prototype.getProfilesList = function () {
        var self = this;
        var params = new __WEBPACK_IMPORTED_MODULE_3__angular_http__["f" /* URLSearchParams */]();
        self.profilesetupservice.get_profile(params)
            .subscribe(function (profile) {
            self.profiles = profile;
        });
    };
    ProfileSetupPage.prototype.Update_Profile = function () {
        var _this = this;
        if (this.Profileform.valid) {
            if (this.profile_entry.PROFILE_NAME == null) {
                this.profile_entry.PROFILE_NAME = this.PROFILENAME_ngModel_Edit.trim();
            }
            this.profile_entry.PROFILE_XML = this.profile_entry.PROFILE_XML.trim();
            this.profile_entry.TENANT_SITE_GUID = this.profile_entry.TENANT_SITE_GUID.trim();
            this.profile_entry.TENANT_GUID = this.profile_entry.TENANT_GUID;
            this.profile_entry.CREATION_TS = this.profile_entry.CREATION_TS;
            this.profile_entry.CREATION_USER_GUID = this.profile_entry.CREATION_USER_GUID;
            this.profile_entry.MAIN_PROFILE_GUID = this.profile_entry.MAIN_PROFILE_GUID;
            this.profile_entry.UPDATE_TS = new Date().toISOString();
            this.profile_entry.UPDATE_USER_GUID = '1';
            if (this.PROFILENAME_ngModel_Edit.trim() != localStorage.getItem('Prev_Name')) {
                var url = void 0;
                url = this.baseResource_Url + "main_profile?filter=(PROFILE_NAME=" + this.PROFILENAME_ngModel_Edit.trim() + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_5__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http.get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    if (res.length == 0) {
                        console.log("No records Found");
                        _this.profile_entry.PROFILE_NAME = _this.PROFILENAME_ngModel_Edit.trim();
                        _this.profile_entry.PROFILE_XML = _this.XML_ngModel_Edit.trim();
                        _this.profile_entry.MAIN_PROFILE_GUID = _this.profile_entry.MAIN_PROFILE_GUID;
                        ;
                        //**************Update service if it is new details*************************
                        _this.profilesetupservice.update_profile(_this.profile_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                alert('Profile updated successfully');
                                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                            }
                        });
                        //**************************************************************************
                    }
                    else {
                        console.log("Records Found");
                        alert("The profile is already Exist. ");
                    }
                }, function (err) {
                    _this.Exist_Record = false;
                    console.log("ERROR!: ", err);
                });
            }
            else {
                if (this.profile_entry.PROFILE_NAME == null) {
                    this.profile_entry.PROFILE_NAME = localStorage.getItem('Prev_Name');
                }
                this.profile_entry.PROFILE_NAME = this.PROFILENAME_ngModel_Edit.trim();
                this.profile_entry.PROFILE_XML = this.XML_ngModel_Edit.trim();
                //**************Update service if it is old details*************************
                this.profilesetupservice.update_profile(this.profile_entry)
                    .subscribe(function (response) {
                    if (response.status == 200) {
                        alert('Profile updated successfully');
                        _this.navCtrl.setRoot(_this.navCtrl.getActive().component);
                    }
                });
            }
        }
    };
    ProfileSetupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfileSetupPage');
    };
    ProfileSetupPage.prototype.ClearControls = function () {
        this.PROFILENAME_ngModel_Add = "";
        this.XML_ngModel_Add = "";
        this.PROFILENAME_ngModel_Edit = "";
        this.XML_ngModel_Edit = "";
    };
    ProfileSetupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-profile-setup',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/profile-setup/profile-setup.html"*/'\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <ion-title>{{ "PROFILE_SETUP" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="AddProfileClick()">\n      <ion-icon name="add">\n      </ion-icon>\n    </button>\n  </ion-fab>\n\n  <!--For Display Grid -->\n  <ion-list>\n    <ion-item>\n      <table class="Tabler">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">Profile Name</th>\n          <th class="lgl1">XML</th>\n          <th class="lgl1 tblBrRight" style="width:105px">Action</th>\n\n        </tr>\n\n        <tr class="col7" *ngFor="let profile of profiles | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{profile.PROFILE_NAME}}</td>\n          <td class="lgl1">{{profile.PROFILE_XML}}</td>\n          <td class="lgl1 fColor">\n            <button ion-button item-end (click)="EditClick(profile.MAIN_PROFILE_GUID)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end (click)="DeleteClick(profile.MAIN_PROFILE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button>\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n  <!--Display Grid End-->\n\n\n\n  <!-- add Profile form start-->\n  <div class="blackcontainer" *ngIf="AddProfileClicked">\n  </div>\n  <div class="popup" padding *ngIf="AddProfileClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">{{ "REGISTER_NEW_PROFILE" | translate }}</div>\n        <button class="btnR" (click)="CloseProfilesClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Profileform">\n          <ion-item>\n            <ion-label stacked>{{ "PROFILE_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PROFILE_NAME" [(ngModel)]="PROFILENAME_ngModel_Add" placeholder="{{\'Please fill in the profile name\'}}"></ion-input>\n          </ion-item>\n          <ion-item>\n            <ion-label stacked>{{ "XML" | translate }}</ion-label>\n            <ion-textarea type="text" rows="10" formControlName="PROFILE_XML" [(ngModel)]="XML_ngModel_Add" placeholder="{{\'Please fill in the XML\'}}"></ion-textarea>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Profileform.valid" (click)="Save_Profile()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- add Profile form end-->\n\n\n  <!-- Edit Profile form start-->\n  <div class="blackcontainer" *ngIf="EditProfileClicked">\n  </div>\n  <div class="popup" padding *ngIf="EditProfileClicked">\n\n    <ion-card>\n      <ion-card-header class="icTitle headerColor-white ">\n\n        <div class="icHeaderText">UPDATE PROFILE</div>\n        <button class="btnR" (click)="CloseProfilesClick()">\n          <ion-icon name="md-close"></ion-icon>\n        </button>\n\n      </ion-card-header>\n      <ion-list>\n        <form [formGroup]="Profileform">\n          <ion-item>\n            <ion-label stacked>{{ "PROFILE_NAME" | translate }}</ion-label>\n            <ion-input type="text" formControlName="PROFILE_NAME" [(ngModel)]="PROFILENAME_ngModel_Edit" placeholder="{{\'Please fill in the profile name\'}}"></ion-input>\n          </ion-item>\n          <ion-item>\n            <ion-label stacked>{{ "XML" | translate }}</ion-label>\n            <ion-textarea type="text" rows="10" formControlName="PROFILE_XML" [(ngModel)]="XML_ngModel_Edit" placeholder="{{\'Please fill in the XML\'}}"></ion-textarea>\n          </ion-item>\n          <div class="btn">\n            <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!Profileform.valid" (click)="!Update_Profile()">{{"SUBMIT" | translate}}</button>\n          </div>\n        </form>\n      </ion-list>\n    </ion-card>\n\n  </div>\n  <!-- Edit Profile form end-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/profile-setup/profile-setup.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_7__services_profilesetup_services__["a" /* ProfileSetup_Service */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_10__shared_GlobalFunction__["a" /* GlobalFunction */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_8__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_7__services_profilesetup_services__["a" /* ProfileSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_10__shared_GlobalFunction__["a" /* GlobalFunction */]])
    ], ProfileSetupPage);
    return ProfileSetupPage;
}());

//# sourceMappingURL=profile-setup.component.js.map

/***/ }),
/* 489 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ApproverTaskListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ApproverTaskListPage = /** @class */ (function () {
    function ApproverTaskListPage(navCtrl, navParams, http) {
        //this.claimrefguid = '243b6b02-ff10-6ad4-3907-4d3ee899644f'
        // this.claimrefguid = '7f595e19-3e20-b9ee-8505-a86215278eb1'
        // this.claimrefguid = 'c9623104-ac0c-e811-0fbf-eb9864ec263c'
        // this.claimrefguid = 'd9a3c051-e674-7c5b-81c4-dd9cd2f89b26'
        //this.claimrefguid = 'fdadf529-5277-28ef-8298-b176c38d9ebb'
        // this.claimrefguid = 'eb341cca-cf4d-8b69-d66a-b5d01e06a77b'
        // this.claimrefguid = '12fa8f8a-f8b7-82f2-5efb-1dcc39f21391'
        //this.claimrefguid = 'e60dee1f-0460-5f14-c74f-9bbfc04e6877'       
        //this.claimrefguid ='8254ea7a-e64f-a2f5-4d4c-7225de2d3559'   
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.currency = localStorage.getItem("cs_default_currency");
        //this.claimrefguid =navParams.get("claimRefGuid");
        if (this.claimrefguid != 'null') {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/vw_claimrequestlist?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["e" /* DREAMFACTORY_TABLE_URL */] + '/vw_claimrequestlist?filter=(ASSIGNED_TO=' + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimrequestdetails = data["resource"];
            _this.claimrequestdetails.forEach(function (element) {
                element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
            });
            console.table(_this.claimrequestdetails);
        });
    }
    ApproverTaskListPage.prototype.checkAllCheckBoxes = function (event) {
        if (event.checked) {
            this.selectAll = true;
        }
        else {
            this.selectAll = false;
        }
    };
    ApproverTaskListPage.prototype.getCheckboxValue = function () {
        // console.log(event);
        // alert(event.id);
        // alert(event.checked);
        // alert(claimRequestGuid);
    };
    // viewClaim(claimRequestGUID: string,level:number) {
    //   console.log(claimRequestGUID)
    //   //this.navCtrl.push(TravelClaimViewPage, {
    //      this.navCtrl.push(EntertainmentClaimViewPage, {
    //        //this.navCtrl.push(MedicalClaimViewPage, {
    //          //this.navCtrl.push(OvertimeClaimViewPage, {
    //            //this.navCtrl.push(PrintClaimViewPage, {
    //              //this.navCtrl.push(GiftClaimViewPage, {
    //     cr_GUID: claimRequestGUID,
    //     level_no: level,
    //     approver_GUID : localStorage.getItem('g_USER_GUID')
    //   });
    // }
    ApproverTaskListPage.prototype.viewClaim = function (claimRequestGUID, level, claimType) {
        this.claimRequestGUID = claimRequestGUID;
        this.level = level;
        switch (claimType) {
            case '2d8d7c80-c9ae-9736-b256-4d592e7b7887':
                this.pushPage('GiftClaimViewPage');
                break;
            case '37067b3d-1bf4-33a3-2b60-3ca40baf589a':
                this.pushPage('OvertimeClaimViewPage');
                break;
            case '40dbaf56-98e4-77b9-df95-85ec232ff714':
                this.pushPage('MedicalClaimViewPage');
                break;
            case '58c59b56-289e-31a2-f708-138e81a9c823':
                this.pushPage('TravelClaimViewPage');
                break;
            case 'd9567482-033a-6d92-3246-f33043155746':
                this.pushPage('PrintClaimViewPage');
                break;
            case 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1':
                this.pushPage('EntertainmentClaimViewPage');
                break;
        }
    };
    ApproverTaskListPage.prototype.pushPage = function (claimType) {
        this.navCtrl.push(claimType, {
            cr_GUID: this.claimRequestGUID,
            level_no: this.level,
            approver_GUID: localStorage.getItem('g_USER_GUID')
        });
    };
    ApproverTaskListPage.prototype.approveClaims = function () {
    };
    ApproverTaskListPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-approver-task-list',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/approver-task-list/approver-task-list.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>{{ "APPROVER_TASK_LABEL" | translate }}</ion-title>\n  </ion-navbar>\n</ion-header>\n<ion-content padding>\n\n  <ion-card *ngFor="let item of claimrequestdetails">\n    <ion-item>\n      <!-- <ion-checkbox (ionChange)="checkAllCheckBoxes($event)"></ion-checkbox> -->\n      <h2>{{ "NAME_LABEL" | translate }} : {{item.FULLNAME}}</h2>\n      <h2 item-end>{{item.STATUS}}</h2>\n    </ion-item>\n    <ion-item>\n      <p>{{ "CLAIM_TYPE_LABEL" | translate }} : {{item.CLAIMTYPE}}</p>\n      <p>{{ "CLAIM_DATE_LABEL" | translate }}: {{item.TRAVEL_DATE | date: \'dd/MM/yyyy\'}}</p>\n      <p>{{ "CLAIM_AMOUNT_LABEL" | translate }}{{ currency }}: {{item.CLAIM_AMOUNT | number:\'1.2-2\'}}</p>\n      <button ion-button item-end (click)=\'viewClaim(item.CLAIM_REQUEST_GUID, item.PROFILE_LEVEL, item.CLAIM_TYPE_GUID)\'>\n        <ion-icon name="md-eye"></ion-icon>\n      </button>\n    </ion-item>\n  </ion-card>\n\n</ion-content>\n\n\n<!-- <ion-header>\n  <ion-navbar>\n    <ion-title>Approver Task List</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-item>\n    <button ion-button item-end (click)="approveClaims()">Approve</button>\n  </ion-item>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler ">\n          <tr class="linedsg TColor">\n              <th class="tblBrLeft" style="width:60px">\n                <ion-item>\n                  <ion-checkbox item-end (ionChange)="checkAllCheckBoxes($event)"></ion-checkbox>\n                </ion-item>\n              </th>\n              <th style="width:60px">No.</th>\n              <th>Name</th>\n              <th>Claim Type</th>\n              <th>Date</th>\n              <th>Status</th>\n              <th>Stage</th>\n              <th>Amount</th>\n              <th class="tblBrRight">Action</th>\n          </tr>\n\n          <tr class="col7" *ngFor="let item of claimrequestdetails; let i=index">\n            <td class="lgl1">\n                <ion-item>   <ion-checkbox item-end [checked]="selectAll" (ionChange)="getCheckboxValue($event,item.CLAIM_REQUEST_GUID)"> </ion-checkbox></ion-item>\n              </td>\n\n              <td class="lgl1">{{i+1}}</td>\n              <td class="lgl1" >{{item.FULLNAME}}</td>\n              <td class="lgl1" >{{item.CLAIMTYPE}}</td>\n              <td class="lgl1" >{{item.TRAVEL_DATE | date: \'dd/MM/yyyy H:mm\'}}</td>\n              <td class="lgl1">{{item.STATUS}}</td>\n              <td class="lgl1">{{item.STAGE}}</td>\n              <td class="lgl1">{{item.CLAIM_AMOUNT}}</td>\n              <td class="lgl1 fColor">\n                  <button ion-button item-end (click)=\'viewClaim(item.CLAIM_REQUEST_GUID, item.PROFILE_LEVEL)\'><ion-icon name="md-eye"></ion-icon></button>\n              </td>\n          </tr>\n      </table>\n    </ion-item>\n  </ion-list>\n</ion-content> -->'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/approver-task-list/approver-task-list.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], ApproverTaskListPage);
    return ApproverTaskListPage;
}());

//# sourceMappingURL=approver-task-list.js.map

/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimReportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the ClaimReportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimReportPage = /** @class */ (function () {
    function ClaimReportPage(navCtrl, navParams, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.page = 1;
        this.claimsListPrintTemp = [];
        this.totalClaimAmount = 0;
        this.travelClaimType = false;
        this.overTimeClaim = false;
        this.todayDate = new Date();
        this.btnSearch = false;
        this.currency = localStorage.getItem("cs_default_currency");
        // this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claim_report?filter=(CLAIM_REF_GUID='+this.claimrefguid + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        this.BindDepartment();
        this.BindYear();
        // this.BindClaimTypes();
    }
    ClaimReportPage.prototype.BindData = function () {
        var _this = this;
        this.totalClaimAmount = 0;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimsListPrint = data["resource"];
            _this.claimsList = _this.claimsListPrint;
            _this.totalClaimAmount = 0;
            _this.claimsListPrintTemp = [];
            // this.claimsList.forEach(element => {
            // });
            //console.log(this.claimsSocSummary);
            _this.claimsListPrint.forEach(function (element) {
                element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                if (element.TYPE === 'TRV') {
                    element.RowNum = "1";
                    _this.claimsListPrintTemp.push(element);
                    for (var i = 2; i <= 7; i++) {
                        var flag = false;
                        if (i <= 3)
                            flag = true;
                        else if (i == 4 && element.TollAmount != 0)
                            flag = true;
                        else if (i == 5 && element.ParkingAmount != 0)
                            flag = true;
                        else if (i == 6 && element.MealAmount != 0)
                            flag = true;
                        else if (i == 7 && element.AccAmount != 0)
                            flag = true;
                        if (flag) {
                            var myClonedObject = Object.assign({}, element);
                            myClonedObject.RowNum = i.toString();
                            _this.claimsListPrintTemp.push(myClonedObject);
                        }
                    }
                }
                else if (element.TYPE === 'OT') {
                    element.RowNum = "1";
                    _this.claimsListPrintTemp.push(element);
                    for (var i = 2; i <= 4; i++) {
                        var myClonedObject = Object.assign({}, element);
                        myClonedObject.RowNum = i.toString();
                        _this.claimsListPrintTemp.push(myClonedObject);
                    }
                }
                else {
                    element.RowNum = "1";
                    _this.claimsListPrintTemp.push(element);
                    var myClonedObject = Object.assign({}, element);
                    myClonedObject.RowNum = "2";
                    _this.claimsListPrintTemp.push(myClonedObject);
                }
                _this.totalClaimAmount = _this.totalClaimAmount + element.Total;
            });
            _this.btnSearch = true;
        });
    };
    ClaimReportPage.prototype.BindSummaryData = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrlSummary)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimsListSummary = data["resource"];
            _this.btnSearch = true;
        });
    };
    ClaimReportPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
            _this.btnSearch = true;
        });
        //console.log(this.deptList);
    };
    ClaimReportPage.prototype.BindYear = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_claim_ref_year?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.yearList = data["resource"];
            _this.btnSearch = true;
        });
    };
    //---------------------------------------------------
    ClaimReportPage.prototype.BindEmpDetails = function (user_guid) {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display?filter=(USER_GUID=' + user_guid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.empData = data["resource"];
            _this.btnSearch = true;
        });
    };
    ClaimReportPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?filter=(DEPT_GUID=' + dept + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList = data["resource"];
        });
    };
    ClaimReportPage.prototype.GetSocSummaryData = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrlSocSummary)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimsSocSummary = data["resource"];
            _this.btnSearch = true;
        });
    };
    // BindClaimTypes() {
    //   this.http
    //     .get(constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/main_claim_type?api_key=' + constants.DREAMFACTORY_API_KEY)
    //     .map(res => res.json())
    //     .subscribe(data => {
    //       this.claimTypeList = data["resource"];
    //     });
    // }
    ClaimReportPage.prototype.SearchClaimsData = function (dept, emp, month, year) {
        // alert(dept);
        // alert(emp);
        // alert(month);
        // alert(claimType);
        this.btnSearch = false;
        // this.year = new Date().getFullYear();
        //Added by bijay on 08/01/2019---------------------
        this.year = year;
        //-------------------------------------------------
        this.month = month;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report?filter=(DEPT_GUID=' + dept + ')AND(USER_GUID=' + emp + ')AND(MONTH=' + month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResourceUrlSummary = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report_summary?filter=(DEPARTMENT_GUID=' + dept + ')AND(USER_GUID=' + emp + ')AND(MONTH=' + month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.baseResourceUrlSocSummary = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report_soc_summary?filter=(DEPT_GUID=' + dept + ')AND(USER_GUID=' + emp + ')AND(MONTH=' + month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        //this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claim_report?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.BindEmpDetails(emp);
        this.BindData();
        this.BindSummaryData();
        this.GetSocSummaryData();
        // if (claimType == "58c59b56-289e-31a2-f708-138e81a9c823")
        //   this.travelClaimType = true;
        // else
        //   this.travelClaimType = false;
        // if (claimType == "37067b3d-1bf4-33a3-2b60-3ca40baf589a")
        //   this.overTimeClaim = true;
        // else
        //   this.overTimeClaim = false;
        //console.log(this.baseResourceUrl);
    };
    ClaimReportPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimReportPage');
    };
    // navigatePrint()
    // {
    //  this.navCtrl.push(ClaimReportPrintPage);
    // }
    ClaimReportPage.prototype.printToCart = function (printSectionId) {
        document.getElementById(printSectionId).hidden = false;
        var innerContents = document.getElementById(printSectionId).innerHTML;
        var popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');
        popupWinindow.document.open();
        popupWinindow.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">' + innerContents + '</html>');
        popupWinindow.document.close();
        document.getElementById(printSectionId).hidden = true;
    };
    ClaimReportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claim-report',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report/claim-report.html"*/'<!--\n  Generated template for the ClaimReportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n\n      <button ion-button menuToggle>\n          <ion-icon name="menu"></ion-icon>\n      </button>\n\n    <ion-title>{{ "CLAIM_REPORT" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-item style="width: 49%;display:inline-block;">\n\n    <ion-label>{{ "CLAIM_DEPARTMENT" | translate }} </ion-label>\n    <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment($event)" #ddlDept>\n      <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n    </ion-select>\n\n  </ion-item>\n\n  <ion-item style="width: 30%;display:inline-block;">\n    <ion-label>{{ "CLAIM_MONTH" | translate }}\n\n      </ion-label>\n\n    <ion-select interface="popover" #ddlmonth>\n      <ion-option value="Jan">Jan</ion-option>\n      <ion-option value="Feb">Feb</ion-option>\n      <ion-option value="Mar">Mar</ion-option>\n      <ion-option value="Apr">Apr</ion-option>\n      <ion-option value="May">May</ion-option>\n      <ion-option value="Jun">Jun</ion-option>\n      <ion-option value="Jul">Jul</ion-option>\n      <ion-option value="Aug">Aug</ion-option>\n      <ion-option value="Sep">Sep</ion-option>\n      <ion-option value="Oct">Oct</ion-option>\n      <ion-option value="Nov">Nov</ion-option>\n      <ion-option value="Dec">Dec</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item style="width: 20%;display:inline-block;">\n    <ion-label>{{ "YEAR" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlyear>\n      <ion-option *ngFor="let yr of yearList" [value]="yr.YEAR">{{yr.YEAR}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item style="width: 100%;display:inline-block;">\n\n    <ion-label>{{ "CLAIM_USER_NAME" | translate }} </ion-label>\n\n    <ion-select interface="popover" #ddlEmployee>\n      <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n    </ion-select>\n\n\n  </ion-item>\n\n\n  <ion-item>\n    <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlDept.value, ddlEmployee.value, ddlmonth.value, ddlyear.value)">{{ "SEARCH" | translate }}</button>\n    <button ion-button item-end (click)="printToCart(\'printSectionId\')">Print</button>\n  </ion-item>\n  <ion-list>\n    <ion-item>\n      <table class="Tabler ">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">No.</th>\n          <th class="lgl1" style="width:100px">Claim Date</th>\n          <th class="lgl1" style="width:65px">Type</th>\n          <th class="lgl1">Project/SOC/Customer</th>\n\n\n          <th class="lgl1" style="width:85px">Mode</th>\n  \n          <th class="lgl1">From</th>\n          <th class="lgl1">To</th>\n          <th class="lgl1">Round Trip</th>\n\n          <th class="lgl1 tblBrRight" style="width:130px;">Total Amount({{currency }})</th>\n        </tr>\n\n        <tr class="col7" *ngFor="let claim of claimsList | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1">{{ 10 * (page - 1) + i+1 }}</td>\n          <td class="lgl1">{{claim.TRAVEL_DATE | date:\'d/M/y\'}}</td>\n          <td class="lgl1" text-wrap>{{claim.TYPE}}</td>\n          <td class="lgl1" text-wrap>{{claim.PROJECT_NAME}} {{claim.SOC_NO}} {{claim.CUSTOMER_NAME}}</td>\n          <td class="lgl1" text-wrap>{{claim.MODE}}</td>\n          <td class="lgl1" text-wrap>{{claim.from}}</td>\n          <td class="lgl1" text-wrap>{{claim.to}}</td>\n          <td class="lgl1" *ngIf="claim.ROUND_TRIP==1" style="text-align: center !important;">Y</td>\n          <td class="lgl1" *ngIf="claim.ROUND_TRIP==0" style="text-align: center !important;">-</td>\n          <td class="lgl1" style="text-align: right !important;">{{claim.Total | number:\'1.2-2\'}}</td>\n        </tr>\n\n        <tr class="col7">\n          <td colspan="9" class="lgl11" style="color:#50C878;"> Total Amount({{currency }}) : {{totalClaimAmount | number:\'1.2-2\'}}</td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n</ion-content>\n<div id="printSectionId" hidden>\n  <page-claim-report-print [claimsListPrint]="claimsListPrintTemp" [claimsListSummary]="claimsListSummary" [empData]="empData" [year]="year" [month]="month" [totalClaimAmount]="totalClaimAmount" [claimsSocSummary]="claimsSocSummary"></page-claim-report-print>\n\n</div>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report/claim-report.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], ClaimReportPage);
    return ClaimReportPage;
}());

//# sourceMappingURL=claim-report.js.map

/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AllClaimListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__travel_claim_view_travel_claim_view_component__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__entertainment_claim_view_entertainment_claim_view__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__overtime_claim_view_overtime_claim_view__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__print_claim_view_print_claim_view__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__gift_claim_view_gift_claim_view__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__miscellaneous_claim_view_miscellaneous_claim_view__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__entertainmentclaim_entertainmentclaim__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__travel_claim_travel_claim_component__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__printclaim_printclaim__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__giftclaim_giftclaim__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__overtimeclaim_overtimeclaim__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__miscellaneous_claim_miscellaneous_claim__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



















/**
 * Generated class for the UserclaimslistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AllClaimListPage = /** @class */ (function () {
    function AllClaimListPage(excelService, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.FinanceLogin = false;
        this.page = 1;
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.currency = localStorage.getItem("cs_default_currency");
        this.ExcelData = [];
        this.claimrefguid = navParams.get("claimRefGuid");
        this.userguid = navParams.get("userGuid");
        this.month = navParams.get("Month");
        this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
            this.FinanceLogin = true;
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=1)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindClaimTypes();
        this.BindYears();
        this.BindData("All", "All", "All", "All", "All");
        if (this.FinanceLogin) {
            this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_getuserdetails?filter=(USER_GUID=' + this.userguid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            this.getuserDetails();
        }
        this.excelService = excelService;
    }
    AllClaimListPage.prototype.getuserDetails = function () {
        var _this = this;
        this.http
            .get(this.baseResourceUrl1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.userdetails = data["resource"];
        });
    };
    ;
    AllClaimListPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth, ddlClaimTypes, ddlStatus) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimhistorydetails = data["resource"];
            if (_this.claimhistorydetails.length != 0 && _this.loginUserRole === "Finance Admin") {
                _this.claimhistorydetails.forEach(function (element) {
                    element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                    if (element.STATUS.toString() === "Approved" && element.PROFILE_LEVEL.toString() === "3") {
                        element.STATUS = "Paid";
                    }
                });
            }
            _this.claimhistorydetails1 = _this.claimhistorydetails;
            if (_this.claimhistorydetails.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.DEPARTMENT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
                if (ddlClaimTypes.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === ddlClaimTypes.toString(); });
                }
                if (ddlStatus.toString() !== "All") {
                    _this.claimhistorydetails = _this.claimhistorydetails.filter(function (s) { return s.STATUS.toString() === ddlStatus.toString(); });
                }
            }
            for (var item in data["resource"]) {
                _this.ExcelData.push({ Name: data["resource"][item]["FULLNAME"], Department: data["resource"][item]["DEPARTMENT"], Month: data["resource"][item]["MONTH"], ClaimType: data["resource"][item]["CLAIM_TYPE"], Date: data["resource"][item]["TRAVEL_DATE"], Status: data["resource"][item]["STATUS"], Amount: data["resource"][item]["CLAIM_AMOUNT"] });
            }
        });
    };
    AllClaimListPage.prototype.onSearchInput = function () {
        // alert('hi')
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimhistorydetails = this.claimhistorydetails1.filter(function (item) {
                var claimtype;
                var status;
                var amount;
                var date;
                if (item.CLAIM_TYPE != null) {
                    claimtype = item.CLAIM_TYPE.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.TRAVEL_DATE != null) {
                    date = item.TRAVEL_DATE.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.STATUS != null) {
                    status = item.STATUS.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIM_AMOUNT != null) {
                    amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((claimtype > -1)
                    || (date > -1)
                    || (status > -1)
                    || (amount > -1));
            });
        }
        else {
            this.claimhistorydetails = this.claimhistorydetails1;
        }
    };
    AllClaimListPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimhistorydetailPage');
    };
    AllClaimListPage.prototype.ExportToExcel = function () {
        // this.excelService.exportAsExcelFile(this.claimhistorydetails,'Data');
        this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
    };
    AllClaimListPage.prototype.ClaimNavigation = function (designation, claimRequestGUID, level, claimType, navType) {
        this.claimRequestGUID = claimRequestGUID;
        this.level = level;
        this.designation = designation;
        switch (claimType) {
            case '2d8d7c80-c9ae-9736-b256-4d592e7b7887':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_10__gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_15__giftclaim_giftclaim__["a" /* GiftclaimPage */]);
                break;
            case '37067b3d-1bf4-33a3-2b60-3ca40baf589a':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_8__overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_16__overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */]);
                break;
            case '84b3cee2-9f9d-ccb9-89a1-1e70cef19f86':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_11__miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_17__miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */]);
                break;
            case '58c59b56-289e-31a2-f708-138e81a9c823':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_6__travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_13__travel_claim_travel_claim_component__["a" /* TravelclaimPage */]);
                break;
            case 'd9567482-033a-6d92-3246-f33043155746':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_9__print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_14__printclaim_printclaim__["a" /* PrintclaimPage */]);
                break;
            case 'f3217ecc-19d7-903a-6c56-78fdbd7bbcf1':
                if (navType === 1)
                    this.pushPage(__WEBPACK_IMPORTED_MODULE_7__entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */]);
                else
                    this.editPage(__WEBPACK_IMPORTED_MODULE_12__entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */]);
                break;
        }
    };
    AllClaimListPage.prototype.pushPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isApprover: false,
            approverDesignation: this.designation,
            cr_GUID: this.claimRequestGUID,
            level_no: this.level,
            approver_GUID: localStorage.getItem('g_USER_GUID')
        });
    };
    AllClaimListPage.prototype.editPage = function (claimType) {
        this.navCtrl.push(claimType, {
            isFormEdit: 'true',
            cr_GUID: this.claimRequestGUID
        });
    };
    AllClaimListPage.prototype.BindClaimTypes = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTypeList = data["resource"];
        });
    };
    AllClaimListPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    AllClaimListPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    AllClaimListPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    AllClaimListPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlClaimTypes, ddlStatus, ddlYear) {
        if (this.claimrefguid !== null && this.claimrefguid !== undefined) {
            if (this.loginUserRole === "Finance Admin") {
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=3)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            }
            else {
                this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(CLAIM_REF_GUID=' + this.claimrefguid + ')AND(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=2)&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            }
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistorydetail?filter=(APPROVER=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=1)AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(ddlDept, ddlEmployee, ddlmonth, ddlClaimTypes, ddlStatus);
    };
    AllClaimListPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-userclaimslist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/all-claim-list/all-claim-list.html"*/'<!--\n  Generated template for the ClaimhistorydetailPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title *ngIf="FinanceLogin">{{ "ALL_CLAIMS_LIST" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-fab top right edge>\n    <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n      <ion-icon name="download"></ion-icon>\n    </button>\n  </ion-fab>\n\n  <ion-item class="fuha">\n\n    <ion-label>{{ "LIST_DEPARTMENT" | translate }}</ion-label>\n    <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_USER_NAME" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlEmployee>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_YEAR" | translate }}</ion-label>\n    <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n      <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item class="fuha">\n    <ion-label>{{ "CLAIM_MONTH" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlmonth>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option value="Jan">Jan</ion-option>\n      <ion-option value="Feb">Feb</ion-option>\n      <ion-option value="Mar">Mar</ion-option>\n      <ion-option value="Apr">Apr</ion-option>\n      <ion-option value="May">May</ion-option>\n      <ion-option value="Jun">Jun</ion-option>\n      <ion-option value="Jul">Jul</ion-option>\n      <ion-option value="Aug">Aug</ion-option>\n      <ion-option value="Sep">Sep</ion-option>\n      <ion-option value="Oct">Oct</ion-option>\n      <ion-option value="Nov">Nov</ion-option>\n      <ion-option value="Dec">Dec</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "CLAIM_TYPE" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlClaimTypes>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let claimType of claimTypeList" [value]="claimType.CLAIM_TYPE_GUID">{{claimType.NAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n    <ion-label>{{ "LIST_STATUS" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlStatus>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option [value]="Paid">Paid</ion-option>\n      <!-- <ion-option [value]="Pending">Pending</ion-option> -->\n      <ion-option [value]="Approved">Approved</ion-option>\n      <ion-option [value]="Rejected">Rejected</ion-option>\n\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <button ion-button item-end (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlClaimTypes.value,ddlStatus.value,ddlYear.value)">Search</button>\n  </ion-item>\n  <!-- <ion-item>\n    <button ion-button item-end (click)="SearchClaimsData(\'All\',\'All\',\'All\',ddlClaimTypes.value,ddlStatus.value,\'All\')">Search</button>\n  </ion-item> -->\n\n\n  <div *ngIf="FinanceLogin">\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n      <ion-label>{{ "LIST_NAME" | translate }} {{userdetail.FULLNAME}}</ion-label>\n\n    </ion-item>\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n\n      <ion-label>{{ "LIST_DEPARTMENT" | translate }} {{userdetail.DEPARTMENT}}</ion-label>\n    </ion-item>\n\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n      <ion-label>{{ "LIST_DESIGNATION" | translate }} {{userdetail.DESIGNATION}} </ion-label>\n    </ion-item>\n    <ion-item *ngFor="let userdetail of userdetails" class="fuha">\n\n      <ion-label>{{ "LIST_MONTH" | translate }} {{this.month}}</ion-label>\n\n    </ion-item>\n\n  </div>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list ">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1" *ngIf="!FinanceLogin">Name</th>\n          <th class="lgl1" *ngIf="!FinanceLogin">Department</th>\n          <th class="lgl1" *ngIf="!FinanceLogin">Month</th>\n\n          <th class="lgl1">Claim Type</th>\n          <th class="lgl1">Date</th>\n          <th class="lgl1">Status</th>\n          <!-- <th class="lgl1">STAGE</th> -->\n          <th class="lgl1 tblBrRight" style="width:110px">Amount({{currency }})</th>\n          <th class="lgl1 tblBrRight" style="width:120px">Action</th>\n        </tr> \n\n        <tr class="col7" *ngFor="let claimhistorydetail of claimhistorydetails | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n          <td class="lgl1 getHeader" reshead="Name" *ngIf="!FinanceLogin">{{claimhistorydetail.FULLNAME}}</td>\n          <td class="lgl1 getHeader" reshead="Department" *ngIf="!FinanceLogin">{{claimhistorydetail.DEPARTMENT}}</td>\n          <td class="lgl1 getHeader" reshead="Month" *ngIf="!FinanceLogin">{{claimhistorydetail.MONTH}}</td>\n\n          <td class="lgl1 getHeader" reshead="Claim Type">{{claimhistorydetail.CLAIM_TYPE}}</td>\n          <td class="lgl1 getHeader" reshead="Date">{{claimhistorydetail.TRAVEL_DATE | date: \'dd/MM/yyyy\'}}</td>\n          <td class="lgl1 getHeader" reshead="Status">{{claimhistorydetail.STATUS}}</td>\n          <!-- <td class="lgl1">{{claimhistorydetail.STAGE}}</td> -->\n          <td class="lgl1 getHeader" reshead="Amount">{{claimhistorydetail.CLAIM_AMOUNT | number:\'1.2-2\'}}</td>\n          <td class="lgl1 getHeader fColor" reshead="Action">\n            <button ion-button item-end (click)="ClaimNavigation(claimhistorydetail.STAGE_GUID,claimhistorydetail.CLAIM_REQUEST_GUID, claimhistorydetail.PROFILE_LEVEL, claimhistorydetail.CLAIM_TYPE_GUID,1)">\n              <ion-icon name="md-eye"></ion-icon>\n            </button>\n            <!-- <button ion-button item-end [disabled]="claimhistorydetail.PROFILE_LEVEL!=1 && claimhistorydetail.PROFILE_LEVEL!=0" (click)="ClaimNavigation(claimhistorydetail.STAGE_GUID, claimhistorydetail.CLAIM_REQUEST_GUID, claimhistorydetail.PROFILE_LEVEL, claimhistorydetail.CLAIM_TYPE_GUID,2)">\n              <ion-icon name="md-create"></ion-icon>\n            </button>\n            <button ion-button item-end [disabled]="claimhistorydetail.PROFILE_LEVEL!=1" (click)="DeleteClaimRequest(claimhistorydetail.CLAIM_REQUEST_GUID,claimhistorydetail.CLAIM_TYPE_GUID)">\n              <ion-icon name="md-close"></ion-icon>\n            </button> -->\n          </td>\n        </tr>\n\n\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/all-claim-list/all-claim-list.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_18__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_18__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], AllClaimListPage);
    return AllClaimListPage;
}());

//# sourceMappingURL=all-claim-list.js.map

/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(493);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(510);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export createTranslateLoader */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_storage__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_http_loader__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__app_component__ = __webpack_require__(562);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_account_account__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pages_login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_banksetup_banksetup__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_branchsetup_branchsetup__ = __webpack_require__(291);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_cashcardsetup_cashcardsetup__ = __webpack_require__(292);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_claimtype_claimtype__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_companysetup_companysetup__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__pages_designationsetup_designationsetup__ = __webpack_require__(421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_departmentsetup_departmentsetup__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_mileagesetup_mileagesetup__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_rolesetup_rolesetup__ = __webpack_require__(449);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_paymenttypesetup_paymenttypesetup__ = __webpack_require__(427);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_qualificationsetup_qualificationsetup__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_subsciptionsetup_subsciptionsetup__ = __webpack_require__(476);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_signup_signup__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_tabs_tabs__ = __webpack_require__(470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_tenantsetup_tenantsetup__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_setup_setup__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__providers_conference_data__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__providers_user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_medicalclaim_medicalclaim__ = __webpack_require__(474);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_printclaim_printclaim__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__pages_giftclaim_giftclaim__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_overtimeclaim_overtimeclaim__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__pages_approver_task_list_approver_task_list__ = __webpack_require__(489);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__pages_all_claim_list_all_claim_list__ = __webpack_require__(491);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__pages_allclaimhistory_claimhistory__ = __webpack_require__(682);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_countrysetup_countrysetup__ = __webpack_require__(443);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_statesetup_statesetup__ = __webpack_require__(444);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_setupguide_setupguide__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_entertainmentclaim_entertainmentclaim__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_miscellaneous_claim_miscellaneous_claim__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_user_user__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_soc_registration_soc_registration__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__pages_adminsetup_adminsetup__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__pages_permission_permission__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__pages_rolemodulesetup_rolemodulesetup__ = __webpack_require__(451);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__pages_pagesetup_pagesetup__ = __webpack_require__(481);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__pages_submodulesetup_submodulesetup__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__pages_modulesetup_modulesetup__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__pages_device_setup_device_setup__ = __webpack_require__(447);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__pages_upload_upload__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__pages_translate_translate__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__ionic_native_camera__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__ionic_native_file__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__ionic_native_file_path__ = __webpack_require__(434);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__angular_common_http__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57_ng2_charts_ng2_charts__ = __webpack_require__(689);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57_ng2_charts_ng2_charts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_57_ng2_charts_ng2_charts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__pages_profile_setup_profile_setup_component__ = __webpack_require__(488);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__pages_add_toll_add_toll_component__ = __webpack_require__(471);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__pages_Services__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__pages_claimhistory_claimhistory__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__pages_claimhistorydetail_claimhistorydetail__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__pages_claimapprovertasklist_claimapprovertasklist__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__pages_claimtasklist_claimtasklist__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__pages_userclaimslist_userclaimslist__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__pages_claim_report_claim_report__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__pages_monthly_claim_report_monthly_claim_report__ = __webpack_require__(692);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__pages_claim_report_user_claim_report_user__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__pages_claim_report_print_claim_report_print__ = __webpack_require__(694);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__pages_leave_report_leave_report__ = __webpack_require__(695);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__pages_attendance_report_attendance_report__ = __webpack_require__(696);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__pages_finance_payment_tasklist_finance_payment_tasklist__ = __webpack_require__(697);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__pages_common_tasklist_common_tasklist__ = __webpack_require__(698);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__pages_payment_history_payment_history__ = __webpack_require__(699);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__pages_common_historylist_common_historylist__ = __webpack_require__(700);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__pages_claim_summary_claim_summary__ = __webpack_require__(701);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__pages_travel_claim_view_travel_claim_view_component__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__pages_entertainment_claim_view_entertainment_claim_view__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__pages_overtime_claim_view_overtime_claim_view__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__pages_medical_claim_view_medical_claim_view__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__pages_print_claim_view_print_claim_view__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__pages_gift_claim_view_gift_claim_view__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__pages_miscellaneous_claim_view_miscellaneous_claim_view__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__providers_profile_manager_provider__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__pages_customer_setup_customer_setup__ = __webpack_require__(452);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__pages_change_password_change_password__ = __webpack_require__(702);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__pages_dashboard_dashboard__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__pages_settings_settings__ = __webpack_require__(453);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__pages_companysettings_companysettings__ = __webpack_require__(455);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__pages_dbmaintenance_dbmaintenance__ = __webpack_require__(456);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__pages_approval_profile_approval_profile__ = __webpack_require__(457);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__pages_import_excel_data_import_excel_data__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95_ngx_pagination__ = __webpack_require__(703);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__ionic_native_transfer__ = __webpack_require__(174);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




// import { InAppBrowser } from '@ionic-native/in-app-browser';
// import { SplashScreen } from '@ionic-native/splash-screen';
// import { StatusBar } from '@ionic-native/status-bar';




// import { PopoverPage } from '../pages/about-popover/about-popover';

















































// import { Chart } from 'chart.js';

// import {AddTollPage} from '../pages/add-toll/add-toll';
function createTranslateLoader(http) {
    return new __WEBPACK_IMPORTED_MODULE_6__ngx_translate_http_loader__["a" /* TranslateHttpLoader */](http, './assets/i18n/', '.json');
}



//import { TravelClaim_Service } from '../services/travelclaim_service';


































// import { Ng2PaginationModule } from 'ng2-pagination';


// import { Transfer } from "../providers/file-transfer";
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_7__app_component__["a" /* ConferenceApp */],
                __WEBPACK_IMPORTED_MODULE_8__pages_account_account__["a" /* AccountPage */],
                __WEBPACK_IMPORTED_MODULE_9__pages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_33__pages_all_claim_list_all_claim_list__["a" /* AllClaimListPage */], __WEBPACK_IMPORTED_MODULE_28__pages_medicalclaim_medicalclaim__["a" /* MedicalclaimPage */], __WEBPACK_IMPORTED_MODULE_34__pages_allclaimhistory_claimhistory__["a" /* AllClaimhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_printclaim_printclaim__["a" /* PrintclaimPage */],
                __WEBPACK_IMPORTED_MODULE_30__pages_giftclaim_giftclaim__["a" /* GiftclaimPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_permission_permission__["a" /* PermissionPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_rolemodulesetup_rolemodulesetup__["a" /* RolemodulesetupPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_pagesetup_pagesetup__["a" /* PagesetupPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_countrysetup_countrysetup__["a" /* CountrysetupPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_statesetup_statesetup__["a" /* StatesetupPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_setupguide_setupguide__["a" /* SetupguidePage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_submodulesetup_submodulesetup__["a" /* SubmodulesetupPage */],
                __WEBPACK_IMPORTED_MODULE_25__pages_setup_setup__["a" /* SetupPage */],
                __WEBPACK_IMPORTED_MODULE_10__pages_banksetup_banksetup__["a" /* BanksetupPage */],
                __WEBPACK_IMPORTED_MODULE_11__pages_branchsetup_branchsetup__["a" /* BranchsetupPage */],
                __WEBPACK_IMPORTED_MODULE_14__pages_companysetup_companysetup__["a" /* CompanysetupPage */],
                __WEBPACK_IMPORTED_MODULE_16__pages_departmentsetup_departmentsetup__["a" /* DepartmentsetupPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_claimtype_claimtype__["a" /* ClaimtypePage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_cashcardsetup_cashcardsetup__["a" /* CashcardsetupPage */],
                __WEBPACK_IMPORTED_MODULE_15__pages_designationsetup_designationsetup__["a" /* DesignationsetupPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_translate_translate__["a" /* TranslatePage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_mileagesetup_mileagesetup__["a" /* MileagesetupPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_rolesetup_rolesetup__["a" /* RolesetupPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_modulesetup_modulesetup__["a" /* ModulesetupPage */], __WEBPACK_IMPORTED_MODULE_49__pages_device_setup_device_setup__["a" /* DeviceSetupPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_paymenttypesetup_paymenttypesetup__["a" /* PaymenttypesetupPage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_qualificationsetup_qualificationsetup__["a" /* QualificationsetupPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_subsciptionsetup_subsciptionsetup__["a" /* SubsciptionsetupPage */],
                __WEBPACK_IMPORTED_MODULE_24__pages_tenantsetup_tenantsetup__["a" /* TenantsetupPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_user_user__["a" /* UserPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_soc_registration_soc_registration__["a" /* SocRegistrationPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_adminsetup_adminsetup__["a" /* AdminsetupPage */],
                __WEBPACK_IMPORTED_MODULE_32__pages_approver_task_list_approver_task_list__["a" /* ApproverTaskListPage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_medical_claim_view_medical_claim_view__["a" /* MedicalClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_81__pages_print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_82__pages_gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_83__pages_miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_upload_upload__["a" /* UploadPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_profile_setup_profile_setup_component__["a" /* ProfileSetupPage */],
                __WEBPACK_IMPORTED_MODULE_59__pages_add_toll_add_toll_component__["a" /* AddTollPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_claimhistory_claimhistory__["a" /* ClaimhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_claimhistorydetail_claimhistorydetail__["a" /* ClaimhistorydetailPage */],
                __WEBPACK_IMPORTED_MODULE_63__pages_claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */],
                __WEBPACK_IMPORTED_MODULE_64__pages_claimtasklist_claimtasklist__["a" /* ClaimtasklistPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_userclaimslist_userclaimslist__["a" /* UserclaimslistPage */],
                __WEBPACK_IMPORTED_MODULE_66__pages_claim_report_claim_report__["a" /* ClaimReportPage */],
                __WEBPACK_IMPORTED_MODULE_67__pages_monthly_claim_report_monthly_claim_report__["a" /* MonthlyClaimReportPage */],
                __WEBPACK_IMPORTED_MODULE_86__pages_customer_setup_customer_setup__["a" /* CustomerSetupPage */],
                __WEBPACK_IMPORTED_MODULE_87__pages_change_password_change_password__["a" /* ChangePasswordPage */],
                __WEBPACK_IMPORTED_MODULE_88__pages_dashboard_dashboard__["a" /* DashboardPage */], __WEBPACK_IMPORTED_MODULE_94__pages_import_excel_data_import_excel_data__["a" /* ImportExcelDataPage */],
                __WEBPACK_IMPORTED_MODULE_68__pages_claim_report_user_claim_report_user__["a" /* ClaimReportUserPage */],
                __WEBPACK_IMPORTED_MODULE_69__pages_claim_report_print_claim_report_print__["a" /* ClaimReportPrintPage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_leave_report_leave_report__["a" /* LeaveReportPage */],
                __WEBPACK_IMPORTED_MODULE_71__pages_attendance_report_attendance_report__["a" /* AttendanceReportPage */],
                __WEBPACK_IMPORTED_MODULE_89__pages_settings_settings__["a" /* SettingsPage */],
                __WEBPACK_IMPORTED_MODULE_72__pages_finance_payment_tasklist_finance_payment_tasklist__["a" /* FinancePaymentTasklistPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_common_tasklist_common_tasklist__["a" /* CommonTasklistPage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_payment_history_payment_history__["a" /* PaymentHistoryPage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_common_historylist_common_historylist__["a" /* CommonHistorylistPage */],
                __WEBPACK_IMPORTED_MODULE_90__pages_companysettings_companysettings__["a" /* CompanysettingsPage */],
                __WEBPACK_IMPORTED_MODULE_91__pages_dbmaintenance_dbmaintenance__["a" /* DbmaintenancePage */],
                __WEBPACK_IMPORTED_MODULE_92__pages_approval_profile_approval_profile__["a" /* ApprovalProfilePage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_claim_summary_claim_summary__["a" /* ClaimSummaryPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* HttpModule */], __WEBPACK_IMPORTED_MODULE_56__angular_common_http__["b" /* HttpClientModule */], __WEBPACK_IMPORTED_MODULE_57_ng2_charts_ng2_charts__["ChartsModule"], __WEBPACK_IMPORTED_MODULE_95_ngx_pagination__["a" /* NgxPaginationModule */],
                __WEBPACK_IMPORTED_MODULE_5__ngx_translate_core__["b" /* TranslateModule */].forRoot({
                    loader: {
                        provide: __WEBPACK_IMPORTED_MODULE_5__ngx_translate_core__["a" /* TranslateLoader */],
                        useFactory: (createTranslateLoader),
                        deps: [__WEBPACK_IMPORTED_MODULE_56__angular_common_http__["a" /* HttpClient */]]
                    }
                }),
                __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["h" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_7__app_component__["a" /* ConferenceApp */], {}, {
                    links: [
                        { component: __WEBPACK_IMPORTED_MODULE_23__pages_tabs_tabs__["a" /* TabsPage */], name: 'TabsPage', segment: 'tabs' },
                        // { component: DashboardPage, name: 'Home', segment: 'Home' },
                        { component: __WEBPACK_IMPORTED_MODULE_94__pages_import_excel_data_import_excel_data__["a" /* ImportExcelDataPage */], name: 'ImportExcelDataPage', segment: 'ImportExcelDataPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_88__pages_dashboard_dashboard__["a" /* DashboardPage */], name: 'DashboardPage', segment: 'DashboardPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_25__pages_setup_setup__["a" /* SetupPage */], name: 'SetupPage', segment: 'Setup' },
                        { component: __WEBPACK_IMPORTED_MODULE_43__pages_adminsetup_adminsetup__["a" /* AdminsetupPage */], name: 'AdminsetupPage', segment: 'AdminsetupPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_9__pages_login_login__["a" /* LoginPage */], name: 'LoginPage', segment: 'login' },
                        { component: __WEBPACK_IMPORTED_MODULE_8__pages_account_account__["a" /* AccountPage */], name: 'AccountPage', segment: 'account' },
                        { component: __WEBPACK_IMPORTED_MODULE_22__pages_signup_signup__["a" /* SignupPage */], name: 'SignupPage', segment: 'signup' },
                        { component: __WEBPACK_IMPORTED_MODULE_87__pages_change_password_change_password__["a" /* ChangePasswordPage */], name: 'ChangePasswordPage', segment: 'changepassword' },
                        { component: __WEBPACK_IMPORTED_MODULE_33__pages_all_claim_list_all_claim_list__["a" /* AllClaimListPage */], name: 'AllClaimListPage', segment: 'AllClaimList' },
                        { component: __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */], name: 'TravelclaimPage', segment: 'TravelclaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_38__pages_entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */], name: 'EntertainmentclaimPage', segment: 'EntertainmentclaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_30__pages_giftclaim_giftclaim__["a" /* GiftclaimPage */], name: 'GiftclaimPage', segment: 'GiftclaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_31__pages_overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */], name: 'OvertimeclaimPage', segment: 'OvertimeclaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_29__pages_printclaim_printclaim__["a" /* PrintclaimPage */], name: 'PrintclaimPage', segment: 'PrintclaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_40__pages_miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */], name: 'MiscellaneousClaimPage', segment: 'MiscellaneousClaimPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_86__pages_customer_setup_customer_setup__["a" /* CustomerSetupPage */], name: 'CustomerSetupPage', segment: 'CustomerSetupPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_34__pages_allclaimhistory_claimhistory__["a" /* AllClaimhistoryPage */], name: 'AllClaimhistoryPage', segment: 'AllClaimhistoryPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_64__pages_claimtasklist_claimtasklist__["a" /* ClaimtasklistPage */], name: 'ClaimtasklistPage', segment: 'ClaimtasklistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_63__pages_claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */], name: 'ClaimapprovertasklistPage', segment: 'ClaimapprovertasklistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_65__pages_userclaimslist_userclaimslist__["a" /* UserclaimslistPage */], name: 'UserclaimslistPage', segment: 'UserclaimslistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_61__pages_claimhistory_claimhistory__["a" /* ClaimhistoryPage */], name: 'ClaimhistoryPage', segment: 'ClaimhistoryPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_62__pages_claimhistorydetail_claimhistorydetail__["a" /* ClaimhistorydetailPage */], name: 'ClaimhistorydetailPage', segment: 'ClaimhistorydetailPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_66__pages_claim_report_claim_report__["a" /* ClaimReportPage */], name: 'ClaimReportPage', segment: 'ClaimReportPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_67__pages_monthly_claim_report_monthly_claim_report__["a" /* MonthlyClaimReportPage */], name: 'MonthlyClaimReportPage', segment: 'MonthlyClaimReportPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_68__pages_claim_report_user_claim_report_user__["a" /* ClaimReportUserPage */], name: 'ClaimReportUserPage', segment: 'ClaimReportUserPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_70__pages_leave_report_leave_report__["a" /* LeaveReportPage */], name: 'LeaveReportPage', segment: 'LeaveReportPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_71__pages_attendance_report_attendance_report__["a" /* AttendanceReportPage */], name: 'AttendanceReportPage', segment: 'AttendanceReportPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_69__pages_claim_report_print_claim_report_print__["a" /* ClaimReportPrintPage */], name: 'ClaimReportPrintPage', segment: 'ClaimReportPrintPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_72__pages_finance_payment_tasklist_finance_payment_tasklist__["a" /* FinancePaymentTasklistPage */], name: 'FinancePaymentTasklistPage', segment: 'FinancePaymentTasklistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_73__pages_common_tasklist_common_tasklist__["a" /* CommonTasklistPage */], name: 'CommonTasklistPage', segment: 'CommonTasklistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_74__pages_payment_history_payment_history__["a" /* PaymentHistoryPage */], name: 'PaymentHistoryPage', segment: 'PaymentHistoryPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_75__pages_common_historylist_common_historylist__["a" /* CommonHistorylistPage */], name: 'CommonHistorylistPage', segment: 'CommonHistorylistPage' },
                        { component: __WEBPACK_IMPORTED_MODULE_76__pages_claim_summary_claim_summary__["a" /* ClaimSummaryPage */], name: 'ClaimSummaryPage', segment: 'ClaimSummaryPage' }
                    ]
                }),
                __WEBPACK_IMPORTED_MODULE_4__ionic_storage__["a" /* IonicStorageModule */].forRoot()
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_3_ionic_angular__["f" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_7__app_component__["a" /* ConferenceApp */],
                __WEBPACK_IMPORTED_MODULE_8__pages_account_account__["a" /* AccountPage */],
                __WEBPACK_IMPORTED_MODULE_9__pages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_33__pages_all_claim_list_all_claim_list__["a" /* AllClaimListPage */], __WEBPACK_IMPORTED_MODULE_37__pages_setupguide_setupguide__["a" /* SetupguidePage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_statesetup_statesetup__["a" /* StatesetupPage */],
                __WEBPACK_IMPORTED_MODULE_25__pages_setup_setup__["a" /* SetupPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_modulesetup_modulesetup__["a" /* ModulesetupPage */], __WEBPACK_IMPORTED_MODULE_49__pages_device_setup_device_setup__["a" /* DeviceSetupPage */],
                __WEBPACK_IMPORTED_MODULE_28__pages_medicalclaim_medicalclaim__["a" /* MedicalclaimPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */], __WEBPACK_IMPORTED_MODULE_34__pages_allclaimhistory_claimhistory__["a" /* AllClaimhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_printclaim_printclaim__["a" /* PrintclaimPage */],
                __WEBPACK_IMPORTED_MODULE_30__pages_giftclaim_giftclaim__["a" /* GiftclaimPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_overtimeclaim_overtimeclaim__["a" /* OvertimeclaimPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_entertainmentclaim_entertainmentclaim__["a" /* EntertainmentclaimPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_miscellaneous_claim_miscellaneous_claim__["a" /* MiscellaneousClaimPage */],
                __WEBPACK_IMPORTED_MODULE_10__pages_banksetup_banksetup__["a" /* BanksetupPage */],
                __WEBPACK_IMPORTED_MODULE_11__pages_branchsetup_branchsetup__["a" /* BranchsetupPage */],
                __WEBPACK_IMPORTED_MODULE_14__pages_companysetup_companysetup__["a" /* CompanysetupPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_claimtype_claimtype__["a" /* ClaimtypePage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_cashcardsetup_cashcardsetup__["a" /* CashcardsetupPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_permission_permission__["a" /* PermissionPage */],
                __WEBPACK_IMPORTED_MODULE_15__pages_designationsetup_designationsetup__["a" /* DesignationsetupPage */],
                __WEBPACK_IMPORTED_MODULE_16__pages_departmentsetup_departmentsetup__["a" /* DepartmentsetupPage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_mileagesetup_mileagesetup__["a" /* MileagesetupPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_rolesetup_rolesetup__["a" /* RolesetupPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_adminsetup_adminsetup__["a" /* AdminsetupPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_paymenttypesetup_paymenttypesetup__["a" /* PaymenttypesetupPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_pagesetup_pagesetup__["a" /* PagesetupPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_countrysetup_countrysetup__["a" /* CountrysetupPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_submodulesetup_submodulesetup__["a" /* SubmodulesetupPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_translate_translate__["a" /* TranslatePage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_qualificationsetup_qualificationsetup__["a" /* QualificationsetupPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_subsciptionsetup_subsciptionsetup__["a" /* SubsciptionsetupPage */],
                __WEBPACK_IMPORTED_MODULE_24__pages_tenantsetup_tenantsetup__["a" /* TenantsetupPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_rolemodulesetup_rolemodulesetup__["a" /* RolemodulesetupPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_32__pages_approver_task_list_approver_task_list__["a" /* ApproverTaskListPage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_travel_claim_view_travel_claim_view_component__["a" /* TravelClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_entertainment_claim_view_entertainment_claim_view__["a" /* EntertainmentClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_medical_claim_view_medical_claim_view__["a" /* MedicalClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_overtime_claim_view_overtime_claim_view__["a" /* OvertimeClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_81__pages_print_claim_view_print_claim_view__["a" /* PrintClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_82__pages_gift_claim_view_gift_claim_view__["a" /* GiftClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_83__pages_miscellaneous_claim_view_miscellaneous_claim_view__["a" /* MiscellaneousClaimViewPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_user_user__["a" /* UserPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_soc_registration_soc_registration__["a" /* SocRegistrationPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_travel_claim_travel_claim_component__["a" /* TravelclaimPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_profile_setup_profile_setup_component__["a" /* ProfileSetupPage */],
                __WEBPACK_IMPORTED_MODULE_59__pages_add_toll_add_toll_component__["a" /* AddTollPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_claimhistory_claimhistory__["a" /* ClaimhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_claimhistorydetail_claimhistorydetail__["a" /* ClaimhistorydetailPage */],
                __WEBPACK_IMPORTED_MODULE_63__pages_claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */],
                __WEBPACK_IMPORTED_MODULE_64__pages_claimtasklist_claimtasklist__["a" /* ClaimtasklistPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_userclaimslist_userclaimslist__["a" /* UserclaimslistPage */],
                __WEBPACK_IMPORTED_MODULE_66__pages_claim_report_claim_report__["a" /* ClaimReportPage */],
                __WEBPACK_IMPORTED_MODULE_67__pages_monthly_claim_report_monthly_claim_report__["a" /* MonthlyClaimReportPage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_upload_upload__["a" /* UploadPage */],
                __WEBPACK_IMPORTED_MODULE_86__pages_customer_setup_customer_setup__["a" /* CustomerSetupPage */],
                __WEBPACK_IMPORTED_MODULE_87__pages_change_password_change_password__["a" /* ChangePasswordPage */],
                __WEBPACK_IMPORTED_MODULE_88__pages_dashboard_dashboard__["a" /* DashboardPage */], __WEBPACK_IMPORTED_MODULE_94__pages_import_excel_data_import_excel_data__["a" /* ImportExcelDataPage */],
                __WEBPACK_IMPORTED_MODULE_68__pages_claim_report_user_claim_report_user__["a" /* ClaimReportUserPage */],
                __WEBPACK_IMPORTED_MODULE_69__pages_claim_report_print_claim_report_print__["a" /* ClaimReportPrintPage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_leave_report_leave_report__["a" /* LeaveReportPage */],
                __WEBPACK_IMPORTED_MODULE_71__pages_attendance_report_attendance_report__["a" /* AttendanceReportPage */],
                __WEBPACK_IMPORTED_MODULE_72__pages_finance_payment_tasklist_finance_payment_tasklist__["a" /* FinancePaymentTasklistPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_common_tasklist_common_tasklist__["a" /* CommonTasklistPage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_payment_history_payment_history__["a" /* PaymentHistoryPage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_common_historylist_common_historylist__["a" /* CommonHistorylistPage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_claim_summary_claim_summary__["a" /* ClaimSummaryPage */],
                __WEBPACK_IMPORTED_MODULE_89__pages_settings_settings__["a" /* SettingsPage */],
                __WEBPACK_IMPORTED_MODULE_90__pages_companysettings_companysettings__["a" /* CompanysettingsPage */],
                __WEBPACK_IMPORTED_MODULE_91__pages_dbmaintenance_dbmaintenance__["a" /* DbmaintenancePage */],
                __WEBPACK_IMPORTED_MODULE_92__pages_approval_profile_approval_profile__["a" /* ApprovalProfilePage */]
            ],
            providers: [
                { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__["ErrorHandler"], useClass: __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["g" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_26__providers_conference_data__["a" /* ConferenceData */], __WEBPACK_IMPORTED_MODULE_56__angular_common_http__["b" /* HttpClientModule */], __WEBPACK_IMPORTED_MODULE_84__providers_api_manager_provider__["a" /* ApiManagerProvider */],
                __WEBPACK_IMPORTED_MODULE_27__providers_user_data__["a" /* UserData */], __WEBPACK_IMPORTED_MODULE_93__angular_common__["d" /* DatePipe */], __WEBPACK_IMPORTED_MODULE_93__angular_common__["e" /* DecimalPipe */],
                //  InAppBrowser,
                //  SplashScreen, StatusBar, 
                // TransferObject,
                // Transfer,
                __WEBPACK_IMPORTED_MODULE_60__pages_Services__["a" /* Services */],
                __WEBPACK_IMPORTED_MODULE_52__ionic_native_camera__["a" /* Camera */],
                __WEBPACK_IMPORTED_MODULE_85__providers_profile_manager_provider__["a" /* ProfileManagerProvider */],
                __WEBPACK_IMPORTED_MODULE_53__ionic_native_file__["a" /* File */],
                __WEBPACK_IMPORTED_MODULE_54__ionic_native_file_path__["a" /* FilePath */],
                __WEBPACK_IMPORTED_MODULE_55__ionic_native_file_transfer__["a" /* FileTransfer */],
                //FileUploadOptions,
                __WEBPACK_IMPORTED_MODULE_55__ionic_native_file_transfer__["b" /* FileTransferObject */],
                __WEBPACK_IMPORTED_MODULE_84__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_96__ionic_native_transfer__["a" /* Transfer */]
            ]
        })
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */,
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConferenceApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_login_login__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_signup_signup__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_setup_setup__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_adminsetup_adminsetup__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { SplashScreen } from '@ionic-native/splash-screen';
// import { StatusBar } from '@ionic-native/status-bar';










var ConferenceApp = /** @class */ (function () {
    //----------------------------------------------
    function ConferenceApp(events, userData, menu, platform, 
    //    public confData: ConferenceData,
    storage, 
    // statusbar: StatusBar,
    // splashScreen: SplashScreen, 
    translate, http) {
        var _this = this;
        this.events = events;
        this.userData = userData;
        this.menu = menu;
        this.platform = platform;
        this.storage = storage;
        this.translate = translate;
        this.http = http;
        this.blnLogin = false;
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_11__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.Menu_Array = [];
        this.Menu_Tasks_Array = [];
        this.Menu_Claims_Array = [];
        this.Menu_Dashboard_Array = [];
        this.Menu_Reports_Array = [];
        this.Menu_Settings_Array = [];
        // List of pages that can be navigated to from the left menu
        // the left menu only works after login
        // the login page disables the left menu
        this.appPages = [
        // { title: 'Dashboard', name: 'DashboardPage', component: DashboardPage, icon: 'apps' }
        ];
        this.claimPages = [
        // { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        // { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        // { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        // { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        // { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        // { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        // { title: 'Manage Customer', name: 'CustomerSetupPage', component: CustomerSetupPage, icon: 'man' },
        ];
        this.loggedInPages = [
        // { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        // { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        // { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        ];
        this.loggedOutPages = [
            { title: 'Login', name: 'LoginPage', component: __WEBPACK_IMPORTED_MODULE_3__pages_login_login__["a" /* LoginPage */], icon: 'log-in' },
            { title: 'Sign Up', name: 'SignupPage', component: __WEBPACK_IMPORTED_MODULE_4__pages_signup_signup__["a" /* SignupPage */], icon: 'person-add' },
            { title: 'Forgot Password', name: 'LoginPage', component: __WEBPACK_IMPORTED_MODULE_3__pages_login_login__["a" /* LoginPage */], icon: 'key' }
        ];
        this.reportPages = [
        // { title: 'Monthly Claim Report', name: 'MonthlyClaimReportPage', component: MonthlyClaimReportPage, icon: 'ios-paper-outline' },
        // { title: 'Finance Task History', name: 'ClaimhistoryPage', component: ClaimhistoryPage, icon: 'md-list-box' },
        // { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        // { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' }
        ];
        this.setupsPages = [
        // { title: 'Manage Customer', name: 'CustomerSetupPage', component: CustomerSetupPage, icon: 'man' },
        // { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        // { title: 'Admin Setup', name: 'AdminsetupPage', component: AdminsetupPage, icon: 'cog' }
        ];
        this.rootPage = 'LoginPage';
        //To control Menu-------------------------------
        this.blnDashboard_loggedInMenu_User = true;
        this.blnTasks_loggedInMenu_User = true;
        this.blnClaims_loggedInMenu_User = true;
        this.blnReport_loggedInMenu_User = true;
        this.blnSetup_loggedInMenu_User = true;
        this.blnAccount_loggedInMenu_User = true;
        this.translateToMalayClicked = false;
        this.translateToEnglishClicked = true;
        // debugger;
        this.blnLogin = false;
        //this.translateToEnglish();
        // this.translateToMalay();
        // this.translate.setDefaultLang('en'); //Fallback language
        // alert(localStorage.getItem("cs_default_language"));
        platform.ready().then(function () {
            //alert(localStorage.getItem("cs_default_language"));
        });
        this.TranslateLanguage();
        // translate.setDefaultLang('en');
        //    platform.ready().then(() => { statusbar.styleDefault(); splashScreen.hide(); });
        // Check if the user has already seen the tutorial
        // load the conference data
        //    confData.load();
        // decide which menu items should be hidden by current login status stored in local storage    
        this.userData.hasLoggedIn().then(function (hasLoggedIn) {
            _this.enableMenu(hasLoggedIn === true);
        });
        //this.enableMenu(true);
        this.listenToLoginEvents();
        this.userData.logout();
        this.enableMenu(false);
        // this.menu.enable(false, 'loggedInMenu');
        this.menu.enable(false, 'loggedInMenu_User');
    }
    ConferenceApp.prototype.openPage = function (page) {
        // debugger;    
        var params = {};
        // the nav component was found using @ViewChild(Nav)
        // setRoot on the nav to remove previous pages and only have this page
        // we wouldn't want the back button to show in this scenario
        if (page.index) {
            params = { tabIndex: page.index };
        }
        this.pageName = page.name;
        //alert(this.pageName);
        // If we are already on tabs just change the selected tab
        // don't setRoot again, this maintains the history stack of the
        // tabs even if changing them from the menu
        if (this.nav.getActiveChildNavs().length && page.index != undefined) {
            this.nav.getActiveChildNavs()[0].select(page.index);
            // Set the root of the nav with params if it's a tab index
        }
        else {
            this.nav.setRoot(page.name, params).catch(function (err) {
                console.log("Didn't set nav root: " + err);
            });
        }
        if (page.logsOut === true) {
            // Give the menu time to close before changing to logged out
            this.userData.logout();
            this.blnLogin = false;
        }
    };
    // MenuService: MenuService = new MenuService();
    ConferenceApp.prototype.listenToLoginEvents = function () {
        // this.MenuService.EventListener();
        // debugger;    
        var _this = this;
        this.events.subscribe('user:login', function () {
            _this.enableMenu(true);
        });
        this.events.subscribe('user:signup', function () {
            _this.enableMenu(true);
        });
        this.events.subscribe('user:logout', function () {
            _this.enableMenu(false);
        });
    };
    ConferenceApp.prototype.TranslateLanguage = function () {
        if (localStorage.getItem("cs_default_language") == 'en') {
            this.translateToEnglish();
            this.translate.setDefaultLang('en');
        }
        else if (localStorage.getItem("cs_default_language") == 'ms') {
            this.translateToMalay();
            this.translate.setDefaultLang('ms');
        }
        else {
            this.translateToEnglish();
            this.translate.setDefaultLang('en');
        }
    };
    ConferenceApp.prototype.enableMenu = function (loggedIn) {
        var _this = this;
        this.blnDashboard_loggedInMenu_User = false;
        this.blnTasks_loggedInMenu_User = false;
        this.blnClaims_loggedInMenu_User = false;
        this.blnReport_loggedInMenu_User = false;
        this.blnSetup_loggedInMenu_User = false;
        this.blnAccount_loggedInMenu_User = false;
        this.appPages = [];
        this.appPages_User = [];
        this.claimPages = [];
        this.reportPages = [];
        this.setupsPages = [];
        this.loggedInPages = [];
        if (localStorage.getItem("g_USER_GUID") != null) {
            loggedIn = true;
        }
        if (localStorage.length > 0) {
            this.blnLogin = true;
            this.USER_NAME_LABEL = localStorage.getItem("g_FULLNAME");
            this.IMAGE_URL = localStorage.getItem("g_IMAGE_URL");
            this.TranslateLanguage();
            if (localStorage.getItem("g_USER_GUID") == "sva") {
                this.blnAccount_loggedInMenu_User = true;
                this.blnSetup_loggedInMenu_User = true;
                // this.appPages = [
                //   { title: 'Dashboard', name: 'DashboardPage', component: DashboardPage, icon: 'apps' }
                // ];
                this.loggedInPages = [
                    { title: 'Sign Out', name: 'LoginPage', component: __WEBPACK_IMPORTED_MODULE_3__pages_login_login__["a" /* LoginPage */], icon: 'log-out', logsOut: true }
                ];
                this.setupsPages = [
                    { title: 'Setup', name: 'SetupPage', component: __WEBPACK_IMPORTED_MODULE_5__pages_setup_setup__["a" /* SetupPage */], icon: 'settings' },
                    { title: 'Admin Setup', name: 'AdminsetupPage', component: __WEBPACK_IMPORTED_MODULE_7__pages_adminsetup_adminsetup__["a" /* AdminsetupPage */], icon: 'cog' }
                ];
                this.menu.enable(loggedIn, 'loggedInMenu');
                this.menu.enable(!loggedIn, 'loggedOutMenu');
            }
            else {
                // this.appPages = [];
                // this.appPages_User = [];
                // this.claimPages = [];
                // this.reportPages = [];
                // this.setupsPages = [];
                // this.loggedInPages = [];
                //Get all the roles and menus for that particular user.-------------------------------------------------------   
                var url = void 0;
                this.Menu_Array = [];
                this.Menu_Dashboard_Array = [];
                this.Menu_Tasks_Array = [];
                this.Menu_Claims_Array = [];
                this.Menu_Reports_Array = [];
                this.Menu_Settings_Array = [];
                url = this.baseResource_Url + "view_user_multi_role_menu?filter=USER_GUID=" + localStorage.getItem("g_USER_GUID") + '&api_key=' + __WEBPACK_IMPORTED_MODULE_11__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
                this.http
                    .get(url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var res = data["resource"];
                    if (res.length > 0) {
                        for (var item in data["resource"]) {
                            //For Dashboard-------------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Dashboard") {
                                _this.Menu_Dashboard_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                _this.blnDashboard_loggedInMenu_User = true;
                            }
                            //For Tasks-------------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Tasks") {
                                _this.Menu_Tasks_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                _this.blnTasks_loggedInMenu_User = true;
                            }
                            //For Claims-------------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Claims") {
                                _this.Menu_Claims_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                _this.blnClaims_loggedInMenu_User = true;
                            }
                            //For Reports-------------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Reports") {
                                _this.Menu_Reports_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                _this.blnReport_loggedInMenu_User = true;
                            }
                            //For Setup-------------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Settings") {
                                _this.Menu_Settings_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                _this.blnSetup_loggedInMenu_User = true;
                            }
                            //For Accounts-----------------------------------------
                            if (data["resource"][item]["MENU_HEADER"] == "Account") {
                                if (data["resource"][item]["NAME"] == "Sign Out") {
                                    _this.Menu_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"], logsOut: true });
                                    _this.blnAccount_loggedInMenu_User = true;
                                }
                                else {
                                    if (localStorage.getItem("Ad_Authenticaton") == "true") {
                                        if (data["resource"][item]["NAME"] == "My Profile") {
                                            _this.Menu_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                            _this.blnAccount_loggedInMenu_User = true;
                                        }
                                    }
                                    else {
                                        _this.Menu_Array.push({ title: data["resource"][item]["NAME"], name: data["resource"][item]["CODE_PAGE_NAME"], component: data["resource"][item]["CODE_PAGE_NAME"], icon: data["resource"][item]["MENU_ICON"] });
                                        _this.blnAccount_loggedInMenu_User = true;
                                    }
                                }
                            }
                        }
                        //Set all menu header---------------------------------------
                        _this.appPages = _this.Menu_Dashboard_Array;
                        _this.appPages_User = _this.Menu_Tasks_Array;
                        _this.claimPages = _this.Menu_Claims_Array;
                        _this.reportPages = _this.Menu_Reports_Array;
                        _this.setupsPages = _this.Menu_Settings_Array;
                        _this.loggedInPages = _this.Menu_Array;
                        //----------------------------------------------------------
                        //---------if duplicate records then remove---------------------------------------------------------------------------------------
                        _this.appPages = _this.Menu_Dashboard_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        _this.appPages_User = _this.Menu_Tasks_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        _this.claimPages = _this.Menu_Claims_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        _this.reportPages = _this.Menu_Reports_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        _this.setupsPages = _this.Menu_Settings_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        _this.loggedInPages = _this.Menu_Array.filter(function (thing, index, self) {
                            return index === self.findIndex(function (t) { return (t.name === thing.name); });
                        });
                        //---------------------------------------------------------------------------------------------------------------------------
                    }
                });
                this.menu.enable(loggedIn, 'loggedInMenu_User');
                this.menu.enable(!loggedIn, 'loggedOutMenu');
                // --------------------------------------------------------------------------------------------------------------------------------- 
            }
        }
        else {
            this.blnLogin = false;
        }
        // if (localStorage.length > 0) {
        //   this.blnLogin = true; this.USER_NAME_LABEL = localStorage.getItem("g_FULLNAME");
        //   this.IMAGE_URL = localStorage.getItem("g_IMAGE_URL");
        //   // let val = this.GetUser_Role(localStorage.getItem("g_USER_GUID"));
        //   // val.then((res) => {
        //   this.TranslateLanguage();
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnSetup_loggedInMenu_User = true;
        //   if (localStorage.getItem("g_USER_GUID") == "sva") {
        //     this.loggedInPages = [
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //     this.setupsPages = [
        //       { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        //       { title: 'Admin Setup', name: 'AdminsetupPage', component: AdminsetupPage, icon: 'cog' }
        //     ];
        //     this.menu.enable(loggedIn, 'loggedInMenu');
        //     this.menu.enable(!loggedIn, 'loggedOutMenu');
        //   }
        // //For Tenant Admin, Remove Admin Setup
        // else if (localStorage.getItem("g_IS_TENANT_ADMIN") == "1") {
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnSetup_loggedInMenu_User = true;
        //   this.appPages_User = [
        //     { title: 'Superior ', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' },
        //     { title: 'Validation ', name: 'ClaimtasklistPage', component: ClaimtasklistPage, icon: 'md-clipboard' },
        //     { title: 'Payment ', name: 'FinancePaymentTasklistPage', component: FinancePaymentTasklistPage, icon: 'md-clipboard' },
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        //   ];
        //   this.reportPages = [
        //     { title: 'Monthly Claim Report', name: 'MonthlyClaimReportPage', component: MonthlyClaimReportPage, icon: 'ios-paper-outline' },
        //     { title: 'Validation History', name: 'ClaimhistoryPage', component: ClaimhistoryPage, icon: 'md-list-box' },
        //     { title: 'Payment History', name: 'PaymentHistoryPage', component: PaymentHistoryPage, icon: 'md-list-box' },
        //     { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' },
        //     { title: 'User Claim Reports', name: 'ClaimReportPage', component: ClaimReportPage, icon: 'md-paper' },
        //     { title: 'All Claim List', name: 'AllClaimListPage', component: AllClaimListPage, icon: 'ios-paper-outline' },
        //     { title: 'Leave Report', name: 'LeaveReportPage', component: LeaveReportPage, icon: 'ios-clipboard-outline' },
        //     { title: 'Attendance Report', name: 'AttendanceReportPage', component: AttendanceReportPage, icon: 'ios-paper-outline' }
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.setupsPages = [
        //     { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        //   ];
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // //For Team Member, Home, Change Password, Sign Out
        // else if (res.toString() == Settings.UserRoleConstants.TEAM_MEMBER) {
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = false;
        //   this.blnSetup_loggedInMenu_User = false;
        //   this.appPages_User = [
        //     { title: 'Approver Tasks', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' },
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        //   ];
        //   this.reportPages = [
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' }
        //   ];
        //   this.setupsPages = [
        //     { title: 'Manage Customer', name: 'CustomerSetupPage', component: CustomerSetupPage, icon: 'man' },
        //     { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        //     { title: 'Admin Setup', name: 'AdminsetupPage', component: AdminsetupPage, icon: 'cog' }
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // else if (res.toString() == Settings.UserRoleConstants.FINANCE_EXECUTIVE) {
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnSetup_loggedInMenu_User = true;
        //   this.appPages_User = [
        //     { title: 'Validation', name: 'ClaimtasklistPage', component: ClaimtasklistPage, icon: 'md-clipboard' },
        //     { title: 'Payment ', name: 'FinancePaymentTasklistPage', component: FinancePaymentTasklistPage, icon: 'md-clipboard' },
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' }
        //   ];
        //   this.reportPages = [
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'Validation History', name: 'ClaimhistoryPage', component: ClaimhistoryPage, icon: 'md-list-box' },
        //     { title: 'Payment History', name: 'PaymentHistoryPage', component: PaymentHistoryPage, icon: 'md-list-box' },
        //     { title: 'Monthly Claim Report', name: 'MonthlyClaimReportPage', component: MonthlyClaimReportPage, icon: 'ios-paper-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' },
        //     { title: 'User Claim Reports', name: 'ClaimReportPage', component: ClaimReportPage, icon: 'md-paper' },
        //     { title: 'Leave Report', name: 'LeaveReportPage', component: LeaveReportPage, icon: 'ios-clipboard-outline' },
        //     { title: 'Attendance Report', name: 'AttendanceReportPage', component: AttendanceReportPage, icon: 'ios-paper-outline' }
        //   ];
        //   this.setupsPages = [
        //     { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // else if (res.toString() == Settings.UserRoleConstants.FINANCE_ADMIN || res.toString() == Settings.UserRoleConstants.FINANCE_MANAGER) {
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnSetup_loggedInMenu_User = true;
        // this.appPages_User = [
        //   { title: 'Superior', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' },
        //   { title: 'Validation', name: 'ClaimtasklistPage', component: ClaimtasklistPage, icon: 'md-clipboard' },
        //   { title: 'Payment ', name: 'FinancePaymentTasklistPage', component: FinancePaymentTasklistPage, icon: 'md-clipboard' },
        // ];
        // this.claimPages = [
        //   { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //   { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //   { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //   { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //   { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //   { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        // ];
        // if (res.toString() == "Finance Admin") {
        //   this.setupsPages = [
        //     { title: 'Setup', name: 'SetupPage', component: SetupPage, icon: 'settings' },
        //   ];
        // }
        // this.reportPages = [
        //   { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //   { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        //   { title: 'Validation History', name: 'ClaimhistoryPage', component: ClaimhistoryPage, icon: 'md-list-box' },
        //   { title: 'Payment History', name: 'PaymentHistoryPage', component: PaymentHistoryPage, icon: 'md-list-box' },
        //   { title: 'Monthly Claim Report', name: 'MonthlyClaimReportPage', component: MonthlyClaimReportPage, icon: 'ios-paper-outline' },
        //   { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' },
        //   { title: 'User Claim Reports', name: 'ClaimReportPage', component: ClaimReportPage, icon: 'md-paper' },
        //   { title: 'Leave Report', name: 'LeaveReportPage', component: LeaveReportPage, icon: 'ios-clipboard-outline' },
        //   { title: 'Attendance Report', name: 'AttendanceReportPage', component: AttendanceReportPage, icon: 'ios-paper-outline' }
        // ];
        // if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //   this.loggedInPages = [
        //     { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //     { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //   ];
        // }
        // else {
        //   this.loggedInPages = [
        //     { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //     { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //     { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //   ];
        // }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // //For Manage Customer
        // else if (res.toString() == Settings.UserRoleConstants.MANAGE_CUSTOMER) {
        //   this.appPages_User = [
        //     { title: 'Superior', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' }
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        //   ];
        //   this.reportPages = [
        //     { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' }
        //   ];
        //   this.setupsPages = [
        //     { title: 'Manage Customer', name: 'CustomerSetupPage', component: CustomerSetupPage, icon: 'man' }
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // //For Team Lead
        // else if (res.toString() == Settings.UserRoleConstants.TEAM_LEAD) {
        //   this.blnDashboard_loggedInMenu_User = true;
        //   this.blnTasks_loggedInMenu_User = true;
        //   this.blnClaims_loggedInMenu_User = true;
        //   this.blnReport_loggedInMenu_User = true;
        //   this.blnAccount_loggedInMenu_User = true;
        //   this.blnSetup_loggedInMenu_User = false;
        //   this.appPages_User = [
        //     { title: 'Superior', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' },
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        //   ];
        //   this.reportPages = [
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' }
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // //For others
        // else {
        //   this.appPages_User = [
        //     { title: 'Approver Tasks', name: 'ClaimapprovertasklistPage', component: ClaimapprovertasklistPage, icon: 'checkbox-outline' },
        //   ];
        //   this.claimPages = [
        //     { title: 'Travel Claim', name: 'TravelclaimPage', component: TravelclaimPage, icon: 'car' },
        //     { title: 'Entertainment Claim', name: 'EntertainmentclaimPage', component: EntertainmentclaimPage, icon: 'cafe' },
        //     { title: 'Gift Claim', name: 'GiftclaimPage', component: GiftclaimPage, icon: 'basket' },
        //     { title: 'Overtime Claim', name: 'OvertimeclaimPage', component: OvertimeclaimPage, icon: 'stopwatch' },
        //     { title: 'Printing Claim', name: 'PrintclaimPage', component: PrintclaimPage, icon: 'print' },
        //     { title: 'Miscellaneous Claim', name: 'MiscellaneousClaimPage', component: MiscellaneousClaimPage, icon: 'albums' },
        //   ];
        //   this.reportPages = [
        //     { title: 'My Claim History', name: 'UserclaimslistPage', component: UserclaimslistPage, icon: 'ios-clipboard-outline' },
        //     { title: 'Superior History', name: 'ClaimhistorydetailPage', component: ClaimhistorydetailPage, icon: 'ios-list-box-outline' },
        //     { title: 'My Claim Reports', name: 'ClaimReportUserPage', component: ClaimReportUserPage, icon: 'ios-paper-outline' }
        //   ];
        //   if (localStorage.getItem("Ad_Authenticaton") == "true") {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   else {
        //     this.loggedInPages = [
        //       { title: 'My Profile', name: 'AccountPage', component: AccountPage, icon: 'person' },
        //       { title: 'Change Password', name: 'ChangePasswordPage', component: ChangePasswordPage, icon: 'unlock' },
        //       { title: 'Sign Out', name: 'LoginPage', component: LoginPage, icon: 'log-out', logsOut: true }
        //     ];
        //   }
        //   this.menu.enable(loggedIn, 'loggedInMenu_User');
        //   this.menu.enable(!loggedIn, 'loggedOutMenu');
        // }
        // });
        // val.catch((err) => {
        //   // This is never called
        //   console.log(err);
        // });
        // }
        // else {
        //   this.blnLogin = false;
        // }
    };
    ConferenceApp.prototype.isActive = function (page) {
        // debugger;    
        // let childNav = this.nav.getActiveChildNavs()[0];
        // // Tabs are a special case because they have their own navigation
        // if (childNav) {
        //   if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {
        //     return 'primary';
        //   }
        //   return;
        // }
        if ((this.nav.getActive() && this.nav.getActive().name === page.name && this.pageName == page.name) ||
            (this.nav.getActive() && this.nav.getActive().name === page.name && page.name == "DashboardPage")) {
            // alert(page.name);
            return 'primary';
        }
        return null;
    };
    ConferenceApp.prototype.translateToEnglish = function () {
        this.translate.use('en');
        this.translateToMalayClicked = !this.translateToMalayClicked;
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
    };
    ConferenceApp.prototype.translateToMalay = function () {
        this.translate.use('ms');
        this.translateToEnglishClicked = !this.translateToEnglishClicked;
        this.translateToMalayClicked = !this.translateToMalayClicked;
    };
    ConferenceApp.prototype.GetUser_Role = function (user_guid) {
        var _this = this;
        var TableURL = this.baseResource_Url + "view_user_role_menu?filter=USER_GUID=" + user_guid + '&api_key=' + __WEBPACK_IMPORTED_MODULE_11__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        return new Promise(function (resolve) {
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                var roles = data["resource"];
                if (data["resource"].length > 0) {
                    resolve(roles[0]["ROLE_NAME"]);
                }
                else {
                    resolve("NA");
                }
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Nav */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Nav */])
    ], ConferenceApp.prototype, "nav", void 0);
    ConferenceApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/app/app.template.html"*/'﻿<ion-split-pane>\n\n  <ion-menu id="loggedInMenu_User" [content]="content" *ngIf="blnLogin">\n    <ion-header>\n      <ion-toolbar color="primary200">\n        <div style="height:141px;margin-top:-15pt;color:white;" text-center>\n          <h3 style="padding-top:15pt;">Welcome to eClaim</h3>\n\n          <div style="width: 30%;float: left;margin-left: 5pt;">\n            <div class="profilepicapp">\n              <img src={{IMAGE_URL}} alt="avatar">\n            </div>\n          </div>\n\n          <div style="color: white;">\n            <h6 text-center text-wrap>{{ USER_NAME_LABEL }}</h6>\n          </div>\n\n        </div>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class="outer-content">\n      <ion-list *ngIf="blnDashboard_loggedInMenu_User">\n\n        <button ion-item menuClose *ngFor="let p of appPages" (click)="openPage(p)" [color]="isActive(p) ">\n          <ion-icon item-start [name]=" p.icon "></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n      <ion-list *ngIf="blnTasks_loggedInMenu_User">\n        <ion-list-header>\n          Tasks\n        </ion-list-header>\n\n        <button ion-item menuClose *ngFor="let p of appPages_User" (click)="openPage(p)" [color]="isActive(p) ">\n          <ion-icon item-start [name]=" p.icon "></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n      <ion-list *ngIf="blnClaims_loggedInMenu_User">\n        <ion-list-header>\n          {{"CLAIMS_LABEL" | translate}}\n        </ion-list-header>\n\n        <button ion-item menuClose *ngFor="let p of claimPages " (click)="openPage(p) " [color]="isActive(p) ">\n          <ion-icon item-start [name]="p.icon " title="{{p.title}}"></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n      <ion-list *ngIf="blnReport_loggedInMenu_User">\n        <ion-list-header>\n          Reports\n        </ion-list-header>\n\n        <button ion-item menuClose *ngFor="let p of reportPages " (click)="openPage(p) " [color]="isActive(p) ">\n          <ion-icon item-start [name]="p.icon "></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n      <ion-list *ngIf="blnSetup_loggedInMenu_User" class="hiset">\n        <button ion-item menuClose *ngFor="let p of setupsPages " (click)="openPage(p) " [color]="isActive(p) ">\n          <ion-icon item-start [name]="p.icon "></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n      <ion-list *ngIf="blnAccount_loggedInMenu_User">\n        <ion-list-header>\n          {{"Account_LABEL" | translate}}\n        </ion-list-header>\n        <button ion-item menuClose *ngFor="let p of loggedInPages " (click)="openPage(p) " [color]="isActive(p) ">\n          <ion-icon item-start [name]="p.icon "></ion-icon>\n          {{p.title}}\n        </button>\n      </ion-list>\n\n    </ion-content>\n\n  </ion-menu>\n\n  <!-- main navigation -->\n  <ion-nav [root]="rootPage" #content swipeBackEnabled="false" main></ion-nav>\n  <!-- <ion-nav [root]="rootPage"></ion-nav> -->\n\n</ion-split-pane>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/app/app.template.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Events */],
            __WEBPACK_IMPORTED_MODULE_6__providers_user_data__["a" /* UserData */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9__angular_http__["b" /* Http */]])
    ], ConferenceApp);
    return ConferenceApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BankSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_banksetup_model__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var BankSetup_Service = /** @class */ (function () {
    function BankSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_bank';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    BankSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    BankSetup_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function (response) {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    BankSetup_Service.prototype.save_bank = function (bank_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, bank_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    BankSetup_Service.prototype.update_bank = function (bank_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, bank_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    BankSetup_Service.prototype.get_bank = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function (response) {
            var banks = [];
            // result.resource.forEach((bank) => {
            //  	banks.push(BankSetup_Model.fromJson(bank));
            //  });
            return banks;
        }).catch(this.handleError);
    };
    ;
    BankSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            //console.log(result.bank_GUID);
            return result.bank_GUID;
        });
    };
    BankSetup_Service.prototype.get = function (id, params) {
        //alert(id);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var bank = __WEBPACK_IMPORTED_MODULE_3__models_banksetup_model__["a" /* BankSetup_Model */].fromJson(result); //alert(JSON.stringify(bank)); 
            return bank;
        }).catch(this.handleError);
    };
    ;
    BankSetup_Service.prototype.GetExistingRecord = function (bank_name) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        //queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var url;
        url = "http://api.zen.com.my/api/v2/zcs/_table/main_bank?filter=(NAME=" + bank_name + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
        return this.httpService.http
            .get(url, options)
            .map(function (response) {
            var result = response.json();
            var bank = __WEBPACK_IMPORTED_MODULE_3__models_banksetup_model__["a" /* BankSetup_Model */].fromJson(result);
            alert("In GetExist" + JSON.stringify(result));
            return bank;
        }).catch(this.handleError);
    };
    ;
    BankSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], BankSetup_Service);
    return BankSetup_Service;
}());

//# sourceMappingURL=banksetup_service.js.map

/***/ }),
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 596 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 597 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CashcardSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_cashcardsetup_model__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








;
var CashcardSetup_Service = /** @class */ (function () {
    function CashcardSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_cashcard';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    CashcardSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    CashcardSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function (response) {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    CashcardSetup_Service.prototype.save = function (cashcard_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, cashcard_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    CashcardSetup_Service.prototype.update = function (cashcard_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, cashcard_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    CashcardSetup_Service.prototype.get_cashcard = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function (response) {
            var cashcards = [];
            // result.resource.forEach((cashcard) => {
            //  	cashcards.push(CashcardSetup_Model.fromJson(cashcard));
            //  });
            return cashcards;
        }).catch(this.handleError);
    };
    ;
    CashcardSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.cashcard_GUID;
        });
    };
    CashcardSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var cashcard = __WEBPACK_IMPORTED_MODULE_3__models_cashcardsetup_model__["a" /* CashcardSetup_Model */].fromJson(result);
            return cashcard;
        }).catch(this.handleError);
    };
    ;
    CashcardSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], CashcardSetup_Service);
    return CashcardSetup_Service;
}());

//# sourceMappingURL=cashcardsetup_service.js.map

/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimTypeSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_claimtypesetup_model__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ClaimTypeSetup_Service = /** @class */ (function () {
    function ClaimTypeSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    ClaimTypeSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    ClaimTypeSetup_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    ClaimTypeSetup_Service.prototype.save = function (claim_type_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, claim_type_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ClaimTypeSetup_Service.prototype.update = function (claim_type_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, claim_type_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ClaimTypeSetup_Service.prototype.get_claim = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            //  	banks.push(BankSetup_Model.fromJson(bank));
            //  });
            return banks;
        }).catch(this.handleError);
    };
    ;
    ClaimTypeSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.CLAIM_TYPE_GUID;
        });
    };
    ClaimTypeSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var claimtype = __WEBPACK_IMPORTED_MODULE_3__models_claimtypesetup_model__["a" /* ClaimTypeSetup_Model */].fromJson(result);
            return claimtype;
        }).catch(this.handleError);
    };
    ;
    ClaimTypeSetup_Service.prototype.GetExistingRecord = function (bank_name) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        //queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var url;
        url = "http://api.zen.com.my/api/v2/zcs/_table/main_claim_type?filter=(NAME=" + bank_name + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
        return this.httpService.http
            .get(url, options)
            .map(function (response) {
            var result = response.json();
            var bank = __WEBPACK_IMPORTED_MODULE_3__models_claimtypesetup_model__["a" /* ClaimTypeSetup_Model */].fromJson(result);
            alert("In GetExist" + JSON.stringify(result));
            return bank;
        }).catch(this.handleError);
    };
    ;
    ClaimTypeSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], ClaimTypeSetup_Service);
    return ClaimTypeSetup_Service;
}());

//# sourceMappingURL=claimtypesetup_service.js.map

/***/ }),
/* 599 */,
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 296,
	"./af.js": 296,
	"./ar": 297,
	"./ar-dz": 298,
	"./ar-dz.js": 298,
	"./ar-kw": 299,
	"./ar-kw.js": 299,
	"./ar-ly": 300,
	"./ar-ly.js": 300,
	"./ar-ma": 301,
	"./ar-ma.js": 301,
	"./ar-sa": 302,
	"./ar-sa.js": 302,
	"./ar-tn": 303,
	"./ar-tn.js": 303,
	"./ar.js": 297,
	"./az": 304,
	"./az.js": 304,
	"./be": 305,
	"./be.js": 305,
	"./bg": 306,
	"./bg.js": 306,
	"./bm": 307,
	"./bm.js": 307,
	"./bn": 308,
	"./bn.js": 308,
	"./bo": 309,
	"./bo.js": 309,
	"./br": 310,
	"./br.js": 310,
	"./bs": 311,
	"./bs.js": 311,
	"./ca": 312,
	"./ca.js": 312,
	"./cs": 313,
	"./cs.js": 313,
	"./cv": 314,
	"./cv.js": 314,
	"./cy": 315,
	"./cy.js": 315,
	"./da": 316,
	"./da.js": 316,
	"./de": 317,
	"./de-at": 318,
	"./de-at.js": 318,
	"./de-ch": 319,
	"./de-ch.js": 319,
	"./de.js": 317,
	"./dv": 320,
	"./dv.js": 320,
	"./el": 321,
	"./el.js": 321,
	"./en-au": 322,
	"./en-au.js": 322,
	"./en-ca": 323,
	"./en-ca.js": 323,
	"./en-gb": 324,
	"./en-gb.js": 324,
	"./en-ie": 325,
	"./en-ie.js": 325,
	"./en-il": 326,
	"./en-il.js": 326,
	"./en-nz": 327,
	"./en-nz.js": 327,
	"./eo": 328,
	"./eo.js": 328,
	"./es": 329,
	"./es-do": 330,
	"./es-do.js": 330,
	"./es-us": 331,
	"./es-us.js": 331,
	"./es.js": 329,
	"./et": 332,
	"./et.js": 332,
	"./eu": 333,
	"./eu.js": 333,
	"./fa": 334,
	"./fa.js": 334,
	"./fi": 335,
	"./fi.js": 335,
	"./fo": 336,
	"./fo.js": 336,
	"./fr": 337,
	"./fr-ca": 338,
	"./fr-ca.js": 338,
	"./fr-ch": 339,
	"./fr-ch.js": 339,
	"./fr.js": 337,
	"./fy": 340,
	"./fy.js": 340,
	"./gd": 341,
	"./gd.js": 341,
	"./gl": 342,
	"./gl.js": 342,
	"./gom-latn": 343,
	"./gom-latn.js": 343,
	"./gu": 344,
	"./gu.js": 344,
	"./he": 345,
	"./he.js": 345,
	"./hi": 346,
	"./hi.js": 346,
	"./hr": 347,
	"./hr.js": 347,
	"./hu": 348,
	"./hu.js": 348,
	"./hy-am": 349,
	"./hy-am.js": 349,
	"./id": 350,
	"./id.js": 350,
	"./is": 351,
	"./is.js": 351,
	"./it": 352,
	"./it.js": 352,
	"./ja": 353,
	"./ja.js": 353,
	"./jv": 354,
	"./jv.js": 354,
	"./ka": 355,
	"./ka.js": 355,
	"./kk": 356,
	"./kk.js": 356,
	"./km": 357,
	"./km.js": 357,
	"./kn": 358,
	"./kn.js": 358,
	"./ko": 359,
	"./ko.js": 359,
	"./ky": 360,
	"./ky.js": 360,
	"./lb": 361,
	"./lb.js": 361,
	"./lo": 362,
	"./lo.js": 362,
	"./lt": 363,
	"./lt.js": 363,
	"./lv": 364,
	"./lv.js": 364,
	"./me": 365,
	"./me.js": 365,
	"./mi": 366,
	"./mi.js": 366,
	"./mk": 367,
	"./mk.js": 367,
	"./ml": 368,
	"./ml.js": 368,
	"./mn": 369,
	"./mn.js": 369,
	"./mr": 370,
	"./mr.js": 370,
	"./ms": 371,
	"./ms-my": 372,
	"./ms-my.js": 372,
	"./ms.js": 371,
	"./mt": 373,
	"./mt.js": 373,
	"./my": 374,
	"./my.js": 374,
	"./nb": 375,
	"./nb.js": 375,
	"./ne": 376,
	"./ne.js": 376,
	"./nl": 377,
	"./nl-be": 378,
	"./nl-be.js": 378,
	"./nl.js": 377,
	"./nn": 379,
	"./nn.js": 379,
	"./pa-in": 380,
	"./pa-in.js": 380,
	"./pl": 381,
	"./pl.js": 381,
	"./pt": 382,
	"./pt-br": 383,
	"./pt-br.js": 383,
	"./pt.js": 382,
	"./ro": 384,
	"./ro.js": 384,
	"./ru": 385,
	"./ru.js": 385,
	"./sd": 386,
	"./sd.js": 386,
	"./se": 387,
	"./se.js": 387,
	"./si": 388,
	"./si.js": 388,
	"./sk": 389,
	"./sk.js": 389,
	"./sl": 390,
	"./sl.js": 390,
	"./sq": 391,
	"./sq.js": 391,
	"./sr": 392,
	"./sr-cyrl": 393,
	"./sr-cyrl.js": 393,
	"./sr.js": 392,
	"./ss": 394,
	"./ss.js": 394,
	"./sv": 395,
	"./sv.js": 395,
	"./sw": 396,
	"./sw.js": 396,
	"./ta": 397,
	"./ta.js": 397,
	"./te": 398,
	"./te.js": 398,
	"./tet": 399,
	"./tet.js": 399,
	"./tg": 400,
	"./tg.js": 400,
	"./th": 401,
	"./th.js": 401,
	"./tl-ph": 402,
	"./tl-ph.js": 402,
	"./tlh": 403,
	"./tlh.js": 403,
	"./tr": 404,
	"./tr.js": 404,
	"./tzl": 405,
	"./tzl.js": 405,
	"./tzm": 406,
	"./tzm-latn": 407,
	"./tzm-latn.js": 407,
	"./tzm.js": 406,
	"./ug-cn": 408,
	"./ug-cn.js": 408,
	"./uk": 409,
	"./uk.js": 409,
	"./ur": 410,
	"./ur.js": 410,
	"./uz": 411,
	"./uz-latn": 412,
	"./uz-latn.js": 412,
	"./uz.js": 411,
	"./vi": 413,
	"./vi.js": 413,
	"./x-pseudo": 414,
	"./x-pseudo.js": 414,
	"./yo": 415,
	"./yo.js": 415,
	"./zh-cn": 416,
	"./zh-cn.js": 416,
	"./zh-hk": 417,
	"./zh-hk.js": 417,
	"./zh-tw": 418,
	"./zh-tw.js": 418
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 600;

/***/ }),
/* 601 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanySetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_companysetup_model__ = __webpack_require__(420);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var CompanySetup_Service = /** @class */ (function () {
    function CompanySetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_company';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    CompanySetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    CompanySetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    CompanySetup_Service.prototype.save = function (company_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(company_main));
        return this.httpService.http.post(this.baseResourceUrl, company_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    CompanySetup_Service.prototype.update = function (department_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, department_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    CompanySetup_Service.prototype.get_company = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    CompanySetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.COMPANY_GUID;
        });
    };
    CompanySetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var companytype = __WEBPACK_IMPORTED_MODULE_3__models_companysetup_model__["a" /* CompanySetup_Model */].fromJson(result);
            return companytype;
        }).catch(this.handleError);
    };
    ;
    CompanySetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], CompanySetup_Service);
    return CompanySetup_Service;
}());

//# sourceMappingURL=companysetup_service.js.map

/***/ }),
/* 602 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MileageSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_mileagesetup_model__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var MileageSetup_Service = /** @class */ (function () {
    function MileageSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_mileage';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    MileageSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    MileageSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    MileageSetup_Service.prototype.save = function (mileage_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(mileage_main));
        return this.httpService.http.post(this.baseResourceUrl, mileage_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    MileageSetup_Service.prototype.update = function (mileage_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, mileage_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    MileageSetup_Service.prototype.get_mileage = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    MileageSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.DEPARTMENT_GUID;
        });
    };
    MileageSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            console.log(result);
            // alert(this.baseResourceUrl);
            var claimtype = __WEBPACK_IMPORTED_MODULE_3__models_mileagesetup_model__["a" /* MileageSetup_Model */].fromJson(result);
            console.log(claimtype);
            //alert(JSON.stringify(claimtype));
            return claimtype;
        }).catch(this.handleError);
    };
    ;
    MileageSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], MileageSetup_Service);
    return MileageSetup_Service;
}());

//# sourceMappingURL=mileagesetup_service.js.map

/***/ }),
/* 603 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymentTypeSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_paymenttypesetup_model__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var PaymentTypeSetup_Service = /** @class */ (function () {
    function PaymentTypeSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_payment_type';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    PaymentTypeSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    PaymentTypeSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    PaymentTypeSetup_Service.prototype.save = function (paymenttype_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(paymenttype_main));
        return this.httpService.http.post(this.baseResourceUrl, paymenttype_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    PaymentTypeSetup_Service.prototype.update = function (paymenttype_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, paymenttype_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    PaymentTypeSetup_Service.prototype.get_paymenttype = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    PaymentTypeSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PAYMENT_TYPE_GUID;
        });
    };
    PaymentTypeSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var paymenttype = __WEBPACK_IMPORTED_MODULE_3__models_paymenttypesetup_model__["a" /* PaymentTypeSetup_Model */].fromJson(result);
            return paymenttype;
        }).catch(this.handleError);
    };
    ;
    PaymentTypeSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], PaymentTypeSetup_Service);
    return PaymentTypeSetup_Service;
}());

//# sourceMappingURL=paymenttypesetup_service.js.map

/***/ }),
/* 604 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QualificationSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_qualificationsetup_model__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var QualificationSetup_Service = /** @class */ (function () {
    function QualificationSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_qualification_type';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    QualificationSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    QualificationSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    QualificationSetup_Service.prototype.save = function (qualificationsetup_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(qualificationsetup_main));
        return this.httpService.http.post(this.baseResourceUrl, qualificationsetup_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    QualificationSetup_Service.prototype.update = function (qualificationsetup_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, qualificationsetup_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    QualificationSetup_Service.prototype.get_qualification = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    QualificationSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.QUALIFICATION_TYPE_GUID;
        });
    };
    QualificationSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var qualificationsetup = __WEBPACK_IMPORTED_MODULE_3__models_qualificationsetup_model__["a" /* QualificationSetup_Model */].fromJson(result);
            return qualificationsetup;
        }).catch(this.handleError);
    };
    ;
    QualificationSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], QualificationSetup_Service);
    return QualificationSetup_Service;
}());

//# sourceMappingURL=qualificationsetup_service.js.map

/***/ }),
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ViewUser_Model; });
var ViewUser_Model = /** @class */ (function () {
    function ViewUser_Model(USER_GUID, NAME, MARITAL_STATUS, PERSONAL_ID_TYPE, PERSONAL_ID, DOB, GENDER, EMAIL, CONTACT_NO, COMPANY_CONTACT_NO) {
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (NAME === void 0) { NAME = null; }
        if (MARITAL_STATUS === void 0) { MARITAL_STATUS = null; }
        if (PERSONAL_ID_TYPE === void 0) { PERSONAL_ID_TYPE = null; }
        if (PERSONAL_ID === void 0) { PERSONAL_ID = null; }
        if (DOB === void 0) { DOB = null; }
        if (GENDER === void 0) { GENDER = null; }
        if (EMAIL === void 0) { EMAIL = null; }
        if (CONTACT_NO === void 0) { CONTACT_NO = null; }
        if (COMPANY_CONTACT_NO === void 0) { COMPANY_CONTACT_NO = null; }
        this.USER_GUID = USER_GUID;
        this.NAME = NAME;
        this.MARITAL_STATUS = MARITAL_STATUS;
        this.PERSONAL_ID_TYPE = PERSONAL_ID_TYPE;
        this.PERSONAL_ID = PERSONAL_ID;
        this.DOB = DOB;
        this.GENDER = GENDER;
        this.EMAIL = EMAIL;
        this.CONTACT_NO = CONTACT_NO;
        this.COMPANY_CONTACT_NO = COMPANY_CONTACT_NO;
    }
    ViewUser_Model.fromJson = function (json) {
        if (!json)
            return;
        return new ViewUser_Model(json.USER_GUID, json.NAME, json.MARITAL_STATUS, json.PERSONAL_ID_TYPE, json.PERSONAL_ID, json.DOB, json.GENDER, json.EMAIL, json.CONTACT_NO, json.COMPANY_CONTACT_NO);
    };
    ViewUser_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_GUID: this.USER_GUID,
            NAME: this.NAME,
            MARITAL_STATUS: this.MARITAL_STATUS,
            PERSONAL_ID_TYPE: this.PERSONAL_ID_TYPE,
            PERSONAL_ID: this.PERSONAL_ID,
            DOB: this.DOB,
            GENDER: this.GENDER,
            EMAIL: this.EMAIL,
            CONTACT_NO: this.CONTACT_NO,
            COMPANY_CONTACT_NO: this.COMPANY_CONTACT_NO,
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ViewUser_Model;
}());

//# sourceMappingURL=viewuser_model.js.map

/***/ }),
/* 612 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return View_Dropdown_Model; });
var View_Dropdown_Model = /** @class */ (function () {
    function View_Dropdown_Model(USER_GUID, DESIGNATION_GUID, DEPT_GUID, TENANT_COMPANY_GUID, JOIN_DATE, CONFIRMATION_DATE, RESIGNATION_DATE, BRANCH, EMPLOYEE_TYPE, APPROVER1, APPROVER2, EMPLOYEE_STATUS) {
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (DESIGNATION_GUID === void 0) { DESIGNATION_GUID = null; }
        if (DEPT_GUID === void 0) { DEPT_GUID = null; }
        if (TENANT_COMPANY_GUID === void 0) { TENANT_COMPANY_GUID = null; }
        if (JOIN_DATE === void 0) { JOIN_DATE = null; }
        if (CONFIRMATION_DATE === void 0) { CONFIRMATION_DATE = null; }
        if (RESIGNATION_DATE === void 0) { RESIGNATION_DATE = null; }
        if (BRANCH === void 0) { BRANCH = null; }
        if (EMPLOYEE_TYPE === void 0) { EMPLOYEE_TYPE = null; }
        if (APPROVER1 === void 0) { APPROVER1 = null; }
        if (APPROVER2 === void 0) { APPROVER2 = null; }
        if (EMPLOYEE_STATUS === void 0) { EMPLOYEE_STATUS = null; }
        this.USER_GUID = USER_GUID;
        this.DESIGNATION_GUID = DESIGNATION_GUID;
        this.DEPT_GUID = DEPT_GUID;
        this.TENANT_COMPANY_GUID = TENANT_COMPANY_GUID;
        this.JOIN_DATE = JOIN_DATE;
        this.CONFIRMATION_DATE = CONFIRMATION_DATE;
        this.RESIGNATION_DATE = RESIGNATION_DATE;
        this.BRANCH = BRANCH;
        this.EMPLOYEE_TYPE = EMPLOYEE_TYPE;
        this.APPROVER1 = APPROVER1;
        this.APPROVER2 = APPROVER2;
        this.EMPLOYEE_STATUS = EMPLOYEE_STATUS;
    }
    View_Dropdown_Model.fromJson = function (json) {
        if (!json)
            return;
        return new View_Dropdown_Model(json.USER_GUID, json.DESIGNATION_GUID, json.DEPT_GUID, json.TENANT_COMPANY_GUID, json.JOIN_DATE, json.CONFIRMATION_DATE, json.RESIGNATION_DATE, json.BRANCH, json.EMPLOYEE_TYPE, json.APPROVER1, json.APPROVER2, json.EMPLOYEE_STATUS);
    };
    View_Dropdown_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_GUID: this.USER_GUID,
            DESIGNATION_GUID: this.DESIGNATION_GUID,
            DEPT_GUID: this.DEPT_GUID,
            TENANT_COMPANY_GUID: this.TENANT_COMPANY_GUID,
            JOIN_DATE: this.JOIN_DATE,
            CONFIRMATION_DATE: this.CONFIRMATION_DATE,
            RESIGNATION_DATE: this.RESIGNATION_DATE,
            BRANCH: this.BRANCH,
            EMPLOYEE_TYPE: this.EMPLOYEE_TYPE,
            APPROVER1: this.APPROVER1,
            APPROVER2: this.APPROVER2,
            EMPLOYEE_STATUS: this.EMPLOYEE_STATUS
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return View_Dropdown_Model;
}());

//# sourceMappingURL=view_dropdown.js.map

/***/ }),
/* 613 */,
/* 614 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CountrySetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_countrysetup_model__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var CountrySetup_Service = /** @class */ (function () {
    function CountrySetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_country';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    CountrySetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    CountrySetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var countries = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return countries;
        }).catch(this.handleError);
    };
    ;
    CountrySetup_Service.prototype.save = function (country_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert(JSON.stringify(mileage_main));
        return this.httpService.http.post(this.baseResourceUrl, country_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    CountrySetup_Service.prototype.update = function (country_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, country_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    // get_mileage(params?: URLSearchParams): Observable<CountrySetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let branches: Array<CountrySetup_Model> = [];
    //             // result.resource.forEach((branch) => {
    //             //  	branches.push(BranchSetup_Model.fromJson(branch));
    //             //  });
    //             return branches;
    //         }).catch(this.handleError);
    // };
    CountrySetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.DEPARTMENT_GUID;
        });
    };
    CountrySetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            console.log(result);
            // alert(this.baseResourceUrl);
            var countrytype = __WEBPACK_IMPORTED_MODULE_3__models_countrysetup_model__["a" /* CountrySetup_Model */].fromJson(result);
            console.log(countrytype);
            //alert(JSON.stringify(claimtype));
            return countrytype;
        }).catch(this.handleError);
    };
    ;
    CountrySetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], CountrySetup_Service);
    return CountrySetup_Service;
}());

//# sourceMappingURL=countrysetup_service.js.map

/***/ }),
/* 615 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StateSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_statesetup_model__ = __webpack_require__(445);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import 'rxjs/add/observable/throw';

var ServerResponse = /** @class */ (function () {
    function ServerResponse(resource) {
        this.resource = resource;
    }
    return ServerResponse;
}());
;
var StateSetup_Service = /** @class */ (function () {
    function StateSetup_Service(httpService, nav) {
        this.httpService = httpService;
        this.nav = nav;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_state';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    StateSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    // query(params?: URLSearchParams): Observable<StateSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let branches: Array<StateSetup_Model> = [];
    //             // result.resource.forEach((branch) => {
    //             // 	branches.push(BranchSetup_Model.fromJson(branche));
    //             // });  
    //             return branches;
    //         }).catch(this.handleError);
    // };
    StateSetup_Service.prototype.Save = function (state_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, state_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    StateSetup_Service.prototype.Update = function (state_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, state_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    StateSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            //console.log(result.bank_GUID);
            return result.STATE_GUID;
        });
    };
    // get_cashcard(params?: URLSearchParams): Observable<CashcardSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let cashcards: Array<CashcardSetup_Model> = [];
    //             // result.resource.forEach((cashcard) => {
    //             //  	cashcards.push(CashcardSetup_Model.fromJson(cashcard));
    //             //  });
    //             return cashcards;
    //         }).catch(this.handleError);
    // };
    // remove(id: string) {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             return result.cashcard_GUID;
    //         });
    // }
    StateSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var state = __WEBPACK_IMPORTED_MODULE_3__models_statesetup_model__["a" /* StateSetup_Model */].fromJson(result);
            return state;
        }).catch(this.handleError);
    };
    ;
    StateSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8_ionic_angular__["m" /* NavController */]])
    ], StateSetup_Service);
    return StateSetup_Service;
}());

//# sourceMappingURL=statesetup_service.js.map

/***/ }),
/* 616 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Main_Attendance_Model; });
var Main_Attendance_Model = /** @class */ (function () {
    function Main_Attendance_Model(user_id, employee_code, employee_name, dept, attendance_time, att_id, dev_id, photo_id, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (user_id === void 0) { user_id = null; }
        if (employee_code === void 0) { employee_code = null; }
        if (employee_name === void 0) { employee_name = null; }
        if (dept === void 0) { dept = null; }
        if (attendance_time === void 0) { attendance_time = null; }
        if (att_id === void 0) { att_id = null; }
        if (dev_id === void 0) { dev_id = null; }
        if (photo_id === void 0) { photo_id = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.user_id = user_id;
        this.employee_code = employee_code;
        this.employee_name = employee_name;
        this.dept = dept;
        this.attendance_time = attendance_time;
        this.att_id = att_id;
        this.dev_id = dev_id;
        this.photo_id = photo_id;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    Main_Attendance_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Main_Attendance_Model(json.user_id, json.employee_code, json.employee_name, json.dept, json.attendance_time, json.att_id, json.dev_id, json.photo_id, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    Main_Attendance_Model.prototype.toJson = function (stringify) {
        var doc = {
            user_id: this.user_id,
            employee_code: this.employee_code,
            employee_name: this.employee_name,
            dept: this.dept,
            attendance_time: this.attendance_time,
            att_id: this.att_id,
            dev_id: this.dev_id,
            photo_id: this.photo_id,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Main_Attendance_Model;
}());

//# sourceMappingURL=main_attendance_model.js.map

/***/ }),
/* 617 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Device_Raw_Data_Model; });
var Device_Raw_Data_Model = /** @class */ (function () {
    function Device_Raw_Data_Model(RAW_DATA_GUID, DEVICE_GUID, REF_NO, DATA_ENTRY_TS, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (RAW_DATA_GUID === void 0) { RAW_DATA_GUID = null; }
        if (DEVICE_GUID === void 0) { DEVICE_GUID = null; }
        if (REF_NO === void 0) { REF_NO = null; }
        if (DATA_ENTRY_TS === void 0) { DATA_ENTRY_TS = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.RAW_DATA_GUID = RAW_DATA_GUID;
        this.DEVICE_GUID = DEVICE_GUID;
        this.REF_NO = REF_NO;
        this.DATA_ENTRY_TS = DATA_ENTRY_TS;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    Device_Raw_Data_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Device_Raw_Data_Model(json.RAW_DATA_GUID, json.DEVICE_GUID, json.REF_NO, json.DATA_ENTRY_TS, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    Device_Raw_Data_Model.prototype.toJson = function (stringify) {
        var doc = {
            RAW_DATA_GUID: this.RAW_DATA_GUID,
            DEVICE_GUID: this.DEVICE_GUID,
            REF_NO: this.REF_NO,
            DATA_ENTRY_TS: this.DATA_ENTRY_TS,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Device_Raw_Data_Model;
}());

//# sourceMappingURL=device_raw_data_model.js.map

/***/ }),
/* 618 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return User_Attendance_Main_Model; });
var User_Attendance_Main_Model = /** @class */ (function () {
    function User_Attendance_Main_Model(USER_ATTENDANCE_GUID, USER_GUID, ATTENDANCE_DATE, IN_TS, OUT_TS, WORKING_HOURS, OVERTIME_FLAG, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (USER_ATTENDANCE_GUID === void 0) { USER_ATTENDANCE_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (ATTENDANCE_DATE === void 0) { ATTENDANCE_DATE = null; }
        if (IN_TS === void 0) { IN_TS = null; }
        if (OUT_TS === void 0) { OUT_TS = null; }
        if (WORKING_HOURS === void 0) { WORKING_HOURS = null; }
        if (OVERTIME_FLAG === void 0) { OVERTIME_FLAG = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.USER_ATTENDANCE_GUID = USER_ATTENDANCE_GUID;
        this.USER_GUID = USER_GUID;
        this.ATTENDANCE_DATE = ATTENDANCE_DATE;
        this.IN_TS = IN_TS;
        this.OUT_TS = OUT_TS;
        this.WORKING_HOURS = WORKING_HOURS;
        this.OVERTIME_FLAG = OVERTIME_FLAG;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    User_Attendance_Main_Model.fromJson = function (json) {
        if (!json)
            return;
        return new User_Attendance_Main_Model(json.USER_ATTENDANCE_GUID, json.USER_GUID, json.ATTENDANCE_DATE, json.IN_TS, json.OUT_TS, json.WORKING_HOURS, json.OVERTIME_FLAG, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    User_Attendance_Main_Model.prototype.toJson = function (stringify) {
        var doc = {
            USER_ATTENDANCE_GUID: this.USER_ATTENDANCE_GUID,
            USER_GUID: this.USER_GUID,
            ATTENDANCE_DATE: this.ATTENDANCE_DATE,
            IN_TS: this.IN_TS,
            OUT_TS: this.OUT_TS,
            WORKING_HOURS: this.WORKING_HOURS,
            OVERTIME_FLAG: this.OVERTIME_FLAG,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return User_Attendance_Main_Model;
}());

//# sourceMappingURL=user_attendance_main_model.js.map

/***/ }),
/* 619 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Leave_Raw_Data_Model; });
var Leave_Raw_Data_Model = /** @class */ (function () {
    function Leave_Raw_Data_Model(STAFF_ID, TITLE, START_DATE, END_DATE, LEAVE_ID, HALF_DAY_DATE, SESSION, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (STAFF_ID === void 0) { STAFF_ID = null; }
        if (TITLE === void 0) { TITLE = null; }
        if (START_DATE === void 0) { START_DATE = null; }
        if (END_DATE === void 0) { END_DATE = null; }
        if (LEAVE_ID === void 0) { LEAVE_ID = null; }
        if (HALF_DAY_DATE === void 0) { HALF_DAY_DATE = null; }
        if (SESSION === void 0) { SESSION = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.STAFF_ID = STAFF_ID;
        this.TITLE = TITLE;
        this.START_DATE = START_DATE;
        this.END_DATE = END_DATE;
        this.LEAVE_ID = LEAVE_ID;
        this.HALF_DAY_DATE = HALF_DAY_DATE;
        this.SESSION = SESSION;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    Leave_Raw_Data_Model.fromJson = function (json) {
        if (!json)
            return;
        return new Leave_Raw_Data_Model(json.STAFF_ID, json.TITLE, json.START_DATE, json.END_DATE, json.LEAVE_ID, json.HALF_DAY_DATE, json.SESSION, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    Leave_Raw_Data_Model.prototype.toJson = function (stringify) {
        var doc = {
            STAFF_ID: this.STAFF_ID,
            TITLE: this.TITLE,
            START_DATE: this.START_DATE,
            END_DATE: this.END_DATE,
            LEAVE_ID: this.LEAVE_ID,
            HALF_DAY_DATE: this.HALF_DAY_DATE,
            SESSION: this.SESSION,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return Leave_Raw_Data_Model;
}());

//# sourceMappingURL=leave_raw_data_model.js.map

/***/ }),
/* 620 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_devicesetup_model__ = __webpack_require__(448);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var DeviceSetup_Service = /** @class */ (function () {
    function DeviceSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_device';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    DeviceSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    DeviceSetup_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    DeviceSetup_Service.prototype.save = function (device_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, device_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DeviceSetup_Service.prototype.update = function (device_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, device_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    DeviceSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.DESIGNATION_GUID;
        });
    };
    DeviceSetup_Service.prototype.remove_multiple = function (id, tablename) {
        var url_multiple = this.baseResource_Url + tablename + "?filter=(TENANT_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(url_multiple, { headers: queryHeaders })
            .map(function (response) {
            //return result.PAGE_GUID;
            return response;
        });
    };
    DeviceSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var device = __WEBPACK_IMPORTED_MODULE_3__models_devicesetup_model__["a" /* DeviceSetup_Model */].fromJson(result);
            return device;
        }).catch(this.handleError);
    };
    ;
    DeviceSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], DeviceSetup_Service);
    return DeviceSetup_Service;
}());

//# sourceMappingURL=devicesetup_service.js.map

/***/ }),
/* 621 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RoleSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_rolesetup_model__ = __webpack_require__(450);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








;
var RoleSetup_Service = /** @class */ (function () {
    function RoleSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    RoleSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    RoleSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    RoleSetup_Service.prototype.save = function (role_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        // alert(JSON.stringify(role_main));
        return this.httpService.http.post(this.baseResourceUrl, role_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    RoleSetup_Service.prototype.update = function (role_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, role_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    RoleSetup_Service.prototype.get_role = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    RoleSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.ROLE_GUID;
        });
    };
    RoleSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        //alert(id);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var roletype = __WEBPACK_IMPORTED_MODULE_3__models_rolesetup_model__["a" /* RoleSetup_Model */].fromJson(result);
            return roletype;
        }).catch(this.handleError);
    };
    ;
    RoleSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], RoleSetup_Service);
    return RoleSetup_Service;
}());

//# sourceMappingURL=rolesetup_service.js.map

/***/ }),
/* 622 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RoleModuleSetup_Model; });
var RoleModuleSetup_Model = /** @class */ (function () {
    function RoleModuleSetup_Model(ROLE_MODULE_GUID, ROLE_GUID, MODULE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, MODULE_SLNO, MODULE_FLAG) {
        if (ROLE_MODULE_GUID === void 0) { ROLE_MODULE_GUID = null; }
        if (ROLE_GUID === void 0) { ROLE_GUID = null; }
        if (MODULE_GUID === void 0) { MODULE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (MODULE_SLNO === void 0) { MODULE_SLNO = null; }
        if (MODULE_FLAG === void 0) { MODULE_FLAG = null; }
        this.ROLE_MODULE_GUID = ROLE_MODULE_GUID;
        this.ROLE_GUID = ROLE_GUID;
        this.MODULE_GUID = MODULE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.MODULE_SLNO = MODULE_SLNO;
        this.MODULE_FLAG = MODULE_FLAG;
    }
    RoleModuleSetup_Model.fromJson = function (json) {
        if (!json)
            return;
        return new RoleModuleSetup_Model(json.ROLE_MODULE_GUID, json.ROLE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.MODULE_SLNO, json.MODULE_FLAG);
    };
    RoleModuleSetup_Model.prototype.toJson = function (stringify) {
        var doc = {
            ROLE_MODULE_GUID: this.ROLE_MODULE_GUID,
            ROLE_GUID: this.ROLE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            MODULE_SLNO: this.MODULE_SLNO,
            MODULE_FLAG: this.MODULE_FLAG
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return RoleModuleSetup_Model;
}());

//# sourceMappingURL=rolemodulesetup_model.js.map

/***/ }),
/* 623 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RoleModuleSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var RoleModuleSetup_Service = /** @class */ (function () {
    function RoleModuleSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/role_module';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.Module_New = [];
    }
    ;
    // save(module_main: ModulePageSetup_Model): Observable<any> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     let options = new RequestOptions({ headers: queryHeaders });//alert (JSON.stringify(module_main));
    //     return this.httpService.http.post(this.baseResourceUrl, module_main.toJson(true), options)
    //         .map((response) => {
    //             return response;
    //         });
    // }
    RoleModuleSetup_Service.prototype.save_multiple_recocrd = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        //alert (JSON.stringify(module_main));
        return this.httpService.http.post(this.baseResourceUrl, module_main, options)
            .map(function (response) {
            return response;
        });
    };
    // update(module_main: ModulePageSetup_Model): Observable<any> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     let options = new RequestOptions({ headers: queryHeaders });
    //     return this.httpService.http.patch(this.baseResourceUrl, module_main.toJson(true), options)
    //         .map((response) => {
    //             return response;
    //         });
    // }
    RoleModuleSetup_Service.prototype.remove = function (id) {
        var url = this.baseResource_Url + "role_module?filter=(ROLE_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            //.delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(url, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PAGE_GUID;
        });
    };
    RoleModuleSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], RoleModuleSetup_Service);
    return RoleModuleSetup_Service;
}());

//# sourceMappingURL=rolemodulesetup_service.js.map

/***/ }),
/* 624 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return approval_profile_model; });
var approval_profile_model = /** @class */ (function () {
    function approval_profile_model(id, approver) {
        if (id === void 0) { id = null; }
        if (approver === void 0) { approver = null; }
        this.id = id;
        this.approver = approver;
    }
    approval_profile_model.fromJson = function (json) {
        if (!json)
            return;
        return new approval_profile_model(json.id, json.approver);
    };
    approval_profile_model.prototype.toJson = function (stringify) {
        var doc = {
            id: this.id,
            Approver: this.approver
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return approval_profile_model;
}());

//# sourceMappingURL=approval_profile_model.js.map

/***/ }),
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */,
/* 655 */,
/* 656 */,
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Checkboxlist; });
var Checkboxlist = /** @class */ (function () {
    function Checkboxlist(Checked, ClaimRequestGuid, level, status) {
        if (ClaimRequestGuid === void 0) { ClaimRequestGuid = null; }
        this.Checked = Checked;
        this.ClaimRequestGuid = ClaimRequestGuid;
        this.level = level;
        this.status = status;
    }
    return Checkboxlist;
}());

//# sourceMappingURL=checkbox-list.model.js.map

/***/ }),
/* 667 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimWorkFlowHistoryModel; });
var ClaimWorkFlowHistoryModel = /** @class */ (function () {
    function ClaimWorkFlowHistoryModel(CLAIM_REQUEST_GUID, CLAIM_WFH_GUID, REMARKS, STATUS, USER_GUID, CREATION_TS, UPDATE_TS, CREATION_USER_GUID, UPDATE_USER_GUID, ASSIGNED_TO, PROFILE_LEVEL) {
        if (CLAIM_REQUEST_GUID === void 0) { CLAIM_REQUEST_GUID = null; }
        if (CLAIM_WFH_GUID === void 0) { CLAIM_WFH_GUID = null; }
        if (REMARKS === void 0) { REMARKS = null; }
        if (STATUS === void 0) { STATUS = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (ASSIGNED_TO === void 0) { ASSIGNED_TO = null; }
        if (PROFILE_LEVEL === void 0) { PROFILE_LEVEL = null; }
        this.CLAIM_REQUEST_GUID = CLAIM_REQUEST_GUID;
        this.CLAIM_WFH_GUID = CLAIM_WFH_GUID;
        this.REMARKS = REMARKS;
        this.STATUS = STATUS;
        this.USER_GUID = USER_GUID;
        this.CREATION_TS = CREATION_TS;
        this.UPDATE_TS = UPDATE_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.ASSIGNED_TO = ASSIGNED_TO;
        this.PROFILE_LEVEL = PROFILE_LEVEL;
    }
    ClaimWorkFlowHistoryModel.fromJson = function (json) {
        if (!json)
            return;
        return new ClaimWorkFlowHistoryModel(json.CLAIM_REQUEST_GUID, json.CLAIM_WFH_GUID, json.REMARKS, json.STATUS, json.USER_GUID, json.CREATION_TS, json.UPDATE_TS, json.CREATION_USER_GUID, json.UPDATE_USER_GUID, json.ASSIGNED_TO, json.PROFILE_LEVEL);
    };
    ClaimWorkFlowHistoryModel.prototype.toJson = function (stringify) {
        var doc = {
            CLAIM_REQUEST_GUID: this.CLAIM_REQUEST_GUID,
            CLAIM_WFH_GUID: this.CLAIM_WFH_GUID,
            REMARKS: this.REMARKS,
            STATUS: this.STATUS,
            USER_GUID: this.USER_GUID,
            CREATION_TS: this.CREATION_TS,
            UPDATE_TS: this.UPDATE_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            ASSIGNED_TO: this.ASSIGNED_TO,
            PROFILE_LEVEL: this.PROFILE_LEVEL
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ClaimWorkFlowHistoryModel;
}());

//# sourceMappingURL=claim-work-flow-history.model.js.map

/***/ }),
/* 668 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MainClaimReferanceModel; });
var MainClaimReferanceModel = /** @class */ (function () {
    function MainClaimReferanceModel(CLAIM_REF_GUID, USER_GUID, TENANT_GUID, REF_NO, MONTH, YEAR, STATUS, STATUS_REMARKS, CLOSURE_TYPE_GUID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID) {
        if (CLAIM_REF_GUID === void 0) { CLAIM_REF_GUID = null; }
        if (USER_GUID === void 0) { USER_GUID = null; }
        if (TENANT_GUID === void 0) { TENANT_GUID = null; }
        if (REF_NO === void 0) { REF_NO = null; }
        if (MONTH === void 0) { MONTH = null; }
        if (YEAR === void 0) { YEAR = null; }
        if (STATUS === void 0) { STATUS = null; }
        if (STATUS_REMARKS === void 0) { STATUS_REMARKS = null; }
        if (CLOSURE_TYPE_GUID === void 0) { CLOSURE_TYPE_GUID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        this.CLAIM_REF_GUID = CLAIM_REF_GUID;
        this.USER_GUID = USER_GUID;
        this.TENANT_GUID = TENANT_GUID;
        this.REF_NO = REF_NO;
        this.MONTH = MONTH;
        this.YEAR = YEAR;
        this.STATUS = STATUS;
        this.STATUS_REMARKS = STATUS_REMARKS;
        this.CLOSURE_TYPE_GUID = CLOSURE_TYPE_GUID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
    }
    MainClaimReferanceModel.fromJson = function (json) {
        if (!json)
            return;
        return new MainClaimReferanceModel(json.CLAIM_REF_GUID, json.USER_GUID, json.TENANT_GUID, json.REF_NO, json.MONTH, json.YEAR, json.STATUS, json.STATUS_REMARKS, json.CLOSURE_TYPE_GUID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID);
    };
    MainClaimReferanceModel.prototype.toJson = function (stringify) {
        var doc = {
            CLAIM_REF_GUID: this.CLAIM_REF_GUID,
            USER_GUID: this.USER_GUID,
            TENANT_GUID: this.TENANT_GUID,
            REF_NO: this.REF_NO,
            MONTH: this.MONTH,
            YEAR: this.YEAR,
            STATUS: this.STATUS,
            STATUS_REMARKS: this.STATUS_REMARKS,
            CLOSURE_TYPE_GUID: this.CLOSURE_TYPE_GUID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return MainClaimReferanceModel;
}());

//# sourceMappingURL=main-claim-ref.model.js.map

/***/ }),
/* 669 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimRequestDetailModel; });
var ClaimRequestDetailModel = /** @class */ (function () {
    function ClaimRequestDetailModel(CLAIM_REQUEST_DETAIL_GUID, CLAIM_REQUEST_GUID, CLAIM_METHOD_GUID, AMOUNT, DESCRIPTION, PAYMENT_TYPE_GUID, ATTACHMENT_ID, CREATION_TS, CREATION_USER_GUID, UPDATE_TS, UPDATE_USER_GUID, GST) {
        if (CLAIM_REQUEST_DETAIL_GUID === void 0) { CLAIM_REQUEST_DETAIL_GUID = null; }
        if (CLAIM_REQUEST_GUID === void 0) { CLAIM_REQUEST_GUID = null; }
        if (CLAIM_METHOD_GUID === void 0) { CLAIM_METHOD_GUID = null; }
        if (AMOUNT === void 0) { AMOUNT = null; }
        if (DESCRIPTION === void 0) { DESCRIPTION = null; }
        if (PAYMENT_TYPE_GUID === void 0) { PAYMENT_TYPE_GUID = null; }
        if (ATTACHMENT_ID === void 0) { ATTACHMENT_ID = null; }
        if (CREATION_TS === void 0) { CREATION_TS = null; }
        if (CREATION_USER_GUID === void 0) { CREATION_USER_GUID = null; }
        if (UPDATE_TS === void 0) { UPDATE_TS = null; }
        if (UPDATE_USER_GUID === void 0) { UPDATE_USER_GUID = null; }
        if (GST === void 0) { GST = null; }
        this.CLAIM_REQUEST_DETAIL_GUID = CLAIM_REQUEST_DETAIL_GUID;
        this.CLAIM_REQUEST_GUID = CLAIM_REQUEST_GUID;
        this.CLAIM_METHOD_GUID = CLAIM_METHOD_GUID;
        this.AMOUNT = AMOUNT;
        this.DESCRIPTION = DESCRIPTION;
        this.PAYMENT_TYPE_GUID = PAYMENT_TYPE_GUID;
        this.ATTACHMENT_ID = ATTACHMENT_ID;
        this.CREATION_TS = CREATION_TS;
        this.CREATION_USER_GUID = CREATION_USER_GUID;
        this.UPDATE_TS = UPDATE_TS;
        this.UPDATE_USER_GUID = UPDATE_USER_GUID;
        this.GST = GST;
    }
    ClaimRequestDetailModel.fromJson = function (json) {
        if (!json)
            return;
        return new ClaimRequestDetailModel(json.CLAIM_REQUEST_DETAIL_GUID, json.CLAIM_REQUEST_GUID, json.CLAIM_METHOD_GUID, json.AMOUNT, json.DESCRIPTION, json.PAYMENT_TYPE_GUID, json.ATTACHMENT_ID, json.CREATION_TS, json.CREATION_USER_GUID, json.UPDATE_TS, json.UPDATE_USER_GUID, json.GST);
    };
    ClaimRequestDetailModel.prototype.toJson = function (stringify) {
        var doc = {
            CLAIM_REQUEST_DETAIL_GUID: this.CLAIM_REQUEST_DETAIL_GUID,
            CLAIM_REQUEST_GUID: this.CLAIM_REQUEST_GUID,
            CLAIM_METHOD_GUID: this.CLAIM_METHOD_GUID,
            AMOUNT: this.AMOUNT,
            DESCRIPTION: this.DESCRIPTION,
            PAYMENT_TYPE_GUID: this.PAYMENT_TYPE_GUID,
            ATTACHMENT_ID: this.ATTACHMENT_ID,
            CREATION_TS: this.CREATION_TS,
            CREATION_USER_GUID: this.CREATION_USER_GUID,
            UPDATE_TS: this.UPDATE_TS,
            UPDATE_USER_GUID: this.UPDATE_USER_GUID,
            GST: this.GST
        };
        return stringify ? JSON.stringify({ resource: [doc] }) : doc;
    };
    return ClaimRequestDetailModel;
}());

//# sourceMappingURL=claim-request-detail.model.js.map

/***/ }),
/* 670 */,
/* 671 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EntertainmentClaim_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {MasterClaim_Model} from '../models/masterclaim_model';




var EntertainmentClaim_Service = /** @class */ (function () {
    function EntertainmentClaim_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/claim_request_detail';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    EntertainmentClaim_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].throw(errMsg);
    };
    EntertainmentClaim_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    // save_main_claim_request (master_main: MasterClaim_Model): Observable<any> 
    // {
    // 	var queryHeaders = new Headers();
    // 	queryHeaders.append('Content-Type', 'application/json');
    // 	//queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    // 	queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    // 	let options = new RequestOptions({ headers: queryHeaders });
    // 	return this.httpService.http.post(this.baseResourceUrl1, master_main.toJson(true),options)
    // 		.map((response) => {
    // 			return response;
    // 		});
    // }
    EntertainmentClaim_Service.prototype.save_claim_request_detail = function (entertainment_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, entertainment_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    EntertainmentClaim_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], EntertainmentClaim_Service);
    return EntertainmentClaim_Service;
}());

//# sourceMappingURL=entertainmentclaim_service.js.map

/***/ }),
/* 672 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OvertimeClaim_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {MasterClaim_Model} from '../models/masterclaim_model';




var OvertimeClaim_Service = /** @class */ (function () {
    function OvertimeClaim_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/claim_request_detail';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    OvertimeClaim_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].throw(errMsg);
    };
    OvertimeClaim_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    // save_main_claim_request (master_main: MasterClaim_Model): Observable<any> 
    // {
    // 	var queryHeaders = new Headers();
    // 	queryHeaders.append('Content-Type', 'application/json');
    // 	//queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    // 	queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    // 	let options = new RequestOptions({ headers: queryHeaders });
    // 	return this.httpService.http.post(this.baseResourceUrl1, master_main.toJson(true),options)
    // 		.map((response) => {
    // 			return response;
    // 		});
    // }
    OvertimeClaim_Service.prototype.save_claim_request_detail = function (travel_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, travel_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    OvertimeClaim_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], OvertimeClaim_Service);
    return OvertimeClaim_Service;
}());

//# sourceMappingURL=overtimeclaim_service.js.map

/***/ }),
/* 673 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PrintingClaim_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {MasterClaim_Model} from '../models/masterclaim_model';




var PrintingClaim_Service = /** @class */ (function () {
    function PrintingClaim_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/claim_request_detail';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    PrintingClaim_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].throw(errMsg);
    };
    PrintingClaim_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    // save_main_claim_request (master_main: MasterClaim_Model): Observable<any> 
    // {
    // 	var queryHeaders = new Headers();
    // 	queryHeaders.append('Content-Type', 'application/json');
    // 	//queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    // 	queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    // 	let options = new RequestOptions({ headers: queryHeaders });
    // 	return this.httpService.http.post(this.baseResourceUrl1, master_main.toJson(true),options)
    // 		.map((response) => {
    // 			return response;
    // 		});
    // }
    PrintingClaim_Service.prototype.save_claim_request_detail = function (printing_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, printing_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    PrintingClaim_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], PrintingClaim_Service);
    return PrintingClaim_Service;
}());

//# sourceMappingURL=printingclaim_service.js.map

/***/ }),
/* 674 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GiftClaim_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {MasterClaim_Model} from '../models/masterclaim_model';




var GiftClaim_Service = /** @class */ (function () {
    function GiftClaim_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/claim_request_detail';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    GiftClaim_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].throw(errMsg);
    };
    GiftClaim_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    // save_main_claim_request (master_main: MasterClaim_Model): Observable<any> 
    // {
    // 	var queryHeaders = new Headers();
    // 	queryHeaders.append('Content-Type', 'application/json');
    // 	//queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    // 	queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    // 	let options = new RequestOptions({ headers: queryHeaders });
    // 	return this.httpService.http.post(this.baseResourceUrl1, master_main.toJson(true),options)
    // 		.map((response) => {
    // 			return response;
    // 		});
    // }
    GiftClaim_Service.prototype.save_claim_request_detail = function (gift_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, gift_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    GiftClaim_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], GiftClaim_Service);
    return GiftClaim_Service;
}());

//# sourceMappingURL=giftclaim_service.js.map

/***/ }),
/* 675 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalClaim_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {MasterClaim_Model} from '../models/masterclaim_model';




var MedicalClaim_Service = /** @class */ (function () {
    function MedicalClaim_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_request';
        this.baseResource_Url1 = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/claim_request_detail';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    MedicalClaim_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].throw(errMsg);
    };
    MedicalClaim_Service.prototype.query = function (params) {
        //let bank :any;
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var banks = [];
            // result.resource.forEach((bank) => {
            // 	banks.push(BankSetup_Model.fromJson(bank));
            // });  
            return banks;
        }).catch(this.handleError);
    };
    ;
    // save_main_claim_request (master_main: MasterClaim_Model): Observable<any> 
    // {
    // 	var queryHeaders = new Headers();
    // 	queryHeaders.append('Content-Type', 'application/json');
    // 	//queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    // 	queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    // 	let options = new RequestOptions({ headers: queryHeaders });
    // 	return this.httpService.http.post(this.baseResourceUrl1, master_main.toJson(true),options)
    // 		.map((response) => {
    // 			return response;
    // 		});
    // }
    MedicalClaim_Service.prototype.save_claim_request_detail = function (medical_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, medical_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    MedicalClaim_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__base_http__["a" /* BaseHttpService */]])
    ], MedicalClaim_Service);
    return MedicalClaim_Service;
}());

//# sourceMappingURL=medicalclaim_service.js.map

/***/ }),
/* 676 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubsciptionSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_subsciptionsetup_model__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var SubsciptionSetup_Service = /** @class */ (function () {
    function SubsciptionSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_subscription';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    SubsciptionSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    SubsciptionSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            // 	branches.push(BranchSetup_Model.fromJson(branche));
            // });  
            return branches;
        }).catch(this.handleError);
    };
    ;
    SubsciptionSetup_Service.prototype.save = function (subsciption_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, subsciption_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SubsciptionSetup_Service.prototype.update = function (subsciption_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, subsciption_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    SubsciptionSetup_Service.prototype.get_subscription = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var branches = [];
            // result.resource.forEach((branch) => {
            //  	branches.push(BranchSetup_Model.fromJson(branch));
            //  });
            return branches;
        }).catch(this.handleError);
    };
    ;
    SubsciptionSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.SUBSCRIPTION_GUID;
        });
    };
    SubsciptionSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var subsciption = __WEBPACK_IMPORTED_MODULE_3__models_subsciptionsetup_model__["a" /* SubsciptionSetup_Model */].fromJson(result);
            return subsciption;
        }).catch(this.handleError);
    };
    ;
    SubsciptionSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], SubsciptionSetup_Service);
    return SubsciptionSetup_Service;
}());

//# sourceMappingURL=subsciptionsetup_service.js.map

/***/ }),
/* 677 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_pagesetup_model__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import 'rxjs/add/observable/throw';

var ServerResponse = /** @class */ (function () {
    function ServerResponse(resource) {
        this.resource = resource;
    }
    return ServerResponse;
}());
;
var PageSetup_Service = /** @class */ (function () {
    function PageSetup_Service(httpService, nav) {
        this.httpService = httpService;
        this.nav = nav;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_rolepage';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    PageSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    // query(params?: URLSearchParams): Observable<CashcardSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let branches: Array<CashcardSetup_Model> = [];
    //             // result.resource.forEach((branch) => {
    //             // 	branches.push(BranchSetup_Model.fromJson(branche));
    //             // });  
    //             return branches;
    //         }).catch(this.handleError);
    // };
    PageSetup_Service.prototype.save = function (page_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, page_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    PageSetup_Service.prototype.update = function (page_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, page_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    // get_cashcard(params?: URLSearchParams): Observable<CashcardSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let cashcards: Array<CashcardSetup_Model> = [];
    //             // result.resource.forEach((cashcard) => {
    //             //  	cashcards.push(CashcardSetup_Model.fromJson(cashcard));
    //             //  });
    //             return cashcards;
    //         }).catch(this.handleError);
    // };
    PageSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PAGE_GUID;
        });
    };
    PageSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var page = __WEBPACK_IMPORTED_MODULE_3__models_pagesetup_model__["a" /* PageSetup_Model */].fromJson(result);
            return page;
        }).catch(this.handleError);
    };
    ;
    PageSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8_ionic_angular__["m" /* NavController */]])
    ], PageSetup_Service);
    return PageSetup_Service;
}());

//# sourceMappingURL=pagesetup_service.js.map

/***/ }),
/* 678 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModuleSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_modulesetup_model__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import 'rxjs/add/observable/throw';

var ServerResponse = /** @class */ (function () {
    function ServerResponse(resource) {
        this.resource = resource;
    }
    return ServerResponse;
}());
;
var ModuleSetup_Service = /** @class */ (function () {
    function ModuleSetup_Service(httpService, nav) {
        this.httpService = httpService;
        this.nav = nav;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_module';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    ModuleSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg); // log to console instead
        //localStorage.setItem('session_token', '');       
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    // query(params?: URLSearchParams): Observable<CashcardSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let branches: Array<CashcardSetup_Model> = [];
    //             // result.resource.forEach((branch) => {
    //             // 	branches.push(BranchSetup_Model.fromJson(branche));
    //             // });  
    //             return branches;
    //         }).catch(this.handleError);
    // };
    ModuleSetup_Service.prototype.save = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, module_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ModuleSetup_Service.prototype.update = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, module_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    // get_cashcard(params?: URLSearchParams): Observable<CashcardSetup_Model[]> {
    //     var queryHeaders = new Headers();
    //     queryHeaders.append('Content-Type', 'application/json');
    //     //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
    //     queryHeaders.append('X-Dreamfactory-API-Key', constants.DREAMFACTORY_API_KEY);
    //     return this.httpService.http
    //         .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
    //         .map((response) => {
    //             var result: any = response.json();
    //             let cashcards: Array<CashcardSetup_Model> = [];
    //             // result.resource.forEach((cashcard) => {
    //             //  	cashcards.push(CashcardSetup_Model.fromJson(cashcard));
    //             //  });
    //             return cashcards;
    //         }).catch(this.handleError);
    // };
    ModuleSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PAGE_GUID;
        });
    };
    ModuleSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        //queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var module = __WEBPACK_IMPORTED_MODULE_3__models_modulesetup_model__["a" /* ModuleSetup_Model */].fromJson(result);
            return module;
        }).catch(this.handleError);
    };
    ;
    ModuleSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8_ionic_angular__["m" /* NavController */]])
    ], ModuleSetup_Service);
    return ModuleSetup_Service;
}());

//# sourceMappingURL=modulesetup_service.js.map

/***/ }),
/* 679 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModulePageSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_modulepagesetup_model__ = __webpack_require__(485);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import 'rxjs/add/observable/throw';

var ServerResponse = /** @class */ (function () {
    function ServerResponse(resource) {
        this.resource = resource;
    }
    return ServerResponse;
}());
;
var ModulePageSetup_Service = /** @class */ (function () {
    function ModulePageSetup_Service(httpService, nav) {
        this.httpService = httpService;
        this.nav = nav;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_modulepage';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.Module_New = [];
    }
    ;
    ModulePageSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg);
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    ModulePageSetup_Service.prototype.save = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders }); //alert (JSON.stringify(module_main));
        return this.httpService.http.post(this.baseResourceUrl, module_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ModulePageSetup_Service.prototype.save_multiple_recocrd = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        //alert (JSON.stringify(module_main));
        return this.httpService.http.post(this.baseResourceUrl, module_main, options)
            .map(function (response) {
            return response;
        });
    };
    ModulePageSetup_Service.prototype.update = function (module_main) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, module_main.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ModulePageSetup_Service.prototype.remove = function (id) {
        var url = this.baseResource_Url + "main_modulepage?filter=(	MODULE_GUID=" + id + ")";
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            //.delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .delete(url, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.PAGE_GUID;
        });
    };
    ModulePageSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var module = __WEBPACK_IMPORTED_MODULE_3__models_modulepagesetup_model__["a" /* ModulePageSetup_Model */].fromJson(result);
            return module;
        }).catch(this.handleError);
    };
    ;
    ModulePageSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_8_ionic_angular__["m" /* NavController */]])
    ], ModulePageSetup_Service);
    return ModulePageSetup_Service;
}());

//# sourceMappingURL=modulepagesetup_service.js.map

/***/ }),
/* 680 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfileSetup_Service; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_main_profile_model__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ProfileSetup_Service = /** @class */ (function () {
    function ProfileSetup_Service(httpService) {
        this.httpService = httpService;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_profile';
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
    }
    ;
    ProfileSetup_Service.prototype.handleError = function (error) {
        var errMsg = (error.message) ? error.message :
            error.status ? error.status + " - " + error.statusText : 'Server error';
        console.log(errMsg);
        return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].throw(errMsg);
    };
    ProfileSetup_Service.prototype.query = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function () {
            var profiles = [];
            return profiles;
        }).catch(this.handleError);
    };
    ;
    ProfileSetup_Service.prototype.save = function (profile) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.post(this.baseResourceUrl, profile.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ProfileSetup_Service.prototype.update_profile = function (profile) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return this.httpService.http.patch(this.baseResourceUrl, profile.toJson(true), options)
            .map(function (response) {
            return response;
        });
    };
    ProfileSetup_Service.prototype.get_profile = function (params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl, { search: params, headers: queryHeaders })
            .map(function (response) {
            var profiles = [];
            return profiles;
        }).catch(this.handleError);
    };
    ;
    ProfileSetup_Service.prototype.remove = function (id) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .delete(this.baseResourceUrl + '/' + id, { headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            return result.MAIN_PROFILE_GUID;
        });
    };
    ProfileSetup_Service.prototype.get = function (id, params) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_2__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        return this.httpService.http
            .get(this.baseResourceUrl + '/' + id, { search: params, headers: queryHeaders })
            .map(function (response) {
            var result = response.json();
            var profiles = __WEBPACK_IMPORTED_MODULE_3__models_main_profile_model__["a" /* Main_Profile_Model */].fromJson(result);
            return profiles;
        }).catch(this.handleError);
    };
    ;
    ProfileSetup_Service.prototype.GetExistingRecord = function (PROFILE_NAME) {
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        var url;
        url = "http://api.zen.com.my/api/v2/zcs/_table/main_profile?filter=(PROFILE_NAME=" + PROFILE_NAME + ")&api_key=cb82c1df0ba653578081b3b58179158594b3b8f29c4ee1050fda1b7bd91c3881";
        return this.httpService.http
            .get(url, options)
            .map(function (response) {
            var result = response.json();
            var profiles = __WEBPACK_IMPORTED_MODULE_3__models_main_profile_model__["a" /* Main_Profile_Model */].fromJson(result);
            alert("In GetExist" + JSON.stringify(result));
            return profiles;
        }).catch(this.handleError);
    };
    ;
    ProfileSetup_Service = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__base_http__["a" /* BaseHttpService */]])
    ], ProfileSetup_Service);
    return ProfileSetup_Service;
}());

//# sourceMappingURL=profilesetup_services.js.map

/***/ }),
/* 681 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccountPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_data__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_transfer__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_transfer__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__models_usersetup_info_model__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__models_user_contact_model__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__models_user_company_model__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__models_usersetup_address_model__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__models_user_qualification_model__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__models_user_certification_model__ = __webpack_require__(436);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__models_user_spouse_model__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__models_user_children_model__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__models_user_role_model__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_angular2_uuid__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_angular2_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_angular2_uuid__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
























var AccountPage = /** @class */ (function () {
    // constructor(public alertCtrl: AlertController, public nav: NavController, public userData: UserData, fb: FormBuilder) {
    function AccountPage(alertCtrl, nav, userData, fb, viewCtrl, navParams, http, userservice, actionSheetCtrl, loadingCtrl, toastCtrl, platform, titlecasePipe) {
        this.alertCtrl = alertCtrl;
        this.nav = nav;
        this.userData = userData;
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.http = http;
        this.userservice = userservice;
        this.actionSheetCtrl = actionSheetCtrl;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.platform = platform;
        this.titlecasePipe = titlecasePipe;
        this.baseResourceUrl2_URL = __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + "/api/v2/zcs/_table/user_address?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.MaritalStatusMarried = false;
        this.ProfessionalCertification = [];
        this.FamilyDetails = [];
        this.ChildrenDetails = [];
        this.BaseTableURL = __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.Key_Param = 'api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.CertificateSaveFlag = false;
        this.SpouseSaveFlag = false;
        this.ChildSaveFlag = false;
        this.EditProfileClicked = false;
        this.isReadonly = false;
        this.isDisabled = true;
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_10__models_user_main_model__["a" /* UserMain_Model */]();
        this.userinfo_entry = new __WEBPACK_IMPORTED_MODULE_9__models_usersetup_info_model__["a" /* UserInfo_Model */]();
        this.useraddress_entry = new __WEBPACK_IMPORTED_MODULE_13__models_usersetup_address_model__["a" /* UserAddress_Model */]();
        this.usercompany_entry = new __WEBPACK_IMPORTED_MODULE_12__models_user_company_model__["a" /* UserCompany_Model */]();
        this.usercontact_entry = new __WEBPACK_IMPORTED_MODULE_11__models_user_contact_model__["a" /* UserContact_Model */]();
        this.userqualification_entry = new __WEBPACK_IMPORTED_MODULE_14__models_user_qualification_model__["a" /* UserQualification_Model */]();
        this.UserCertification_Entry = new __WEBPACK_IMPORTED_MODULE_15__models_user_certification_model__["a" /* UserCertification_Model */]();
        this.UserSpouse_Entry = new __WEBPACK_IMPORTED_MODULE_16__models_user_spouse_model__["a" /* UserSpouse_Model */]();
        this.UserChildren_Entry = new __WEBPACK_IMPORTED_MODULE_17__models_user_children_model__["a" /* UserChildren_Model */]();
        this.userrole_entry = new __WEBPACK_IMPORTED_MODULE_20__models_user_role_model__["a" /* UserRole_Model */]();
        this.chooseFile = false;
        this.newImage = true;
        this.ImageUploadValidation = false;
        if (localStorage.getItem("g_USER_GUID") != null) {
            //---------Bind Company---------------------
            this.GetCompany("tenant_company", "NAME");
            //---------Bind Country---------------------
            this.BindCountry("main_country", "NAME");
            //--------Bind Qualification----------------
            this.BindQualification("main_qualification_type", "TYPE_NAME");
            //--------Bind Role--------------------------
            this.BindRole();
            //Display Controls----------------------------
            this.Edit_Personaldetails(localStorage.getItem("g_USER_GUID"));
            this.Userform = fb.group({
                // -------------------PERSONAL DETAILS--------------------
                avatar: null,
                avatar1: null,
                avatar2: null,
                avatar3: null,
                NAME: [null],
                EMAIL: [null],
                LOGIN_ID: [null],
                PASSWORD: [null],
                CONTACT_NO: [null],
                COMPANY_CONTACT_NO: [null],
                MARITAL_STATUS: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required],
                PERSONAL_ID_TYPE: [null],
                PERSONAL_ID: [null],
                DOB: [null],
                GENDER: [null],
                // -------------------EMPLOYMENT DETAILS--------------------
                DESIGNATION_GUID: [null],
                TENANT_COMPANY_GUID: [null],
                DEPT_GUID: [null],
                JOIN_DATE: [null],
                CONFIRMATION_DATE: [null],
                RESIGNATION_DATE: [],
                BRANCH: [null],
                EMPLOYEE_TYPE: [null],
                APPROVER1: [null],
                EMPLOYEE_STATUS: [null],
                // -------------------EDUCATIONAL QUALIFICATION--------------------
                HIGHEST_QUALIFICATION: [null],
                UNIVERSITY: [null],
                MAJOR: [null],
                EDU_YEAR: [null],
                // -------------------PROFESSIONAL CERTIFICATIONS--------------------
                CERTIFICATION: [null],
                CERTIFICATION_YEAR: [null],
                CERTIFICATION_GRADE: [null],
                ATTACHMENT_PROFESSIONAL: [null],
                // -------------------RESIDENTIAL ADDRESS----------------------------
                USER_ADDRESS1: [null],
                USER_ADDRESS2: [null],
                USER_ADDRESS3: [null],
                USER_POSTCODE: [null],
                USER_COUNTRY: [null],
                USER_STATE: [null],
                // -------------------FAMILY DETAILS----------------------------------
                //--------For Spouse----------
                SPOUSENAME: [null],
                SPOUSE_ICNUMBER: [null],
                //--------For Child----------
                CHILDNAME: [null],
                CHILD_ICNUMBER: [null],
                CHILD_GENDER: [null],
                SPOUSE_CHILD: [null],
                // -------------------EMERGENCY CONTACT DETAILS------------------------
                EMG_CONTACT_NAME1: [null],
                EMG_RELATIONSHIP: [null],
                EMG_CONTACT_NO1: [null, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[0-9!@#%$&()-`.+,/\"\\s]+$')])],
                EMG_CONTACT_NAME2: [null],
                EMG_RELATIONSHIP2: [null],
                EMG_CONTACT_NO2: [null],
                // -------------------PAYROLL DETAILS------------------------
                EPF_NUMBER: [null],
                INCOMETAX_NO: [null],
                BANK_NAME: [null],
                ACCOUNT_NUMBER: [null],
                //-------------------ROLE DETAILS---------------------------
                ROLE_NAME: [null],
                ADDITIONAL_ROLE_NAME: [null],
            });
            this.username_display = localStorage.getItem("g_FULLNAME");
        }
        else {
            this.nav.push(__WEBPACK_IMPORTED_MODULE_22__login_login__["a" /* LoginPage */]);
        }
    }
    AccountPage.prototype.Edit_Personaldetails = function (id) {
        var _this = this;
        this.ClearControls();
        this.loading = this.loadingCtrl.create({
            content: 'Loading...',
        });
        this.loading.present();
        this.USER_GUID_FOR_UPDATE = id;
        var headers = new __WEBPACK_IMPORTED_MODULE_7__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        var options = new __WEBPACK_IMPORTED_MODULE_7__angular_http__["d" /* RequestOptions */]({ headers: headers });
        var url_user_edit = this.baseResourceUrl2_URL + "view_user_edit?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var url_user_Professional_Certification = this.baseResourceUrl2_URL + "user_certification?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var url_user_Spouse = this.baseResourceUrl2_URL + "user_spouse?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        var url_user_Children = this.baseResourceUrl2_URL + "user_children?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // debugger;
        //----------------Get the Details from Db and bind Controls---------------------------------
        this.http.get(url_user_edit, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.view_user_details = data["resource"];
            //------------------------PERSONAL DETAILS----------------------------------
            _this.User_Name_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["FULLNAME"]);
            _this.User_Email_Edit_ngModel = _this.view_user_details[0]["EMAIL"];
            _this.User_LoginId_Edit_ngModel = _this.view_user_details[0]["LOGIN_ID"];
            _this.User_Password_Edit_ngModel = _this.view_user_details[0]["PASSWORD"];
            _this.User_PersonalNo_Edit_ngModel = _this.view_user_details[0]["CONTACT_NO"];
            _this.User_CompanyNo_Edit_ngModel = _this.view_user_details[0]["COMPANY_CONTACT_NO"];
            _this.User_Marital_Edit_ngModel = _this.view_user_details[0]["MARITAL_STATUS"];
            if (_this.view_user_details[0]["MARITAL_STATUS"] == "1") {
                _this.MaritalStatusMarried = true;
            }
            else {
                _this.MaritalStatusMarried = false;
            }
            _this.User_StaffID_Edit_ngModel = _this.view_user_details[0]["PERSONAL_ID_TYPE"];
            _this.User_ICNo_Edit_ngModel = _this.view_user_details[0]["PERSONAL_ID"];
            _this.User_DOB_Edit_ngModel = _this.view_user_details[0]["DOB"];
            _this.User_Gender_Edit_ngModel = _this.view_user_details[0]["GENDER"];
            if (_this.view_user_details[0]["ATTACHMENT_ID"] == null || _this.view_user_details[0]["ATTACHMENT_ID"] == '') {
                _this.Profile_Image_Display = "assets/img/profile_no_preview.png";
            }
            else {
                _this.Profile_Image_Display = __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["c" /* DREAMFACTORY_IMAGE_URL */] + _this.view_user_details[0]["ATTACHMENT_ID"] + "?api_key=" + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
            }
            //------------------------EMPLOYMENT DETAILS----------------------------------
            _this.USER_INFO_GUID_FOR_UPDATE = _this.view_user_details[0]["USER_INFO_GUID"];
            _this.USER_GUID_FOR_COMPANY_CONTACT = _this.view_user_details[0]["USER_COMPANY_GUID"];
            _this.USER_GUID_FOR_CONTACT = _this.view_user_details[0]["CONTACT_INFO_GUID"];
            _this.User_Company_Edit_ngModel = _this.view_user_details[0]["COMPANY_GUID"];
            _this.GetBranch("tenant_company_site", _this.User_Company_Edit_ngModel, "SITE_NAME");
            _this.GetDesignation('main_designation', 'NAME');
            _this.GetDepartment('main_department', 'NAME');
            _this.BindBank('main_bank', 'NAME');
            _this.BindApprover1("view_get_tenant_admin");
            _this.BindRole();
            if (_this.view_user_details[0]["DESIGNATION_GUID"] != null) {
                _this.User_Designation_Edit_ngModel = _this.view_user_details[0]["DESIGNATION_GUID"];
            }
            if (_this.view_user_details[0]["DEPT_GUID"] != null) {
                _this.User_Department_Edit_ngModel = _this.view_user_details[0]["DEPT_GUID"];
            }
            _this.User_JoinDate_Edit_ngModel = _this.view_user_details[0]["JOIN_DATE"];
            _this.User_ConfirmationDate_Edit_ngModel = _this.view_user_details[0]["CONFIRMATION_DATE"];
            _this.User_ResignationDate_Edit_ngModel = _this.view_user_details[0]["RESIGNATION_DATE"];
            _this.User_Branch_Edit_ngModel = _this.view_user_details[0]["BRANCH"];
            _this.User_EmployeeType_Edit_ngModel = _this.view_user_details[0]["EMPLOYEE_TYPE"];
            if (_this.view_user_details[0]["MANAGER_USER_GUID"] != null) {
                _this.User_Approver1_Edit_ngModel = _this.view_user_details[0]["MANAGER_USER_GUID"];
            }
            _this.User_Employment_Edit_ngModel = _this.view_user_details[0]["EMPLOYEE_STATUS"];
            //------------------------EDUCATIONAL QUALIFICATION----------------------------
            _this.USER_QUALIFICATION_GUID_FOR_UPDATE = _this.view_user_details[0]["USER_QUALIFICATION_GUID"];
            _this.User_HighestQualification_Edit_ngModel = _this.view_user_details[0]["QUALIFICATION_GUID"];
            _this.User_University_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["UNIVERSITY"]);
            _this.User_Major_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["MAJOR"]);
            _this.User_EduYear_Edit_ngModel = _this.view_user_details[0]["YEAR"];
            //------------------------RESIDENTIAL ADDRESS----------------------------------
            _this.USER_GUID_FOR_ADDRESS = _this.view_user_details[0]["USER_ADDRESS_GUID"];
            _this.User_Address1_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS1"]);
            _this.User_Address2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS2"]);
            _this.User_Address3_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["USER_ADDRESS3"]);
            _this.User_PostCode_Edit_ngModel = _this.view_user_details[0]["POST_CODE"];
            _this.User_Country_Edit_ngModel = _this.view_user_details[0]["COUNTRY_GUID"];
            _this.BindState('main_state', _this.User_Country_Edit_ngModel, 'NAME');
            _this.User_State_Edit_ngModel = _this.view_user_details[0]["STATE_GUID"];
            //------------------------EMERGENCY CONTACT DETAILS---------------------------
            _this.User_EMG_CONTACT_NAME1_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_CONTACT_NAME_1"]);
            _this.User_EMG_RELATIONSHIP_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_RELATIONSHIP_1"]);
            _this.User_EMG_CONTACT_NO1_Edit_ngModel = _this.view_user_details[0]["EMG_CONTACT_NUMBER_1"];
            _this.User_EMG_CONTACT_NAME2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_CONTACT_NAME_2"]);
            _this.User_EMG_RELATIONSHIP2_Edit_ngModel = _this.titlecasePipe.transform(_this.view_user_details[0]["EMG_RELATIONSHIP_2"]);
            _this.User_EMG_CONTACT_NO2_Edit_ngModel = _this.view_user_details[0]["EMG_CONTACT_NUMBER_2"];
            //------------------------PAYROLL CONTACT DETAILS-----------------------------
            _this.User_EPF_NUMBER_Edit_ngModel = _this.view_user_details[0]["PR_EPF_NUMBER"];
            _this.User_INCOMETAX_NO_Edit_ngModel = _this.view_user_details[0]["PR_INCOMETAX_NUMBER"];
            // if (this.view_user_details[0]["BANK_GUID"] != null) {
            _this.User_BANK_NAME_Edit_ngModel = _this.view_user_details[0]["BANK_GUID"];
            // }
            _this.User_ACCOUNT_NUMBER_Edit_ngModel = _this.view_user_details[0]["PR_ACCOUNT_NUMBER"];
            _this.loading.dismissAll();
        });
        //------------------------PROFESSIONAL CERTIFICATIONS--------------------------
        this.http.get(url_user_Professional_Certification, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.ProfessionalCertification.push({ CERTIFICATE_GUID: data["resource"][item]["certificate_guid"], NAME: data["resource"][item]["name"], GRADE: data["resource"][item]["grade"], YEAR: data["resource"][item]["passing_year"], ATTACHMENT: data["resource"][item]["attachment"] });
            }
        });
        //------------------------FAMILY DETAILS---------------------------------------
        //------------------------SPOUSE--------------------------        
        this.http.get(url_user_Spouse, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.FamilyDetails.push({ SPOUSE_GUID: data["resource"][item]["SPOUSE_GUID"], NAME: data["resource"][item]["NAME"], ICNO: data["resource"][item]["ICNO"] });
            }
        });
        //------------------------CHILDREN------------------------        
        this.http.get(url_user_Children, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            for (var item in data["resource"]) {
                _this.ChildrenDetails.push({ CHILD_GUID: data["resource"][item]["CHILD_GUID"], NAME: data["resource"][item]["NAME"], ICNO: data["resource"][item]["ICNO"], GENDER: data["resource"][item]["GENDER"], SPOUSE: data["resource"][item]["SPOUSE"] });
            }
        });
        //------------------------Profile Image------------------------
        // this.http.get(url_user_Image, options)
        //   .map(res => res.json())
        //   .subscribe(
        //     data => {
        //       if (data["resource"].length <= 0) {
        //         this.Profile_Image_Display = "assets/img/profile_no_preview.png";
        //       }
        //       else {
        //         this.Profile_Image_Display = constants.DREAMFACTORY_INSTANCE_URL + "/api/v2/azurefs/" + data["resource"][0]["IMAGE_URL"] + "?api_key=" + constants.DREAMFACTORY_API_KEY;
        //       }
        //     });
        //------------------------Role-------------------------------
        var CheckRole = [];
        var CheckAdditionalRole = [];
        var User_Role_url = this.baseResourceUrl2_URL + "user_role?filter=(USER_GUID=" + id + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(User_Role_url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data.resource;
            for (var itemA in _this.roles) {
                if (_this.roles[itemA]["ROLE_FLAG"] == "MAIN") {
                    CheckRole.push(_this.roles[itemA]["ROLE_GUID"]);
                    localStorage.setItem("Main_Role_Guid_Temp", _this.roles[itemA]["ROLE_GUID"]);
                }
                else {
                    CheckAdditionalRole.push(_this.roles[itemA]["ROLE_GUID"]);
                }
            }
            _this.ROLE_ngModel_Edit = CheckRole;
            _this.ADDITIONAL_ROLE_ngModel_Edit = CheckAdditionalRole;
        });
    };
    AccountPage.prototype.GetTenant_GUID = function (Tenant_company_guid) {
        var _this = this;
        // debugger;
        var TableURL = this.BaseTableURL + "tenant_company" + '?filter=(TENANT_COMPANY_GUID=' + Tenant_company_guid + ')&' + this.Key_Param;
        return new Promise(function (resolve) {
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.tenants = data["resource"];
                resolve(_this.tenants[0].TENANT_GUID);
            });
        });
    };
    AccountPage.prototype.GetDesignation = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = _this.BaseTableURL + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.designations = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    AccountPage.prototype.GetCompany = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        if (localStorage.getItem("g_USER_GUID") == "sva") {
            TableURL = this.BaseTableURL + TableName + '?order=' + SortField + '&' + this.Key_Param;
        }
        else {
            TableURL = this.BaseTableURL + TableName + '?filter=(TENANT_GUID=' + localStorage.getItem("g_TENANT_GUID") + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        }
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.companies = data["resource"];
        });
    };
    AccountPage.prototype.GetDepartment = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = _this.BaseTableURL + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.departments = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    AccountPage.prototype.GetBranch = function (TableName, FilterField, SortField) {
        var _this = this;
        // debugger;
        var TableURL;
        if (this.User_Company_Edit_ngModel != undefined) {
            TableURL = this.BaseTableURL + TableName + '?filter=(TENANT_COMPANY_GUID=' + FilterField + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        }
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.branches = data["resource"];
        });
    };
    AccountPage.prototype.BindCountry = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        TableURL = this.BaseTableURL + TableName + '?order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.countries = data["resource"];
        });
    };
    AccountPage.prototype.BindState = function (TableName, FilterField, SortField) {
        var _this = this;
        var TableURL;
        TableURL = this.BaseTableURL + TableName + '?filter=(COUNTRY_GUID=' + FilterField + ')&' + 'order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.states = data["resource"];
        });
    };
    AccountPage.prototype.BindBank = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        var TempUser_Company_ngModel;
        TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            TableURL = _this.BaseTableURL + TableName + '?filter=(TENANT_GUID=' + res.toString() + ')&order=' + SortField + '&' + _this.Key_Param;
            _this.http
                .get(TableURL)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.banks = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    AccountPage.prototype.BindQualification = function (TableName, SortField) {
        var _this = this;
        var TableURL;
        TableURL = this.BaseTableURL + TableName + '?order=' + SortField + '&' + this.Key_Param;
        this.http
            .get(TableURL)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.qualifications = data["resource"];
        });
    };
    AccountPage.prototype.BindApprover1 = function (ViewName) {
        var _this = this;
        var TableURL_Approver;
        var TempUser_Company_ngModel;
        TempUser_Company_ngModel = this.view_user_details[0]["COMPANY_GUID"];
        var val = this.GetTenant_GUID(TempUser_Company_ngModel);
        val.then(function (res) {
            if (localStorage.getItem("g_USER_GUID") == "sva" || localStorage.getItem("g_IS_TENANT_ADMIN") == "1") {
                TableURL_Approver = _this.BaseTableURL + ViewName + '?filter=(TENANT_GUID=' + res.toString() + ')&' + _this.Key_Param;
            }
            else {
                TableURL_Approver = _this.BaseTableURL + ViewName + '?filter=(TENANT_GUID=' + res.toString() + ')AND(USER_GUID!=' + _this.view_user_details[0]["USER_GUID"] + ')&' + _this.Key_Param;
            }
            _this.http
                .get(TableURL_Approver)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.approvers = data["resource"];
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    AccountPage.prototype.BindRole = function () {
        var _this = this;
        var roleUrl = __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_role' + '?order=NAME&api_key=' + __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.http
            .get(roleUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data["resource"];
        });
    };
    AccountPage.prototype.DisplayFamily_Edit = function () {
        if (this.User_Marital_Edit_ngModel == "1" || this.User_Marital_Edit_ngModel == "2") {
            this.MaritalStatusMarried = true;
        }
        else {
            this.MaritalStatusMarried = false;
        }
    };
    AccountPage.prototype.AddProfessionalCertificationForEdit = function () {
        if (this.User_Certification_Edit_ngModel != undefined && this.User_Certification_Edit_ngModel.trim() != "") {
            if (this.User_CertificationGrade_Edit_ngModel != undefined && this.User_CertificationGrade_Edit_ngModel.trim() != "") {
                if (this.User_CertificationYear_Edit_ngModel.toString() != undefined && this.User_CertificationYear_Edit_ngModel.toString().trim() != "") {
                    if (this.CertificateSaveFlag == false) {
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: __WEBPACK_IMPORTED_MODULE_21_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Certification_Edit_ngModel.trim()), GRADE: this.User_CertificationGrade_Edit_ngModel.trim(), YEAR: this.User_CertificationYear_Edit_ngModel.trim(), ATTACHMENT_EDIT: this.attachment_ref });
                    }
                    else {
                        this.ProfessionalCertification = this.ProfessionalCertification.filter(function (item) { return item.CERTIFICATE_GUID != localStorage.getItem("CERTIFICATE_GUID"); });
                        this.ProfessionalCertification.push({ CERTIFICATE_GUID: localStorage.getItem("CERTIFICATE_GUID"), NAME: this.titlecasePipe.transform(this.User_Certification_Edit_ngModel.trim()), GRADE: this.User_CertificationGrade_Edit_ngModel.trim(), YEAR: this.User_CertificationYear_Edit_ngModel.toString().trim(), ATTACHMENT_EDIT: this.attachment_ref });
                        this.CertificateSaveFlag = false;
                        localStorage.removeItem("SPOUSE_GUID");
                    }
                    //Clear the Controls------------------------
                    this.User_Certification_Edit_ngModel = "";
                    this.User_CertificationGrade_Edit_ngModel = "";
                    this.User_CertificationYear_Edit_ngModel = "";
                    this.User_CertificationAttachment_Edit_ngModel = "";
                }
                else {
                    alert("Fill in Year.");
                }
            }
            else {
                alert("Fill in Grade.");
            }
        }
        else {
            alert("Fill in Certificate Name.");
        }
    };
    AccountPage.prototype.EditProfessionalCertificationForEdit = function (CERTIFICATE_GUID) {
        for (var item in this.ProfessionalCertification) {
            if (this.ProfessionalCertification[item]["CERTIFICATE_GUID"] == CERTIFICATE_GUID) {
                this.User_Certification_Edit_ngModel = this.ProfessionalCertification[item]["NAME"];
                this.User_CertificationGrade_Edit_ngModel = this.ProfessionalCertification[item]["GRADE"];
                this.User_CertificationYear_Edit_ngModel = this.ProfessionalCertification[item]["YEAR"];
                localStorage.setItem("CERTIFICATE_GUID", this.ProfessionalCertification[item]["CERTIFICATE_GUID"]);
                this.CertificateSaveFlag = true;
                return;
            }
        }
    };
    AccountPage.prototype.RemoveProfessionalCertification = function (CERTIFICATE_GUID) {
        if (this.CertificateSaveFlag == false) {
            this.ProfessionalCertification = this.ProfessionalCertification.filter(function (item) { return item.CERTIFICATE_GUID != CERTIFICATE_GUID; });
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    AccountPage.prototype.AddFamilyDetailsForEdit = function () {
        if (this.User_Spouse_Name_Edit_ngModel != undefined && this.User_Spouse_Name_Edit_ngModel.trim() != "") {
            if (this.User_Spouse_IcNumber_Edit_ngModel != undefined && this.User_Spouse_IcNumber_Edit_ngModel.trim() != "") {
                if (this.SpouseSaveFlag == false) {
                    this.FamilyDetails.push({ SPOUSE_GUID: __WEBPACK_IMPORTED_MODULE_21_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_Edit_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_Edit_ngModel.trim() });
                }
                else {
                    this.FamilyDetails = this.FamilyDetails.filter(function (item) { return item.SPOUSE_GUID != localStorage.getItem("SPOUSE_GUID"); });
                    this.FamilyDetails.push({ SPOUSE_GUID: localStorage.getItem("SPOUSE_GUID"), NAME: this.titlecasePipe.transform(this.User_Spouse_Name_Edit_ngModel.trim()), ICNO: this.User_Spouse_IcNumber_Edit_ngModel.trim() });
                    this.SpouseSaveFlag = false;
                    localStorage.removeItem("SPOUSE_GUID");
                }
                this.User_Spouse_Name_Edit_ngModel = "";
                this.User_Spouse_IcNumber_Edit_ngModel = "";
            }
            else {
                alert("Fill in IC Number.");
            }
        }
        else {
            alert("Fill in Spouse Name.");
        }
    };
    AccountPage.prototype.EditFamilyDetailsForEdit = function (SPOUSE_GUID) {
        for (var item in this.FamilyDetails) {
            if (this.FamilyDetails[item]["SPOUSE_GUID"] == SPOUSE_GUID) {
                this.User_Spouse_Name_Edit_ngModel = this.FamilyDetails[item]["NAME"];
                this.User_Spouse_IcNumber_Edit_ngModel = this.FamilyDetails[item]["ICNO"];
                localStorage.setItem("SPOUSE_GUID", this.FamilyDetails[item]["SPOUSE_GUID"]);
                this.SpouseSaveFlag = true;
                return;
            }
        }
    };
    AccountPage.prototype.RemoveFamilyDetails = function (SPOUSE_GUID) {
        if (this.SpouseSaveFlag == false) {
            this.FamilyDetails = this.FamilyDetails.filter(function (item) { return item.SPOUSE_GUID != SPOUSE_GUID; });
            this.SpouseSaveFlag = false;
        }
        else {
            alert("Sorry. You are in Edit Mode.");
        }
    };
    AccountPage.prototype.AddChildrenForEdit = function () {
        if (this.User_Child_Name_Edit_ngModel != undefined && this.User_Child_Name_Edit_ngModel.trim() != "") {
            if (this.User_Child_IcNumber_Edit_ngModel != undefined && this.User_Child_IcNumber_Edit_ngModel.trim() != "") {
                if (this.User_Child_Gender_Edit_ngModel != undefined && this.User_Child_Gender_Edit_ngModel != "") {
                    if (this.User_SpouseChild_Edit_ngModel != undefined && this.User_SpouseChild_Edit_ngModel != "") {
                        if (this.ChildSaveFlag == false) {
                            this.ChildrenDetails.push({ CHILD_GUID: __WEBPACK_IMPORTED_MODULE_21_angular2_uuid__["UUID"].UUID(), NAME: this.titlecasePipe.transform(this.User_Child_Name_Edit_ngModel.trim()), ICNO: this.User_Child_IcNumber_Edit_ngModel.trim(), GENDER: this.User_Child_Gender_Edit_ngModel.trim(), SPOUSE: this.User_SpouseChild_Edit_ngModel.trim() });
                        }
                        else {
                            this.ChildrenDetails = this.ChildrenDetails.filter(function (item) { return item.CHILD_GUID != localStorage.getItem("CHILD_GUID"); });
                            this.ChildrenDetails.push({ CHILD_GUID: localStorage.getItem("CHILD_GUID"), NAME: this.titlecasePipe.transform(this.User_Child_Name_Edit_ngModel.trim()), ICNO: this.User_Child_IcNumber_Edit_ngModel.trim(), GENDER: this.User_Child_Gender_Edit_ngModel.trim(), SPOUSE: this.User_SpouseChild_Edit_ngModel.trim() });
                            this.ChildSaveFlag = false;
                            localStorage.removeItem("CHILD_GUID");
                        }
                        //------Clear Controls ----------------
                        this.User_Child_Name_Edit_ngModel = "";
                        this.User_Child_IcNumber_Edit_ngModel = "";
                        this.User_Child_Gender_Edit_ngModel = "";
                        this.User_SpouseChild_Edit_ngModel = "";
                    }
                    else {
                        alert("Select Spouse.");
                    }
                }
                else {
                    alert("Select Gender.");
                }
            }
            else {
                alert("Fill in Child IC Number.");
            }
        }
        else {
            alert("Fill in Child Name.");
        }
    };
    AccountPage.prototype.EditChildrenForEdit = function (CHILD_GUID) {
        for (var item in this.ChildrenDetails) {
            if (this.ChildrenDetails[item]["CHILD_GUID"] == CHILD_GUID) {
                this.User_Child_Name_Edit_ngModel = this.ChildrenDetails[item]["NAME"];
                this.User_Child_IcNumber_Edit_ngModel = this.ChildrenDetails[item]["ICNO"];
                this.User_Child_Gender_Edit_ngModel = this.ChildrenDetails[item]["GENDER"];
                this.User_SpouseChild_Edit_ngModel = this.ChildrenDetails[item]["SPOUSE"];
                localStorage.setItem("CHILD_GUID", this.ChildrenDetails[item]["CHILD_GUID"]);
                this.ChildSaveFlag = true;
                return;
            }
        }
    };
    AccountPage.prototype.RemoveChildren = function (CHILD_GUID) {
        if (this.ChildSaveFlag == false) {
            this.ChildrenDetails = this.ChildrenDetails.filter(function (item) { return item.CHILD_GUID != CHILD_GUID; });
            this.ChildSaveFlag = false;
        }
        else {
            alert('Sorry.You are in Edit Mode.');
        }
    };
    AccountPage.prototype.ClearControls = function () {
        this.User_Name_Edit_ngModel = "";
        this.User_Email_Edit_ngModel = "";
        this.User_LoginId_Edit_ngModel = "";
        this.User_Password_Edit_ngModel = "";
        this.User_PersonalNo_Edit_ngModel = "";
        this.User_CompanyNo_Edit_ngModel = "";
        this.User_Marital_Edit_ngModel = "";
        this.User_StaffID_Edit_ngModel = "";
        this.User_ICNo_Edit_ngModel = "";
        this.User_DOB_Edit_ngModel = "";
        this.User_Gender_Edit_ngModel = "";
        this.User_Designation_Edit_ngModel = "";
        this.User_Company_Edit_ngModel = "";
        this.User_Department_Edit_ngModel = "";
        this.User_JoinDate_Edit_ngModel = "";
        this.User_ConfirmationDate_Edit_ngModel = "";
        this.User_ResignationDate_Edit_ngModel = "";
        this.User_Branch_Edit_ngModel = "";
        this.User_EmployeeType_Edit_ngModel = "";
        this.User_Employment_Edit_ngModel = "";
        this.User_HighestQualification_Edit_ngModel = "";
        this.User_University_Edit_ngModel = "";
        this.User_Major_Edit_ngModel = "";
        this.User_EduYear_Edit_ngModel = "";
        this.User_Certification_Edit_ngModel = "";
        this.User_CertificationYear_Edit_ngModel = "";
        this.User_CertificationGrade_Edit_ngModel = "";
        this.User_Address1_Edit_ngModel = "";
        this.User_Address2_Edit_ngModel = "";
        this.User_Address3_Edit_ngModel = "";
        this.User_PostCode_Edit_ngModel = "";
        this.User_Country_Edit_ngModel = "";
        this.User_State_Edit_ngModel = "";
        this.User_Spouse_Name_Edit_ngModel = "";
        this.User_Spouse_IcNumber_Edit_ngModel = "";
        this.User_Child_Name_Edit_ngModel = "";
        this.User_Child_IcNumber_Edit_ngModel = "";
        this.User_Child_Gender_Edit_ngModel = "";
        this.User_SpouseChild_Edit_ngModel = "";
        this.User_EMG_CONTACT_NAME1_Edit_ngModel = "";
        this.User_EMG_RELATIONSHIP_Edit_ngModel = "";
        this.User_EMG_CONTACT_NO1_Edit_ngModel = "";
        this.User_EMG_CONTACT_NAME2_Edit_ngModel = "";
        this.User_EMG_RELATIONSHIP2_Edit_ngModel = "";
        this.User_EMG_CONTACT_NO2_Edit_ngModel = "";
        this.User_EPF_NUMBER_Edit_ngModel = "";
        this.User_INCOMETAX_NO_Edit_ngModel = "";
        this.User_BANK_NAME_Edit_ngModel = "";
        this.MaritalStatusMarried = false;
        this.ROLE_ngModel_Edit = "";
        localStorage.removeItem("Unique_File_Name");
    };
    AccountPage.prototype.Readonly = function () {
        this.isReadonly = true;
        return this.isReadonly;
    };
    AccountPage.prototype.EditProfile = function () {
        this.EditProfileClicked = true;
    };
    AccountPage.prototype.Update = function (USER_GUID) {
        // alert('Development in progress.');
        if (this.Userform) {
            this.loading = this.loadingCtrl.create({
                content: 'Please wait...',
            });
            this.loading.present();
            this.Update_User_Main(USER_GUID);
            this.loading.dismissAll();
        }
    };
    AccountPage.prototype.Update_User_Main = function (USER_GUID) {
        var _this = this;
        // debugger;
        ///Bind the Tenant Guid through Tenant company Guid.----------------------
        var val = this.GetTenant_GUID(this.User_Company_Edit_ngModel.trim());
        val.then(function (res) {
            _this.usermain_entry.TENANT_GUID = res.toString();
            _this.usermain_entry.USER_GUID = USER_GUID;
            _this.usermain_entry.STAFF_ID = _this.User_StaffID_Edit_ngModel;
            _this.usermain_entry.LOGIN_ID = _this.User_Email_Edit_ngModel;
            _this.usermain_entry.PASSWORD = _this.User_Password_Edit_ngModel;
            _this.usermain_entry.EMAIL = _this.User_Email_Edit_ngModel;
            _this.usermain_entry.ACTIVATION_FLAG = 1;
            _this.usermain_entry.CREATION_TS = _this.view_user_details[0]["CREATION_TS"];
            _this.usermain_entry.CREATION_USER_GUID = _this.view_user_details[0]["CREATION_USER_GUID"];
            _this.usermain_entry.UPDATE_TS = new Date().toISOString();
            _this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
            _this.usermain_entry.IS_TENANT_ADMIN = _this.view_user_details[0]["IS_TENANT_ADMIN"];
            _this.userservice.update_user_main(_this.usermain_entry)
                .subscribe(function (response) {
                if (response.status == 200) {
                    //alert('1');
                    _this.Update_User_Info();
                }
            });
        });
        val.catch(function (err) {
            // This is never called
            console.log(err);
        });
    };
    AccountPage.prototype.Update_User_Info = function () {
        var _this = this;
        // debugger;
        this.userinfo_entry.USER_INFO_GUID = this.USER_INFO_GUID_FOR_UPDATE;
        this.userinfo_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userinfo_entry.FULLNAME = this.titlecasePipe.transform(this.User_Name_Edit_ngModel);
        this.userinfo_entry.MANAGER_USER_GUID = this.User_Approver1_Edit_ngModel;
        this.userinfo_entry.PERSONAL_ID_TYPE = this.User_StaffID_Edit_ngModel;
        this.userinfo_entry.PERSONAL_ID = this.User_ICNo_Edit_ngModel;
        this.userinfo_entry.DOB = this.User_DOB_Edit_ngModel;
        this.userinfo_entry.GENDER = this.User_Gender_Edit_ngModel;
        this.userinfo_entry.JOIN_DATE = this.User_JoinDate_Edit_ngModel;
        this.userinfo_entry.MARITAL_STATUS = this.User_Marital_Edit_ngModel;
        this.userinfo_entry.BRANCH = this.User_Branch_Edit_ngModel;
        this.userinfo_entry.EMPLOYEE_TYPE = this.User_EmployeeType_Edit_ngModel;
        this.userinfo_entry.EMPLOYEE_STATUS = this.User_Employment_Edit_ngModel;
        this.userinfo_entry.DEPT_GUID = this.User_Department_Edit_ngModel;
        this.userinfo_entry.DESIGNATION_GUID = this.User_Designation_Edit_ngModel;
        this.userinfo_entry.RESIGNATION_DATE = this.User_ResignationDate_Edit_ngModel;
        this.userinfo_entry.TENANT_COMPANY_GUID = this.User_Company_Edit_ngModel;
        this.userinfo_entry.CONFIRMATION_DATE = this.User_ConfirmationDate_Edit_ngModel;
        this.userinfo_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_Edit_ngModel;
        this.userinfo_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.userinfo_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.userinfo_entry.UPDATE_TS = new Date().toISOString();
        this.userinfo_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userinfo_entry.EMG_CONTACT_NAME_1 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME1_Edit_ngModel);
        this.userinfo_entry.EMG_RELATIONSHIP_1 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP_Edit_ngModel);
        this.userinfo_entry.EMG_CONTACT_NUMBER_1 = this.User_EMG_CONTACT_NO1_Edit_ngModel;
        this.userinfo_entry.EMG_CONTACT_NAME_2 = this.titlecasePipe.transform(this.User_EMG_CONTACT_NAME2_Edit_ngModel);
        this.userinfo_entry.EMG_RELATIONSHIP_2 = this.titlecasePipe.transform(this.User_EMG_RELATIONSHIP2_Edit_ngModel);
        this.userinfo_entry.EMG_CONTACT_NUMBER_2 = this.User_EMG_CONTACT_NO2_Edit_ngModel;
        this.userinfo_entry.PR_EPF_NUMBER = this.User_EPF_NUMBER_Edit_ngModel;
        this.userinfo_entry.PR_INCOMETAX_NUMBER = this.User_INCOMETAX_NO_Edit_ngModel;
        this.userinfo_entry.BANK_GUID = this.User_BANK_NAME_Edit_ngModel;
        this.userinfo_entry.PR_ACCOUNT_NUMBER = this.User_ACCOUNT_NUMBER_Edit_ngModel;
        //Added by bijay on 27/06/2018
        // this.userinfo_entry.ATTACHMENT_ID = this.view_user_details[0]["ATTACHMENT_ID"];
        if (localStorage.getItem("Unique_File_Name") != undefined && localStorage.getItem("Unique_File_Name") != "") {
            this.userinfo_entry.ATTACHMENT_ID = localStorage.getItem("Unique_File_Name");
        }
        else {
            if (this.view_user_details[0]["ATTACHMENT_ID"] == null || this.view_user_details[0]["ATTACHMENT_ID"] == '') {
                this.userinfo_entry.ATTACHMENT_ID = null;
            }
            else {
                this.userinfo_entry.ATTACHMENT_ID = this.view_user_details[0]["ATTACHMENT_ID"];
            }
        }
        this.userservice.update_user_info(this.userinfo_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Address();
            }
        });
    };
    AccountPage.prototype.Update_User_Address = function () {
        var _this = this;
        // debugger;
        this.useraddress_entry.USER_ADDRESS_GUID = this.USER_GUID_FOR_ADDRESS;
        this.useraddress_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.useraddress_entry.USER_ADDRESS1 = this.titlecasePipe.transform(this.User_Address1_Edit_ngModel.trim());
        this.useraddress_entry.USER_ADDRESS2 = this.titlecasePipe.transform(this.User_Address2_Edit_ngModel);
        this.useraddress_entry.USER_ADDRESS3 = this.titlecasePipe.transform(this.User_Address3_Edit_ngModel);
        this.useraddress_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.useraddress_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.useraddress_entry.UPDATE_TS = new Date().toISOString();
        this.useraddress_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.useraddress_entry.POST_CODE = this.User_PostCode_Edit_ngModel;
        this.useraddress_entry.COUNTRY_GUID = this.User_Country_Edit_ngModel;
        this.useraddress_entry.STATE_GUID = this.User_State_Edit_ngModel;
        //alert(this.User_Address3_Edit_ngModel);
        this.userservice.update_user_address(this.useraddress_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Company();
            }
        });
    };
    AccountPage.prototype.Update_User_Company = function () {
        var _this = this;
        // debugger;
        this.usercompany_entry.USER_COMPANY_GUID = this.USER_GUID_FOR_COMPANY_CONTACT;
        this.usercompany_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercompany_entry.TENANT_COMPANY_SITE_GUID = this.User_Branch_Edit_ngModel;
        this.usercompany_entry.COMPANY_CONTACT_NO = this.User_CompanyNo_Edit_ngModel;
        this.usercompany_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.usercompany_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.usercompany_entry.UPDATE_TS = new Date().toISOString();
        this.usercompany_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userservice.update_user_company(this.usercompany_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Contact();
            }
        });
    };
    AccountPage.prototype.Update_User_Contact = function () {
        var _this = this;
        // debugger;
        this.usercontact_entry.CONTACT_NO = this.User_PersonalNo_Edit_ngModel;
        this.usercontact_entry.CONTACT_INFO_GUID = this.USER_GUID_FOR_CONTACT;
        this.usercontact_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.usercontact_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.usercontact_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.usercontact_entry.UPDATE_TS = new Date().toISOString();
        this.usercontact_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userservice.update_user_contact(this.usercontact_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                // let uploadImage = this.UploadImage('avatar2', this.fileName2);
                // uploadImage.then((resJson) => {            
                //   let imageResult = this.SaveImageinDB(this.fileName2);
                //   imageResult.then((objImage: ImageUpload_model) => {
                //     let result = this.Update_User_Qualification(objImage.Image_Guid);
                // if (this.view_user_details[0]["QUALIFICATION_GUID"] != "") {
                //   let result = this.Update_User_Qualification(objImage.Image_Guid);
                // }
                // else {
                //   let result = this.Save_User_Qualification(objImage.Image_Guid);
                // }
                // })
                // })
                _this.Update_User_Qualification();
            }
        });
    };
    AccountPage.prototype.Update_User_Qualification = function () {
        var _this = this;
        // debugger;
        this.userqualification_entry.USER_QUALIFICATION_GUID = this.USER_QUALIFICATION_GUID_FOR_UPDATE;
        this.userqualification_entry.QUALIFICATION_GUID = this.User_HighestQualification_Edit_ngModel;
        this.userqualification_entry.USER_GUID = this.usermain_entry.USER_GUID;
        this.userqualification_entry.CREATION_TS = this.usermain_entry.CREATION_TS;
        this.userqualification_entry.CREATION_USER_GUID = this.usermain_entry.CREATION_USER_GUID;
        this.userqualification_entry.UPDATE_TS = new Date().toISOString();
        this.userqualification_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
        this.userqualification_entry.HIGHEST_QUALIFICATION = this.User_HighestQualification_Edit_ngModel;
        this.userqualification_entry.MAJOR = this.User_Major_Edit_ngModel;
        this.userqualification_entry.UNIVERSITY = this.User_University_Edit_ngModel;
        this.userqualification_entry.YEAR = this.User_EduYear_Edit_ngModel;
        // this.userqualification_entry.ATTACHMENT = imageGUID;
        this.userqualification_entry.ATTACHMENT = "";
        this.userservice.update_user_qualification(this.userqualification_entry)
            .subscribe(function (response) {
            if (response.status == 200) {
                _this.Update_User_Certification();
                _this.Update_User_Spouse();
                _this.Update_User_Children();
                // this.Update_Role();
                alert('User updated successfully.');
                _this.nav.setRoot(_this.nav.getActive().component);
            }
        });
    };
    AccountPage.prototype.Update_User_Certification = function () {
        var _this = this;
        // debugger;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_certification")
            .subscribe(function (response) {
            if (response.status == 200) {
                //Insert Record again---------------------------------------------------------------------
                for (var item in _this.ProfessionalCertification) {
                    _this.UserCertification_Entry.certificate_guid = _this.ProfessionalCertification[item]["CERTIFICATE_GUID"];
                    _this.UserCertification_Entry.name = _this.ProfessionalCertification[item]["NAME"];
                    _this.UserCertification_Entry.grade = _this.ProfessionalCertification[item]["GRADE"];
                    _this.UserCertification_Entry.passing_year = _this.ProfessionalCertification[item]["YEAR"];
                    _this.UserCertification_Entry.user_guid = _this.usermain_entry.USER_GUID;
                    _this.UserCertification_Entry.attachment = "";
                    _this.UserCertification_Entry.creation_ts = _this.usermain_entry.CREATION_TS;
                    _this.UserCertification_Entry.creation_user_guid = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserCertification_Entry.update_ts = new Date().toISOString();
                    _this.UserCertification_Entry.update_user_guid = localStorage.getItem("g_USER_GUID");
                    _this.userservice.save_user_certification(_this.UserCertification_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //-----------------------------------------------------------------------------------------
            }
        });
    };
    AccountPage.prototype.Update_User_Spouse = function () {
        var _this = this;
        // debugger;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_spouse")
            .subscribe(function (response) {
            if (response.status == 200) {
                //---------Insert record-----------------------------
                for (var item in _this.FamilyDetails) {
                    _this.UserSpouse_Entry.SPOUSE_GUID = _this.FamilyDetails[item]["SPOUSE_GUID"];
                    _this.UserSpouse_Entry.NAME = _this.FamilyDetails[item]["NAME"];
                    _this.UserSpouse_Entry.ICNO = _this.FamilyDetails[item]["ICNO"];
                    _this.UserSpouse_Entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                    _this.UserSpouse_Entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserSpouse_Entry.UPDATE_TS = new Date().toISOString();
                    _this.UserSpouse_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.UserSpouse_Entry.USER_GUID = _this.usermain_entry.USER_GUID;
                    _this.userservice.save_user_spouse(_this.UserSpouse_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //----------------------------------------------------------
            }
        });
    };
    AccountPage.prototype.Update_User_Children = function () {
        var _this = this;
        // debugger;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple_records(this.usermain_entry.USER_GUID, "user_children")
            .subscribe(function (response) {
            if (response.status == 200) {
                //---------Insert record----------------------------------------------------------
                for (var item in _this.ChildrenDetails) {
                    _this.UserChildren_Entry.CHILD_GUID = _this.ChildrenDetails[item]["CHILD_GUID"];
                    _this.UserChildren_Entry.NAME = _this.ChildrenDetails[item]["NAME"];
                    _this.UserChildren_Entry.ICNO = _this.ChildrenDetails[item]["ICNO"];
                    _this.UserChildren_Entry.GENDER = _this.ChildrenDetails[item]["GENDER"];
                    _this.UserChildren_Entry.SPOUSE = _this.ChildrenDetails[item]["SPOUSE"];
                    _this.UserChildren_Entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                    _this.UserChildren_Entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                    _this.UserChildren_Entry.UPDATE_TS = new Date().toISOString();
                    _this.UserChildren_Entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.UserChildren_Entry.USER_GUID = _this.usermain_entry.USER_GUID;
                    _this.userservice.save_user_children(_this.UserChildren_Entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('User Inserted Successfully!!');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //-----------------------------------------------------------------------------------------
            }
        });
    };
    AccountPage.prototype.Update_Role = function () {
        var _this = this;
        // debugger;
        //first Delete all the records------------------------------------------------------------    
        this.userservice.remove_multiple(this.usermain_entry.USER_GUID, "user_role")
            .subscribe(function (response) {
            if (response.status == 200) {
                //Insert Record again---------------------------------------------------------------------
                for (var _i = 0, _a = _this.ROLE_ngModel_Edit; _i < _a.length; _i++) {
                    var ROLE_GUID = _a[_i];
                    _this.userrole_entry.USER_ROLE_GUID = __WEBPACK_IMPORTED_MODULE_21_angular2_uuid__["UUID"].UUID();
                    _this.userrole_entry.USER_GUID = _this.usermain_entry.USER_GUID;
                    _this.userrole_entry.ROLE_GUID = ROLE_GUID;
                    _this.userrole_entry.ACTIVATION_FLAG = "1";
                    _this.userrole_entry.CREATION_TS = _this.usermain_entry.CREATION_TS;
                    _this.userrole_entry.CREATION_USER_GUID = _this.usermain_entry.CREATION_USER_GUID;
                    _this.userrole_entry.UPDATE_TS = new Date().toISOString();
                    _this.userrole_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                    _this.userservice.save_user_role(_this.userrole_entry)
                        .subscribe(function (response) {
                        if (response.status == 200) {
                            // alert('Tenant User Registered successfully');
                            // this.navCtrl.setRoot(this.navCtrl.getActive().component);
                        }
                    });
                }
                //-----------------------------------------------------------------------------------------
            }
        });
    };
    AccountPage.prototype.ProfileImageDisplay = function (e, fileChoose) {
        var _this = this;
        var reader = new FileReader();
        if (e.target.files && e.target.files[0]) {
            var file = e.target.files[0];
            this.Userform.get(fileChoose).setValue(file);
            if (fileChoose === 'avatar1')
                this.fileName1 = file.name;
            reader.onload = function (event) {
                _this.ProfileImage = event.target.result;
                _this.Profile_Image_Display = event.target.result;
            };
            reader.readAsDataURL(e.target.files[0]);
        }
        this.imageGUID = this.uploadFileName;
        this.chooseFile = true;
        this.newImage = false;
        this.onFileChange(e);
        this.ImageUploadValidation = false;
    };
    AccountPage.prototype.onFileChange = function (event) {
        var _this = this;
        var reader = new FileReader();
        if (event.target.files && event.target.files.length > 0) {
            var file_1 = event.target.files[0];
            this.Userform.get('avatar').setValue(file_1);
            this.uploadFileName = file_1.name;
            reader.onload = function () {
                _this.Userform.get('avatar').setValue({
                    filename: file_1.name,
                    filetype: file_1.type,
                    value: reader.result.split(',')[1]
                });
            };
        }
    };
    AccountPage.prototype.saveIm = function () {
        var _this = this;
        var uploadImage = this.UploadImage();
        uploadImage.then(function () {
            _this.imageGUID = _this.uploadFileName;
            _this.chooseFile = false;
            _this.ImageUploadValidation = true;
        });
    };
    AccountPage.prototype.UploadImage = function () {
        var _this = this;
        this.CloudFilePath = 'eclaim/';
        // this.loading = true;
        var uniqueName = new Date().toISOString() + this.uploadFileName;
        localStorage.setItem("Unique_File_Name", uniqueName);
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_7__angular_http__["a" /* Headers */]();
        queryHeaders.append('filename', this.uploadFileName);
        queryHeaders.append('Content-Type', 'multipart/form-data');
        queryHeaders.append('fileKey', 'file');
        queryHeaders.append('chunkedMode', 'false');
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_8__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_7__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        return new Promise(function (resolve) {
            _this.http.post('http://api.zen.com.my/api/v2/azurefs/' + _this.CloudFilePath + uniqueName, _this.Userform.get('avatar').value, options)
                .map(function (response) {
                return response;
            }).subscribe(function (response) {
                resolve(response.json());
            });
        });
    };
    AccountPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-account',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/account/account.html"*/'<ion-header>\n  <ion-navbar color="primary200">\n\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>My Profile</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content class="outer-content">\n  <!-- <div padding-top *ngIf="username"> -->\n  <div padding-top>\n    <div text-center>\n      <div class="profilepic">\n        <img [src]="Profile_Image_Display" alt="avatar">\n      </div>\n\n      <h2>{{username_display}}</h2>\n    </div>\n    <!-- <ion-list inset>\n      <button ion-item (click)="updatePicture()">Update Picture</button>\n      <button ion-item (click)="changeUsername()">Change Username</button>\n      <button ion-item (click)="changePassword()">Change Password</button>\n      <button ion-item (click)="logout()">Logout</button> -->\n\n    <!-- <button ion-item style="width: 49%; display:inline-block;"><ion-icon name="ios-mail-outline"></ion-icon> bijay@zen.com.my</button>      \n      <button ion-item style="width: 49%; display:inline-block;"><ion-icon name="ios-call-outline"></ion-icon> 9439549445</button>      \n      <button ion-item style="width: 49%; display:inline-block;"><ion-icon name="ios-briefcase-outline"></ion-icon> Software Developer</button>\n      <button ion-item style="width: 24%; display:inline-block;"><ion-icon name="ios-person-outline"></ion-icon> Male</button>      \n      <button ion-button style="width: 24%; display:inline-block;" (click)="EditProfile()">Edit Profile</button>\n    </ion-list> -->\n\n    <ion-list class="scroll">\n      <form [formGroup]="Userform">\n\n        <div class="eClaimSubTitle2">\n          <b>{{ \'PERSONAL_DETAILS\' | translate }}</b>\n        </div>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'NAME\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="NAME" [(ngModel)]="User_Name_Edit_ngModel" placeholder="{{\'Please fill the name of the user\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'STAFF_ID\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="PERSONAL_ID_TYPE" [(ngModel)]="User_StaffID_Edit_ngModel" placeholder="{{\'Please fill the staff id\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'EMAIL\' | translate }}</ion-label>\n          <ion-input type="email" formControlName="EMAIL" [(ngModel)]="User_Email_Edit_ngModel" placeholder="{{\'Please fill the email of the tenant\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'IC_NO\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="PERSONAL_ID" [(ngModel)]="User_ICNo_Edit_ngModel" placeholder="{{\'Please fill the ic no\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <!-- <ion-item class="text" style="display: none;">\n          <ion-label stacked>{{ \'LOGINID\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="LOGIN_ID" [(ngModel)]="User_LoginId_Edit_ngModel" placeholder="{{\'Please fill the email of the tenant\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="text" style="display: none;">\n          <ion-label stacked>{{ \'PASSWORD\' | translate }}</ion-label>\n          <ion-input type="password" formControlName="PASSWORD" [(ngModel)]="User_Password_Edit_ngModel" placeholder="{{\'Please fill the email of the tenant\'}}"\n            [disabled]="isDisabled"></ion-input>\n        </ion-item> -->\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'PERSONAL_CONTACT_NO\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="CONTACT_NO" max="10" [(ngModel)]="User_PersonalNo_Edit_ngModel"\n            placeholder="{{\'Please fill the personal contact number\'}}" [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'DATE_OF_BIRTH\' | translate }}</ion-label>\n          <ion-datetime displayFormat="DD/MM/YYYY" formControlName="DOB" [(ngModel)]="User_DOB_Edit_ngModel"\n            placeholder="{{\'Please choose your date of birth\'}}" [disabled]="isDisabled"></ion-datetime>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{ \'COMAPANY_CONTACT_NO\' | translate }}</ion-label>\n          <ion-input type="text" formControlName="COMPANY_CONTACT_NO" [(ngModel)]="User_CompanyNo_Edit_ngModel"\n            placeholder="{{\'Please fill company contact no\'}}" [disabled]="isDisabled"></ion-input>\n        </ion-item>\n\n        <ion-item class="fuha">\n          <ion-label stacked>{{\'GENDER\' | translate }}</ion-label>\n          <ion-select formControlName="GENDER" [(ngModel)]="User_Gender_Edit_ngModel" placeholder="{{\'Please fill the gender\'}}"\n            [disabled]="isDisabled">\n            <ion-option [value]="1">Male</ion-option>\n            <ion-option [value]="0">Female</ion-option>\n          </ion-select>\n        </ion-item>\n\n        <div class="btn" *ngIf="EditProfileClicked==false">\n          <button ion-button (click)="EditProfile" (click)="EditProfile()">{{"Edit Profile" | translate}}</button>\n        </div>\n\n        <div *ngIf="EditProfileClicked==true">\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'MARITAL_STATUS\' | translate }}</ion-label>\n            <ion-select formControlName="MARITAL_STATUS" [(ngModel)]="User_Marital_Edit_ngModel" placeholder="{{\'Please fill the marital status\'}}"\n              (ionChange)="DisplayFamily_Edit()">\n              <ion-option [value]="0">Single</ion-option>\n              <ion-option [value]="1">Married</ion-option>\n              <ion-option [value]="2">Divorced</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'PROFILE PHOTO\' | translate }}</ion-label>\n            <ion-input type="file" id="avatar1" (change)="ProfileImageDisplay($event, \'avatar1\')" #fileInput1></ion-input>\n            <button ion-button item-end color="primary500" (click)="saveIm()" [disabled]="!chooseFile">Upload image</button>\n          </ion-item>\n\n          <div class="eClaimSubTitle2">\n            <b>{{ \'EMPLOYMENT_DETAILS\' | translate }}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'COMPANY\' | translate }}</ion-label>\n            <ion-select formControlName="TENANT_COMPANY_GUID" [(ngModel)]="User_Company_Edit_ngModel" placeholder="{{\'Please fill the company\'}}"\n              [disabled]="isDisabled" (ionChange)="GetBranch(\'tenant_company_site\', User_Company_Edit_ngModel,\'SITE_NAME\'); BindApprover1(\'view_get_tenant_admin\')">\n              <ion-option *ngFor="let company of companies" [value]="company.TENANT_COMPANY_GUID" selected="true">{{company.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'BRANCH\' | translate }}</ion-label>\n            <ion-select formControlName="BRANCH" [(ngModel)]="User_Branch_Edit_ngModel" placeholder="{{\'Please select Branch\'}}"\n              [disabled]="isDisabled">\n              <ion-option *ngFor="let branch of branches" [value]="branch.TENANT_COMPANY_SITE_GUID" selected="true">{{branch.SITE_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'DESIGNATION\' | translate }}</ion-label>\n            <ion-select formControlName="DESIGNATION_GUID" [(ngModel)]="User_Designation_Edit_ngModel" placeholder="{{\'Please fill the designation\'}}"\n              [disabled]="isDisabled">\n              <ion-option *ngFor="let designation of designations" value="{{designation.DESIGNATION_GUID}}" selected="true">{{designation.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'DEPARTMENT\' | translate }}</ion-label>\n            <ion-select formControlName="DEPT_GUID" [(ngModel)]="User_Department_Edit_ngModel" placeholder="{{\'Please fill in the Department\'}}"\n              [disabled]="isDisabled">\n              <ion-option *ngFor="let department of departments" value="{{department.DEPARTMENT_GUID}}" selected="true">{{department.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'JOIN_DATE\' | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="JOIN_DATE" [(ngModel)]="User_JoinDate_Edit_ngModel"\n              placeholder="{{\'Please fill the join date\'}}" [disabled]="isDisabled"></ion-datetime>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'CONFIRMATION_DATE\' | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="CONFIRMATION_DATE" [(ngModel)]="User_ConfirmationDate_Edit_ngModel"\n              placeholder="{{\'Please fill the confirmation date\'}}" [disabled]="isDisabled"></ion-datetime>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'RESIGNATION_DATE\' | translate }}</ion-label>\n            <ion-datetime displayFormat="DD/MM/YYYY" formControlName="RESIGNATION_DATE" [(ngModel)]="User_ResignationDate_Edit_ngModel"\n              placeholder="{{\'Please fill the Registration date\'}}" [disabled]="isDisabled"></ion-datetime>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'EMPLOYEE_TYPE\' | translate }}</ion-label>\n            <ion-select formControlName="EMPLOYEE_TYPE" [(ngModel)]="User_EmployeeType_Edit_ngModel" placeholder="{{\'Please fill in the Email\'}}"\n              [disabled]="isDisabled">\n              <ion-option value="0">Permanent</ion-option>\n              <ion-option value="1">Contract</ion-option>\n              <ion-option value="2">Temporary</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'EMPLOYEE_STATUS\' | translate }}</ion-label>\n            <ion-select formControlName="EMPLOYEE_STATUS" [(ngModel)]="User_Employment_Edit_ngModel" placeholder="{{\'Please fill the employement status\'}}"\n              [disabled]="isDisabled">\n              <ion-option value="0">Probation</ion-option>\n              <ion-option value="1">Confirmed</ion-option>\n              <ion-option value="2">Terminated</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{"Manager"}}</ion-label>\n            <ion-select formControlName="APPROVER1" [(ngModel)]="User_Approver1_Edit_ngModel" placeholder="{{\'Please select Approver\'}}"\n              [disabled]="isDisabled">\n              <ion-option *ngFor="let approver of approvers" [value]="approver.USER_GUID" selected="true">{{approver.FULLNAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="eClaimSubTitle2">\n            <b>{{ \'EDUCATIONAL_QUALIFICATION\' | translate }}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'HIGHEST_QUALIFICATION\' | translate }}</ion-label>\n            <ion-select formControlName="HIGHEST_QUALIFICATION" [(ngModel)]="User_HighestQualification_Edit_ngModel"\n              placeholder="{{\'Select Highest Qualification\'}}" [disabled]="isDisabled">\n              <ion-option *ngFor="let qualification of qualifications" [value]="qualification.QUALIFICATION_TYPE_GUID"\n                selected="true">{{qualification.TYPE_NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'UNIVERSITY\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="UNIVERSITY" [(ngModel)]="User_University_Edit_ngModel" placeholder="{{\'Please fill the University\'}}"\n              [disabled]="isDisabled"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'MAJOR\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="MAJOR" [(ngModel)]="User_Major_Edit_ngModel" placeholder="{{\'Please fill the Major\'}}"\n              [disabled]="isDisabled"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{ \'YEAR\' | translate }}</ion-label>\n            <ion-input type="text" formControlName="EDU_YEAR" [(ngModel)]="User_EduYear_Edit_ngModel" placeholder="{{\'Please fill the Year\'}}"\n              [disabled]="isDisabled"></ion-input>\n          </ion-item>\n\n          <!-- <ion-item>\n              <input type="file" id="avatar2" (change)="onFileChange($event, \'avatar2\')" #fileInput>\n              <button ion-button type="button" (click)="clearFile()">clear file</button>\n          </ion-item> -->\n\n          <div class="eClaimSubTitle2">\n            <b>{{\'PROFESSIONAL_CERTIFICATIONS\' | translate}}</b>\n          </div>\n\n          <ion-item class="fuha1">\n            <ion-label stacked>{{\'CERTIFICATION\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="CERTIFICATION" [(ngModel)]="User_Certification_Edit_ngModel"\n              placeholder="{{\'Please fill the certifiation\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha3">\n            <ion-label stacked>{{\'GRADE\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="CERTIFICATION_GRADE" [(ngModel)]="User_CertificationGrade_Edit_ngModel"\n              placeholder="{{\'Please fill the Grade\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha3">\n            <ion-label stacked>{{\'YEAR\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="CERTIFICATION_YEAR" [(ngModel)]="User_CertificationYear_Edit_ngModel"\n              placeholder="{{\'Please fill the Year\'}}"></ion-input>\n          </ion-item>\n\n          <!-- <ion-item class="fuha2">\n            <ion-label stacked>{{"IMAGE"}}</ion-label>\n          </ion-item> -->\n\n          <ion-item class="fuha3">\n            <button ion-button icon-left (click)="AddProfessionalCertificationForEdit()">\n              <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n            </button>\n          </ion-item>\n\n          <ion-list>\n            <ion-item>\n              <table class="Tabler">\n                <tr class="linedsg TColor">\n                  <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                  <th class="lgl1">NAME</th>\n                  <th class="lgl1">GRADE</th>\n                  <th class="lgl1">YEAR</th>\n                  <th class="lgl1">ATTACHEMENT</th>\n                  <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                </tr>\n\n                <tr class="col7" *ngFor="let certificate of ProfessionalCertification; let i=index">\n                  <td class="lgl1">{{i+1}}</td>\n                  <td class="lgl1">{{certificate.NAME}}</td>\n                  <td class="lgl1">{{certificate.GRADE}}</td>\n                  <td class="lgl1">{{certificate.YEAR}}</td>\n                  <td class="lgl1">{{certificate.ATTACHEMENT_ID}}</td>\n                  <!-- <td class="lgl1">MCA.Pdf</td> -->\n                  <td class="lgl1 fColor">\n                    <button ion-button item-end (click)="EditProfessionalCertificationForEdit(certificate.CERTIFICATE_GUID)">\n                      <ion-icon name="md-create"></ion-icon>\n                    </button>\n                    <button ion-button item-end (click)="RemoveProfessionalCertification(certificate.CERTIFICATE_GUID)">\n                      <ion-icon name="md-close"></ion-icon>\n                    </button>\n                  </td>\n                </tr>\n              </table>\n            </ion-item>\n          </ion-list>\n\n          <div class="eClaimSubTitle2">\n            <b>{{\'RESIDENTIAL_ADDRESS\' | translate}}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'ADDRESS_LINE_1\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="USER_ADDRESS1" [(ngModel)]="User_Address1_Edit_ngModel" [value]="USER_ADDRESS1"\n              placeholder="{{\'Please fill the address1\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'POST_CODE\' | translate}}</ion-label>\n            <ion-input type="number" formControlName="USER_POSTCODE" [(ngModel)]="User_PostCode_Edit_ngModel"\n              placeholder="{{\'Please fill the Post Code\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'ADDRESS_LINE_2\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="USER_ADDRESS2" [(ngModel)]="User_Address2_Edit_ngModel" [value]="USER_ADDRESS2"\n              placeholder="{{\'Please fill the address2\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'COUNTRY\' | translate}}</ion-label>\n            <ion-select formControlName="USER_COUNTRY" [(ngModel)]="User_Country_Edit_ngModel" placeholder="{{\'Select Country\'}}"\n              (ionChange)="BindState(\'main_state\', User_Country_Edit_ngModel,\'NAME\')">\n              <ion-option *ngFor="let country of countries" [value]="country.COUNTRY_GUID" selected="true">{{\n                country.NAME }}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'CITY\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="USER_ADDRESS3" [(ngModel)]="User_Address3_Edit_ngModel" [value]="USER_ADDRESS3"\n              placeholder="{{\'Please fill the address3\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'STATE\' | translate}}</ion-label>\n            <ion-select formControlName="USER_STATE" [(ngModel)]="User_State_Edit_ngModel" placeholder="{{\'Select State\'}}">\n              <ion-option *ngFor="let state of states" [value]="state.STATE_GUID" selected="true">{{ state.NAME }}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div *ngIf="MaritalStatusMarried">\n            <div class="eClaimSubTitle2">\n              <b>{{\'FAMILY_DETAILS\' | translate}}</b>\n            </div>\n\n            <ion-item class="fuha3">\n              <ion-label stacked>{{\'SPOUSE_NAME\' | translate}}</ion-label>\n              <ion-input type="text" formControlName="SPOUSENAME" [(ngModel)]="User_Spouse_Name_Edit_ngModel"\n                placeholder="{{\'Please fill the Spouse Name\'}}"></ion-input>\n            </ion-item>\n\n            <ion-item class="fuha3">\n              <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n              <ion-input type="text" formControlName="SPOUSE_ICNUMBER" [(ngModel)]="User_Spouse_IcNumber_Edit_ngModel"\n                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n            </ion-item>\n            <ion-item class="fuha3">\n              <button ion-button icon-left (click)="AddFamilyDetailsForEdit()">\n                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n              </button>\n            </ion-item>\n            <ion-list>\n              <ion-item>\n                <table class="Tabler">\n                  <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                    <th class="lgl1">NAME</th>\n                    <th class="lgl1">IC NUMBER</th>\n                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                  </tr>\n\n                  <tr class="col7" *ngFor="let family of FamilyDetails; let i=index">\n                    <td class="lgl1">{{i+1}}</td>\n                    <td class="lgl1">{{family.NAME}}</td>\n                    <td class="lgl1">{{family.ICNO}}</td>\n                    <td class="lgl1 fColor">\n                      <button ion-button item-end (click)="EditFamilyDetailsForEdit(family.SPOUSE_GUID)">\n                        <ion-icon name="md-create"></ion-icon>\n                      </button>\n                      <button ion-button item-end (click)="RemoveFamilyDetails(family.SPOUSE_GUID)">\n                        <ion-icon name="md-close"></ion-icon>\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </ion-item>\n            </ion-list>\n\n            <ion-item class="fuha2">\n              <ion-label stacked>{{\'CHILD_NAME\' | translate}}</ion-label>\n              <ion-input type="text" formControlName="CHILDNAME" [(ngModel)]="User_Child_Name_Edit_ngModel" placeholder="{{\'Please fill the Child Name\'}}"></ion-input>\n            </ion-item>\n            <ion-item class="fuha2">\n              <ion-label stacked>{{\'IC_NUMBER\' | translate}}</ion-label>\n              <ion-input type="text" formControlName="CHILD_ICNUMBER" [(ngModel)]="User_Child_IcNumber_Edit_ngModel"\n                placeholder="{{\'Please fill the IC Number\'}}"></ion-input>\n            </ion-item>\n            <ion-item class="fuha2">\n              <ion-label stacked>{{\'GENDER\' | translate}}</ion-label>\n              <ion-select formControlName="CHILD_GENDER" [(ngModel)]="User_Child_Gender_Edit_ngModel" placeholder="{{\'Please Select Gender\'}}">\n                <ion-option value="MALE">MALE</ion-option>\n                <ion-option value="FEMALE">FEMALE</ion-option>\n              </ion-select>\n            </ion-item>\n            <ion-item class="fuha2">\n              <ion-label stacked>{{\'SPOUSE\' | translate}}</ion-label>\n              <ion-select formControlName="SPOUSE_CHILD" [(ngModel)]="User_SpouseChild_Edit_ngModel" placeholder="{{\'Please Select Spouse\'}}">\n                <ion-option *ngFor="let family of FamilyDetails" [value]="family.NAME">{{ family.NAME }}</ion-option>\n              </ion-select>\n            </ion-item>\n\n            <ion-item class="fuha2">\n              <button ion-button icon-left (click)="AddChildrenForEdit()">\n                <ion-icon name="md-add-circle" style="padding: 10px;"></ion-icon>ADD\n              </button>\n            </ion-item>\n\n            <ion-list>\n              <ion-item>\n                <table class="Tabler">\n                  <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px;">NO</th>\n                    <th class="lgl1">NAME</th>\n                    <th class="lgl1">IC NUMBER</th>\n                    <th class="lgl1">GENDER</th>\n                    <th class="lgl1">SPOUSE</th>\n                    <th class="lgl1 tblBrRight" style="width:90px;">ACTION</th>\n                  </tr>\n\n                  <tr class="col7" *ngFor="let chilren of ChildrenDetails; let i=index">\n                    <td class="lgl1">{{i+1}}</td>\n                    <td class="lgl1">{{chilren.NAME}}</td>\n                    <td class="lgl1">{{chilren.ICNO}}</td>\n                    <td class="lgl1">{{chilren.GENDER}}</td>\n                    <td class="lgl1">{{chilren.SPOUSE}}</td>\n                    <td class="lgl1 fColor">\n                      <button ion-button item-end (click)="EditChildrenForEdit(chilren.CHILD_GUID)">\n                        <ion-icon name="md-create"></ion-icon>\n                      </button>\n                      <button ion-button item-end (click)="RemoveChildren(chilren.CHILD_GUID)">\n                        <ion-icon name="md-close"></ion-icon>\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </ion-item>\n            </ion-list>\n          </div>\n\n          <div class="eClaimSubTitle2">\n            <b>{{\'EMERGENCY_CONTACT_DETAILS\' | translate}}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'CONTACT_NAME_1\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMG_CONTACT_NAME1" [(ngModel)]="User_EMG_CONTACT_NAME1_Edit_ngModel"\n              placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'CONTACT_NAME_2\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMG_CONTACT_NAME2" [(ngModel)]="User_EMG_CONTACT_NAME2_Edit_ngModel"\n              placeholder="{{\'Please fill the Contact Name\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMG_RELATIONSHIP" [(ngModel)]="User_EMG_RELATIONSHIP_Edit_ngModel"\n              placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'RELATIONSHIP\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="EMG_RELATIONSHIP2" [(ngModel)]="User_EMG_RELATIONSHIP2_Edit_ngModel"\n              placeholder="{{\'Please fill the Relationship\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n            <ion-input type="number" formControlName="EMG_CONTACT_NO1" [(ngModel)]="User_EMG_CONTACT_NO1_Edit_ngModel"\n              placeholder="{{\'Please fill the Contact No\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'CONTACT_NUMBER\' | translate}}</ion-label>\n            <ion-input type="number" formControlName="EMG_CONTACT_NO2" [(ngModel)]="User_EMG_CONTACT_NO2_Edit_ngModel"\n              placeholder="{{\'Please fill the Contact Number\'}}"></ion-input>\n          </ion-item>\n\n\n          <div class="eClaimSubTitle2">\n            <b>{{\'PAYROLL_DETAILS\' | translate}}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'EPF_NUMBER\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="EPF_NUMBER" [(ngModel)]="User_EPF_NUMBER_Edit_ngModel" placeholder="{{\'Please fill the Epf Number\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'BANK_NAME\' | translate}}</ion-label>\n            <ion-select formControlName="BANK_NAME" [(ngModel)]="User_BANK_NAME_Edit_ngModel" placeholder="{{\'Please Select Bank\'}}">\n              <ion-option *ngFor="let bank of banks" value={{bank.BANK_GUID}}>{{bank.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'INCOME_TAX_NUMBER\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="INCOMETAX_NO" [(ngModel)]="User_INCOMETAX_NO_Edit_ngModel"\n              placeholder="{{\'Please fill the Income Tax No\'}}"></ion-input>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{\'ACCOUNT_NUMBER\' | translate}}</ion-label>\n            <ion-input type="text" formControlName="ACCOUNT_NUMBER" [(ngModel)]="User_ACCOUNT_NUMBER_Edit_ngModel"\n              placeholder="{{\'Please fill the Account Number\'}}"></ion-input>\n          </ion-item>\n\n          <div class="eClaimSubTitle2">\n            <b>{{\'Role Details\' | translate}}</b>\n          </div>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{"Role"}}</ion-label>\n            <ion-select formControlName="ROLE_NAME" [(ngModel)]="ROLE_ngModel_Edit" placeholder="{{\'Please select role\'}}"\n              [disabled]="isDisabled">\n              <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item class="fuha">\n            <ion-label stacked>{{"Additional Role"}}</ion-label>\n            <ion-select formControlName="ADDITIONAL_ROLE_NAME" [(ngModel)]="ADDITIONAL_ROLE_ngModel_Edit" placeholder="{{\'Please select role\'}}"\n              multiple="true" [disabled]="isDisabled">\n              <ion-option *ngFor="let role of roles" [value]="role.ROLE_GUID">{{role.NAME}}</ion-option>\n            </ion-select>\n          </ion-item>\n\n          <div class="btn">\n            <button ion-button [disabled]="!Userform.valid" (click)="Update(view_user_details[0].USER_GUID)">{{"SUBMIT"\n              | translate}}</button>\n          </div>\n        </div>\n      </form>\n\n    </ion-list>\n  </div>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/account/account.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_18__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_19__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_5__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_4__angular_common__["k" /* TitleCasePipe */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_data__["a" /* UserData */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_7__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_18__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_4__angular_common__["k" /* TitleCasePipe */]])
    ], AccountPage);
    return AccountPage;
}());

//# sourceMappingURL=account.js.map

/***/ }),
/* 682 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AllClaimhistoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__all_claim_list_all_claim_list__ = __webpack_require__(491);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { HttpClient } from '@angular/common/http';



//import { ClaimHistory_Model } from '../../models/ClaimHistory_Model';


// import { Observable } from 'rxjs/Observable';
// import { Subject }    from 'rxjs/Subject';
// import { of }         from 'rxjs/observable/of';
// import {
//    debounceTime, distinctUntilChanged, switchMap
//  } from 'rxjs/operators';
// import { Response } from '@angular/http/src/static_response';
/**
 * Generated class for the ClaimhistoryPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
var AllClaimhistoryPage = /** @class */ (function () {
    function AllClaimhistoryPage(excelService, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.claimhistorys1 = [];
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.currency = localStorage.getItem("cs_default_currency");
        this.page = 1;
        this.ExcelData = [];
        this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindYears();
        this.BindData("All", "All", "All");
        this.excelService = excelService;
    }
    AllClaimhistoryPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimhistorys = _this.claimhistorys1 = data["resource"];
            _this.claimhistorys = _this.claimhistorys1;
            if (_this.claimhistorys.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.DEPT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
            }
            for (var item in data["resource"]) {
                _this.ExcelData.push({ Employee: data["resource"][item]["FULLNAME"], Department: data["resource"][item]["DEPT"], Month: data["resource"][item]["MONTH"], ApprovedAmt: data["resource"][item]["APPROVEDAMOUNT"], RejectedAmount: data["resource"][item]["REJECTEDAMOUNT"] });
            }
        });
    };
    AllClaimhistoryPage.prototype.onSearchInput = function () {
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimhistorys = this.claimhistorys1.filter(function (item) {
                var fullname;
                var dept;
                var month;
                var approveamount;
                var rejamount;
                if (item.FULLNAME != null) {
                    fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.DEPT != null) {
                    dept = item.DEPT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.MONTH != null) {
                    month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.APPROVEDAMOUNT != null) {
                    approveamount = item.APPROVEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.REJECTEDAMOUNT != null) {
                    rejamount = item.REJECTEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((fullname > -1)
                    || (dept > -1)
                    || (month > -1)
                    || (approveamount > -1)
                    || (rejamount > -1));
            });
        }
        else {
            this.claimhistorys = this.claimhistorys1;
        }
    };
    AllClaimhistoryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimhistoryPage');
    };
    AllClaimhistoryPage.prototype.goToClaimHistoryDetail = function (claimrefguid, userguid, month) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__all_claim_list_all_claim_list__["a" /* AllClaimListPage */], {
            claimRefGuid: claimrefguid,
            userGuid: userguid,
            Month: month
        });
    };
    AllClaimhistoryPage.prototype.ExportToExcel = function () {
        // this.excelService.exportAsExcelFile(this.claimhistorys, 'Data');
        this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
    };
    AllClaimhistoryPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    AllClaimhistoryPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    AllClaimhistoryPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    AllClaimhistoryPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlYear) {
        if (this.loginUserRole === "Finance Admin") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(APPROVER_GUID=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=3)AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(APPROVER_GUID=' + localStorage.getItem("g_USER_GUID") + ')AND(PROFILE_LEVEL=2)AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(ddlDept, ddlEmployee, ddlmonth);
    };
    AllClaimhistoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claimhistory',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/allclaimhistory/claimhistory.html"*/'<!--\n  Generated template for the ClaimhistoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ "CLAIM_HISTORY" | translate }}</ion-title>\n    </ion-navbar>\n    <ion-toolbar no-border-top color="primary200">\n        <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n    <ion-fab top right edge>\n        <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n            <ion-icon name="download"></ion-icon>\n        </button>\n    </ion-fab>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_DEPARTMENT" | translate }}</ion-label>\n        <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_USER_NAME" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlEmployee>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "CLAIM_MONTH" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlmonth>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option value="Jan">Jan</ion-option>\n            <ion-option value="Feb">Feb</ion-option>\n            <ion-option value="Mar">Mar</ion-option>\n            <ion-option value="Apr">Apr</ion-option>\n            <ion-option value="May">May</ion-option>\n            <ion-option value="Jun">Jun</ion-option>\n            <ion-option value="Jul">Jul</ion-option>\n            <ion-option value="Aug">Aug</ion-option>\n            <ion-option value="Sep">Sep</ion-option>\n            <ion-option value="Oct">Oct</ion-option>\n            <ion-option value="Nov">Nov</ion-option>\n            <ion-option value="Dec">Dec</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_YEAR" | translate }}</ion-label>\n        <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n            <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item>\n        <button ion-button item-end (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlYear.value)">Search</button>\n    </ion-item>\n    <ion-list>\n        <ion-item>\n            <table class="Tabler list">\n                <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n\n                    <th class="lgl1">Employee\n                    </th>\n                    <th class="lgl1">Department\n                    </th>\n                    <th class="lgl1">Month\n                    </th>\n                    <!-- <th class="lgl1">Status</th> -->\n                    <th class="lgl1">Approved Amount({{currency }})</th>\n                    <th class="lgl1">Rejected Amount({{currency }})</th>\n                    <th class="lgl1 tblBrRight" style="width:80px">Action</th>\n\n\n                </tr>\n\n                <tr class="col7" *ngFor="let claimhistory of claimhistorys | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                    <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n                    <td class="lgl1 getHeader" reshead="Employee">{{claimhistory.FULLNAME}}</td>\n                    <td class="lgl1 getHeader" reshead="Department">{{claimhistory.DEPT}}</td>\n                    <td class="lgl1 getHeader" reshead="Month">{{claimhistory.MONTH}}</td>\n                    <!-- <td class="lgl1">{{claimhistory.REQ_STATUS}}</td> -->\n                    <td class="lgl1 getHeader" reshead="Approved Amount">{{claimhistory.APPROVEDAMOUNT | number:\'1.2-2\'}}</td>\n                    <td class="lgl1 getHeader" reshead="Rejected Amount">{{claimhistory.REJECTEDAMOUNT | number:\'1.2-2\'}}</td>\n                    <td class="lgl1 getHeader fColor" reshead="Action"> \n                        <button ion-button item-end (click)="goToClaimHistoryDetail(claimhistory.CLAIM_REF_GUID,claimhistory.USER_GUID,claimhistory.MONTH)">\n                            <ion-icon name="md-eye"></ion-icon>\n                        </button>\n                        <!-- <button ion-button item-end (click)="DeleteClick(cashcard.CASHCARD_GUID)"><ion-icon name="md-close"></ion-icon></button> -->\n                    </td>\n                </tr>\n            </table>\n            <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls>\n        </ion-item>\n    </ion-list>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/allclaimhistory/claimhistory.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_7__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], AllClaimhistoryPage);
    return AllClaimhistoryPage;
}());

//# sourceMappingURL=claimhistory.js.map

/***/ }),
/* 683 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the UploadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var UploadPage = /** @class */ (function () {
    function UploadPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    UploadPage.prototype.ngOnInit = function () {
    };
    // private upload() {
    //   const fileBrowser = this.fileInput.nativeElement;
    //   if (fileBrowser.files && fileBrowser.files[0]) {
    //     const formData = new FormData();
    //     formData.append('files', fileBrowser.files[0]);
    //     const xhr = new XMLHttpRequest();
    //     xhr.open('POST', 'http://api.zen.com.my/api/v2/azurefs/', true);
    //     xhr.onload = function () {
    //       if (this['status'] === 200) {
    //           const responseText = this['responseText'];
    //           const files = JSON.parse(responseText);
    //           //todo: emit event
    //       } else {
    //         //todo: error handling
    //       }
    //     };
    //     xhr.send(formData);
    //   }
    // }
    UploadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad UploadPage');
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'),
        __metadata("design:type", Object)
    ], UploadPage.prototype, "fileInput", void 0);
    UploadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-upload',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/upload/upload.html"*/'<!--\n  Generated template for the UploadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>{{ "UPLOAD" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <form [formGroup]="Travelform">\n    <!-- <ion-item>\n        <input type="file" (change)="fileChange($event)" placeholder="Upload file" accept=".pdf,.doc,.docx">\n      </ion-item> -->\n\n      <div>\n          <input type="file" #fileInput placeholder="Upload file..." />\n          <button type="button" (click)="upload()">{{ "UPLOAD" | translate }}</button>\n        </div>\n      </form>\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/upload/upload.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], UploadPage);
    return UploadPage;
}());

//# sourceMappingURL=upload.js.map

/***/ }),
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MonthlyClaimReportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the MonthlyClaimReportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MonthlyClaimReportPage = /** @class */ (function () {
    function MonthlyClaimReportPage(excelService, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.claimList = [];
        this.claimList1 = [];
        this.currency = localStorage.getItem("cs_default_currency");
        this.deptAll = true;
        this.empAll = true;
        this.claimAll = true;
        this.monthAll = true;
        this.grandTotal = 0;
        this.currentYear = new Date().getFullYear();
        this.prevYear = new Date().getFullYear();
        this.page = 1;
        this.btnSearch = false;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?filter=(ASSIGNED_TO='+localStorage.getItem("g_USER_GUID") + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_monthly_claim_report?filter=(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.ExcelData = [];
        // ExportToExcel() {
        //   // this.excelService.exportAsExcelFile(this.claimListTotal,'Data');
        //   this.excelService.exportAsExcelFile(this.ExcelData,'Data');
        // }
        this.ExportExcelClicked = false;
        this.ExcelColumns = [];
        this.checked = [];
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindClaimTypes();
        this.BindYears();
        this.BindData();
        this.excelService = excelService;
    }
    MonthlyClaimReportPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    MonthlyClaimReportPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        if (dept !== null) {
            var deptAr = dept.toString().split(",");
            this.http
                .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.employeeList1 = data["resource"];
                _this.employeeList = _this.employeeList1;
            });
            if (deptAr[0] !== "All" || deptAr.length > 1) {
                var _loop_1 = function (i) {
                    if (i === 0)
                        this_1.employeeList = this_1.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept[i].toString(); });
                    else
                        this_1.employeeList = this_1.employeeList.concat(this_1.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept[i].toString(); }));
                };
                var this_1 = this;
                for (var i = 0; i < dept.length; i++) {
                    _loop_1(i);
                }
                this.empAll = false;
            }
        }
        else
            this.employeeList = [];
    };
    MonthlyClaimReportPage.prototype.EmpChange = function (emp) {
        var empAr = emp.toString().split(",");
        if (empAr[0] !== "All" || emp.length > 0)
            this.empAll = false;
    };
    MonthlyClaimReportPage.prototype.MonthChange = function (month) {
        // debugger;
        var monthAr = month.toString().split(",");
        if (monthAr[0] !== "All" || month.length > 0)
            this.monthAll = false;
    };
    MonthlyClaimReportPage.prototype.ClaimChange = function (claim) {
        var claimAr = claim.toString().split(",");
        if (claimAr[0] === "All" || claim.length === 0)
            this.claimAll = true;
    };
    MonthlyClaimReportPage.prototype.BindClaimTypes = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_claim_type?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTypeList = data["resource"];
        });
    };
    MonthlyClaimReportPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    MonthlyClaimReportPage.prototype.BindData = function () {
        var _this = this;
        this.grandTotal = 0;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimListTotal = data["resource"];
            _this.claimList = _this.claimListTotal;
            // for (var item in data["resource"]) {
            //   this.ExcelData.push({ Employee: data["resource"][item]["FULLNAME"], Department: data["resource"][item]["DEPT"], Month: data["resource"][item]["MONTH"], ClaimType : data["resource"][item]["CLAIM_TYPE"], Status: data["resource"][item]["STATUS"], TotalAmount: data["resource"][item]["AMOUNT"] });
            // }
            // if(status!==null && this.claimList.length !== 0)
            // {this.claimList = this.claimList.filter(s => s.STATUS.toString() === status.toString());}
            if (_this.claimList.length !== 0) {
                _this.claimList.forEach(function (element) {
                    _this.grandTotal = _this.grandTotal + element.AMOUNT;
                    //   if (element.PROFILE_LEVEL == Settings.ProfileLevels.TWO && element.STATUS == Settings.StatusConstants.PENDING)
                    //   element.STATUS = Settings.StatusConstants.APPROVED
                    // else if (element.PROFILE_LEVEL == Settings.ProfileLevels.THREE && element.STATUS == Settings.StatusConstants.APPROVED)
                    //   element.STATUS = Settings.StatusConstants.VALIDATED
                });
            }
            else {
                _this.grandTotal = 0;
            }
            _this.btnSearch = true;
        });
    };
    MonthlyClaimReportPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlClaimTypes, ddlStatus, ddlYear) {
        var _this = this;
        this.btnSearch = false;
        this.grandTotal = 0;
        if (this.prevYear !== ddlYear) {
            this.BindData();
            this.prevYear = ddlYear;
        }
        else {
            this.claimList = this.claimListTotal;
        }
        // debugger
        //alert(ddlDept);
        //console.log(this.claimList);
        var deptArry = ddlDept.toString().split(",");
        var empArry = ddlEmployee.toString().split(",");
        var monthArry = ddlmonth.toString().split(",");
        var claimsArry = ddlClaimTypes.toString().split(",");
        var statusArry = ddlStatus.toString().split(",");
        //this.BindData();
        //this.claimList = [];
        if (deptArry[0] !== "All") {
            var _loop_2 = function (i) {
                if (i === 0)
                    this_2.claimList = this_2.claimListTotal.filter(function (s) { return s.DEPT_GUID.toString() === deptArry[i].toString(); });
                else
                    this_2.claimList = this_2.claimList.concat(this_2.claimListTotal.filter(function (s) { return s.DEPT_GUID.toString() === deptArry[i].toString(); }));
            };
            var this_2 = this;
            for (var i = 0; i < deptArry.length; i++) {
                _loop_2(i);
            }
        }
        if (empArry[0] !== "All") {
            var _loop_3 = function (i) {
                if (i === 0)
                    this_3.claimList = this_3.claimListTotal.filter(function (s) { return s.USER_GUID.toString() === empArry[i].toString(); });
                else
                    this_3.claimList = this_3.claimList.concat(this_3.claimListTotal.filter(function (s) { return s.USER_GUID.toString() === empArry[i].toString(); }));
            };
            var this_3 = this;
            for (var i = 0; i < empArry.length; i++) {
                _loop_3(i);
            }
        }
        if (monthArry[0] !== "All") {
            var _loop_4 = function (i) {
                if (i === 0)
                    this_4.claimList1 = this_4.claimList.filter(function (s) { return s.MONTH.toString() === monthArry[i].toString(); });
                else
                    this_4.claimList1 = this_4.claimList1.concat(this_4.claimList.filter(function (s) { return s.MONTH.toString() === monthArry[i].toString(); }));
            };
            var this_4 = this;
            for (var i = 0; i < monthArry.length; i++) {
                _loop_4(i);
            }
            this.claimList = this.claimList1;
        }
        if (claimsArry[0] !== "All") {
            var _loop_5 = function (i) {
                if (i === 0)
                    this_5.claimList1 = this_5.claimList.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === claimsArry[i].toString(); });
                else
                    this_5.claimList1 = this_5.claimList1.concat(this_5.claimList.filter(function (s) { return s.CLAIM_TYPE_GUID.toString() === claimsArry[i].toString(); }));
            };
            var this_5 = this;
            for (var i = 0; i < claimsArry.length; i++) {
                _loop_5(i);
            }
            this.claimList = this.claimList1;
        }
        //this.claimList=this.claimList.filter(s => s.STATUS.toString() === ddlStatus.toString());
        if (statusArry[0] !== "All") {
            var _loop_6 = function (i) {
                if (i === 0)
                    this_6.claimList1 = this_6.claimList.filter(function (s) { return s.STATUS.toString() === statusArry[i].toString(); });
                else
                    this_6.claimList1 = this_6.claimList1.concat(this_6.claimList.filter(function (s) { return s.STATUS.toString() === statusArry[i].toString(); }));
            };
            var this_6 = this;
            for (var i = 0; i < statusArry.length; i++) {
                _loop_6(i);
            }
            this.claimList = this.claimList1;
        }
        if (this.claimList.length !== 0) {
            // this.claimList = this.claimList.filter(s => s.STATUS.toString() === ddlStatus.toString());
            this.claimList.forEach(function (element) {
                _this.grandTotal = _this.grandTotal + element.AMOUNT;
            });
        }
        else
            this.grandTotal = 0;
        // this.claimList = this.claimList.concat(this.claimListTotal.filter(s => s.DEPT_GUID === deptArry[0]));
        // this.claimList = this.claimList.concat(this.claimListTotal.filter(s => s.DEPT_GUID === deptArry[1]));
        //this.claimList.push(this.claimListTotal.filter(s=>s.DEPT_GUID===ddlEmployee[0]));
        this.btnSearch = true;
    };
    MonthlyClaimReportPage.prototype.printToCart = function (printSectionId) {
        //document.getElementById(printSectionId).hidden = false;
        var innerContents = document.getElementById(printSectionId).innerHTML;
        var popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');
        popupWinindow.document.open();
        popupWinindow.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">' + innerContents + '</html>');
        popupWinindow.document.close();
        //document.getElementById(printSectionId).hidden = true;
    };
    MonthlyClaimReportPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MonthlyClaimReportPage');
    };
    MonthlyClaimReportPage.prototype.ExportToExcel = function () {
        this.ExportExcelClicked = true;
        this.ExcelColumns = [];
        this.ExcelColumns.push({ Columns: 'Employee' });
        this.ExcelColumns.push({ Columns: 'Department' });
        this.ExcelColumns.push({ Columns: 'Month' });
        this.ExcelColumns.push({ Columns: 'ClaimType' });
        this.ExcelColumns.push({ Columns: 'Status' });
        this.ExcelColumns.push({ Columns: 'TotalAmount' });
    };
    MonthlyClaimReportPage.prototype.CloseExportExcel = function () {
        this.ExportExcelClicked = false;
        this.checked.length = 0;
    };
    MonthlyClaimReportPage.prototype.SelectColumn = function (e, SelectedColumn) {
        if (e.checked == true) {
            this.checked.push(SelectedColumn);
        }
        else {
            var index = this.RemoveCheckedFromArray(SelectedColumn);
            this.checked.splice(index, 1);
        }
    };
    MonthlyClaimReportPage.prototype.RemoveCheckedFromArray = function (checkbox) {
        return this.checked.findIndex(function (category) {
            return category === checkbox;
        });
    };
    MonthlyClaimReportPage.prototype.SubmitExportExcel = function () {
        this.ExcelData = [];
        if (this.checked.length > 0) {
            for (var item in this.claimList) {
                if (this.checked.length > 0) {
                    var ctr = 0;
                    var jsonStr = '';
                    for (var chkItem in this.checked) {
                        ctr = ctr + 1;
                        switch (this.checked[chkItem]["Columns"]) {
                            case "Employee":
                                if (this.checked.length == 1) {
                                    jsonStr += '{"Employee":"' + this.claimList[item]["FULLNAME"] + '"';
                                }
                                else {
                                    jsonStr += '{"Employee":"' + this.claimList[item]["FULLNAME"] + '",';
                                }
                                break;
                            case "Department":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Department":"' + this.claimList[item]["DEPT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Department":"' + this.claimList[item]["DEPT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Department":"' + this.claimList[item]["DEPT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Department":"' + this.claimList[item]["DEPT"] + '",';
                                    }
                                }
                                break;
                            case "Month":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Month":"' + this.claimList[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Month":"' + this.claimList[item]["MONTH"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Month":"' + this.claimList[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Month":"' + this.claimList[item]["MONTH"] + '",';
                                    }
                                }
                                break;
                            case "ClaimType":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"ClaimType":"' + this.claimList[item]["CLAIM_TYPE"] + '"';
                                    }
                                    else {
                                        jsonStr += '"ClaimType":"' + this.claimList[item]["CLAIM_TYPE"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"ClaimType":"' + this.claimList[item]["CLAIM_TYPE"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"ClaimType":"' + this.claimList[item]["CLAIM_TYPE"] + '",';
                                    }
                                }
                                break;
                            case "Status":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Status":"' + this.claimList[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Status":"' + this.claimList[item]["STATUS"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Status":"' + this.claimList[item]["STATUS"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Status":"' + this.claimList[item]["STATUS"] + '",';
                                    }
                                }
                                break;
                            case "TotalAmount":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"TotalAmount":"' + this.claimList[item]["AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"TotalAmount":"' + this.claimList[item]["AMOUNT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"TotalAmount":"' + this.claimList[item]["AMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"TotalAmount":"' + this.claimList[item]["AMOUNT"] + '",';
                                    }
                                }
                                break;
                        }
                        if (ctr == this.checked.length) {
                            jsonStr += '}';
                        }
                    }
                    this.ExcelData.push(JSON.parse(jsonStr));
                }
            }
            this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
        }
        else {
            alert('Please select one item.');
        }
    };
    MonthlyClaimReportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-monthly-claim-report',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/monthly-claim-report/monthly-claim-report.html"*/'<!--\n  Generated template for the MonthlyClaimReportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>{{ "MONTHLY_CLAIM_REPORT" | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-item class="fuha">\n\n        <ion-label>{{ "LIST_DEPARTMENT" | translate }}</ion-label>\n        <ion-select interface="popover" multiple="true" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n            <ion-option [value]="All" [selected]="deptAll">All</ion-option>\n            <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_USER_NAME" | translate }}</ion-label>\n        <ion-select interface="popover" multiple="true" (ionChange)="EmpChange(ddlEmployee.value)" #ddlEmployee>\n            <ion-option [value]="All" [selected]="empAll">All</ion-option>\n            <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_YEAR" | translate }}</ion-label>\n        <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n            <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n        </ion-select>\n    </ion-item>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "CLAIM_MONTH" | translate }}</ion-label>\n        <ion-select interface="popover" multiple="true" (ionChange)="MonthChange(ddlmonth.value)" #ddlmonth>\n            <ion-option [value]="All" [selected]="monthAll">All</ion-option>\n            <ion-option value="Jan">Jan</ion-option>\n            <ion-option value="Feb">Feb</ion-option>\n            <ion-option value="Mar">Mar</ion-option>\n            <ion-option value="Apr">Apr</ion-option>\n            <ion-option value="May">May</ion-option>\n            <ion-option value="Jun">Jun</ion-option>\n            <ion-option value="Jul">Jul</ion-option>\n            <ion-option value="Aug">Aug</ion-option>\n            <ion-option value="Sep">Sep</ion-option>\n            <ion-option value="Oct">Oct</ion-option>\n            <ion-option value="Nov">Nov</ion-option>\n            <ion-option value="Dec">Dec</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "CLAIM_TYPE" | translate }}</ion-label>\n        <ion-select interface="popover" multiple="true" (ionChange)="ClaimChange(ddlClaimTypes.value)" #ddlClaimTypes>\n            <ion-option [value]="All" [selected]="claimAll">All</ion-option>\n            <ion-option *ngFor="let claimType of claimTypeList" [value]="claimType.CLAIM_TYPE_GUID">{{claimType.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "LIST_STATUS" | translate }}</ion-label>\n        <ion-select interface="popover" multiple="true" #ddlStatus>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option [value]="Paid">Paid</ion-option>\n            <ion-option [value]="Pending">Pending</ion-option>\n            <ion-option [value]="Approved">Approved</ion-option>\n            <!-- <ion-option [value]="Validated">Validated</ion-option> -->\n            <ion-option [value]="Rejected">Rejected</ion-option>\n\n        </ion-select>\n    </ion-item>\n\n    <ion-item>\n        <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlClaimTypes.value,ddlStatus.value,ddlYear.value)">{{ "SEARCH" | translate }}</button>\n        <button ion-button item-end (click)="printToCart(\'printSectionId\')">{{ "PRINT" | translate }}</button>\n    </ion-item>\n\n    <ion-fab top right edge>\n        <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n            <ion-icon name="download"></ion-icon>\n        </button>\n    </ion-fab>\n\n    <ion-list id="printSectionId">\n        <ion-item>\n            <table class="Tabler list">\n                <tr class="linedsg TColor">\n                    <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n                    <th class="lgl1">Employee</th>\n                    <th class="lgl1">Department</th>\n                    <th class="lgl1" style="width:60px">Month</th>\n                    <th class="lgl1">Claim Type</th>\n                    <th class="lgl1" style="width:90px">Status</th>\n                    <th class="lgl1 tblBrRight" style="width:130px">Total Amount({{currency }})</th>\n\n                </tr>\n\n                <tr class="col7" *ngFor="let item of claimList | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                    <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n                    <td class="lgl1 getHeader" reshead="Employee" text-wrap>{{item.FULLNAME}}</td>\n                    <td class="lgl1 getHeader" reshead="Department">{{item.DEPT}}</td>\n                    <td class="lgl1 getHeader" reshead="Month">{{item.MONTH}}</td>\n                    <td class="lgl1 getHeader" reshead="Claim Type">{{item.CLAIM_TYPE}}</td>\n                    <td class="lgl1 getHeader" reshead="Status">{{item.STATUS}}</td>\n                    <td class="lgl1 getHeader" reshead="Total Amount" style="text-align: right !important;">{{item.AMOUNT | number:\'1.2-2\'}}</td>\n                </tr>\n\n                <tr class="col7">\n                    <td colspan="7" class="lgl11" style="color:#50C878;">  Total Amount({{currency }}) : {{grandTotal | number:\'1.2-2\'}}</td>\n                </tr>\n\n            </table>\n            <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls>\n\n        </ion-item>\n        <!-- <ion-item style="color:#50C878;"> Total Amount(RM) : {{grandTotal | number:\'1.2-2\'}}</ion-item>  -->\n\n    </ion-list>\n\n    <!-- Popup for Export to Excel Starts-->\n    <div class="blackcontainer" *ngIf="ExportExcelClicked">\n    </div>\n    <div class="popup4" padding *ngIf="ExportExcelClicked">\n        <ion-card>\n            <ion-card-header class="icTitle headerColor-white ">\n\n                <div class="icHeaderText">{{ "EXPORT_TO_EXCEL" | translate }}</div>\n\n                <button class="btnR" (click)="CloseExportExcel()">\n                    <ion-icon name="md-close"></ion-icon>\n                </button>\n\n            </ion-card-header>\n            <ion-list>\n                <div style="width:100%; display:inline-table !important;">\n\n                    <ion-card>\n                        <div>\n                            <ion-list>\n                                <ion-item *ngFor="let ExcelColumn of ExcelColumns">\n                                    <ion-label>{{ExcelColumn.Columns}}</ion-label>\n                                    <ion-checkbox color="secondary" checked="false" (ionChange)="SelectColumn($event, ExcelColumn)" item-end></ion-checkbox>\n                                </ion-item>\n                            </ion-list>\n                        </div>\n                    </ion-card>\n                </div>\n            </ion-list>\n            <div class="btn">\n                <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SubmitExportExcel()">{{"SUBMIT" | translate}}</button>\n            </div>\n        </ion-card>\n\n    </div>\n    <!-- Popup for Export to Excel End-->\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/monthly-claim-report/monthly-claim-report.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_5__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], MonthlyClaimReportPage);
    return MonthlyClaimReportPage;
}());

//# sourceMappingURL=monthly-claim-report.js.map

/***/ }),
/* 693 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimReportUserPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the ClaimReportUserPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimReportUserPage = /** @class */ (function () {
    function ClaimReportUserPage(navCtrl, navParams, http, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.alertCtrl = alertCtrl;
        this.monthsList = [];
        this.claimsListPrintTemp = [];
        this.totalClaimAmount = 0;
        this.loginUserGuid = localStorage.getItem("g_USER_GUID");
        this.BindMonths();
        this.BindEmpDetails();
    }
    ClaimReportUserPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimReportUserPage');
    };
    ClaimReportUserPage.prototype.BindData = function (printSectionId, item) {
        var _this = this;
        if (this.loginUserGuid !== undefined) {
            this.month = item.split(' ')[0].substring(0, 3);
            //alert(this.month);
            this.year = item.split(' ')[1];
            this.http
                .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report?filter=(USER_GUID=' + this.loginUserGuid + ')AND(MONTH=' + this.month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.claimsListPrint = data["resource"];
                _this.totalClaimAmount = 0;
                _this.claimsListPrintTemp = [];
                _this.claimsList = _this.claimsListPrint;
                _this.totalClaimAmount = 0;
                _this.claimsListPrint.forEach(function (element) {
                    element.TRAVEL_DATE = new Date(element.TRAVEL_DATE.replace(/-/g, "/"));
                    if (element.TYPE === 'TRV') {
                        element.RowNum = "1";
                        _this.claimsListPrintTemp.push(element);
                        for (var i = 2; i <= 7; i++) {
                            var flag = false;
                            if (i <= 3)
                                flag = true;
                            else if (i == 4 && element.TollAmount != 0)
                                flag = true;
                            else if (i == 5 && element.ParkingAmount != 0)
                                flag = true;
                            else if (i == 6 && element.MealAmount != 0)
                                flag = true;
                            else if (i == 7 && element.AccAmount != 0)
                                flag = true;
                            if (flag) {
                                var myClonedObject = Object.assign({}, element);
                                myClonedObject.RowNum = i.toString();
                                _this.claimsListPrintTemp.push(myClonedObject);
                            }
                        }
                    }
                    else if (element.TYPE === 'OT') {
                        element.RowNum = "1";
                        _this.claimsListPrintTemp.push(element);
                        for (var i = 2; i <= 4; i++) {
                            var myClonedObject = Object.assign({}, element);
                            myClonedObject.RowNum = i.toString();
                            _this.claimsListPrintTemp.push(myClonedObject);
                        }
                    }
                    else {
                        element.RowNum = "1";
                        _this.claimsListPrintTemp.push(element);
                        var myClonedObject = Object.assign({}, element);
                        myClonedObject.RowNum = "2";
                        _this.claimsListPrintTemp.push(myClonedObject);
                    }
                    _this.totalClaimAmount = _this.totalClaimAmount + element.Total;
                });
            });
            this.BindSummaryData();
            this.GetSocSummaryData();
        }
        var alert1 = this.alertCtrl.create({
            title: 'Print Report',
            message: 'Printable report ready. Please click OK to continue.',
            buttons: [
                {
                    text: 'Cancel',
                    handler: function () {
                        return;
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        _this.printToCart(printSectionId);
                    }
                }
            ]
        });
        alert1.present();
    };
    // CheckIsDataAvailable(item: string) {
    //   if (this.loginUserGuid !== undefined) {
    //     let month = item.split('-')[0];
    //     let year = item.split('-')[1];
    //     this.http
    //       .get(constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claim_report?filter=(USER_GUID=' + this.loginUserGuid + ')AND(MONTH=' + month + ')AND(YEAR=' + year + ')&api_key=' + constants.DREAMFACTORY_API_KEY)
    //       .map(res => res.json())
    //       .subscribe(data => {
    //         this.claimsList = data["resource"];
    //       });
    //     if (this.claimsList !== undefined)
    //       return true
    //     else
    //       return false;
    //   }
    // }
    ClaimReportUserPage.prototype.BindEmpDetails = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display?filter=(USER_GUID=' + this.loginUserGuid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.empData = data["resource"];
        });
    };
    ClaimReportUserPage.prototype.BindSummaryData = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report_summary?filter=(USER_GUID=' + this.loginUserGuid + ')AND(MONTH=' + this.month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimsListSummary = data["resource"];
        });
    };
    ClaimReportUserPage.prototype.GetSocSummaryData = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_report_soc_summary?filter=(USER_GUID=' + this.loginUserGuid + ')AND(MONTH=' + this.month + ')AND(YEAR=' + this.year + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimsSocSummary = data["resource"];
        });
    };
    ClaimReportUserPage.prototype.printToCart = function (printSectionId) {
        // let part = this.el.nativeElement.querySelector(printSectionId);
        // this.renderer.setElementStyle(part, 'display', 'block');
        // this.renderer;
        // window.onload;
        document.getElementById(printSectionId).hidden = false;
        var innerContents = document.getElementById(printSectionId).innerHTML;
        var popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');
        popupWinindow.document.open();
        popupWinindow.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">' + innerContents + '</html>');
        popupWinindow.document.close();
        document.getElementById(printSectionId).hidden = true;
    };
    ClaimReportUserPage.prototype.BindMonths = function () {
        var _this = this;
        var i = 1;
        var currentMonth = new Date().getMonth() + 1;
        var currentYear = new Date().getFullYear();
        if (this.loginUserGuid !== undefined) {
            this.http
                .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_get_months?filter=(USER_GUID=' + this.loginUserGuid + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.monthsData = data["resource"];
                _this.monthsData.forEach(function (element) {
                    if (i <= 12 && ((element.year == currentYear && element.MONTHNUM <= currentMonth) || (element.year == currentYear - 1 && element.MONTHNUM > currentMonth))) {
                        var item = element.MONTH_NAME + ' ' + element.year;
                        _this.monthsList.push(item);
                        i++;
                    }
                });
            });
        }
        // let currentMonth = new Date().getMonth() + 1;
        // let currentYear = new Date().getFullYear();
        // let item = ''; let val = 12;
        // for (let i = 0; i <= 11; i++) {
        //   if ((currentMonth - i) > 0) {
        //     item = this.getMonthName(currentMonth - i) + '-' + currentYear;
        //   }
        //   else {
        //     item = this.getMonthName(val) + '-' + (currentYear - 1);
        //     val--;
        //   }
        //   if (this.CheckIsDataAvailable(item))
        //     this.monthsList.push(item);
        // }
    };
    ClaimReportUserPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claim-report-user',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report-user/claim-report-user.html"*/'<!--\n  Generated template for the ClaimReportUserPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n\n  <ion-navbar color="primary200">\n  <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n  </button>\n\n    <ion-title>{{ "CLAIM_REPORT" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n    <ion-card  class="round2" *ngFor="let item of monthsList; let i=index" (click)="BindData(\'printSectionId\',item)" color="primary200">\n          <ion-row>\n            <ion-col class="icondash">   \n            <ion-icon name="print" color="light"></ion-icon>\n            </ion-col>\n            <ion-col>  <h2 style="    font-size: 20pt;\n              padding-top: 6pt;">{{item}}</h2></ion-col>\n          </ion-row>\n    </ion-card>\n  <!-- <ion-list>\n    <ion-item>\n      <table class="Tabler ">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:40px">No.</th>\n          <th class="lgl1">Month</th>\n\n          <th class="lgl1 tblBrRight" style="width:90px">Action</th>\n      \n\n        </tr>\n\n        <tr class="col7" *ngFor="let item of monthsList; let i=index">\n          <td class="lgl1">{{i+1}}</td>\n          <td class="lgl1">{{item}}</td>\n          <td class="lgl1" text-wrap>\n            <button ion-button item-end (click)="BindData(\'printSectionId\',item)">Print</button>\n          </td>\n        </tr>\n      </table>\n    </ion-item>\n  </ion-list> -->\n</ion-content>\n\n<div id="printSectionId" hidden>\n  <page-claim-report-print [claimsListPrint]="claimsListPrintTemp" [claimsListSummary]="claimsListSummary" [empData]="empData" [year]="year" [month]="month" [totalClaimAmount]="totalClaimAmount" [claimsSocSummary]="claimsSocSummary"></page-claim-report-print>\n</div>\n\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report-user/claim-report-user.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], ClaimReportUserPage);
    return ClaimReportUserPage;
}());

//# sourceMappingURL=claim-report-user.js.map

/***/ }),
/* 694 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimReportPrintPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the ClaimReportPrintPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimReportPrintPage = /** @class */ (function () {
    function ClaimReportPrintPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.currency = localStorage.getItem("cs_default_currency");
        // this.getSocSummary();
    }
    ClaimReportPrintPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimReportPrintPage');
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Array)
    ], ClaimReportPrintPage.prototype, "claimsListPrint", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Array)
    ], ClaimReportPrintPage.prototype, "claimsListSummary", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], ClaimReportPrintPage.prototype, "empData", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], ClaimReportPrintPage.prototype, "year", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], ClaimReportPrintPage.prototype, "month", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], ClaimReportPrintPage.prototype, "totalClaimAmount", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Array)
    ], ClaimReportPrintPage.prototype, "claimsSocSummary", void 0);
    ClaimReportPrintPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claim-report-print',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report-print/claim-report-print.html"*/'<!--\n  Generated template for the ClaimReportPrintPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n\n<ion-content padding>\n\n\n  <body style="font-family: \'Century Gothic\', CenturyGothic, AppleGothic, sans-serif;">\n    <table width="100%" border="0" bgcolor="#cccccc" style="font-size: 8pt !important;">\n      <tr bgcolor="#002060" style="background-color:#002060;">\n        <td align="center" valign="middle" bgcolor="#002060" colspan="4" style="border-right: none">\n          <h2 style="color:#FFFFFF;margin:0; padding:0;">CLAIM REPORT</h2>\n        </td>\n        <td colspan="3" valign="middle" align="center" bgcolor="#002060" colspan=3 style="border-left: none">\n          <h2 style="color:#ffffff;margin:0; padding:0;">{{month}} {{year}}</h2>\n        </td>\n      </tr>\n      <tr *ngFor="let item of empData">\n        <td colspan="7" bgcolor="#ffffff">Company : {{item.tenant_company_name}}</td>\n      </tr>\n      <tr *ngFor="let item of empData">\n        <td colspan="4" bgcolor="#ffffff">Name : {{item.FULLNAME}}</td>\n        <td colspan="3" bgcolor="#ffffff">Department : {{item.department_name}}</td>\n      </tr>\n      <tr *ngFor="let item of empData">\n        <td colspan="4" bgcolor="#ffffff">Position :{{item.designation_name}}</td>\n        <td colspan="3" bgcolor="#ffffff">Approver :{{item.MANAGER}}</td>\n      </tr>\n      <tr>\n        <td colspan="7" bgcolor="#ffffff">&nbsp;</td>\n      </tr>\n    </table>\n\n\n    <table width="100%" border="0" bgcolor="#cccccc" style="font-size: 8pt !important;">\n\n      <tr style="color:#ffffff;">\n        <th align="center" bgcolor="#002060" style="width: 5%;">Claim Date</th>\n        <th align="center" bgcolor="#002060" style="width: 3%;">Type</th>\n        <th align="center" bgcolor="#002060" style="width: auto;">Details</th>\n        <th align="center" bgcolor="#002060" style="width: 3%;">Mode</th>\n        <th align="center" bgcolor="#002060" style="width: 20%;">From</th>\n        <th align="center" bgcolor="#002060" style="width: 20%;">To</th>\n        <th align="center" bgcolor="#002060" style="width: 4%;">Round Trip</th>\n        <th align="center" bgcolor="#002060" style="width: 5%;">Amount ({{currency }})</th>\n      </tr>\n\n      <!-- Odd number styling-->\n      <!-- First *ngFor (Date, Customer Name, Project Name, etc)-->\n\n      <tr *ngFor="let claim of claimsListPrint">\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1"> {{claim.TRAVEL_DATE | date:\'d/M/y\'}}</span>\n        </td>\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1">{{claim.TYPE}}</span>\n        </td>\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1" valign="top">\n            {{claim.PROJECT_NAME}}/{{claim.SOC}} {{claim.CUSTOMER_NAME}}\n          </span>\n          <span *ngIf="claim.RowNum==2">\n            {{claim.DESCRIPTION}}\n          </span>\n          <span *ngIf="claim.RowNum==3 && claim.TYPE===\'TRV\'">\n            ({{claim.DISTANCE_KM}}KM * {{currency }}{{claim.RATE_PER_UNIT| number:\'1.2-2\'}})\n          </span>\n          <span *ngIf="claim.RowNum==4 && claim.TYPE===\'TRV\' && claim.TollAmount!==0">\n            Toll\n          </span>\n          <span *ngIf="claim.RowNum==5 && claim.TYPE===\'TRV\' && claim.ParkingAmount!==0">\n            Parking\n          </span>\n          <span *ngIf="claim.RowNum==6 && claim.TYPE===\'TRV\' && claim.MealAmount!==0">\n            Meal Allowance\n          </span>\n          <span *ngIf="claim.RowNum==7 && claim.TYPE===\'TRV\' && claim.AccAmount!==0">\n            Accomodation\n          </span>\n          <span *ngIf="claim.RowNum==3  && claim.TYPE===\'OT\'">\n            Start date/time : {{claim.START_TS | date:\'d/M/y HH:mm\'}}\n          </span>\n          <span *ngIf="claim.RowNum==4 && claim.TYPE===\'OT\'">\n            End date / time: {{claim.END_TS | date:\'d/M/y HH:mm\'}}\n          </span>\n        </td>\n\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1">{{claim.MODE}}</span>\n        </td>\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1">{{claim.from}}</span>\n        </td>\n        <td align="left" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1">{{claim.to}}</span>\n        </td>\n        <td align="left" valign="top" *ngIf="claim.ROUND_TRIP==1" bgcolor="#ffffff">\n            <span *ngIf="claim.RowNum==1">Y</span>\n          <!-- <ion-icon *ngIf="claim.RowNum==1" name="sync"></ion-icon> -->\n          <!-- <img *ngIf="claim.RowNum==1" [src]="assets/img/profile_no_preview.png" alt="avatar"> -->\n        </td>\n        <td align="left" valign="top" *ngIf="claim.ROUND_TRIP==0" bgcolor="#ffffff">\n            <span *ngIf="claim.RowNum==1">-</span>\n          <!-- <ion-icon *ngIf="claim.RowNum==1" name="undo"></ion-icon> -->\n          <!-- <img *ngIf="claim.RowNum==1" [src]="assets/img/profile_no_preview.png" alt="avatar"> -->\n        </td>\n        <td align="right" valign="top" bgcolor="#ffffff">\n          <span *ngIf="claim.RowNum==1">\n            {{claim.MILEAGE_AMOUNT | number:\'1.2-2\'}}\n          </span>\n          <!--  <span *ngIf="claim.RowNum==2">\n                {{claim.DESCRIPTION}}\n              </span>\n              <span *ngIf="claim.RowNum==3 && claim.TYPE===\'TRV\'">\n                ({{claim.DISTANCE_KM}}KM * RM{{claim.RATE_PER_UNIT}})\n              </span> -->\n          <span *ngIf="claim.RowNum==4 && claim.TYPE===\'TRV\' && claim.TollAmount!==0">\n            {{claim.TollAmount | number:\'1.2-2\'}}\n          </span>\n          <span *ngIf="claim.RowNum==5 && claim.TYPE===\'TRV\' && claim.ParkingAmount!==0">\n            {{claim.ParkingAmount | number:\'1.2-2\'}}\n          </span>\n          <span *ngIf="claim.RowNum==6 && claim.TYPE===\'TRV\' && claim.MealAmount!==0">\n            {{claim.MealAmount | number:\'1.2-2\'}}\n          </span>\n          <span *ngIf="claim.RowNum==7 && claim.TYPE===\'TRV\' && claim.AccAmount!==0">\n            {{claim.AccAmount | number:\'1.2-2\'}}\n          </span>\n          <!-- <span *ngIf="claim.RowNum==3  && claim.TYPE===\'OT\'">\n                  Start date/time : {{claim.START_TS | date:\'d/M/y HH:mm\'}}\n              </span>\n              <span *ngIf="claim.RowNum==4 && claim.TYPE===\'OT\'">\n                  End date / time: {{claim.END_TS | date:\'d/M/y HH:mm\'}}\n              </span> -->\n\n        </td>\n\n      </tr>\n      <tr>\n        <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n        <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n        <td align="left" bgcolor="#B3CCEC" colspan="2">\n          <em>TOTAL CLAIM AMOUNT</em>\n        </td>\n        <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n        <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n\n        <td align="right" bgcolor="#B3CCEC">\n          <em>{{totalClaimAmount | number:\'1.2-2\'}}</em>\n        </td>\n\n      </tr>\n    </table>\n    <br />\n\n    <table width="100%">\n      <tr>\n        <td width="50%" valign="top">\n          <table border="0" bgcolor="#cccccc" style="font-size: 8pt !important;width:100%;">\n            <tr style="color:#ffffff;">\n              <td colspan="6" align="center" bgcolor="#002060">CLAIMS SUMMARY</td>\n              <td align="right" bgcolor="#002060">Amount ({{currency }})</td>\n            </tr>\n            <tr *ngFor="let claim of claimsListSummary">\n              <td align="left" bgcolor="#ffffff">&nbsp;</td>\n              <td align="left" bgcolor="#ffffff">{{claim.TRAVEL}}</td>\n              <td align="left" bgcolor="#ffffff">{{claim.MILEAGE}} </td>\n              <td align="left" colspan="3" bgcolor="#ffffff">{{claim.SHORTFORM}} </td>\n              <td align="right" bgcolor="#ffffff">{{claim.AMOUNT| number:\'1.2-2\'}}</td>\n            </tr>\n            <tr>\n              <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n              <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n              <td align="left" bgcolor="#B3CCEC">\n                <em>TOTAL CLAIM AMOUNT</em>\n              </td>\n              <td align="left" bgcolor="#B3CCEC">&nbsp;</td>\n              <td colspan="2" align="left" bgcolor="#B3CCEC">&nbsp;</td>\n              <td align="right" bgcolor="#B3CCEC">\n                <em>{{totalClaimAmount | number:\'1.2-2\'}}</em>\n              </td>\n            </tr>\n\n          </table>\n        </td>\n        <td></td>\n        <td width="50%" valign="top">\n          <table border="0" bgcolor="#cccccc" style="font-size: 8pt !important;width:100%;">\n\n            <tr style="color:#ffffff;">\n              <td align="center" bgcolor="#002060">SOC / Customer Name</td>\n              <td align="right" bgcolor="#002060">Amount ({{currency }})</td>\n            </tr>\n\n            <tr *ngFor="let i of claimsSocSummary">\n              <td align="left" bgcolor="#ffffff" *ngIf="i.SOC!=null">{{i.SOC}}</td>\n              <td align="right" bgcolor="#ffffff" *ngIf="i.SOC!=null">{{i.AMOUNT | number:\'1.2-2\'}}</td>\n            </tr>\n\n            <tr>\n              <td align="left" bgcolor="#B3CCEC">\n                <em>TOTAL CLAIM AMOUNT</em>\n              </td>\n\n\n              <td align="right" bgcolor="#B3CCEC">\n                <em>{{totalClaimAmount | number:\'1.2-2\'}}</em>\n              </td>\n            </tr>\n          </table>\n\n        </td>\n      </tr>\n    </table>\n\n\n\n  </body>\n</ion-content>'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-report-print/claim-report-print.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], ClaimReportPrintPage);
    return ClaimReportPrintPage;
}());

//# sourceMappingURL=claim-report-print.js.map

/***/ }),
/* 695 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LeaveReportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the LeaveReportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LeaveReportPage = /** @class */ (function () {
    function LeaveReportPage(navCtrl, navParams, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.currentYear = new Date().getFullYear();
        this.yearsList = [];
        this.page = 1;
        this.btnSearch = false;
        this.BindYears();
        this.BindEmployees();
        this.BindData("All", "All", "All");
    }
    LeaveReportPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad LeaveReportPage');
    };
    LeaveReportPage.prototype.BindData = function (ddlUserName, ddlLeaveType, ddlmonth) {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_leave_data?filter=(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.leaveData = data["resource"];
            if (_this.leaveData.length != 0) {
                if (ddlmonth.toString() !== "All") {
                    _this.leaveData = _this.leaveData.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
                if (ddlLeaveType.toString() !== "All") {
                    _this.leaveData = _this.leaveData.filter(function (s) { return s.LEAVE_TYPE.toString() === ddlLeaveType.toString(); });
                }
                if (ddlUserName.toString() !== "All") {
                    _this.leaveData = _this.leaveData.filter(function (s) { return s.STAFF_ID.toString() === ddlUserName.toString(); });
                }
            }
            _this.btnSearch = true;
        });
    };
    LeaveReportPage.prototype.BindEmployees = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList = data["resource"];
        });
    };
    LeaveReportPage.prototype.BindYears = function () {
        for (var i = 2013; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    LeaveReportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-leave-report',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/leave-report/leave-report.html"*/'<!--\n  Generated template for the LeaveReportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n\n      <button ion-button menuToggle>\n          <ion-icon name="menu"></ion-icon>\n        </button>\n    <ion-title>{{ "LEAVE_REPORT" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <ion-item class="fuha">\n      <ion-label>{{ "REPORT_USER_NAME" | translate }}</ion-label>\n      <ion-select interface="popover" #ddlUserName>\n        <ion-option [value]="All" [selected]="true">All</ion-option>\n        <ion-option *ngFor="let emp of employeeList" [value]="emp.STAFF_ID">{{emp.FULLNAME}}</ion-option>\n      </ion-select>\n    </ion-item>\n  \n    <ion-item class="fuha">\n      <ion-label>{{ "LEAVE_TYPE" | translate }}</ion-label>\n      <ion-select interface="popover" #ddlLeaveType>\n        <ion-option [value]="All" [selected]="true">All</ion-option>\n        <ion-option [value]="ANNUAL">ANNUAL LEAVE</ion-option>\n        <ion-option [value]="COMPASSIONATE">COMPASSIONATE LEAVE</ion-option>\n        <ion-option [value]="EMERGENCY">EMERGENCY LEAVE</ion-option>\n        <ion-option [value]="HOSPITALISATION">HOSPITALISATION LEAVE	</ion-option>\n        <ion-option [value]="MARRIAGE">MARRIAGE LEAVE</ion-option>\n        <ion-option [value]="MATERNITY">MATERNITY LEAVE</ion-option>\n        <ion-option [value]="MEDICAL">MEDICAL LEAVE</ion-option>\n        <ion-option [value]="PATERNITY">PATERNITY LEAVE</ion-option>\n        <ion-option [value]="REPLACEMENT">REPLACEMENT LEAVE</ion-option>\n        <ion-option [value]="UNPAID">UNPAID LEAVE</ion-option>\n        <ion-option [value]="WORK">WORK FROM HOME</ion-option>\n        <ion-option [value]="TRAINING">TRAINING</ion-option>\n        <ion-option [value]="OUTSTATION">OUTSTATION</ion-option>\n      </ion-select>\n    </ion-item>\n  \n    <ion-item class="fuha">\n      <ion-label> {{ "LIST_MONTH" | translate }}</ion-label>\n      <ion-select interface="popover" #ddlmonth>\n        <ion-option [value]="All" [selected]="true">All</ion-option>\n        <ion-option value="1">Jan</ion-option>\n        <ion-option value="2">Feb</ion-option>\n        <ion-option value="3">Mar</ion-option>\n        <ion-option value="4">Apr</ion-option>\n        <ion-option value="5">May</ion-option>\n        <ion-option value="6">Jun</ion-option>\n        <ion-option value="7">Jul</ion-option>\n        <ion-option value="8">Aug</ion-option>\n        <ion-option value="9">Sep</ion-option>\n        <ion-option value="10">Oct</ion-option>\n        <ion-option value="11">Nov</ion-option>\n        <ion-option value="12">Dec</ion-option>\n      </ion-select>\n    </ion-item>\n  \n  \n    <ion-item class="fuha">\n      <ion-label>{{ "LIST_YEAR" | translate }}</ion-label>\n      <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n        <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n      </ion-select>\n    </ion-item>\n  \n    <ion-item>\n      <button ion-button item-end  [disabled]="!btnSearch" (click)="BindData(ddlUserName.value,ddlLeaveType.value,ddlmonth.value)">{{ "SEARCH" | translate }}</button>\n    </ion-item>\n  \n    <ion-list>\n      <ion-item>\n        <table class="Tabler list">\n          <tr class="linedsg TColor">\n            <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n            <th class="lgl1">User Name</th>\n            <th class="lgl1"style="width:190px">Leave Type</th>\n            <th class="lgl1"style="width:128px">Start Date</th>\n            <th class="lgl1"style="width:128px">End Date</th>\n            <th class="lgl1 tblBrRight" style="width:128px">Half Day</th>\n\n          </tr>\n  \n          <tr class="col7" *ngFor="let item of leaveData | paginate:{itemsPerPage: 20, currentPage:page, id: \'i\' }; let i=index">\n            <td class="lgl1 getHeader" reshead="No."> {{ 20 * (page - 1) + i+1 }}</td>\n            <td class="lgl1 getHeader" reshead="Name" text-wrap>{{item.NAME}}</td>\n            <td class="lgl1 getHeader" reshead="Leave Type">{{item.LEAVE_TYPE}}</td>\n            <td class="lgl1 getHeader" reshead="Start Date">{{item.START_DATE | date: \'dd/MM/yyyy\'}}</td>\n            <td class="lgl1 getHeader" reshead="End Date">{{item.END_DATE | date: \'dd/MM/yyyy\'}}</td>\n            <td class="lgl1 getHeader" reshead="Half Day"><span *ngIf="item.HALF_DAY_DATE!=\'NA\'">{{item.SESSION}}@{{item.HALF_DAY_DATE | date: \'dd/MM/yyyy\'}}</span></td>\n\n          </tr>\n        </table>\n        <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="20" directionLinks="true" autoHide="true">\n        </pagination-controls>\n      </ion-item>\n    </ion-list>\n  \n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/leave-report/leave-report.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], LeaveReportPage);
    return LeaveReportPage;
}());

//# sourceMappingURL=leave-report.js.map

/***/ }),
/* 696 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttendanceReportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the AttendanceReportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AttendanceReportPage = /** @class */ (function () {
    function AttendanceReportPage(navCtrl, navParams, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.page = 1;
        this.btnSearch = false;
        this.BindYears();
        this.BindEmployees();
        this.BindData("All", "All");
    }
    AttendanceReportPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AttendanceReportPage');
    };
    AttendanceReportPage.prototype.BindData = function (ddlUserName, ddlmonth) {
        var _this = this;
        this.btnSearch = false;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_attendance_data?filter=(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.attendanceData = data["resource"];
            if (_this.attendanceData.length != 0) {
                if (ddlmonth.toString() !== "All") {
                    _this.attendanceData = _this.attendanceData.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
                if (ddlUserName.toString() !== "All") {
                    _this.attendanceData = _this.attendanceData.filter(function (s) { return s.USER_GUID.toString() === ddlUserName.toString(); });
                }
            }
            _this.btnSearch = true;
        });
    };
    AttendanceReportPage.prototype.BindEmployees = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList = data["resource"];
        });
    };
    AttendanceReportPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    AttendanceReportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-attendance-report',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/attendance-report/attendance-report.html"*/'<!--\n  Generated template for the AttendanceReportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar  color="primary200">\n      <button ion-button menuToggle>\n          <ion-icon name="menu"></ion-icon>\n        </button>\n    <ion-title>{{ "ATTENDANCE_REPORT" | translate }}</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-item class="fuha">\n    <ion-label>{{ "MONTH" | translate }} </ion-label>\n    <ion-select interface="popover" #ddlmonth>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option value="1">Jan</ion-option>\n      <ion-option value="2">Feb</ion-option>\n      <ion-option value="3">Mar</ion-option>\n      <ion-option value="4">Apr</ion-option>\n      <ion-option value="5">May</ion-option>\n      <ion-option value="6">Jun</ion-option>\n      <ion-option value="7">Jul</ion-option>\n      <ion-option value="8">Aug</ion-option>\n      <ion-option value="9">Sep</ion-option>\n      <ion-option value="10">Oct</ion-option>\n      <ion-option value="11">Nov</ion-option>\n      <ion-option value="12">Dec</ion-option>\n    </ion-select>\n  </ion-item>\n\n\n  <ion-item class="fuha">\n    <ion-label>{{ "YEAR" | translate }}</ion-label>\n    <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n      <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n\n  <ion-item class="fuha1">\n    <ion-label>{{ "REPORT_USER_NAME" | translate }}</ion-label>\n    <ion-select interface="popover" #ddlUserName>\n      <ion-option [value]="All" [selected]="true">All</ion-option>\n      <ion-option *ngFor="let emp of employeeList" [value]="emp.STAFF_ID">{{emp.FULLNAME}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <button ion-button item-end [disabled]="!btnSearch" (click)="BindData(ddlUserName.value,ddlmonth.value)">{{ "SEARCH" | translate }}</button>\n  </ion-item>\n\n  <ion-list>\n    <ion-item>\n      <table class="Tabler list">\n        <tr class="linedsg TColor">\n          <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n          <th class="lgl1">User Name</th>\n          <th class="lgl1" style="width:180px">Date</th>\n          <th class="lgl1" style="width:180px">In Time</th>\n          <th class="lgl1" style="width:190px">Out Time</th>\n          <th class="lgl1 tblBrRight"  style="width:120px">Hours Logged</th>  \n        </tr>\n\n        <tr class="col7" *ngFor="let item of attendanceData | paginate:{itemsPerPage: 20, currentPage:page, id: \'i\' }; let i=index">\n          <td class="lgl1 getHeader" reshead="No."> {{ 20 * (page - 1) + i+1 }}</td>\n          <td class="lgl1 getHeader" reshead="Name" text-wrap>{{item.FULLNAME}}</td>\n          <td class="lgl1 getHeader" reshead="Date">{{item.ATTENDANCE_DATE | date: \'dd/MM/yyyy\'}}</td>\n          <td class="lgl1 getHeader" reshead="In">{{item.IN_TS | date: \'HH:MM\'}}</td>\n          <td class="lgl1 getHeader" reshead="Out">{{item.OUT_TS | date: \'HH:MM\'}}</td>\n          <td class="lgl1 getHeader" reshead="Hours Logged" *ngIf="item.HALF_DAY_DATE!=\'NA\'">{{item.WORKING_HOURS}}</td>\n        </tr>\n      </table>\n      <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="20" directionLinks="true" autoHide="true">\n      </pagination-controls>\n    </ion-item>\n  </ion-list>\n\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/attendance-report/attendance-report.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], AttendanceReportPage);
    return AttendanceReportPage;
}());

//# sourceMappingURL=attendance-report.js.map

/***/ }),
/* 697 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FinancePaymentTasklistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the FinancePaymentTasklistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FinancePaymentTasklistPage = /** @class */ (function () {
    function FinancePaymentTasklistPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.role = "Payment";
        this.month = navParams.get("month");
        if (this.month != undefined) {
            this.month = this.month.substring(0, 3);
        }
        // console.log(this.month)
    }
    FinancePaymentTasklistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FinancePaymentTasklistPage');
    };
    FinancePaymentTasklistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-finance-payment-tasklist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/finance-payment-tasklist/finance-payment-tasklist.html"*/'<!--\n  Generated template for the FinancePaymentTasklistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<page-common-tasklist *ngIf="role" [role]="role" [month]="month"></page-common-tasklist>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/finance-payment-tasklist/finance-payment-tasklist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], FinancePaymentTasklistPage);
    return FinancePaymentTasklistPage;
}());

//# sourceMappingURL=finance-payment-tasklist.js.map

/***/ }),
/* 698 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonTasklistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__claimapprovertasklist_claimapprovertasklist__ = __webpack_require__(110);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the CommonTasklistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CommonTasklistPage = /** @class */ (function () {
    function CommonTasklistPage(navCtrl, navParams, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.claimTaskLists1 = [];
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        // month: any;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?filter=(ASSIGNED_TO='+localStorage.getItem("g_USER_GUID") + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        //baseResourceUrl: string = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimreftasklist?api_key=' + constants.DREAMFACTORY_API_KEY;
        this.page = 1;
        this.btnSearch = false;
        // if (this.loginUserRole === "Finance Admin") {
        //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // }
        // else {
        //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // }
        this.month = navParams.get("month");
        if (this.month != undefined) {
            this.month = this.month.substring(0, 3);
        }
        // console.log(this.month)
    }
    CommonTasklistPage.prototype.ngOnInit = function () {
        if (this.role == "Payment") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindYears();
        this.BindData("All", "All", "All");
    };
    CommonTasklistPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTaskListTotal = data["resource"];
            _this.claimTaskLists = _this.claimTaskLists1 = [];
            _this.claimTaskListTotal.forEach(function (element) {
                if (_this.claimTaskLists1.length === 0 || (_this.claimTaskLists1.length > 0 && _this.claimTaskLists1.find(function (e) { return e.CLAIM_REF_GUID == element.CLAIM_REF_GUID; }) === undefined)) {
                    _this.claimTaskLists1.push(element);
                }
                else {
                    _this.claimTaskLists1.find(function (e) { return e.CLAIM_REF_GUID === element.CLAIM_REF_GUID; }).CLAIM_AMOUNT += element.CLAIM_AMOUNT;
                }
            });
            _this.claimTaskLists = _this.claimTaskLists1;
            if (_this.claimTaskLists.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.DEPT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
            }
            // Lakshman oct-29th
            _this.searchboxValue = _this.month;
            if (_this.searchboxValue != undefined) {
                _this.onSearchInput();
            }
            // Lakshman oct-29th
            _this.btnSearch = true;
        });
    };
    CommonTasklistPage.prototype.onSearchInput = function () {
        // alert('hi')
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimTaskLists = this.claimTaskLists1.filter(function (item) {
                var fullname;
                var month;
                var dept;
                var amount;
                console.log(item);
                if (item.FULLNAME != null) {
                    fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.DEPARTMENT != null) {
                    dept = item.DEPARTMENT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.MONTH != null) {
                    month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.CLAIM_AMOUNT != null) {
                    amount = item.CLAIM_AMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((fullname > -1)
                    || (dept > -1)
                    || (month > -1)
                    || (amount > -1));
            });
            // });
            this.btnSearch = true;
        }
        else {
            this.claimTaskLists = this.claimTaskLists1;
            this.btnSearch = true;
        }
    };
    CommonTasklistPage.prototype.goToClaimApproverTaskList = function (claimrefguid) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__claimapprovertasklist_claimapprovertasklist__["a" /* ClaimapprovertasklistPage */], {
            claimRefGuid: claimrefguid,
            role: this.role
        });
    };
    CommonTasklistPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    CommonTasklistPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    CommonTasklistPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    CommonTasklistPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlYear) {
        this.btnSearch = false;
        if (this.role == "Payment") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + ddlYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Pending)AND(PROFILE_LEVEL=2)AND(YEAR=' + ddlYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(ddlDept, ddlEmployee, ddlmonth);
    };
    CommonTasklistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CommonTasklistPage');
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], CommonTasklistPage.prototype, "role", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], CommonTasklistPage.prototype, "month", void 0);
    CommonTasklistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-common-tasklist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/common-tasklist/common-tasklist.html"*/'<!--\n  Generated template for the CommonTasklistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n                <ion-icon name="menu"></ion-icon>\n              </button>\n    <ion-title *ngIf="role==\'Payment\'"> {{ "COMMON_TASK_PAYMENT" | translate }}</ion-title>\n    <ion-title *ngIf="role==\'Validation\'">  {{ "COMMON_TASK_VALIDATION" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)" ></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_DEPARTMENT" | translate }}</ion-label>\n        <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_USERNAME" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlEmployee>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    \n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_CLAIM_MONTH" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlmonth>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option value="Jan">Jan</ion-option>\n            <ion-option value="Feb">Feb</ion-option>\n            <ion-option value="Mar">Mar</ion-option>\n            <ion-option value="Apr">Apr</ion-option>\n            <ion-option value="May">May</ion-option>\n            <ion-option value="Jun">Jun</ion-option>\n            <ion-option value="Jul">Jul</ion-option>\n            <ion-option value="Aug">Aug</ion-option>\n            <ion-option value="Sep">Sep</ion-option>\n            <ion-option value="Oct">Oct</ion-option>\n            <ion-option value="Nov">Nov</ion-option>\n            <ion-option value="Dec">Dec</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_CLAIM_YEAR" | translate }}</ion-label>\n        <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n            <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item>\n        <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlYear.value)">Search</button>\n    </ion-item>\n    \n      <ion-list>\n          <ion-item>\n              <table class="Tabler list">\n                  <tr class="linedsg TColor">\n                      <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n                      <th class="lgl1">Employee</th>\n                      <th class="lgl1">Department</th>\n                      <th class="lgl1" style="width:80px">Month</th>\n                      <!-- <th class="lgl1">Status</th> -->\n                      <th class="lgl1" style="width:90px">Total</th>\n                      <th class="lgl1 tblBrRight" style="width:80px">Action</th>\n      \n                  </tr>\n      \n                  <tr class="col7" *ngFor="let claimTaskList of claimTaskLists | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                      <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n                      <td class="lgl1 getHeader"  reshead="Employee" >{{claimTaskList.FULLNAME}}</td>\n                      <td class="lgl1 getHeader"  reshead="Department" >{{claimTaskList.DEPARTMENT}}</td>\n                      <td class="lgl1 getHeader" reshead="Month">{{claimTaskList.MONTH}}</td>\n                      <!-- <td class="lgl1 getHeader" reshead="Status">{{claimTaskList.REF_STATUS}}</td> -->\n                       <!-- <td class="lgl1">{{claimhistory.YEAR}}</td> -->\n                      <td class="lgl1 getHeader" reshead="Total">{{claimTaskList.CLAIM_AMOUNT | number:\'1.2-2\'}}</td>\n                      <td class="lgl1 getHeader fColor" reshead="Action">\n                          <button ion-button item-end (click)="goToClaimApproverTaskList(claimTaskList.CLAIM_REF_GUID)"><ion-icon name="md-eye"></ion-icon></button>\n                          <!-- <button ion-button item-end (click)="DeleteClick(cashcard.CASHCARD_GUID)"><ion-icon name="md-close"></ion-icon></button> -->\n                      </td>\n                  </tr>     \n      \n              </table>\n              <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls>\n          </ion-item>\n      </ion-list>\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/common-tasklist/common-tasklist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], CommonTasklistPage);
    return CommonTasklistPage;
}());

//# sourceMappingURL=common-tasklist.js.map

/***/ }),
/* 699 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymentHistoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the PaymentHistoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PaymentHistoryPage = /** @class */ (function () {
    function PaymentHistoryPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.role = "Payment";
    }
    PaymentHistoryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PaymentHistoryPage');
    };
    PaymentHistoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-payment-history',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/payment-history/payment-history.html"*/'<!--\n  Generated template for the PaymentHistoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<page-common-historylist *ngIf="role" [role]="role"></page-common-historylist>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/payment-history/payment-history.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], PaymentHistoryPage);
    return PaymentHistoryPage;
}());

//# sourceMappingURL=payment-history.js.map

/***/ }),
/* 700 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonHistorylistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__claimhistorydetail_claimhistorydetail__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_excel_service__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { HttpClient } from '@angular/common/http';



//import { ClaimHistory_Model } from '../../models/ClaimHistory_Model';


/**
 * Generated class for the CommonHistorylistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CommonHistorylistPage = /** @class */ (function () {
    function CommonHistorylistPage(excelService, navCtrl, navParams, http) {
        this.excelService = excelService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.claimhistorys1 = [];
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.btnSearch = false;
        // claimhistoryTotal: any[];
        this.currency = localStorage.getItem("cs_default_currency");
        this.page = 1;
        this.ExcelData = [];
        this.ExportExcelClicked = false;
        this.ExcelColumns = [];
        this.checked = [];
        //this.loginUserRole = localStorage.getItem("g_ROLE_NAME");
        //this.excelService = excelService;
    }
    CommonHistorylistPage.prototype.ngOnInit = function () {
        if (this.role == "Payment") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(PROFILE_LEVEL=3)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(PROFILE_LEVEL=2)AND(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindYears();
        this.BindData("All", "All", "All");
        this.excelService = this.excelService;
    };
    CommonHistorylistPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimhistorys = _this.claimhistorys1 = data["resource"];
            _this.claimhistorys = _this.claimhistorys1;
            if (_this.claimhistorys.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.DEPT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimhistorys = _this.claimhistorys.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
            }
            // for (var item in data["resource"]) {
            //   this.ExcelData.push({ Employee: data["resource"][item]["FULLNAME"], Department: data["resource"][item]["DEPT"], Month: data["resource"][item]["MONTH"], ApprovedAmt: data["resource"][item]["APPROVEDAMOUNT"], RejectedAmount: data["resource"][item]["REJECTEDAMOUNT"] });
            // }
            _this.btnSearch = true;
        });
    };
    CommonHistorylistPage.prototype.onSearchInput = function () {
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimhistorys = this.claimhistorys1.filter(function (item) {
                var fullname;
                var dept;
                var month;
                var approveamount;
                var rejamount;
                if (item.FULLNAME != null) {
                    fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.DEPT != null) {
                    dept = item.DEPT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.MONTH != null) {
                    month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.APPROVEDAMOUNT != null) {
                    approveamount = item.APPROVEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.REJECTEDAMOUNT != null) {
                    rejamount = item.REJECTEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((fullname > -1)
                    || (dept > -1)
                    || (month > -1)
                    || (approveamount > -1)
                    || (rejamount > -1));
            });
        }
        else {
            this.claimhistorys = this.claimhistorys1;
        }
    };
    CommonHistorylistPage.prototype.goToClaimHistoryDetail = function (claimrefguid, userguid, month) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__claimhistorydetail_claimhistorydetail__["a" /* ClaimhistorydetailPage */], {
            claimRefGuid: claimrefguid,
            userGuid: userguid,
            Month: month,
            role: this.role
        });
    };
    // ExportToExcel() {
    //   // this.excelService.exportAsExcelFile(this.claimhistorys, 'Data');
    //   this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
    // }
    CommonHistorylistPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    CommonHistorylistPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    CommonHistorylistPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    CommonHistorylistPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlYear) {
        this.btnSearch = false;
        if (this.role == "Payment") {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(PROFILE_LEVEL=3)AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        else {
            this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claimhistory?filter=(PROFILE_LEVEL=2)AND(YEAR=' + ddlYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        }
        this.BindData(ddlDept, ddlEmployee, ddlmonth);
    };
    CommonHistorylistPage.prototype.ExportToExcel = function () {
        this.ExportExcelClicked = true;
        this.ExcelColumns = [];
        this.ExcelColumns.push({ Columns: 'Employee' });
        this.ExcelColumns.push({ Columns: 'Department' });
        this.ExcelColumns.push({ Columns: 'Month' });
        this.ExcelColumns.push({ Columns: 'ApprovedAmt' });
        this.ExcelColumns.push({ Columns: 'RejectedAmount' });
    };
    CommonHistorylistPage.prototype.CloseExportExcel = function () {
        this.ExportExcelClicked = false;
        this.checked.length = 0;
    };
    CommonHistorylistPage.prototype.SelectColumn = function (e, SelectedColumn) {
        if (e.checked == true) {
            this.checked.push(SelectedColumn);
        }
        else {
            var index = this.RemoveCheckedFromArray(SelectedColumn);
            this.checked.splice(index, 1);
        }
    };
    CommonHistorylistPage.prototype.RemoveCheckedFromArray = function (checkbox) {
        return this.checked.findIndex(function (category) {
            return category === checkbox;
        });
    };
    CommonHistorylistPage.prototype.SubmitExportExcel = function () {
        this.ExcelData = [];
        if (this.checked.length > 0) {
            for (var item in this.claimhistorys) {
                if (this.checked.length > 0) {
                    var ctr = 0;
                    var jsonStr = '';
                    for (var chkItem in this.checked) {
                        ctr = ctr + 1;
                        switch (this.checked[chkItem]["Columns"]) {
                            case "Employee":
                                if (this.checked.length == 1) {
                                    jsonStr += '{"Employee":"' + this.claimhistorys[item]["FULLNAME"] + '"';
                                }
                                else {
                                    jsonStr += '{"Employee":"' + this.claimhistorys[item]["FULLNAME"] + '",';
                                }
                                break;
                            case "Department":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Department":"' + this.claimhistorys[item]["DEPT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Department":"' + this.claimhistorys[item]["DEPT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Department":"' + this.claimhistorys[item]["DEPT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Department":"' + this.claimhistorys[item]["DEPT"] + '",';
                                    }
                                }
                                break;
                            case "Month":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"Month":"' + this.claimhistorys[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '"Month":"' + this.claimhistorys[item]["MONTH"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"Month":"' + this.claimhistorys[item]["MONTH"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"Month":"' + this.claimhistorys[item]["MONTH"] + '",';
                                    }
                                }
                                break;
                            case "ApprovedAmt":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"ApprovedAmt":"' + this.claimhistorys[item]["APPROVEDAMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"ApprovedAmt":"' + this.claimhistorys[item]["APPROVEDAMOUNT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"ApprovedAmt":"' + this.claimhistorys[item]["APPROVEDAMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"ApprovedAmt":"' + this.claimhistorys[item]["APPROVEDAMOUNT"] + '",';
                                    }
                                }
                                break;
                            case "RejectedAmount":
                                if (jsonStr.length > 0) {
                                    if (ctr == this.checked.length) {
                                        jsonStr += '"RejectedAmount":"' + this.claimhistorys[item]["REJECTEDAMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '"RejectedAmount":"' + this.claimhistorys[item]["REJECTEDAMOUNT"] + '",';
                                    }
                                }
                                else {
                                    if (this.checked.length == 1) {
                                        jsonStr += '{"RejectedAmount":"' + this.claimhistorys[item]["REJECTEDAMOUNT"] + '"';
                                    }
                                    else {
                                        jsonStr += '{"RejectedAmount":"' + this.claimhistorys[item]["REJECTEDAMOUNT"] + '",';
                                    }
                                }
                                break;
                        }
                        if (ctr == this.checked.length) {
                            jsonStr += '}';
                        }
                    }
                    this.ExcelData.push(JSON.parse(jsonStr));
                }
            }
            this.excelService.exportAsExcelFile(this.ExcelData, 'Data');
        }
        else {
            alert('Please select one item.');
        }
    };
    CommonHistorylistPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CommonHistorylistPage');
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], CommonHistorylistPage.prototype, "role", void 0);
    CommonHistorylistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-common-historylist',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/common-historylist/common-historylist.html"*/'<!--\n  Generated template for the CommonHistorylistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n      <button ion-button menuToggle>\n          <ion-icon name="menu"></ion-icon>\n      </button>\n      <ion-title *ngIf="role==\'Payment\'">{{ "COMMON_PAYMENT_HISTORY" | translate }}</ion-title>\n      <ion-title *ngIf="role==\'Validation\'">{{ "COMMON_VALIDATION_HISTORY" | translate }}</ion-title>\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n      <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-fab top right edge>\n      <button ion-fab mini (click)="ExportToExcel($event)" title="Export to excel">\n          <ion-icon name="download"></ion-icon>\n      </button>\n  </ion-fab>\n\n  <ion-item class="fuha">\n      <ion-label>{{ "HISTORY_DEPARTMENT" | translate }}</ion-label>\n      <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n          <ion-option [value]="All" [selected]="true">All</ion-option>\n          <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n      </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n      <ion-label>{{ "HISTORY_USER_NAME" | translate }}</ion-label>\n      <ion-select interface="popover" #ddlEmployee>\n          <ion-option [value]="All" [selected]="true">All</ion-option>\n          <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n      </ion-select>\n  </ion-item>\n\n  <ion-item class="fuha">\n      <ion-label>{{ "HISTORY_CLAIM_MONTH" | translate }}</ion-label>\n      <ion-select interface="popover" #ddlmonth>\n          <ion-option [value]="All" [selected]="true">All</ion-option>\n          <ion-option value="Jan">Jan</ion-option>\n          <ion-option value="Feb">Feb</ion-option>\n          <ion-option value="Mar">Mar</ion-option>\n          <ion-option value="Apr">Apr</ion-option>\n          <ion-option value="May">May</ion-option>\n          <ion-option value="Jun">Jun</ion-option>\n          <ion-option value="Jul">Jul</ion-option>\n          <ion-option value="Aug">Aug</ion-option>\n          <ion-option value="Sep">Sep</ion-option>\n          <ion-option value="Oct">Oct</ion-option>\n          <ion-option value="Nov">Nov</ion-option>\n          <ion-option value="Dec">Dec</ion-option>\n      </ion-select>\n  </ion-item>\n  <ion-item class="fuha">\n      <ion-label>Year:</ion-label>\n      <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n          <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n      </ion-select>\n  </ion-item>\n  <ion-item>\n      <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlYear.value)">{{ "HISTORY_SEARCH" | translate }}</button>\n  </ion-item>\n  <ion-list>\n      <ion-item>\n          <table class="Tabler list">\n              <tr class="linedsg TColor">\n                  <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n\n                  <th class="lgl1">Employee\n                  </th>\n                  <th class="lgl1">Department\n                  </th>\n                  <th class="lgl1">Month\n                  </th>\n                  <!-- <th class="lgl1">Status</th> -->\n                  <th class="lgl1" *ngIf="role==\'Validation\'">Validated({{currency }})</th>\n                  <th class="lgl1" *ngIf="role==\'Payment\'">Approved({{currency }})</th>\n                  <th class="lgl1">Rejected({{currency }})</th>\n                  <th class="lgl1 tblBrRight" style="width:60px">Action</th>\n\n\n              </tr>\n\n              <tr class="col7" *ngFor="let claimhistory of claimhistorys | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                  <td class="lgl1 getHeader" reshead="No.">{{i+1}}</td>\n                  <td class="lgl1 getHeader" reshead="Employee" text-wrap>{{claimhistory.FULLNAME}}</td>\n                  <td class="lgl1 getHeader" reshead="Department">{{claimhistory.DEPT}}</td>\n                  <td class="lgl1 getHeader" reshead="Month">{{claimhistory.MONTH}}</td>\n                  <!-- <td class="lgl1">{{claimhistory.REQ_STATUS}}</td> -->\n                  <td class="lgl1 getHeader" reshead="Approved" >{{claimhistory.APPROVEDAMOUNT | number:\'1.2-2\'}}</td>\n                  <td class="lgl1 getHeader" reshead="Rejected" >{{claimhistory.REJECTEDAMOUNT | number:\'1.2-2\'}}</td>\n                  <td class="lgl1 getHeader fColor" reshead="Action">\n                      <button ion-button item-end (click)="goToClaimHistoryDetail(claimhistory.CLAIM_REF_GUID,claimhistory.USER_GUID,claimhistory.MONTH)">\n                          <ion-icon name="md-eye"></ion-icon>\n                      </button>\n                      <!-- <button ion-button item-end (click)="DeleteClick(cashcard.CASHCARD_GUID)"><ion-icon name="md-close"></ion-icon></button> -->\n                  </td>\n              </tr>\n          </table>\n          <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n          </pagination-controls>\n      </ion-item>\n  </ion-list>\n\n  <!-- Popup for Export to Excel Starts-->\n  <div class="blackcontainer" *ngIf="ExportExcelClicked">\n  </div>\n  <div class="popup4" padding *ngIf="ExportExcelClicked">\n      <ion-card>\n          <ion-card-header class="icTitle headerColor-white ">\n\n              <div class="icHeaderText">EXPORT TO EXCEL</div>\n\n              <button class="btnR" (click)="CloseExportExcel()">\n                  <ion-icon name="md-close"></ion-icon>\n              </button>\n\n          </ion-card-header>\n          <ion-list>\n              <div style="width:100%; display:inline-table !important;">\n\n                  <ion-card>\n                      <div>\n                          <ion-list>\n                              <ion-item *ngFor="let ExcelColumn of ExcelColumns">\n                                  <ion-label>{{ExcelColumn.Columns}}</ion-label>\n                                  <ion-checkbox color="secondary" checked="false" (ionChange)="SelectColumn($event, ExcelColumn)" item-end></ion-checkbox>\n                              </ion-item>\n                          </ion-list>\n                      </div>\n                  </ion-card>\n              </div>\n          </ion-list>\n          <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" (click)="SubmitExportExcel()">{{"SUBMIT" | translate}}</button>\n          </div>\n      </ion-card>\n\n  </div>\n  <!-- Popup for Export to Excel End-->\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/common-historylist/common-historylist.html"*/,
            providers: [__WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_7__providers_excel_service__["a" /* ExcelService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__providers_excel_service__["a" /* ExcelService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], CommonHistorylistPage);
    return CommonHistorylistPage;
}());

//# sourceMappingURL=common-historylist.js.map

/***/ }),
/* 701 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ClaimSummaryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__claimhistorydetail_claimhistorydetail__ = __webpack_require__(186);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the ClaimSummaryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ClaimSummaryPage = /** @class */ (function () {
    function ClaimSummaryPage(navCtrl, navParams, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.employeeList = [];
        this.employeeList1 = [];
        this.yearsList = [];
        this.currentYear = new Date().getFullYear();
        this.page = 1;
        this.btnSearch = false;
    }
    ClaimSummaryPage.prototype.ngOnInit = function () {
        // if (this.role == "Payment") {
        //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + this.currentYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // }
        // else {
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_summary?filter=(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        //}
        this.BindDepartment();
        this.BindEmployeesbyDepartment("All");
        this.BindYears();
        this.BindData("All", "All", "All");
    };
    ClaimSummaryPage.prototype.BindData = function (ddlDept, ddlEmployee, ddlmonth) {
        var _this = this;
        this.http
            .get(this.baseResourceUrl)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.claimTaskListTotal = data["resource"];
            //this.claimTaskLists = this.claimTaskLists1 = [];
            // this.claimTaskListTotal.forEach(element => {
            //   if (this.claimTaskLists1.length === 0 || (this.claimTaskLists1.length > 0 && this.claimTaskLists1.find(e => e.CLAIM_REF_GUID == element.CLAIM_REF_GUID) === undefined)) {
            //     this.claimTaskLists1.push(element);
            //   }
            //   else {
            //     this.claimTaskLists1.find(e => e.CLAIM_REF_GUID === element.CLAIM_REF_GUID).CLAIM_AMOUNT += element.CLAIM_AMOUNT;
            //   }
            // });
            _this.claimTaskLists = _this.claimTaskListTotal;
            if (_this.claimTaskLists.length != 0) {
                if (ddlDept.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.DEPT_GUID.toString() === ddlDept.toString(); });
                }
                if (ddlEmployee.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.USER_GUID.toString() === ddlEmployee.toString(); });
                }
                if (ddlmonth.toString() !== "All") {
                    _this.claimTaskLists = _this.claimTaskLists.filter(function (s) { return s.MONTH.toString() === ddlmonth.toString(); });
                }
            }
            _this.btnSearch = true;
        });
    };
    ClaimSummaryPage.prototype.onSearchInput = function () {
        // alert('hi')
        var val = this.searchboxValue;
        if (val && val.trim() != '') {
            this.claimTaskLists = this.claimTaskListTotal.filter(function (item) {
                var fullname;
                var month;
                var dept;
                var approveamount;
                var rejamount;
                console.log(item);
                if (item.FULLNAME != null) {
                    fullname = item.FULLNAME.toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.DEPARTMENT != null) {
                    dept = item.DEPARTMENT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.MONTH != null) {
                    month = item.MONTH.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.APPROVEDAMOUNT != null) {
                    approveamount = item.APPROVEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                if (item.REJECTEDAMOUNT != null) {
                    rejamount = item.REJECTEDAMOUNT.toString().toLowerCase().indexOf(val.toLowerCase());
                }
                return ((fullname > -1)
                    || (dept > -1)
                    || (month > -1)
                    || (approveamount > -1)
                    || (rejamount > -1));
            });
        }
        else {
            this.claimTaskLists = this.claimTaskListTotal;
        }
    };
    // goToClaimApproverTaskList(claimrefguid: any) {
    //   this.navCtrl.push(ClaimapprovertasklistPage, {
    //     claimRefGuid: claimrefguid
    //    // role:this.role
    //   })
    // }
    ClaimSummaryPage.prototype.goToClaimHistoryDetail = function (claimrefguid, userguid, month) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__claimhistorydetail_claimhistorydetail__["a" /* ClaimhistorydetailPage */], {
            claimRefGuid: claimrefguid,
            userGuid: userguid,
            Month: month
            //role:this.role
        });
    };
    ClaimSummaryPage.prototype.BindDepartment = function () {
        var _this = this;
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/main_department?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.deptList = data["resource"];
        });
        //console.log(this.deptList);
    };
    ClaimSummaryPage.prototype.BindEmployeesbyDepartment = function (dept) {
        var _this = this;
        //alert(dept);
        this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/view_user_display_new?api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */])
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.employeeList1 = data["resource"];
            _this.employeeList = _this.employeeList1;
            if (dept !== "All") {
                _this.employeeList = _this.employeeList1.filter(function (s) { return s.DEPT_GUID.toString() === dept.toString(); });
            }
        });
    };
    ClaimSummaryPage.prototype.BindYears = function () {
        for (var i = 2016; i <= new Date().getFullYear(); i++) {
            this.yearsList.push(i);
        }
    };
    ClaimSummaryPage.prototype.SearchClaimsData = function (ddlDept, ddlEmployee, ddlmonth, ddlYear) {
        this.btnSearch = false;
        // if (this.role == "Payment") {
        //   this.baseResourceUrl = constants.DREAMFACTORY_INSTANCE_URL + '/api/v2/zcs/_table/vw_claimrequestlist?filter=(STATUS=Approved)AND(PROFILE_LEVEL=3)AND(YEAR=' + ddlYear + ')AND(EMAIL=' + localStorage.getItem("g_EMAIL").toString().split('@')[1] + ')&api_key=' + constants.DREAMFACTORY_API_KEY;
        // }
        // else {
        this.baseResourceUrl = __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/vw_claim_summary?filter=(YEAR=' + this.currentYear + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_4__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        // }
        this.BindData(ddlDept, ddlEmployee, ddlmonth);
    };
    ClaimSummaryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ClaimSummaryPage');
    };
    ClaimSummaryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-claim-summary',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-summary/claim-summary.html"*/'<!--\n  Generated template for the ClaimSummaryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar color="primary200">\n        <button ion-button menuToggle>\n                <ion-icon name="menu"></ion-icon>\n              </button>\n    <ion-title> {{ "CLAIM_SUMMARY" | translate }}</ion-title>\n    <!-- <ion-title *ngIf="role==\'Validation\'">  {{ "COMMON_TASK_VALIDATION" | translate }}</ion-title> -->\n  </ion-navbar>\n  <ion-toolbar no-border-top color="primary200">\n    <ion-searchbar [(ngModel)]="searchboxValue"  (ionChange)="onSearchInput($event)" ></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_DEPARTMENT" | translate }}</ion-label>\n        <ion-select interface="popover" (ionChange)="BindEmployeesbyDepartment(ddlDept.value)" #ddlDept>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let dept of deptList" [value]="dept.DEPARTMENT_GUID">{{dept.NAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_USERNAME" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlEmployee>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option *ngFor="let emp of employeeList" [value]="emp.USER_GUID">{{emp.FULLNAME}}</ion-option>\n        </ion-select>\n    </ion-item>\n    \n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_CLAIM_MONTH" | translate }}</ion-label>\n        <ion-select interface="popover" #ddlmonth>\n            <ion-option [value]="All" [selected]="true">All</ion-option>\n            <ion-option value="Jan">Jan</ion-option>\n            <ion-option value="Feb">Feb</ion-option>\n            <ion-option value="Mar">Mar</ion-option>\n            <ion-option value="Apr">Apr</ion-option>\n            <ion-option value="May">May</ion-option>\n            <ion-option value="Jun">Jun</ion-option>\n            <ion-option value="Jul">Jul</ion-option>\n            <ion-option value="Aug">Aug</ion-option>\n            <ion-option value="Sep">Sep</ion-option>\n            <ion-option value="Oct">Oct</ion-option>\n            <ion-option value="Nov">Nov</ion-option>\n            <ion-option value="Dec">Dec</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item class="fuha">\n        <ion-label>{{ "COMMON_TASK_CLAIM_YEAR" | translate }}</ion-label>\n        <ion-select [(ngModel)]="currentYear" interface="popover" #ddlYear>\n            <ion-option *ngFor="let year of yearsList" [value]="year">{{year}}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item>\n        <button ion-button item-end [disabled]="!btnSearch" (click)="SearchClaimsData(ddlDept.value,ddlEmployee.value,ddlmonth.value,ddlYear.value)">Search</button>\n    </ion-item>\n    \n      <ion-list>\n          <ion-item>\n              <table class="Tabler list">\n                  <tr class="linedsg TColor">\n                      <th class="lgl1 tblBrLeft" style="width:60px">No.</th>\n                      <th class="lgl1">Employee</th>\n                      <th class="lgl1">Department</th>\n                      <th class="lgl1" style="width:80px">Month</th>\n                      <!-- <th class="lgl1">Status</th> -->\n                      <th class="lgl1" style="width:90px">Approved</th>\n                      <th class="lgl1" style="width:90px">Rejected</th>\n                      <th class="lgl1 tblBrRight" style="width:80px">Action</th>\n      \n                  </tr>\n      \n                  <tr class="col7" *ngFor="let claimTaskList of claimTaskLists | paginate:{itemsPerPage: 10, currentPage:page, id: \'i\' }; let i=index">\n                      <td class="lgl1 getHeader" reshead="No.">{{ 10 * (page - 1) + i+1 }}</td>\n                      <td class="lgl1 getHeader"  reshead="Employee" >{{claimTaskList.FULLNAME}}</td>\n                      <td class="lgl1 getHeader"  reshead="Department" >{{claimTaskList.DEPARTMENT}}</td>\n                      <td class="lgl1 getHeader" reshead="Month">{{claimTaskList.MONTH}}</td>\n                      <!-- <td class="lgl1 getHeader" reshead="Status">{{claimTaskList.REF_STATUS}}</td> -->\n                       <!-- <td class="lgl1">{{claimhistory.YEAR}}</td> -->\n                       <td class="lgl1 getHeader" reshead="Approved" >{{claimTaskList.APPROVEDAMOUNT | number:\'1.2-2\'}}</td>\n                       <td class="lgl1 getHeader" reshead="Rejected" >{{claimTaskList.REJECTEDAMOUNT | number:\'1.2-2\'}}</td>\n                      <td class="lgl1 getHeader fColor" reshead="Action">\n                          <button ion-button item-end (click)="goToClaimHistoryDetail(claimTaskList.CLAIM_REF_GUID,claimTaskList.USER_GUID,claimTaskList.MONTH)"><ion-icon name="md-eye"></ion-icon></button>\n                          <!-- <button ion-button item-end (click)="DeleteClick(cashcard.CASHCARD_GUID)"><ion-icon name="md-close"></ion-icon></button> -->\n                      </td>\n                  </tr>     \n      \n              </table>\n              <pagination-controls style=" text-align: center;" (pageChange)="page=$event" id="i" maxSize="10" directionLinks="true" autoHide="true">\n            </pagination-controls>\n          </ion-item>\n      </ion-list>\n</ion-content>\n'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/claim-summary/claim-summary.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */]])
    ], ClaimSummaryPage);
    return ClaimSummaryPage;
}());

//# sourceMappingURL=claim-summary.js.map

/***/ }),
/* 702 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChangePasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_config_constants__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_base_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_crypto_js__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_user_main_model__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_usersetup_service__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the ChangePasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ChangePasswordPage = /** @class */ (function () {
    function ChangePasswordPage(api, fb, navCtrl, navParams, http, userservice, httpService, loadingCtrl) {
        this.api = api;
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.userservice = userservice;
        this.httpService = httpService;
        this.loadingCtrl = loadingCtrl;
        this.usermain_entry = new __WEBPACK_IMPORTED_MODULE_8__models_user_main_model__["a" /* UserMain_Model */]();
        this.baseResource_Url = __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["d" /* DREAMFACTORY_INSTANCE_URL */] + '/api/v2/zcs/_table/';
        this.url = this.baseResource_Url + "user_main?filter=(USER_GUID=" + localStorage.getItem("g_USER_GUID") + ')&api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        this.Current_Password_ngModel = "";
        this.New_Password_ngModel = "";
        this.Confirm_Password_ngModel = "";
        this.emailUrl = 'http://api.zen.com.my/api/v2/zenmail?api_key=' + __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */];
        if (localStorage.getItem("g_USER_GUID") == null) {
            alert('Sorry, please login.');
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            if (localStorage.getItem("g_USER_GUID") == "sva") {
                alert('Sorry, you are not authorized.');
                this.navCtrl.setRoot(this.navCtrl.getActive().component);
            }
            else {
                //Get the details of user according to user_guid.
                //------------------------------------------------
                this.GetUser_Main_Details(localStorage.getItem("g_USER_GUID"));
                //------------------------------------------------
            }
        }
        this.ChangePasswordForm = fb.group({
            Current_Password: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]+$'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            New_Password: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]{5,7}'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
            Confirm_Password: [null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].pattern('^[a-zA-Z0-9][a-zA-Z0-9!@#%$&()-`.+,/\"\\s]{5,7}'), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required])],
        });
    }
    ChangePasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ChangePasswordPage');
    };
    ChangePasswordPage.prototype.GetUser_Main_Details = function (user_id) {
        var _this = this;
        this.http
            .get(this.url)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user_details = data.resource; //console.log(this.user_details);
        });
    };
    ChangePasswordPage.prototype.ChangePassword = function () {
        var _this = this;
        if (this.ChangePasswordForm.valid) {
            // let hash = CryptoJS.SHA256(this.Current_Password_ngModel.trim()).toString(CryptoJS.enc.Hex);
            // console.log(hash);
            //check current password is match with database      
            if (this.user_details[0]["PASSWORD"] == __WEBPACK_IMPORTED_MODULE_7_crypto_js___default.a.SHA256(this.Current_Password_ngModel.trim()).toString(__WEBPACK_IMPORTED_MODULE_7_crypto_js___default.a.enc.Hex)) {
                if (this.Current_Password_ngModel.trim().toUpperCase() != this.Confirm_Password_ngModel.trim().toUpperCase()) {
                    if (this.New_Password_ngModel.trim().toUpperCase() == this.Confirm_Password_ngModel.trim().toUpperCase()) {
                        this.loading = this.loadingCtrl.create({
                            content: 'Please wait...',
                        });
                        this.loading.present();
                        this.usermain_entry.TENANT_GUID = this.user_details[0]["TENANT_GUID"];
                        this.usermain_entry.USER_GUID = localStorage.getItem("g_USER_GUID");
                        this.usermain_entry.STAFF_ID = this.user_details[0]["STAFF_ID"];
                        this.usermain_entry.LOGIN_ID = this.user_details[0]["LOGIN_ID"];
                        this.usermain_entry.PASSWORD = __WEBPACK_IMPORTED_MODULE_7_crypto_js___default.a.SHA256(this.Confirm_Password_ngModel.trim()).toString(__WEBPACK_IMPORTED_MODULE_7_crypto_js___default.a.enc.Hex);
                        this.usermain_entry.EMAIL = this.user_details[0]["EMAIL"];
                        this.usermain_entry.ACTIVATION_FLAG = this.user_details[0]["ACTIVATION_FLAG"];
                        this.usermain_entry.CREATION_TS = this.user_details[0]["CREATION_TS"];
                        this.usermain_entry.CREATION_USER_GUID = this.user_details[0]["CREATION_USER_GUID"];
                        this.usermain_entry.UPDATE_TS = this.api.CreateTimestamp();
                        this.usermain_entry.UPDATE_USER_GUID = localStorage.getItem("g_USER_GUID");
                        this.usermain_entry.IS_TENANT_ADMIN = this.user_details[0]["IS_TENANT_ADMIN"];
                        this.userservice.update_user_main(this.usermain_entry)
                            .subscribe(function (response) {
                            if (response.status == 200) {
                                _this.sendEmail();
                            }
                        });
                    }
                    else {
                        alert('New password and confirm password is not same.');
                    }
                }
                else {
                    alert('Current password and confirm password is same.');
                }
            }
            else {
                alert('Current password is not correct.');
            }
        }
    };
    ChangePasswordPage.prototype.sendEmail = function () {
        var _this = this;
        var name;
        var email;
        name = localStorage.getItem("g_FULLNAME");
        email = this.user_details[0]["EMAIL"];
        var queryHeaders = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["a" /* Headers */]();
        queryHeaders.append('Content-Type', 'application/json');
        queryHeaders.append('X-Dreamfactory-Session-Token', localStorage.getItem('session_token'));
        queryHeaders.append('X-Dreamfactory-API-Key', __WEBPACK_IMPORTED_MODULE_3__app_config_constants__["b" /* DREAMFACTORY_API_KEY */]);
        var options = new __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* RequestOptions */]({ headers: queryHeaders });
        //let ename = 'Shabbeer Hussain';
        // let startDate = '1-1-2018 11:12';
        // let endDate = '1-1-2018 11:12';
        // let CreatedDate = '1-1-2018 11:12';
        // let level = '1';
        // let assignedTo = 'Bala';
        // let dept = 'Research';
        // let claimType = 'Travel Claim';
        var body = {
            "template": "",
            "template_id": 0,
            "to": [
                {
                    "name": name,
                    "email": email
                }
            ],
            "cc": [
                {
                    "name": name,
                    "email": email
                }
            ],
            "bcc": [
                {
                    "name": name,
                    "email": email
                }
            ],
            "subject": "Password changed.",
            "body_text": "",
            "body_html": '<HTML>' +
                '<HEAD>' +
                '<META name=GENERATOR content="MSHTML 10.00.9200.17606">' +
                '</HEAD>' +
                '<BODY>' +
                '<DIV style="FONT-FAMILY: Century Gothic">' +
                '<DIV style="MIN-WIDTH: 500px">' +
                '<BR>' +
                '<DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px">' +
                '<IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png">' +
                '</DIV>' +
                '<DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c">' +
                '<DIV style="TEXT-ALIGN: center; FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">' +
                '<B>' +
                '<I>Change Password</I>' +
                '</B>' +
                '</DIV>' +
                '</DIV>' +
                '<BR>' +
                '<DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Dear <h4>' + name + '</h4>' +
                '<BR>Your password has now been changed. From now on you will use your new password.' +
                '</DIV>' +
                '<BR>' +
                '<DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Thank you.</DIV>' +
                '</DIV>' +
                '</DIV>' +
                '</BODY>' +
                '</HTML>',
            "from_name": "eClaim",
            "from_email": "balasingh73@gmail.com",
            "reply_to_name": "",
            "reply_to_email": ""
        };
        this.http.post(this.emailUrl, body, options)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            // this.result= data["resource"];
            // alert(JSON.stringify(data));
            _this.loading.dismissAll();
            alert('Password sucessfully changed.');
            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        });
    };
    ChangePasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-change-password',template:/*ion-inline-start:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/change-password/change-password.html"*/'<!--\n  Generated template for the ChangePasswordPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n\n<ion-content padding>\n    <h1 text-center><b>{{ "CHANGE_PASSWORD" | translate }}</b></h1>\n  <div class="popscroll" padding>\n    <ion-card color="pure">\n      <ion-card-content>\n        <ion-list text-center>\n          <form [formGroup]="ChangePasswordForm" novalidate>\n      \n            <ion-item color="pure">\n              <ion-label stacked>{{ "CURRENT_PASSWORD" | translate }}</ion-label>\n              <ion-input type="password" formControlName="Current_Password" [(ngModel)]="Current_Password_ngModel" placeholder="{{\'Please fill in the current password\'}}"\n                required></ion-input>\n            </ion-item>\n     \n            <ion-item color="pure">\n              <ion-label stacked>{{ "NEW_PASSWORD" | translate }}</ion-label>\n              <ion-input type="password" formControlName="New_Password" [(ngModel)]="New_Password_ngModel" placeholder="{{\'Please fill in the new password\'}}"\n                required></ion-input>\n            </ion-item>\n          \n            <ion-item color="pure">\n              <ion-label stacked>{{ "CONFIRM_PASSWORD" | translate }}</ion-label>\n              <ion-input type="password" formControlName="Confirm_Password" [(ngModel)]="Confirm_Password_ngModel" placeholder="{{\'Please fill in the confirm password\'}}"\n                required></ion-input>\n            </ion-item>\n   \n            <div class="btn">\n              <button ion-button class="bgColor-grey fontColor-white btnStyle1" [disabled]="!ChangePasswordForm.valid" (click)="ChangePassword()">{{ "SUBMIT" | translate }}\n                <ion-icon name="ios-arrow-forward" style="padding: 10px;"></ion-icon>\n              </button>\n            </div>\n          </form>\n        </ion-list>\n      </ion-card-content>\n    </ion-card>\n  </div>\n</ion-content>\n\n\n\n<!-- <HTML>\n\n<HEAD>\n  <META name=GENERATOR content="MSHTML 10.00.9200.17606">\n</HEAD>\n\n<BODY>\n  <DIV style="FONT-FAMILY: Century Gothic">\n    <DIV style="MIN-WIDTH: 500px">\n      <BR>\n      <DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px">\n        <IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png">\n      </DIV>\n      <DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c">\n        <DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">\n          <B>\n            <I>Notification</I>\n          </B>\n        </DIV>\n      </DIV>\n      <BR>\n      <DIV style="FONT-SIZE: 12px; TEXT-ALIGN: center; PADDING-TOP: 20px">Dear [\' + name + \']\n        <BR>\n        <BR>Your [\' + claimType + \'] application has been forwarded to your superior for approval.\n        <H1 style="FONT-SIZE: 14px; TEXT-ALIGN: center; PADDING-TOP: 10px">\n          <BR>\n          <B>Leave Details :</B>\n          <BR>\n        </H1>\n        <TABLE style="FONT-SIZE: 12px; FONT-FAMILY: Century Gothic; MARGIN: 0px auto">\n          <TBODY>\n            <TR>\n              <TD style="TEXT-ALIGN: left">EMPLOYEE</TD>\n              <TD style="PADDING-BOTTOM: 6px; PADDING-TOP: 6px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px">:</TD>\n              <TD colSpan=2> [\' + ename + \']</TD>\n            </TR>\n            <TR>\n              <TD>START DATE</TD>\n              <TD>:</TD>\n              <TD style="TEXT-ALIGN: left" colSpan=2> [\' + startDate + \']</TD>\n            </TR>\n            <TR>\n              <TD style="TEXT-ALIGN: left">END DATE </TD>\n              <TD>:</TD>\n              <TD style="TEXT-ALIGN: left" colSpan=2> [\' + endDate + \']</TD>\n            </TR>\n            <TR>\n              <TD style="TEXT-ALIGN: left">APPLIED DATE</TD>\n              <TD style="PADDING-BOTTOM: 6px; PADDING-TOP: 6px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px">:</TD>\n              <TD colSpan=2> [\' + CreatedDate + \']</TD>\n            </TR>\n            <TR>\n              <TD style="TEXT-ALIGN: left">Level</TD>\n              <TD>:</TD>\n              <TD style="TEXT-ALIGN: left"> [\' + level + \'] </TD>\n            </TR>\n            <TR>\n              <TD>Superior Name</TD>\n              <TD>:</TD>\n              <TD style="TEXT-ALIGN: left" colSpan=2> [\' + assignedTo + \']</TD>\n            </TR>\n            <TR>\n              <TD style="TEXT-ALIGN: left">Dept</TD>\n              <TD>: </TD>\n              <TD style="TEXT-ALIGN: left" colSpan=2> [\' + dept + \']</TD>\n            </TR>\n          </TBODY>\n        </TABLE>\n        <BR>\n        <DIV style="TEXT-ALIGN: center; PADDING-TOP: 20px">Thank you.</DIV>\n      </DIV>\n    </DIV>\n  </DIV>\n</BODY>\n\n</HTML> -->\n\n\n<!-- <HTML>\n\n    <HEAD>\n      <META name=GENERATOR content="MSHTML 10.00.9200.17606">\n    </HEAD>\n    \n    <BODY>\n      <DIV style="FONT-FAMILY: Century Gothic">\n        <DIV style="MIN-WIDTH: 500px">\n          <BR>\n          <DIV style="PADDING-BOTTOM: 10px; TEXT-ALIGN: center; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px">\n            <IMG style="WIDTH: 130px" alt=zen2.png src="http://zentranet.zen.com.my/_catalogs/masterpage/Layout/images/zen2.png">\n          </DIV>\n          <DIV style="MARGIN: 0px 100px; BACKGROUND-COLOR: #ec008c">\n            <DIV style="FONT-SIZE: 30px; COLOR: white; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">\n              <B>\n                <I>Change Password</I>\n              </B>\n            </DIV>\n          </DIV>\n          <BR>\n          <DIV style="FONT-SIZE: 12px; TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Dear <h4>[\' + name + \']</h4>\n            <BR>Your password has now been changed. From now on you will use your new password.\n            \n            \n          </DIV>\n      <BR>\n            <DIV style="TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px">Thank you.</DIV>\n        </DIV>\n      </DIV>\n    </BODY>\n    \n    </HTML> -->'/*ion-inline-end:"/Users/steelburn/Documents/Development/eClaimBuilder/eClaim/src/pages/change-password/change-password.html"*/, providers: [__WEBPACK_IMPORTED_MODULE_9__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */]]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_10__providers_api_manager_provider__["a" /* ApiManagerProvider */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_9__services_usersetup_service__["a" /* UserSetup_Service */], __WEBPACK_IMPORTED_MODULE_5__services_base_http__["a" /* BaseHttpService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], ChangePasswordPage);
    return ChangePasswordPage;
}());

//# sourceMappingURL=change-password.js.map

/***/ })
],[492]);
//# sourceMappingURL=main.js.map